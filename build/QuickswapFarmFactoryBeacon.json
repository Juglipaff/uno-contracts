{
  "contractName": "QuickswapFarmFactoryBeacon",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "DistributorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmAddress",
          "type": "address"
        }
      ],
      "name": "FarmDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Farms",
      "outputs": [
        {
          "internalType": "contract QuickswapFarmUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "upgrader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sentA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sentB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenBRoute",
          "type": "address[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "userStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDepositsLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "transferDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmAddress\",\"type\":\"address\"}],\"name\":\"FarmDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Farms\",\"outputs\":[{\"internalType\":\"contract QuickswapFarmUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sentA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenBRoute\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDepositsLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"transferDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"userStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256,address,address)\":{\"details\":\"Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\",\"params\":{\"amountA\":\"- Token A amount to deposit.\",\"amountB\":\"-  Token B amount to deposit.\",\"amountLP\":\"- LP Token amount to deposit.\",\"lpStakingPool\":\"- Address of the pool to deposit tokens in.\",\"recipient\":\"- Address which will recieve the deposit and leftover tokens.\"},\"returns\":{\"liquidity\":\"- Total liquidity sent to the farm (in lpTokens).\",\"sentA\":\"- Token A amount sent to the farm.\",\"sentB\":\"- Token B amount sent to the farm.\"}},\"distribute(address,address[],address[])\":{\"details\":\"Distributes tokens between users.\",\"params\":{\"lpStakingPool\":\"- LP pool to distribute tokens in.\",\"rewardTokenToTokenARoute\":\"An array of token addresses.\",\"rewardTokenToTokenBRoute\":\"An array of token addresses. Note: This function can only be called by the distributor.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalDeposits(address)\":{\"details\":\"Returns total amount locked in the pool. Doesn't take pending rewards into account.\",\"params\":{\"lpStakingPool\":\"- LP pool to check total deposits in.\"},\"returns\":{\"totalDepositsA\":\"- Token A deposits.\",\"totalDepositsB\":\"- Token B deposits.\",\"totalDepositsLP\":\"- Total deposits (in LP tokens).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userStake(address,address)\":{\"details\":\"Returns tokens staked by the {_address} for the given {lpPair}.\",\"params\":{\"_address\":\"- The address to check stakes for.\",\"lpStakingPool\":\"- LP pool to check stakes in.\"},\"returns\":{\"stakeA\":\"- Token A stake.\",\"stakeB\":\"- Token B stake.\",\"stakeLP\":\"- Total user stake(in LP tokens).\"}},\"withdraw(address,uint256,bool,address)\":{\"details\":\"Withdraws tokens from the given pool. \",\"params\":{\"amount\":\"- LP amount to withdraw. \",\"lpStakingPool\":\"- LP pool to withdraw from.\",\"recipient\":\"- The address which will recieve tokens.\",\"withdrawLP\":\"- True: Withdraw in LP tokens, False: Withdraw in normal tokens.\"},\"returns\":{\"amountA\":\"- Token A amount sent to the {recipient}, 0 if withdrawLP == false.\",\"amountB\":\"- Token B amount sent to the {recipient}, 0 if withdrawLP == false.\"}}},\"stateVariables\":{\"farmBeacon\":{\"details\":\"Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - links {lpPools} to the deployed Farm contract. lpPools - list of pools that have corresponding deployed Farm contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/QuickswapFarmFactoryBeacon.sol\":\"QuickswapFarmFactoryBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xfd0d01e9036a03e50a71009749b9bfe7570a8f5b852ea409f794debfdd646dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f55720689d7006549fdaf3d565351e053a8156347955e1682c97afe907358c65\",\"dweb:/ipfs/QmXmr8DBkEP4xKqgRBi32SRg4WKPqfgy49j5aHSYkLvhGm\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xdfddefa47c1f11dde2c3b5533c76ccef27a526985c74d9c917deb699d5d46a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd15423cc0456b783054f974bc88f25b88c99319a2cfec4b5745acfedbbd1d88\",\"dweb:/ipfs/QmZVXupWzRDTXynYd2GLtB9CTGF9ehrqzcPhqXNVZPDCTc\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x48f7fc8c916a93d6045745daf350662fc9a57de82c5c4b42259064be4c11ef84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b10768f1c512d367d20a323a0b447e4674896319a8a90a59aeec7296f84b26b\",\"dweb:/ipfs/QmPQLzwEKLTP7UUnG6gVx5Y832tkP8vSpjajrrdXXDE2Ne\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x94f08740b99a0997bc8363edb752b38354f730a38c54eb7bdd38a8a22ff34aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e27babc1cc78d71ddfa1474f9b2cb04517ef4570fc4c41ecfa97ecf6aa25e7bf\",\"dweb:/ipfs/QmePWVAAJdWJtfgKAPJe1kRgYxorkNEFhGrAN2jLLGiFTX\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x08f7ba4d76d3b55d78ce381ce83f96486711defc7524a8048101888297686903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa5ee00837907842e1f7ae3e85424a0fed8e64fa9d1541736c999e39d27c2f56\",\"dweb:/ipfs/QmNyvN6Zur8mZSGhheNE9xZzyPGutEkwKwuraUz3TX1urD\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xe237a2794a6588efdbf8cf998283ad188ac0e32d5f3e1d7d8d286fdac82863bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fdb06bd9dc4fc5c059e9f2748d73ac06331e4a7efed604584e02b3e3501aaaa\",\"dweb:/ipfs/QmaZ33qA3ahXjmo8Q6M9rayAbrkDgH8eAimfpZ2Drr2txW\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d874c66c21369dce8d3fe0b6c41316b0c289e45c0b4a77090c010ac2bb80e61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c0d714529b6514f623c6d023ab0594ee0801da8afd5ee8167c323da6f0979a\",\"dweb:/ipfs/QmTmhKaXGfu5MGKaz1Pcjrh9xWbkNtzFeok4PxaKREdf9X\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/QuickswapFarmFactoryBeacon.sol\":{\"keccak256\":\"0x96edeb1f7030c5feb830663c508064cb1bb7fc43c1f13aa1de6a16a44467de5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc4203017a8c420e836fcffde60db6dde6803db0f281895d4f0eacbf1947315b\",\"dweb:/ipfs/QmZLFSJYEwA2aQHkG2fbFQCxrmSPdWaKp1T268u2dTmqse\"]},\"project:/contracts/farms/QuickswapFarmUpgradeable.sol\":{\"keccak256\":\"0xdbf719a5493de00949b4e8a18c175c84b5121e0a52768e64fc28d0399f90fb2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2e9611ebeef5e33f6e55869e609b36737a85a76235091d1baee710683362041\",\"dweb:/ipfs/QmRoXowtEN9bscHeqRgY6tfYQELuCsVXf7y5ssEcfRhwP7\"]},\"project:/contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0x826b3660926458af9eafc9c71b14866dc40b0410df7e1f96034cbdbede645988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2580fbc503530cbeb7538d36464a7c7cf1649f1253a4a4af326cb346c0726b53\",\"dweb:/ipfs/QmThvkLqVkn9vgPh5cfrA8xUpM2dDazEhhKfF7KXu9XTy4\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x1530b00512450cd32128a92e9444a96da92399a84ab1e1a3539b4817cf91676b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e40fa52888c0351f252749cdeb252ea4cdecbfd893e31563a606cc5cf455aa2a\",\"dweb:/ipfs/QmUah3Qkt6U8WErkh6TDdZwwgcXRzMmzrFKeuoHr8KmiaN\"]},\"project:/contracts/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0xec9edfa4778dfd003d2f53807fc04f5274d28ade94226f7df74957de7c07111a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f9089e0dcf2871197521b6f84f353b9d63816bfa0c1a2ba64379492ffc77f53\",\"dweb:/ipfs/QmSnAv4R1MWmxjHh37Tp2yfHMQdnfPA9T17rTiLprixy2i\"]},\"project:/contracts/utils/OwnableUpgradeableNoTransfer.sol\":{\"keccak256\":\"0x70029c5daf701eaf30f018115a9693cdc7b7d4332e8bacd748c25796f665acfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c311a78f131f9ec4b8111f915d027252ff3ab28a9637e76b07456792f8a22f0c\",\"dweb:/ipfs/QmdxCEDNWG5bHrH4E5HXCZ7UCw18FcsR782X9FBAwH1aWm\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615090806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000fa5760003560e01c8063081e3eda14620000ff57806333b10b3c14620001155780633f4ba83a146200012e578063430004c1146200013857806351bdca3e14620001655780635c975abb1462000198578063715018a614620001af5780637c770aae14620001b95780638456cb5914620001d05780638da5cb5b14620001da578063bfe1092814620001f3578063c4d66de81462000207578063d95a4d93146200021e578063e23329081462000232578063e94032561462000249578063ecb039431462000260578063f2fde38b1462000277578063f9d9331d146200028e575b600080fd5b609a546040519081526020015b60405180910390f35b6200012c62000126366004620018e1565b620002ba565b005b6200012c6200042d565b6200014f620001493660046200197b565b6200046d565b604080519283526020830191909152016200010c565b6200017c62000176366004620019d5565b620005bb565b604080519384526020840192909252908201526060016200010c565b60335460ff1660405190151581526020016200010c565b6200012c62000682565b6200017c620001ca36600462001a13565b6200072e565b6200012c62000b04565b620001e462000b42565b6040516200010c919062001a6e565b609854620001e4906001600160a01b031681565b6200012c6200021836600462001a82565b62000b51565b609754620001e4906001600160a01b031681565b6200012c6200024336600462001a82565b62000cba565b6200017c6200025a36600462001a82565b62000d38565b620001e46200027136600462001aa2565b62000df7565b6200012c6200028836600462001a82565b62000e22565b620001e46200029f36600462001a82565b6099602052600090815260409020546001600160a01b031681565b6098546001600160a01b03163314620003185760405162461bcd60e51b815260206004820152601b60248201527a21b0b63632b91034b9903737ba1030903234b9ba3934b13aba37b960291b60448201526064015b60405180910390fd5b60335460ff16156200033e5760405162461bcd60e51b81526004016200030f9062001abc565b6001600160a01b0385811660009081526099602052604090205416620003785760405162461bcd60e51b81526004016200030f9062001ae6565b6001600160a01b038086166000908152609960205260409081902054905162fd125360e81b815291169063fd12530090620003be90879087908790879060040162001b68565b600060405180830381600087803b158015620003d957600080fd5b505af1158015620003ee573d6000803e3d6000fd5b50506040516001600160a01b03881692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a25050505050565b336200043862000b42565b6001600160a01b031614620004615760405162461bcd60e51b81526004016200030f9062001b93565b6200046b62000f31565b565b6000806200047d60335460ff1690565b156200049d5760405162461bcd60e51b81526004016200030f9062001abc565b6001600160a01b0386811660009081526099602052604090205416620004d75760405162461bcd60e51b81526004016200030f9062001ae6565b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af115801562000547573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200056d919062001bc8565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526099602052604081205490918291829116156200067b576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b906200062390889060040162001a6e565b602060405180830381865afa15801562000641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000667919062001bed565b925062000675848462000fc2565b90925090505b9250925092565b336200068d62000b42565b6001600160a01b031614620006b65760405162461bcd60e51b81526004016200030f9062001b93565b620006c26000620012ee565b609760009054906101000a90046001600160a01b03166001600160a01b031663715018a66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200071357600080fd5b505af115801562000728573d6000803e3d6000fd5b50505050565b60008060006200074060335460ff1690565b15620007605760405162461bcd60e51b81526004016200030f9062001abc565b6001600160a01b0385811660009081526099602052604090205416620007f3576200078b8562001340565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b8715620008a9576001600160a01b03808616600090815260996020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa15801562000851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000877919062001c07565b6001600160a01b03808816600090815260996020526040902054919250620008a791818416913391168c62001417565b505b861562000960576001600160a01b038086166000908152609960209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa15801562000908573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092e919062001c07565b6001600160a01b038088166000908152609960205260409020549192506200095e91818416913391168b62001417565b505b851562000a17576001600160a01b03808616600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa158015620009bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009e5919062001c07565b6001600160a01b0380881660009081526099602052604090205491925062000a1591818416913391168a62001417565b505b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af115801562000a88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aae919062001c27565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b3362000b0f62000b42565b6001600160a01b03161462000b385760405162461bcd60e51b81526004016200030f9062001b93565b6200046b62001473565b6065546001600160a01b031690565b600054610100900460ff1662000b6e5760005460ff161562000b78565b62000b78620014cf565b62000bdd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200030f565b600054610100900460ff1615801562000c00576000805461ffff19166101011790555b62000c0a620014e2565b62000c1462001516565b600060405162000c249062001857565b604051809103906000f08015801562000c41573d6000803e3d6000fd5b5060405162000c509062001865565b62000c5c919062001a6e565b604051809103906000f08015801562000c79573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b038316179055905062000ca28362000e22565b50801562000cb6576000805461ff00191690555b5050565b3362000cc562000b42565b6001600160a01b03161462000cee5760405162461bcd60e51b81526004016200030f9062001b93565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000df0576001600160a01b03808516600090815260996020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000db6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ddc919062001bed565b925062000dea848462000fc2565b90925090505b9193909250565b609a818154811062000e0857600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000e2d62000b42565b6001600160a01b03161462000e565760405162461bcd60e51b81526004016200030f9062001b93565b6001600160a01b03811662000ebd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200030f565b62000ec881620012ee565b60975460405163f2fde38b60e01b81526001600160a01b039091169063f2fde38b9062000efa90849060040162001a6e565b600060405180830381600087803b15801562000f1557600080fd5b505af115801562000f2a573d6000803e3d6000fd5b5050505050565b60335460ff1662000f7c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016200030f565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000fb8919062001a6e565b60405180910390a1565b6001600160a01b03828116600090815260996020526040812054909182911615620012e7576001600160a01b03808516600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa1580156200103f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001065919062001c07565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620010a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ce919062001bed565b6001600160a01b03808816600090815260996020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562001129573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200114f919062001c07565b6001600160a01b03166370a08231846040518263ffffffff1660e01b81526004016200117c919062001a6e565b602060405180830381865afa1580156200119a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011c0919062001bed565b9050620011da82620011d388846200154a565b906200155f565b6001600160a01b038089166000908152609960209081526040808320548151635f64b55b60e01b81529151959a5092949290931692635f64b55b92600480830193928290030181865afa15801562001236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200125c919062001c07565b6001600160a01b03166370a08231856040518263ffffffff1660e01b815260040162001289919062001a6e565b602060405180830381865afa158015620012a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012cd919062001bed565b9050620012e083620011d389846200154a565b9450505050505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b906200137090869060240162001a6e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620013af9062001873565b620013bc92919062001cb3565b604051809103906000f080158015620013d9573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620007289085906200156d565b60335460ff1615620014995760405162461bcd60e51b81526004016200030f9062001abc565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000fa93390565b6000620014dc306200164b565b15905090565b600054610100900460ff166200150c5760405162461bcd60e51b81526004016200030f9062001cd9565b6200046b6200165a565b600054610100900460ff16620015405760405162461bcd60e51b81526004016200030f9062001cd9565b6200046b62001690565b600062001558828462001d24565b9392505050565b600062001558828462001d52565b6000620015c4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620016c59092919063ffffffff16565b805190915015620016465780806020019051810190620015e5919062001d75565b620016465760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200030f565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620016845760405162461bcd60e51b81526004016200030f9062001cd9565b6033805460ff19169055565b600054610100900460ff16620016ba5760405162461bcd60e51b81526004016200030f9062001cd9565b6200046b33620012ee565b6060620016d68484600085620016de565b949350505050565b606082471015620017415760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200030f565b6200174c856200164b565b6200179a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200030f565b600080866001600160a01b03168587604051620017b8919062001d95565b60006040518083038185875af1925050503d8060008114620017f7576040519150601f19603f3d011682016040523d82523d6000602084013e620017fc565b606091505b50915091506200180e82828662001819565b979650505050505050565b606083156200182a57508162001558565b8251156200183b5782518084602001fd5b8160405162461bcd60e51b81526004016200030f919062001db3565b6124098062001dc983390190565b61052380620041d283390190565b61096680620046f583390190565b6001600160a01b03811681146200189757600080fd5b50565b60008083601f840112620018ad57600080fd5b5081356001600160401b03811115620018c557600080fd5b6020830191508360208260051b8501011115620012e757600080fd5b600080600080600060608688031215620018fa57600080fd5b8535620019078162001881565b945060208601356001600160401b03808211156200192457600080fd5b6200193289838a016200189a565b909650945060408801359150808211156200194c57600080fd5b506200195b888289016200189a565b969995985093965092949392505050565b80151581146200189757600080fd5b600080600080608085870312156200199257600080fd5b84356200199f8162001881565b9350602085013592506040850135620019b8816200196c565b91506060850135620019ca8162001881565b939692955090935050565b60008060408385031215620019e957600080fd5b8235620019f68162001881565b9150602083013562001a088162001881565b809150509250929050565b600080600080600060a0868803121562001a2c57600080fd5b853594506020860135935060408601359250606086013562001a4e8162001881565b9150608086013562001a608162001881565b809150509295509295909350565b6001600160a01b0391909116815260200190565b60006020828403121562001a9557600080fd5b8135620015588162001881565b60006020828403121562001ab557600080fd5b5035919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601b908201527a151a194819da5d995b881c1bdbdb08191bd95cdb9d08195e1a5cdd602a1b604082015260600190565b8183526000602080850194508260005b8581101562001b5d57813562001b418162001881565b6001600160a01b03168752958201959082019060010162001b2b565b509495945050505050565b60408152600062001b7e60408301868862001b1b565b82810360208401526200180e81858762001b1b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000806040838503121562001bdc57600080fd5b505080516020909101519092909150565b60006020828403121562001c0057600080fd5b5051919050565b60006020828403121562001c1a57600080fd5b8151620015588162001881565b60008060006060848603121562001c3d57600080fd5b8351925060208401519150604084015190509250925092565b60005b8381101562001c7357818101518382015260200162001c59565b83811115620007285750506000910152565b6000815180845262001c9f81602086016020860162001c56565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620016d69083018462001c85565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081600019048311821515161562001d4d57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001d7057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121562001d8857600080fd5b815162001558816200196c565b6000825162001da981846020870162001c56565b9190910192915050565b60208152600062001558602083018462001c8556fe60a06040523060805234801561001457600080fd5b5060016065556080516123bf61004a600039600081816103420152818161038b0152818161060e015261064e01526123bf6000f3fe6080604052600436106100a25760003560e01c80630103c92b146100a75780630fc63d10146100da578063168a4822146101075780633659cfe61461011c578063430004c11461013e578063452ed4f1146101735780634f1ef286146101935780635f64b55b146101a65780638da5cb5b146101c6578063c4d66de8146101db578063f7c618c1146101fb578063fad3cc4b1461021b578063fd12530014610256575b600080fd5b3480156100b357600080fd5b506100c76100c2366004611c7a565b610276565b6040519081526020015b60405180910390f35b3480156100e657600080fd5b506068546100fa906001600160a01b031681565b6040516100d19190611c97565b34801561011357600080fd5b506100c7610301565b34801561012857600080fd5b5061013c610137366004611c7a565b610337565b005b34801561014a57600080fd5b5061015e610159366004611cb9565b610409565b604080519283526020830191909152016100d1565b34801561017f57600080fd5b506067546100fa906001600160a01b031681565b61013c6101a1366004611d52565b610603565b3480156101b257600080fd5b506069546100fa906001600160a01b031681565b3480156101d257600080fd5b506100fa6106bd565b3480156101e757600080fd5b5061013c6101f6366004611c7a565b6106cc565b34801561020757600080fd5b506066546100fa906001600160a01b031681565b34801561022757600080fd5b5061023b610236366004611df9565b610bed565b604080519384526020840192909252908201526060016100d1565b34801561026257600080fd5b5061013c610271366004611e7a565b610dde565b6001600160a01b0381166000908152606e6020526040812054606c5482916102d491670de0b6b3a7640000916102ce916102af91611358565b6001600160a01b0387166000908152606d602052604090205490611364565b90611370565b6001600160a01b0384166000908152606d60205260409020549091506102fa908261137c565b9392505050565b6000610332610329670de0b6b3a76400006102ce606c54606b5461136490919063ffffffff16565b606b549061137c565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103895760405162461bcd60e51b815260040161038090611ee5565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103bb611388565b6001600160a01b0316146103e15760405162461bcd60e51b815260040161038090611f1f565b6103ea816113a4565b60408051600080825260208201909252610406918391906113c0565b50565b600080336104156106bd565b6001600160a01b03161461042857600080fd5b6002606554141561044b5760405162461bcd60e51b815260040161038090611f59565b60026065556001600160a01b0386166000908152606d60205260409020546104c55760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b6064820152608401610380565b60006104d087611507565b905060006104de8288611358565b905080156104f0576104f088826115b8565b851561051b5760675461050d906001600160a01b03168689611654565b6000809350935050506105f3565b60685460695460008051602061236a8339815191529163baa2abde916001600160a01b0391821691168a6000808b6105554261025861137c565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb9190611f90565b909450925050505b6001606555909590945092505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561064c5760405162461bcd60e51b815260040161038090611ee5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661067e611388565b6001600160a01b0316146106a45760405162461bcd60e51b815260040161038090611f1f565b6106ad826113a4565b6106b9828260016113c0565b5050565b6033546001600160a01b031690565b600054610100900460ff166106e75760005460ff16156106ef565b6106ef6116af565b61070b5760405162461bcd60e51b815260040161038090611fb4565b600054610100900460ff1615801561072d576000805461ffff19166101011790555b6107356116c0565b606a80546001600160a01b0319166001600160a01b038416908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa15801561078e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b29190612002565b606780546001600160a01b0319166001600160a01b03928316179055606a546040805163d1af0c7d60e01b81529051919092169163d1af0c7d9160048083019260209291908290030181865afa158015610810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108349190612002565b606680546001600160a01b0319166001600160a01b0392831617905560675460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b69190612002565b606880546001600160a01b0319166001600160a01b039283161790556067546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109389190612002565b606980546001600160a01b0319166001600160a01b0392831617905560675460405163095ea7b360e01b815260001992919091169063095ea7b390610983908690859060040161201f565b6020604051808303816000875af11580156109a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c69190612038565b5060675460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610a079060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a9190612038565b5060665460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610a8b9060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190612038565b5060685460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610b0f9060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190612038565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610b939060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190612038565b505080156106b9576000805461ff00191690555050565b6000808033610bfa6106bd565b6001600160a01b031614610c0d57600080fd5b60026065541415610c305760405162461bcd60e51b815260040161038090611f59565b60026065556001600160a01b0384166000908152606d602052604081205415610c5f57610c5c85611507565b90505b60008089118015610c705750600088115b15610d1e5760685460695460008051602061236a8339815191529163e8e33700916001600160a01b0391821691168c8c60008030610cb04261025861137c565b6040518963ffffffff1660e01b8152600401610cd3989796959493929190612055565b6060604051808303816000875af1158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d16919061209e565b919650945090505b610d28818861137c565b925060008311610d755760405162461bcd60e51b8152602060048201526018602482015277054686520616d6f756e742070726f766964656420697320360441b6044820152606401610380565b610d8886610d83858561137c565b6115b8565b610da986610d968b88611358565b6068546001600160a01b03169190611654565b610dca86610db78a87611358565b6069546001600160a01b03169190611654565b505060016065819055509450945094915050565b33610de76106bd565b6001600160a01b031614610dfa57600080fd5b60026065541415610e1d5760405162461bcd60e51b815260040161038090611f59565b6002606555606b54610e815760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b6064820152608401610380565b606a60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ed157600080fd5b505af1158015610ee5573d6000803e3d6000fd5b50506066546040516370a0823160e01b815260009350610f6292506002916001600160a01b0316906370a0823190610f21903090600401611c97565b602060405180830381865afa158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce91906120cc565b6066546068549192506001600160a01b0391821691161461100d5760008051602061236a8339815191526338ed1739826000888830610fa34261025861137c565b6040518763ffffffff1660e01b8152600401610fc4969594939291906120e5565b6000604051808303816000875af1158015610fe3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261100b9190810190612158565b505b6066546069546001600160a01b039081169116146110b55760008051602061236a8339815191526338ed173982600086863061104b4261025861137c565b6040518763ffffffff1660e01b815260040161106c969594939291906120e5565b6000604051808303816000875af115801561108b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b39190810190612158565b505b6068546040516370a0823160e01b81526000916001600160a01b0316906370a08231906110e6903090600401611c97565b602060405180830381865afa158015611103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112791906120cc565b6069546040516370a0823160e01b81529192506000916001600160a01b03909116906370a082319061115d903090600401611c97565b602060405180830381865afa15801561117a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119e91906120cc565b60685460695491925060008051602061236a8339815191529163e8e33700916001600160a01b0390811691168585600180306111dc4261025861137c565b6040518963ffffffff1660e01b81526004016111ff989796959493929190612055565b6060604051808303816000875af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611242919061209e565b50506067546040516370a0823160e01b8152600092506001600160a01b03909116906370a0823190611278903090600401611c97565b602060405180830381865afa158015611295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b991906120cc565b9050801561134957606b546112e7906112de906102ce670de0b6b3a764000085611364565b606c549061137c565b606c55606a5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561133057600080fd5b505af1158015611344573d6000803e3d6000fd5b505050505b50506001606555505050505050565b60006102fa8284612213565b60006102fa828461222a565b60006102fa8284612249565b60006102fa828461226b565b600080516020612323833981519152546001600160a01b031690565b336113ad6106bd565b6001600160a01b03161461040657600080fd5b60006113ca611388565b90506113d584611745565b6000835111806113e25750815b156113f3576113f184846117d8565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661150057805460ff1916600117815560405161146e90869061143f908590602401611c97565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526117d8565b50805460ff1916815561147f611388565b6001600160a01b0316826001600160a01b0316146114f75760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610380565b611500856117fd565b5050505050565b60008061151383610276565b6001600160a01b0384166000908152606d6020526040902054606b5491925061153c9190611358565b606b556001600160a01b038381166000908152606d602052604080822091909155606a549051632e1a7d4d60e01b815260048101849052911690632e1a7d4d90602401600060405180830381600087803b15801561159957600080fd5b505af11580156115ad573d6000803e3d6000fd5b509295945050505050565b6001600160a01b0382166000908152606d60209081526040808320849055606c54606e90925290912055606b546115ef908261137c565b606b55606a5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561163857600080fd5b505af115801561164c573d6000803e3d6000fd5b505050505050565b6116aa8363a9059cbb60e01b848460405160240161167392919061201f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261183d565b505050565b60006116ba3061190f565b15905090565b600054610100900460ff166116db5760005460ff16156116e3565b6116e36116af565b6116ff5760405162461bcd60e51b815260040161038090611fb4565b600054610100900460ff16158015611721576000805461ffff19166101011790555b61172961191e565b61173161198b565b8015610406576000805461ff001916905550565b803b6117a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610380565b60008051602061232383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606102fa838360405180606001604052806027815260200161234360279139611a12565b61180681611745565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000611892826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ae69092919063ffffffff16565b8051909150156116aa57808060200190518101906118b09190612038565b6116aa5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610380565b6001600160a01b03163b151590565b600054610100900460ff166119895760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610380565b565b600054610100900460ff166119a65760005460ff16156119ae565b6119ae6116af565b6119ca5760405162461bcd60e51b815260040161038090611fb4565b600054610100900460ff161580156119ec576000805461ffff19166101011790555b603380546001600160a01b031916331790558015610406576000805461ff001916905550565b6060833b611a715760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610380565b600080856001600160a01b031685604051611a8c91906122b3565b600060405180830381855af49150503d8060008114611ac7576040519150601f19603f3d011682016040523d82523d6000602084013e611acc565b606091505b5091509150611adc828286611afd565b9695505050505050565b6060611af58484600085611b36565b949350505050565b60608315611b0c5750816102fa565b825115611b1c5782518084602001fd5b8160405162461bcd60e51b815260040161038091906122cf565b606082471015611b975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610380565b611ba08561190f565b611bec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610380565b600080866001600160a01b03168587604051611c0891906122b3565b60006040518083038185875af1925050503d8060008114611c45576040519150601f19603f3d011682016040523d82523d6000602084013e611c4a565b606091505b5091509150611c5a828286611afd565b979650505050505050565b6001600160a01b038116811461040657600080fd5b600060208284031215611c8c57600080fd5b81356102fa81611c65565b6001600160a01b0391909116815260200190565b801515811461040657600080fd5b60008060008060808587031215611ccf57600080fd5b8435611cda81611c65565b9350602085013592506040850135611cf181611cab565b91506060850135611d0181611c65565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611d4a57611d4a611d0c565b604052919050565b60008060408385031215611d6557600080fd5b8235611d7081611c65565b91506020838101356001600160401b0380821115611d8d57600080fd5b818601915086601f830112611da157600080fd5b813581811115611db357611db3611d0c565b611dc5601f8201601f19168501611d22565b91508082528784828501011115611ddb57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060008060808587031215611e0f57600080fd5b8435935060208501359250604085013591506060850135611d0181611c65565b60008083601f840112611e4157600080fd5b5081356001600160401b03811115611e5857600080fd5b6020830191508360208260051b8501011115611e7357600080fd5b9250929050565b60008060008060408587031215611e9057600080fd5b84356001600160401b0380821115611ea757600080fd5b611eb388838901611e2f565b90965094506020870135915080821115611ecc57600080fd5b50611ed987828801611e2f565b95989497509550505050565b6020808252602c9082015260008051602061230383398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061230383398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008060408385031215611fa357600080fd5b505080516020909101519092909150565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006020828403121561201457600080fd5b81516102fa81611c65565b6001600160a01b03929092168252602082015260400190565b60006020828403121561204a57600080fd5b81516102fa81611cab565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b6000806000606084860312156120b357600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156120de57600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b8881101561213757833561211c81611c65565b6001600160a01b031682529282019290820190600101612109565b506001600160a01b0396909616606085015250505060800152949350505050565b6000602080838503121561216b57600080fd5b82516001600160401b038082111561218257600080fd5b818501915085601f83011261219657600080fd5b8151818111156121a8576121a8611d0c565b8060051b91506121b9848301611d22565b81815291830184019184810190888411156121d357600080fd5b938501935b838510156121f1578451825293850193908501906121d8565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612225576122256121fd565b500390565b6000816000190483118215151615612244576122446121fd565b500290565b60008261226657634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561227e5761227e6121fd565b500190565b60005b8381101561229e578181015183820152602001612286565b838111156122ad576000848401525b50505050565b600082516122c5818460208701612283565b9190910192915050565b60208152600082518060208401526122ee816040850160208701612283565b601f01601f1916919091016040019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ffa26469706673582212203ae1c1829b27772d2269e81366215c662d965b941e0efed12a758cbb81c4e4da64736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122082b8874da94dcb9b6e56b4e5fb261cadb41869ed62feb0a4d0cc9b784e6d5fd064736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000fa5760003560e01c8063081e3eda14620000ff57806333b10b3c14620001155780633f4ba83a146200012e578063430004c1146200013857806351bdca3e14620001655780635c975abb1462000198578063715018a614620001af5780637c770aae14620001b95780638456cb5914620001d05780638da5cb5b14620001da578063bfe1092814620001f3578063c4d66de81462000207578063d95a4d93146200021e578063e23329081462000232578063e94032561462000249578063ecb039431462000260578063f2fde38b1462000277578063f9d9331d146200028e575b600080fd5b609a546040519081526020015b60405180910390f35b6200012c62000126366004620018e1565b620002ba565b005b6200012c6200042d565b6200014f620001493660046200197b565b6200046d565b604080519283526020830191909152016200010c565b6200017c62000176366004620019d5565b620005bb565b604080519384526020840192909252908201526060016200010c565b60335460ff1660405190151581526020016200010c565b6200012c62000682565b6200017c620001ca36600462001a13565b6200072e565b6200012c62000b04565b620001e462000b42565b6040516200010c919062001a6e565b609854620001e4906001600160a01b031681565b6200012c6200021836600462001a82565b62000b51565b609754620001e4906001600160a01b031681565b6200012c6200024336600462001a82565b62000cba565b6200017c6200025a36600462001a82565b62000d38565b620001e46200027136600462001aa2565b62000df7565b6200012c6200028836600462001a82565b62000e22565b620001e46200029f36600462001a82565b6099602052600090815260409020546001600160a01b031681565b6098546001600160a01b03163314620003185760405162461bcd60e51b815260206004820152601b60248201527a21b0b63632b91034b9903737ba1030903234b9ba3934b13aba37b960291b60448201526064015b60405180910390fd5b60335460ff16156200033e5760405162461bcd60e51b81526004016200030f9062001abc565b6001600160a01b0385811660009081526099602052604090205416620003785760405162461bcd60e51b81526004016200030f9062001ae6565b6001600160a01b038086166000908152609960205260409081902054905162fd125360e81b815291169063fd12530090620003be90879087908790879060040162001b68565b600060405180830381600087803b158015620003d957600080fd5b505af1158015620003ee573d6000803e3d6000fd5b50506040516001600160a01b03881692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a25050505050565b336200043862000b42565b6001600160a01b031614620004615760405162461bcd60e51b81526004016200030f9062001b93565b6200046b62000f31565b565b6000806200047d60335460ff1690565b156200049d5760405162461bcd60e51b81526004016200030f9062001abc565b6001600160a01b0386811660009081526099602052604090205416620004d75760405162461bcd60e51b81526004016200030f9062001ae6565b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af115801562000547573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200056d919062001bc8565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526099602052604081205490918291829116156200067b576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b906200062390889060040162001a6e565b602060405180830381865afa15801562000641573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000667919062001bed565b925062000675848462000fc2565b90925090505b9250925092565b336200068d62000b42565b6001600160a01b031614620006b65760405162461bcd60e51b81526004016200030f9062001b93565b620006c26000620012ee565b609760009054906101000a90046001600160a01b03166001600160a01b031663715018a66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200071357600080fd5b505af115801562000728573d6000803e3d6000fd5b50505050565b60008060006200074060335460ff1690565b15620007605760405162461bcd60e51b81526004016200030f9062001abc565b6001600160a01b0385811660009081526099602052604090205416620007f3576200078b8562001340565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b8715620008a9576001600160a01b03808616600090815260996020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa15801562000851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000877919062001c07565b6001600160a01b03808816600090815260996020526040902054919250620008a791818416913391168c62001417565b505b861562000960576001600160a01b038086166000908152609960209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa15801562000908573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092e919062001c07565b6001600160a01b038088166000908152609960205260409020549192506200095e91818416913391168b62001417565b505b851562000a17576001600160a01b03808616600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa158015620009bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009e5919062001c07565b6001600160a01b0380881660009081526099602052604090205491925062000a1591818416913391168a62001417565b505b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af115801562000a88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aae919062001c27565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b3362000b0f62000b42565b6001600160a01b03161462000b385760405162461bcd60e51b81526004016200030f9062001b93565b6200046b62001473565b6065546001600160a01b031690565b600054610100900460ff1662000b6e5760005460ff161562000b78565b62000b78620014cf565b62000bdd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200030f565b600054610100900460ff1615801562000c00576000805461ffff19166101011790555b62000c0a620014e2565b62000c1462001516565b600060405162000c249062001857565b604051809103906000f08015801562000c41573d6000803e3d6000fd5b5060405162000c509062001865565b62000c5c919062001a6e565b604051809103906000f08015801562000c79573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b038316179055905062000ca28362000e22565b50801562000cb6576000805461ff00191690555b5050565b3362000cc562000b42565b6001600160a01b03161462000cee5760405162461bcd60e51b81526004016200030f9062001b93565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000df0576001600160a01b03808516600090815260996020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000db6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ddc919062001bed565b925062000dea848462000fc2565b90925090505b9193909250565b609a818154811062000e0857600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000e2d62000b42565b6001600160a01b03161462000e565760405162461bcd60e51b81526004016200030f9062001b93565b6001600160a01b03811662000ebd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200030f565b62000ec881620012ee565b60975460405163f2fde38b60e01b81526001600160a01b039091169063f2fde38b9062000efa90849060040162001a6e565b600060405180830381600087803b15801562000f1557600080fd5b505af115801562000f2a573d6000803e3d6000fd5b5050505050565b60335460ff1662000f7c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016200030f565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000fb8919062001a6e565b60405180910390a1565b6001600160a01b03828116600090815260996020526040812054909182911615620012e7576001600160a01b03808516600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa1580156200103f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001065919062001c07565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620010a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ce919062001bed565b6001600160a01b03808816600090815260996020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562001129573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200114f919062001c07565b6001600160a01b03166370a08231846040518263ffffffff1660e01b81526004016200117c919062001a6e565b602060405180830381865afa1580156200119a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011c0919062001bed565b9050620011da82620011d388846200154a565b906200155f565b6001600160a01b038089166000908152609960209081526040808320548151635f64b55b60e01b81529151959a5092949290931692635f64b55b92600480830193928290030181865afa15801562001236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200125c919062001c07565b6001600160a01b03166370a08231856040518263ffffffff1660e01b815260040162001289919062001a6e565b602060405180830381865afa158015620012a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012cd919062001bed565b9050620012e083620011d389846200154a565b9450505050505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b906200137090869060240162001a6e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620013af9062001873565b620013bc92919062001cb3565b604051809103906000f080158015620013d9573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620007289085906200156d565b60335460ff1615620014995760405162461bcd60e51b81526004016200030f9062001abc565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000fa93390565b6000620014dc306200164b565b15905090565b600054610100900460ff166200150c5760405162461bcd60e51b81526004016200030f9062001cd9565b6200046b6200165a565b600054610100900460ff16620015405760405162461bcd60e51b81526004016200030f9062001cd9565b6200046b62001690565b600062001558828462001d24565b9392505050565b600062001558828462001d52565b6000620015c4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620016c59092919063ffffffff16565b805190915015620016465780806020019051810190620015e5919062001d75565b620016465760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200030f565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620016845760405162461bcd60e51b81526004016200030f9062001cd9565b6033805460ff19169055565b600054610100900460ff16620016ba5760405162461bcd60e51b81526004016200030f9062001cd9565b6200046b33620012ee565b6060620016d68484600085620016de565b949350505050565b606082471015620017415760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200030f565b6200174c856200164b565b6200179a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200030f565b600080866001600160a01b03168587604051620017b8919062001d95565b60006040518083038185875af1925050503d8060008114620017f7576040519150601f19603f3d011682016040523d82523d6000602084013e620017fc565b606091505b50915091506200180e82828662001819565b979650505050505050565b606083156200182a57508162001558565b8251156200183b5782518084602001fd5b8160405162461bcd60e51b81526004016200030f919062001db3565b6124098062001dc983390190565b61052380620041d283390190565b61096680620046f583390190565b6001600160a01b03811681146200189757600080fd5b50565b60008083601f840112620018ad57600080fd5b5081356001600160401b03811115620018c557600080fd5b6020830191508360208260051b8501011115620012e757600080fd5b600080600080600060608688031215620018fa57600080fd5b8535620019078162001881565b945060208601356001600160401b03808211156200192457600080fd5b6200193289838a016200189a565b909650945060408801359150808211156200194c57600080fd5b506200195b888289016200189a565b969995985093965092949392505050565b80151581146200189757600080fd5b600080600080608085870312156200199257600080fd5b84356200199f8162001881565b9350602085013592506040850135620019b8816200196c565b91506060850135620019ca8162001881565b939692955090935050565b60008060408385031215620019e957600080fd5b8235620019f68162001881565b9150602083013562001a088162001881565b809150509250929050565b600080600080600060a0868803121562001a2c57600080fd5b853594506020860135935060408601359250606086013562001a4e8162001881565b9150608086013562001a608162001881565b809150509295509295909350565b6001600160a01b0391909116815260200190565b60006020828403121562001a9557600080fd5b8135620015588162001881565b60006020828403121562001ab557600080fd5b5035919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601b908201527a151a194819da5d995b881c1bdbdb08191bd95cdb9d08195e1a5cdd602a1b604082015260600190565b8183526000602080850194508260005b8581101562001b5d57813562001b418162001881565b6001600160a01b03168752958201959082019060010162001b2b565b509495945050505050565b60408152600062001b7e60408301868862001b1b565b82810360208401526200180e81858762001b1b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000806040838503121562001bdc57600080fd5b505080516020909101519092909150565b60006020828403121562001c0057600080fd5b5051919050565b60006020828403121562001c1a57600080fd5b8151620015588162001881565b60008060006060848603121562001c3d57600080fd5b8351925060208401519150604084015190509250925092565b60005b8381101562001c7357818101518382015260200162001c59565b83811115620007285750506000910152565b6000815180845262001c9f81602086016020860162001c56565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620016d69083018462001c85565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081600019048311821515161562001d4d57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001d7057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121562001d8857600080fd5b815162001558816200196c565b6000825162001da981846020870162001c56565b9190910192915050565b60208152600062001558602083018462001c8556fe60a06040523060805234801561001457600080fd5b5060016065556080516123bf61004a600039600081816103420152818161038b0152818161060e015261064e01526123bf6000f3fe6080604052600436106100a25760003560e01c80630103c92b146100a75780630fc63d10146100da578063168a4822146101075780633659cfe61461011c578063430004c11461013e578063452ed4f1146101735780634f1ef286146101935780635f64b55b146101a65780638da5cb5b146101c6578063c4d66de8146101db578063f7c618c1146101fb578063fad3cc4b1461021b578063fd12530014610256575b600080fd5b3480156100b357600080fd5b506100c76100c2366004611c7a565b610276565b6040519081526020015b60405180910390f35b3480156100e657600080fd5b506068546100fa906001600160a01b031681565b6040516100d19190611c97565b34801561011357600080fd5b506100c7610301565b34801561012857600080fd5b5061013c610137366004611c7a565b610337565b005b34801561014a57600080fd5b5061015e610159366004611cb9565b610409565b604080519283526020830191909152016100d1565b34801561017f57600080fd5b506067546100fa906001600160a01b031681565b61013c6101a1366004611d52565b610603565b3480156101b257600080fd5b506069546100fa906001600160a01b031681565b3480156101d257600080fd5b506100fa6106bd565b3480156101e757600080fd5b5061013c6101f6366004611c7a565b6106cc565b34801561020757600080fd5b506066546100fa906001600160a01b031681565b34801561022757600080fd5b5061023b610236366004611df9565b610bed565b604080519384526020840192909252908201526060016100d1565b34801561026257600080fd5b5061013c610271366004611e7a565b610dde565b6001600160a01b0381166000908152606e6020526040812054606c5482916102d491670de0b6b3a7640000916102ce916102af91611358565b6001600160a01b0387166000908152606d602052604090205490611364565b90611370565b6001600160a01b0384166000908152606d60205260409020549091506102fa908261137c565b9392505050565b6000610332610329670de0b6b3a76400006102ce606c54606b5461136490919063ffffffff16565b606b549061137c565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103895760405162461bcd60e51b815260040161038090611ee5565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103bb611388565b6001600160a01b0316146103e15760405162461bcd60e51b815260040161038090611f1f565b6103ea816113a4565b60408051600080825260208201909252610406918391906113c0565b50565b600080336104156106bd565b6001600160a01b03161461042857600080fd5b6002606554141561044b5760405162461bcd60e51b815260040161038090611f59565b60026065556001600160a01b0386166000908152606d60205260409020546104c55760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b6064820152608401610380565b60006104d087611507565b905060006104de8288611358565b905080156104f0576104f088826115b8565b851561051b5760675461050d906001600160a01b03168689611654565b6000809350935050506105f3565b60685460695460008051602061236a8339815191529163baa2abde916001600160a01b0391821691168a6000808b6105554261025861137c565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af11580156105c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105eb9190611f90565b909450925050505b6001606555909590945092505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561064c5760405162461bcd60e51b815260040161038090611ee5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661067e611388565b6001600160a01b0316146106a45760405162461bcd60e51b815260040161038090611f1f565b6106ad826113a4565b6106b9828260016113c0565b5050565b6033546001600160a01b031690565b600054610100900460ff166106e75760005460ff16156106ef565b6106ef6116af565b61070b5760405162461bcd60e51b815260040161038090611fb4565b600054610100900460ff1615801561072d576000805461ffff19166101011790555b6107356116c0565b606a80546001600160a01b0319166001600160a01b038416908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa15801561078e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b29190612002565b606780546001600160a01b0319166001600160a01b03928316179055606a546040805163d1af0c7d60e01b81529051919092169163d1af0c7d9160048083019260209291908290030181865afa158015610810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108349190612002565b606680546001600160a01b0319166001600160a01b0392831617905560675460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b69190612002565b606880546001600160a01b0319166001600160a01b039283161790556067546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109389190612002565b606980546001600160a01b0319166001600160a01b0392831617905560675460405163095ea7b360e01b815260001992919091169063095ea7b390610983908690859060040161201f565b6020604051808303816000875af11580156109a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c69190612038565b5060675460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610a079060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a9190612038565b5060665460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610a8b9060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ace9190612038565b5060685460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610b0f9060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190612038565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610b939060008051602061236a83398151915290859060040161201f565b6020604051808303816000875af1158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190612038565b505080156106b9576000805461ff00191690555050565b6000808033610bfa6106bd565b6001600160a01b031614610c0d57600080fd5b60026065541415610c305760405162461bcd60e51b815260040161038090611f59565b60026065556001600160a01b0384166000908152606d602052604081205415610c5f57610c5c85611507565b90505b60008089118015610c705750600088115b15610d1e5760685460695460008051602061236a8339815191529163e8e33700916001600160a01b0391821691168c8c60008030610cb04261025861137c565b6040518963ffffffff1660e01b8152600401610cd3989796959493929190612055565b6060604051808303816000875af1158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d16919061209e565b919650945090505b610d28818861137c565b925060008311610d755760405162461bcd60e51b8152602060048201526018602482015277054686520616d6f756e742070726f766964656420697320360441b6044820152606401610380565b610d8886610d83858561137c565b6115b8565b610da986610d968b88611358565b6068546001600160a01b03169190611654565b610dca86610db78a87611358565b6069546001600160a01b03169190611654565b505060016065819055509450945094915050565b33610de76106bd565b6001600160a01b031614610dfa57600080fd5b60026065541415610e1d5760405162461bcd60e51b815260040161038090611f59565b6002606555606b54610e815760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b6064820152608401610380565b606a60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ed157600080fd5b505af1158015610ee5573d6000803e3d6000fd5b50506066546040516370a0823160e01b815260009350610f6292506002916001600160a01b0316906370a0823190610f21903090600401611c97565b602060405180830381865afa158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce91906120cc565b6066546068549192506001600160a01b0391821691161461100d5760008051602061236a8339815191526338ed1739826000888830610fa34261025861137c565b6040518763ffffffff1660e01b8152600401610fc4969594939291906120e5565b6000604051808303816000875af1158015610fe3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261100b9190810190612158565b505b6066546069546001600160a01b039081169116146110b55760008051602061236a8339815191526338ed173982600086863061104b4261025861137c565b6040518763ffffffff1660e01b815260040161106c969594939291906120e5565b6000604051808303816000875af115801561108b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b39190810190612158565b505b6068546040516370a0823160e01b81526000916001600160a01b0316906370a08231906110e6903090600401611c97565b602060405180830381865afa158015611103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112791906120cc565b6069546040516370a0823160e01b81529192506000916001600160a01b03909116906370a082319061115d903090600401611c97565b602060405180830381865afa15801561117a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119e91906120cc565b60685460695491925060008051602061236a8339815191529163e8e33700916001600160a01b0390811691168585600180306111dc4261025861137c565b6040518963ffffffff1660e01b81526004016111ff989796959493929190612055565b6060604051808303816000875af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611242919061209e565b50506067546040516370a0823160e01b8152600092506001600160a01b03909116906370a0823190611278903090600401611c97565b602060405180830381865afa158015611295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b991906120cc565b9050801561134957606b546112e7906112de906102ce670de0b6b3a764000085611364565b606c549061137c565b606c55606a5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561133057600080fd5b505af1158015611344573d6000803e3d6000fd5b505050505b50506001606555505050505050565b60006102fa8284612213565b60006102fa828461222a565b60006102fa8284612249565b60006102fa828461226b565b600080516020612323833981519152546001600160a01b031690565b336113ad6106bd565b6001600160a01b03161461040657600080fd5b60006113ca611388565b90506113d584611745565b6000835111806113e25750815b156113f3576113f184846117d8565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661150057805460ff1916600117815560405161146e90869061143f908590602401611c97565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526117d8565b50805460ff1916815561147f611388565b6001600160a01b0316826001600160a01b0316146114f75760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610380565b611500856117fd565b5050505050565b60008061151383610276565b6001600160a01b0384166000908152606d6020526040902054606b5491925061153c9190611358565b606b556001600160a01b038381166000908152606d602052604080822091909155606a549051632e1a7d4d60e01b815260048101849052911690632e1a7d4d90602401600060405180830381600087803b15801561159957600080fd5b505af11580156115ad573d6000803e3d6000fd5b509295945050505050565b6001600160a01b0382166000908152606d60209081526040808320849055606c54606e90925290912055606b546115ef908261137c565b606b55606a5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561163857600080fd5b505af115801561164c573d6000803e3d6000fd5b505050505050565b6116aa8363a9059cbb60e01b848460405160240161167392919061201f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261183d565b505050565b60006116ba3061190f565b15905090565b600054610100900460ff166116db5760005460ff16156116e3565b6116e36116af565b6116ff5760405162461bcd60e51b815260040161038090611fb4565b600054610100900460ff16158015611721576000805461ffff19166101011790555b61172961191e565b61173161198b565b8015610406576000805461ff001916905550565b803b6117a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610380565b60008051602061232383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606102fa838360405180606001604052806027815260200161234360279139611a12565b61180681611745565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000611892826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ae69092919063ffffffff16565b8051909150156116aa57808060200190518101906118b09190612038565b6116aa5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610380565b6001600160a01b03163b151590565b600054610100900460ff166119895760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610380565b565b600054610100900460ff166119a65760005460ff16156119ae565b6119ae6116af565b6119ca5760405162461bcd60e51b815260040161038090611fb4565b600054610100900460ff161580156119ec576000805461ffff19166101011790555b603380546001600160a01b031916331790558015610406576000805461ff001916905550565b6060833b611a715760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610380565b600080856001600160a01b031685604051611a8c91906122b3565b600060405180830381855af49150503d8060008114611ac7576040519150601f19603f3d011682016040523d82523d6000602084013e611acc565b606091505b5091509150611adc828286611afd565b9695505050505050565b6060611af58484600085611b36565b949350505050565b60608315611b0c5750816102fa565b825115611b1c5782518084602001fd5b8160405162461bcd60e51b815260040161038091906122cf565b606082471015611b975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610380565b611ba08561190f565b611bec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610380565b600080866001600160a01b03168587604051611c0891906122b3565b60006040518083038185875af1925050503d8060008114611c45576040519150601f19603f3d011682016040523d82523d6000602084013e611c4a565b606091505b5091509150611c5a828286611afd565b979650505050505050565b6001600160a01b038116811461040657600080fd5b600060208284031215611c8c57600080fd5b81356102fa81611c65565b6001600160a01b0391909116815260200190565b801515811461040657600080fd5b60008060008060808587031215611ccf57600080fd5b8435611cda81611c65565b9350602085013592506040850135611cf181611cab565b91506060850135611d0181611c65565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611d4a57611d4a611d0c565b604052919050565b60008060408385031215611d6557600080fd5b8235611d7081611c65565b91506020838101356001600160401b0380821115611d8d57600080fd5b818601915086601f830112611da157600080fd5b813581811115611db357611db3611d0c565b611dc5601f8201601f19168501611d22565b91508082528784828501011115611ddb57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060008060808587031215611e0f57600080fd5b8435935060208501359250604085013591506060850135611d0181611c65565b60008083601f840112611e4157600080fd5b5081356001600160401b03811115611e5857600080fd5b6020830191508360208260051b8501011115611e7357600080fd5b9250929050565b60008060008060408587031215611e9057600080fd5b84356001600160401b0380821115611ea757600080fd5b611eb388838901611e2f565b90965094506020870135915080821115611ecc57600080fd5b50611ed987828801611e2f565b95989497509550505050565b6020808252602c9082015260008051602061230383398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061230383398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008060408385031215611fa357600080fd5b505080516020909101519092909150565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006020828403121561201457600080fd5b81516102fa81611c65565b6001600160a01b03929092168252602082015260400190565b60006020828403121561204a57600080fd5b81516102fa81611cab565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b6000806000606084860312156120b357600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156120de57600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b8881101561213757833561211c81611c65565b6001600160a01b031682529282019290820190600101612109565b506001600160a01b0396909616606085015250505060800152949350505050565b6000602080838503121561216b57600080fd5b82516001600160401b038082111561218257600080fd5b818501915085601f83011261219657600080fd5b8151818111156121a8576121a8611d0c565b8060051b91506121b9848301611d22565b81815291830184019184810190888411156121d357600080fd5b938501935b838510156121f1578451825293850193908501906121d8565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612225576122256121fd565b500390565b6000816000190483118215151615612244576122446121fd565b500290565b60008261226657634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561227e5761227e6121fd565b500190565b60005b8381101561229e578181015183820152602001612286565b838111156122ad576000848401525b50505050565b600082516122c5818460208701612283565b9190910192915050565b60208152600082518060208401526122ee816040850160208701612283565b601f01601f1916919091016040019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ffa26469706673582212203ae1c1829b27772d2269e81366215c662d965b941e0efed12a758cbb81c4e4da64736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122082b8874da94dcb9b6e56b4e5fb261cadb41869ed62feb0a4d0cc9b784e6d5fd064736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14568:42",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:42",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:42",
                "type": ""
              }
            ],
            "src": "14:177:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:86:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "264:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "275:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "295:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "286:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "286:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "282:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "271:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:31:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "261:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:42:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:42"
                  },
                  "nodeType": "YulIf",
                  "src": "251:70:42"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "230:5:42",
                "type": ""
              }
            ],
            "src": "196:131:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "416:283:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "465:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "477:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "467:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "467:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "467:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "444:6:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "452:4:42",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "440:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "440:17:42"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "459:3:42"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "436:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "436:27:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "429:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:35:42"
                  },
                  "nodeType": "YulIf",
                  "src": "426:55:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "490:30:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "513:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "500:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "490:6:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "563:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "572:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "575:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "565:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "565:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "565:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "535:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "551:2:42",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "555:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "547:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "547:10:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "559:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "532:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:30:42"
                  },
                  "nodeType": "YulIf",
                  "src": "529:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "588:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "604:6:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "612:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:17:42"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "588:8:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "677:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "686:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "679:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "679:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "679:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "640:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "652:1:42",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "655:6:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "648:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "648:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "636:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "636:27:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "665:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "632:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:38:42"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "672:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "629:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:47:42"
                  },
                  "nodeType": "YulIf",
                  "src": "626:67:42"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "379:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "387:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "395:8:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "405:6:42",
                "type": ""
              }
            ],
            "src": "332:367:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "878:734:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "924:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "933:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "926:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "926:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "926:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "899:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "908:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "920:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "891:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "888:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "949:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "975:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "962:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "953:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1019:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "994:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "994:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1044:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1058:46:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1089:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1100:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1085:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1072:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1062:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1113:28:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1131:2:42",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1135:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:10:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1139:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:18:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1117:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1168:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1177:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1180:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1170:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1170:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1170:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1156:6:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1164:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1153:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:14:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1150:34:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1193:96:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1261:9:42"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1272:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1257:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1257:22:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1281:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1219:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1219:70:42"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "1197:8:42",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1207:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:18:42",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "1308:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1298:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1325:18:42",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "1335:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1325:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1352:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1385:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1396:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1368:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1356:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1429:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1438:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1441:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1431:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1431:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1431:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1415:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1425:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1412:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1409:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1454:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1522:9:42"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1533:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1518:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1518:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1544:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1480:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:72:42"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1458:8:42",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "1468:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1561:18:42",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "1571:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1561:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1588:18:42",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "1598:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1588:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "812:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "823:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "835:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "843:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "851:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "859:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "867:6:42",
                "type": ""
              }
            ],
            "src": "704:908:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1659:76:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1713:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1722:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1725:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1715:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1715:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1715:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1682:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1703:5:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:13:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1689:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1689:21:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1679:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1672:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1672:40:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1669:60:42"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1648:5:42",
                "type": ""
              }
            ],
            "src": "1617:118:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1858:474:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1905:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1914:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1917:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1907:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1907:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1907:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1879:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1888:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1875:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1875:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1900:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1871:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1868:53:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1930:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1943:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1943:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1934:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2000:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1975:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1975:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1975:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2015:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2025:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2015:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2039:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2066:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2077:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2062:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2062:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2049:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2039:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2090:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2105:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2094:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2168:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2146:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2185:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2195:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2211:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2243:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2254:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2239:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2239:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2226:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2215:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2292:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2267:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2267:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2309:17:42",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2319:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2309:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1811:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1823:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1831:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1839:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1847:6:42",
                "type": ""
              }
            ],
            "src": "1740:592:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2466:119:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2476:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2488:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2499:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2476:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2518:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2529:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2556:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2567:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2552:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2552:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2572:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2545:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2545:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2545:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2427:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2438:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2457:4:42",
                "type": ""
              }
            ],
            "src": "2337:248:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2677:301:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2723:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2732:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2735:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2725:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2725:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2725:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2698:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2707:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2694:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2719:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2690:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2690:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "2687:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2748:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2774:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2761:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2752:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2818:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2793:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2793:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2793:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2833:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2843:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2833:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2857:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2889:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2900:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2885:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2885:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2872:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2872:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2861:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2938:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2913:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2913:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2913:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2955:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2965:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2955:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2635:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2646:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2658:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2666:6:42",
                "type": ""
              }
            ],
            "src": "2590:388:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3140:162:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3150:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3162:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3173:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3158:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3158:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3150:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3192:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3203:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3185:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3185:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3230:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3246:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3273:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3284:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3269:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3269:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3289:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3093:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3104:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3112:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3120:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3131:4:42",
                "type": ""
              }
            ],
            "src": "2983:319:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3402:92:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3412:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3424:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3435:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3420:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3420:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3412:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3454:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3479:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3472:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3472:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3465:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3465:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3447:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3447:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3447:41:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3371:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3382:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3393:4:42",
                "type": ""
              }
            ],
            "src": "3307:187:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3637:456:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3684:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3693:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3696:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3686:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3686:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3686:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3658:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3667:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3654:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3654:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3679:3:42",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3650:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3647:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3709:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3732:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3719:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3719:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3709:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3751:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3778:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3789:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3774:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3774:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3761:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3761:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3751:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3802:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3829:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3840:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3825:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3825:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3812:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3812:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3802:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3853:45:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3883:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3894:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3879:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3879:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3866:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3866:32:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3857:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3932:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3907:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3907:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3947:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3957:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3947:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3971:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4003:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4014:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3999:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3999:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3986:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3986:33:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3975:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4053:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4028:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4028:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4028:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4070:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4080:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4070:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3571:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3582:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3594:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3602:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3610:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3618:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3626:6:42",
                "type": ""
              }
            ],
            "src": "3499:594:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4199:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4209:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4221:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4232:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4217:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4217:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4209:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4251:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4266:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4282:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4287:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4278:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4278:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4291:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4274:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4274:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4262:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4262:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4244:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4244:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4244:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4168:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4179:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4190:4:42",
                "type": ""
              }
            ],
            "src": "4098:203:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4376:177:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4422:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4431:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4434:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4424:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4424:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4424:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4397:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4406:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4393:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4393:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4418:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4389:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4389:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4386:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4447:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4473:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4460:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4460:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4451:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4517:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4492:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4492:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4492:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4532:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4542:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4532:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4342:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4353:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4365:6:42",
                "type": ""
              }
            ],
            "src": "4306:247:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4628:110:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4674:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4683:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4686:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4676:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4676:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4676:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4649:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4658:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4645:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4645:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4670:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4641:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4641:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4638:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4699:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4722:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4709:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4709:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4699:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4594:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4605:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4617:6:42",
                "type": ""
              }
            ],
            "src": "4558:180:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4877:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4887:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4899:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4910:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4895:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4895:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4887:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4929:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4944:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4960:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4965:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4956:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4956:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4969:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4952:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4952:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4940:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4940:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4922:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4922:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4922:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_QuickswapFarmUpgradeable_$7763__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4846:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4857:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4868:4:42",
                "type": ""
              }
            ],
            "src": "4743:236:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5158:177:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5175:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5186:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5168:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5168:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5168:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5209:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5220:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5205:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5205:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5225:2:42",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5198:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5198:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5198:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5248:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5259:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5244:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5244:18:42"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742061206469737472696275746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5264:29:42",
                        "type": "",
                        "value": "Caller is not a distributor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5237:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5237:57:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5237:57:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5303:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5315:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5326:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5311:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5311:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5303:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f12c131d15fa266c9f1533970e76a76d7c94b16c9b22a3e71c87114164401d20__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5135:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5149:4:42",
                "type": ""
              }
            ],
            "src": "4984:351:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5514:166:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5531:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5542:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5524:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5524:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5524:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5565:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5576:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5561:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5561:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5581:2:42",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5554:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5554:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5554:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5604:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5615:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5600:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5600:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5620:18:42",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5593:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5593:46:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5593:46:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5648:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5660:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5671:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5656:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5656:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5648:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5491:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5505:4:42",
                "type": ""
              }
            ],
            "src": "5340:340:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5859:177:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5876:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5887:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5869:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5869:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5869:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5910:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5921:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5906:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5926:2:42",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5899:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5949:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5960:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5945:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5945:18:42"
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5965:29:42",
                        "type": "",
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5938:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5938:57:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5938:57:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6004:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6016:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6027:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6012:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6012:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6004:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5836:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5850:4:42",
                "type": ""
              }
            ],
            "src": "5685:351:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6119:444:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6136:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6141:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6129:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6129:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6129:19:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6157:14:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6167:4:42",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6161:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6180:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6191:3:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6196:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6187:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6187:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6180:3:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6208:19:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6222:5:42"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6212:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6236:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6245:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6240:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6304:234:42",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6318:35:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6346:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "6333:12:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6333:20:42"
                        },
                        "variables": [
                          {
                            "name": "value_1",
                            "nodeType": "YulTypedName",
                            "src": "6322:7:42",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "6391:7:42"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "6366:24:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6366:33:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6366:33:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6419:3:42"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6428:7:42"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6445:3:42",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6450:1:42",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "6441:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6441:11:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6454:1:42",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "6437:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6437:19:42"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6424:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6424:33:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6412:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6412:46:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6412:46:42"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6471:19:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6482:3:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6487:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6478:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6478:12:42"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6471:3:42"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6503:25:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6517:6:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6525:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6513:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6513:15:42"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6503:6:42"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6266:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6269:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6263:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6263:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6277:18:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6279:14:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6288:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6291:1:42",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6284:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6284:9:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6279:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6259:3:42",
                    "statements": []
                  },
                  "src": "6255:283:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6547:10:42",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6554:3:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6547:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6088:5:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6095:6:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6103:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6111:3:42",
                "type": ""
              }
            ],
            "src": "6041:522:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6817:270:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6834:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6845:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6827:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6827:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6827:21:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6857:87:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6909:6:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6917:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6929:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6940:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6925:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6925:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "6871:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6871:73:42"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6861:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6964:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6975:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6960:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6960:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6984:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6992:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6980:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6980:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6953:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6953:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6953:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7012:69:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7058:6:42"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7066:6:42"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "7074:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "7020:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7020:61:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7012:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6762:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6773:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6781:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6789:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6797:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6808:4:42",
                "type": ""
              }
            ],
            "src": "6568:519:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7266:182:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7283:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7294:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7276:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7276:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7276:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7317:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7328:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7313:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7313:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7333:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7306:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7306:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7306:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7356:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7367:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7352:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7352:18:42"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7372:34:42",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7345:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7345:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7345:62:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7416:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7428:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7439:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7424:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7424:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7416:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7243:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7257:4:42",
                "type": ""
              }
            ],
            "src": "7092:356:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7632:278:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7642:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7654:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7665:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7650:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7650:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7642:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7678:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7696:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7701:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7692:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7692:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7705:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7688:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7688:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7682:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7723:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7738:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7746:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7734:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7734:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7716:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7716:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7716:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7770:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7781:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7766:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7766:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7786:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7759:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7759:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7813:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7824:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7809:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7809:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7843:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7836:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7836:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7829:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7829:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7802:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7802:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7802:50:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7872:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7883:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7868:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7868:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7892:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7900:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7888:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7888:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7861:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7861:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7861:43:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7577:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7588:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7596:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7604:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7612:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7623:4:42",
                "type": ""
              }
            ],
            "src": "7453:457:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8013:147:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8059:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8068:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8071:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8061:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8061:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8061:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8034:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8043:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8030:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8030:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8055:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8026:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8026:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8023:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8084:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8100:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8094:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8094:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8084:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8119:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8139:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8150:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8135:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8135:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8129:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8119:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7971:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7982:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7994:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8002:6:42",
                "type": ""
              }
            ],
            "src": "7915:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8246:103:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8292:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8301:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8304:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8294:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8294:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8294:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8267:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8276:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8263:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8263:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8288:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8259:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8259:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8256:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8317:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8333:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8327:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8327:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8317:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8212:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8223:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8235:6:42",
                "type": ""
              }
            ],
            "src": "8165:184:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8435:170:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8481:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8490:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8493:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8483:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8483:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8483:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8456:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8465:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8452:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8452:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8477:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8448:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8448:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8445:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8506:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8525:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8519:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8519:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8510:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8569:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8544:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8544:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8544:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8584:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8594:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8584:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8401:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8412:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8424:6:42",
                "type": ""
              }
            ],
            "src": "8354:251:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8795:232:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8805:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8817:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8828:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8813:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8813:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8805:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8848:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8859:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8841:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8841:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8841:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8886:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8897:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8882:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8882:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8902:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8875:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8875:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8875:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8929:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8940:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8925:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8925:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8945:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8918:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8918:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8918:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8972:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8983:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8968:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8968:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "8992:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9008:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9013:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9004:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9004:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9017:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9000:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9000:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8988:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8988:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8961:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8961:60:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8961:60:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8740:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8751:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8759:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8767:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8775:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8786:4:42",
                "type": ""
              }
            ],
            "src": "8610:417:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9147:191:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9193:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9202:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9205:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9195:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9195:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9195:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9168:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9177:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9164:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9164:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9189:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9160:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9160:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "9157:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9218:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9234:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9228:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9228:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9218:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9253:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9273:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9284:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9269:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9269:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9263:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9263:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9253:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9297:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9317:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9328:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9313:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9313:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9307:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9307:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9297:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9097:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9108:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9120:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9128:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9136:6:42",
                "type": ""
              }
            ],
            "src": "9032:306:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9517:236:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9534:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9545:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9527:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9527:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9527:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9568:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9579:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9564:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9564:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9584:2:42",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9557:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9557:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9557:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9607:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9618:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9603:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9623:34:42",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9596:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9596:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9596:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9678:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9689:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9674:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9674:18:42"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9694:16:42",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9667:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9667:44:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9667:44:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9720:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9732:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9743:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9728:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9728:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9720:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9494:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9508:4:42",
                "type": ""
              }
            ],
            "src": "9343:410:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9932:228:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9949:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9960:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9942:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9942:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9942:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9983:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9994:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9979:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9979:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9999:2:42",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9972:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9972:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9972:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10022:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10033:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10018:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10018:18:42"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10038:34:42",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10011:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10011:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10011:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10093:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10104:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10089:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10089:18:42"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10109:8:42",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10082:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10082:36:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10082:36:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10127:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10139:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10150:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10135:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10135:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10127:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9909:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9923:4:42",
                "type": ""
              }
            ],
            "src": "9758:402:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10339:170:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10356:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10367:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10349:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10349:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10349:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10390:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10401:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10386:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10386:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10406:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10379:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10379:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10379:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10429:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10440:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10425:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10425:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10445:22:42",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10418:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10418:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10418:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10477:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10489:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10500:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10485:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10485:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10477:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10316:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10330:4:42",
                "type": ""
              }
            ],
            "src": "10165:344:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10567:205:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10577:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10586:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10581:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10646:63:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10671:3:42"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10676:1:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10667:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10667:11:42"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10690:3:42"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10695:1:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10686:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10686:11:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10680:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10680:18:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10660:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10660:39:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10660:39:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10607:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10610:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10604:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10604:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10618:19:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10620:15:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10629:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10632:2:42",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10625:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10625:10:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10620:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10600:3:42",
                    "statements": []
                  },
                  "src": "10596:113:42"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10735:31:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10748:3:42"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10753:6:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10744:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10744:16:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10762:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10737:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10737:27:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10737:27:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10724:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10727:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10721:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10721:13:42"
                  },
                  "nodeType": "YulIf",
                  "src": "10718:48:42"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10545:3:42",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10550:3:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10555:6:42",
                "type": ""
              }
            ],
            "src": "10514:258:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10826:208:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10836:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10856:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10850:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10850:12:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10840:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10878:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10883:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10871:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10871:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10871:19:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10925:5:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10932:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10921:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10921:16:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10943:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10948:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10939:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10939:14:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10955:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "10899:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10899:63:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10899:63:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10971:57:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10986:3:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10999:6:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11007:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10995:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10995:15:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11016:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11012:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11012:7:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10991:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10991:29:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10982:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10982:39:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11023:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10978:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10978:50:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10971:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10803:5:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10810:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10818:3:42",
                "type": ""
              }
            ],
            "src": "10777:257:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11186:167:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11203:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11218:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11234:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11239:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11230:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11230:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11243:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11226:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11226:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11214:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11214:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11196:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11196:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11196:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11267:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11278:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11263:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11263:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11283:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11256:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11256:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11256:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11295:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11320:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11332:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11343:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11328:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11328:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "11303:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11303:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11295:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11147:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11158:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11166:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11177:4:42",
                "type": ""
              }
            ],
            "src": "11039:314:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11515:218:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11525:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11537:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11548:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11533:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11533:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11525:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11560:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11578:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11583:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11574:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11574:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11587:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11570:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11570:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11564:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11605:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11620:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11628:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11616:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11616:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11598:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11598:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11598:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11652:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11663:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11648:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11648:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11672:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11680:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11668:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11668:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11641:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11641:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11641:43:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11704:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11715:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11700:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11700:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11720:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11693:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11693:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11693:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11468:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11479:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11487:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11495:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11506:4:42",
                "type": ""
              }
            ],
            "src": "11358:375:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11912:233:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11929:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11940:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11922:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11922:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11922:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11963:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11974:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11959:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11959:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11979:2:42",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11952:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11952:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11952:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12002:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12013:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11998:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11998:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12018:34:42",
                        "type": "",
                        "value": "Initializable: contract is not i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11991:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11991:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11991:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12073:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12084:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12069:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12069:18:42"
                      },
                      {
                        "hexValue": "6e697469616c697a696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12089:13:42",
                        "type": "",
                        "value": "nitializing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12062:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12062:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12062:41:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12112:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12124:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12135:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12120:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12120:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12112:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11889:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11903:4:42",
                "type": ""
              }
            ],
            "src": "11738:407:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12202:213:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12269:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12290:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12297:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12302:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12293:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12293:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12283:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12283:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12283:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12334:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12337:4:42",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12327:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12327:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12327:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12362:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12365:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12355:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12355:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12355:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12233:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12226:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12226:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12219:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12219:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12241:1:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12252:1:42",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "12248:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12248:6:42"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12256:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12244:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12244:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12238:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12238:21:42"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12215:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12215:45:42"
                  },
                  "nodeType": "YulIf",
                  "src": "12212:168:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12389:20:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12404:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12407:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12400:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12400:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12389:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12181:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12184:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12190:7:42",
                "type": ""
              }
            ],
            "src": "12150:265:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12466:171:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12497:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12518:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12525:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12530:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12521:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12521:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12511:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12511:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12511:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12562:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12565:4:42",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12555:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12555:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12555:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12590:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12593:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12583:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12583:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12583:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12486:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12479:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12479:9:42"
                  },
                  "nodeType": "YulIf",
                  "src": "12476:132:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12617:14:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12626:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12629:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12622:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12622:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "12617:1:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12451:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12454:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "12460:1:42",
                "type": ""
              }
            ],
            "src": "12420:217:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12720:167:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12766:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12775:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12778:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12768:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12768:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12768:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12741:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12750:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12737:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12737:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12762:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12733:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12733:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "12730:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12791:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12810:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12804:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12804:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12795:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12851:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12829:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12829:28:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12829:28:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12866:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12876:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12866:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12686:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12697:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12709:6:42",
                "type": ""
              }
            ],
            "src": "12642:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13066:232:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13083:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13094:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13076:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13076:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13076:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13117:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13128:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13113:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13113:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13133:2:42",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13106:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13106:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13106:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13156:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13167:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13152:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13152:18:42"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13172:34:42",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13145:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13145:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13145:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13227:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13238:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13223:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13223:18:42"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13243:12:42",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13216:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13216:40:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13216:40:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13265:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13277:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13288:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13273:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13273:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13265:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13043:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13057:4:42",
                "type": ""
              }
            ],
            "src": "12892:406:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13477:228:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13494:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13505:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13487:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13487:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13487:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13528:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13539:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13524:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13524:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13544:2:42",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13517:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13517:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13517:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13567:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13578:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13563:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13563:18:42"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13583:34:42",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13556:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13556:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13556:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13638:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13649:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13634:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13634:18:42"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13654:8:42",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13627:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13627:36:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13627:36:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13672:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13684:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13695:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13680:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13680:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13672:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13454:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13468:4:42",
                "type": ""
              }
            ],
            "src": "13303:402:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13884:179:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13901:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13912:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13894:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13894:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13894:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13935:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13946:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13931:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13931:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13951:2:42",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13924:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13924:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13924:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13974:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13985:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13970:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13970:18:42"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13990:31:42",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13963:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13963:59:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13963:59:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14031:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14043:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14054:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14039:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14039:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14031:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13861:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13875:4:42",
                "type": ""
              }
            ],
            "src": "13710:353:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14205:137:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14215:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14235:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14229:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14229:13:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14219:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14277:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14285:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14273:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14273:17:42"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14292:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14297:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14251:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14251:53:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14251:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14313:23:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14324:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14329:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14320:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14320:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14313:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14181:3:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14186:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14197:3:42",
                "type": ""
              }
            ],
            "src": "14068:274:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14468:98:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14485:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14496:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14478:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14478:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14478:21:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14508:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14533:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14545:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14556:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14541:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14541:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "14516:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14516:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14508:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14437:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14448:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14459:4:42",
                "type": ""
              }
            ],
            "src": "14347:219:42"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_QuickswapFarmUpgradeable_$7763__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f12c131d15fa266c9f1533970e76a76d7c94b16c9b22a3e71c87114164401d20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Caller is not a distributor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"The given pool doesnt exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_address_dyn_calldata(value2, value3, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "568:8915:22:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "568:8915:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7137:94;7209:7;:14;7137:94;;160:25:42;;;148:2;133:18;7137:94:22;;;;;;;;5232:443;;;;;;:::i;:::-;;:::i;:::-;;7937:67;;;:::i;4459:422::-;;;;;;:::i;:::-;;:::i;:::-;;;;2511:25:42;;;2567:2;2552:18;;2545:34;;;;2484:18;4459:422:22;2337:248:42;6036:347:22;;;;;;:::i;:::-;;:::i;:::-;;;;3185:25:42;;;3241:2;3226:18;;3219:34;;;;3269:18;;;3262:34;3173:2;3158:18;6036:347:22;2983:319:42;1341:84:2;1411:7;;;;1341:84;;3472:14:42;;3465:22;3447:41;;3435:2;3420:18;1341:84:2;3307:187:42;7694:164:22;;;:::i;2723:1208::-;;;;;;:::i;:::-;;:::i;7866:63::-;;;:::i;1276:85:0:-;;;:::i;:::-;;;;;;;:::i;1110:26:22:-;;;;;-1:-1:-1;;;;;1110:26:22;;;1729:313;;;;;;:::i;:::-;;:::i;1076:25::-;;;;;-1:-1:-1;;;;;1076:25:22;;;7239:169;;;;;;:::i;:::-;;:::i;6744:385::-;;;;;;:::i;:::-;;:::i;1187:24::-;;;;;;:::i;:::-;;:::i;7416:270::-;;;;;;:::i;:::-;;:::i;1143:37::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1143:37:22;;;5232:443;1614:11;;-1:-1:-1;;;;;1614:11:22;1600:10;:25;1592:65;;;;-1:-1:-1;;;1592:65:22;;5186:2:42;1592:65:22;;;5168:21:42;5225:2;5205:18;;;5198:30;-1:-1:-1;;;5244:18:42;;;5237:57;5311:18;;1592:65:22;;;;;;;;;1411:7:2;;;;1654:9:::1;1646:38;;;;-1:-1:-1::0;;;1646:38:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5458:20:22;;::::2;5495:1;5458:20:::0;;;:5:::2;:20;::::0;;;;;::::2;5450:80;;;;-1:-1:-1::0;;;5450:80:22::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5543:20:22;;::::2;;::::0;;;:5:::2;:20;::::0;;;;;;;:83;;-1:-1:-1;;;5543:83:22;;:20;::::2;::::0;:31:::2;::::0;:83:::2;::::0;5575:24;;;;5601;;;;5543:83:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5642:25:22::2;::::0;-1:-1:-1;;;;;5642:25:22;::::2;::::0;-1:-1:-1;5642:25:22::2;::::0;-1:-1:-1;5642:25:22;;::::2;5232:443:::0;;;;;:::o;7937:67::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7986:10:22::1;:8;:10::i;:::-;7937:67::o:0;4459:422::-;4583:15;4600;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4635:20:22;;::::1;4672:1;4635:20:::0;;;:5:::1;:20;::::0;;;;;::::1;4627:80;;;;-1:-1:-1::0;;;4627:80:22::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4739:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:72;;-1:-1:-1;;;4739:72:22;;4769:10:::1;4739:72;::::0;::::1;7716:34:42::0;7766:18;;;7759:34;;;7836:14;;7829:22;7809:18;;;7802:50;7888:15;;;7868:18;;;7861:43;4739:20:22;::::1;::::0;:29:::1;::::0;7650:19:42;;4739:72:22::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4828:43;::::0;160:25:42;;;4718:93:22;;-1:-1:-1;4718:93:22;-1:-1:-1;;;;;;4828:43:22;::::1;::::0;4837:10:::1;::::0;4828:43:::1;::::0;148:2:42;133:18;4828:43:22::1;;;;;;;4459:422:::0;;;;;;;:::o;6036:347::-;-1:-1:-1;;;;;6183:20:22;;;6119:15;6183:20;;;:5;:20;;;;;;6119:15;;;;;;6183:20;:40;6179:197;;-1:-1:-1;;;;;6251:20:22;;;;;;;:5;:20;;;;;;;;:42;;-1:-1:-1;;;6251:42:22;;:20;;;:32;;:42;;6284:8;;6251:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6240:53;;6327:37;6341:13;6356:7;6327:13;:37::i;:::-;6308:56;;-1:-1:-1;6308:56:22;-1:-1:-1;6179:197:22;6036:347;;;;;:::o;7694:164::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7760:30:22::1;7787:1;7760:18;:30::i;:::-;7819:10;;;;;;;;;-1:-1:-1::0;;;;;7819:10:22::1;-1:-1:-1::0;;;;;7801:47:22::1;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7694:164::o:0;2723:1208::-;2865:13;2880;2895:17;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2927:20:22;;::::1;2964:1;2927:20:::0;;;:5:::1;:20;::::0;;;;;::::1;2924:167;;3011:25;3022:13;3011:10;:25::i;:::-;-1:-1:-1::0;;;;;2983:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;:54;;;;;::::1;-1:-1:-1::0;;;;;;2983:54:22;;::::1;;::::0;;;3052:7:::1;:27:::0;;2983:54;3052:27;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;;::::0;;2924:167:::1;3106:11:::0;;3103:207:::1;;-1:-1:-1::0;;;;;3178:20:22;;::::1;3133:24;3178:20:::0;;;:5:::1;:20;::::0;;;;;;;;:29;;-1:-1:-1;;;3178:29:22;;;;3133:24;;3178:20:::1;::::0;:27:::1;::::0;:29:::1;::::0;;::::1;::::0;:20;;:29;;;;;;:20;:29:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3267:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;3133:75;;-1:-1:-1;3223:75:22::1;::::0;:23;;::::1;::::0;3247:10:::1;::::0;3267:20:::1;3290:7:::0;3223:23:::1;:75::i;:::-;3118:192;3103:207;3323:11:::0;;3320:207:::1;;-1:-1:-1::0;;;;;3395:20:22;;::::1;3350:24;3395:20:::0;;;:5:::1;:20;::::0;;;;;;;;:29;;-1:-1:-1;;;3395:29:22;;;;3350:24;;3395:20:::1;::::0;:27:::1;::::0;:29:::1;::::0;;::::1;::::0;:20;;:29;;;;;;:20;:29:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3484:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;3350:75;;-1:-1:-1;3440:75:22::1;::::0;:23;;::::1;::::0;3464:10:::1;::::0;3484:20:::1;3507:7:::0;3440:23:::1;:75::i;:::-;3335:192;3320:207;3540:12:::0;;3537:210:::1;;-1:-1:-1::0;;;;;3613:20:22;;::::1;3568:24;3613:20:::0;;;:5:::1;:20;::::0;;;;;;;;:29;;-1:-1:-1;;;3613:29:22;;;;3568:24;;3613:20:::1;::::0;:27:::1;::::0;:29:::1;::::0;;::::1;::::0;:20;;:29;;;;;;:20;:29:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3703:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;3568:75;;-1:-1:-1;3659:76:22::1;::::0;:23;;::::1;::::0;3683:10:::1;::::0;3703:20:::1;3726:8:::0;3659:23:::1;:76::i;:::-;3553:194;3537:210;-1:-1:-1::0;;;;;3794:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:67;;-1:-1:-1;;;3794:67:22;;::::1;::::0;::::1;8841:25:42::0;;;8882:18;;;8875:34;;;8925:18;;;8918:34;;;8988:32;;;8968:18;;;8961:60;3794:20:22;::::1;::::0;:28:::1;::::0;8813:19:42;;3794:67:22::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3878:44;::::0;160:25:42;;;3766:95:22;;-1:-1:-1;3766:95:22;;-1:-1:-1;3766:95:22;-1:-1:-1;;;;;;3878:44:22;;::::1;::::0;;;::::1;::::0;::::1;::::0;148:2:42;133:18;3878:44:22::1;;;;;;;2723:1208:::0;;;;;;;;;:::o;7866:63::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7913:8:22::1;:6;:8::i;1276:85:0:-:0;1348:6;;-1:-1:-1;;;;;1348:6:0;;1276:85::o;1729:313:22:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;2385:16;:14;:16::i;:::-;2361:107;;;;-1:-1:-1;;;2361:107:1;;9545:2:42;2361:107:1;;;9527:21:42;9584:2;9564:18;;;9557:30;9623:34;9603:18;;;9596:62;-1:-1:-1;;;9674:18:42;;;9667:44;9728:19;;2361:107:1;9343:410:42;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;1799:17:22::1;:15;:17::i;:::-;1827:16;:14;:16::i;:::-;1854:29;1930:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1886:66;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1963:10:22::1;:33:::0;;-1:-1:-1;;;;;;1963:33:22::1;-1:-1:-1::0;;;;;1963:33:22;::::1;;::::0;;;-1:-1:-1;2007:27:22::1;2025:8:::0;2007:17:::1;:27::i;:::-;1788:254;2649:14:1::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;1729:313:22;:::o;7239:169::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7322:11:22::1;:28:::0;;-1:-1:-1;;;;;;7322:28:22::1;-1:-1:-1::0;;;;;7322:28:22;::::1;::::0;;::::1;::::0;;;7366:34:::1;::::0;::::1;::::0;-1:-1:-1;;7366:34:22::1;7239:169:::0;:::o;6744:385::-;-1:-1:-1;;;;;6901:20:22;;;6813:23;6901:20;;;:5;:20;;;;;;6813:23;;;;;;6901:20;:40;6897:225;;-1:-1:-1;;;;;6976:20:22;;;;;;;:5;:20;;;;;;;;;;:39;;-1:-1:-1;;;6976:39:22;;;;:20;;;:37;;:39;;;;;:20;:39;;;;;;:20;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6958:57;;7065:45;7079:13;7094:15;7065:13;:45::i;:::-;7030:80;;-1:-1:-1;7030:80:22;-1:-1:-1;6897:225:22;6744:385;;;;;:::o;1187:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1187:24:22;;-1:-1:-1;1187:24:22;:::o;7416:270::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7506:22:22;::::1;7498:73;;;::::0;-1:-1:-1;;;7498:73:22;;9960:2:42;7498:73:22::1;::::0;::::1;9942:21:42::0;9999:2;9979:18;;;9972:30;10038:34;10018:18;;;10011:62;-1:-1:-1;;;10089:18:42;;;10082:36;10135:19;;7498:73:22::1;9758:402:42::0;7498:73:22::1;7582:28;7601:8;7582:18;:28::i;:::-;7639:10;::::0;7621:57:::1;::::0;-1:-1:-1;;;7621:57:22;;-1:-1:-1;;;;;7639:10:22;;::::1;::::0;7621:47:::1;::::0;:57:::1;::::0;7669:8;;7621:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7416:270:::0;:::o;2353:117:2:-;1411:7;;;;1912:41;;;;-1:-1:-1;;;1912:41:2;;10367:2:42;1912:41:2;;;10349:21:42;10406:2;10386:18;;;10379:30;-1:-1:-1;;;10425:18:42;;;10418:50;10485:18;;1912:41:2;10165:344:42;1912:41:2;2411:7:::1;:15:::0;;-1:-1:-1;;2411:15:2::1;::::0;;2441:22:::1;929:10:6::0;2450:12:2::1;2441:22;;;;;;:::i;:::-;;;;;;;;2353:117::o:0;8341:667:22:-;-1:-1:-1;;;;;8477:20:22;;;8428:15;8477:20;;;:5;:20;;;;;;8428:15;;;;8477:20;:40;8473:528;;-1:-1:-1;;;;;8551:20:22;;;8534:14;8551:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;8551:29:22;;;;8534:14;;8551:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8534:46;;8595:19;8624:6;-1:-1:-1;;;;;8617:26:22;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8695:20:22;;;8660:25;8695:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;8695:29:22;;;;8595:50;;-1:-1:-1;8660:25:22;;8695:20;;;;;:27;;:29;;;;;:20;:29;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8688:47:22;;8736:6;8688:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8660:83;-1:-1:-1;8768:48:22;8804:11;8768:31;:8;8660:83;8768:12;:31::i;:::-;:35;;:48::i;:::-;-1:-1:-1;;;;;8868:20:22;;;8833:25;8868:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;8868:29:22;;;;8758:58;;-1:-1:-1;8833:25:22;;8868:20;;;;;:27;;:29;;;;;:20;:29;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8861:47:22;;8909:6;8861:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8833:83;-1:-1:-1;8941:48:22;8977:11;8941:31;:8;8833:83;8941:12;:31::i;:48::-;8931:58;;8519:482;;;;8473:528;8341:667;;;;;:::o;2510:187:0:-;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;9105:375:22:-;9236:10;;9261:124;;9166:7;;;;-1:-1:-1;;;;;9236:10:22;;;;-1:-1:-1;;;9302:36:22;9261:124;;9357:13;;9261:124;;;:::i;:::-;;;;-1:-1:-1;;9261:124:22;;;;;;;;;;;;;;-1:-1:-1;;;;;9261:124:22;-1:-1:-1;;;;;;9261:124:22;;;;;;;;;;9206:190;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9412:28:22;;9186:210;;-1:-1:-1;;;;;;9412:28:22;;;;;;;;9466:5;9105:375;-1:-1:-1;;9105:375:22:o;967:252:4:-;1143:68;;;-1:-1:-1;;;;;11616:15:42;;;1143:68:4;;;11598:34:42;11668:15;;11648:18;;;11641:43;11700:18;;;;11693:34;;;1143:68:4;;;;;;;;;;11533:18:42;;;;1143:68:4;;;;;;;;-1:-1:-1;;;;;1143:68:4;-1:-1:-1;;;1143:68:4;;;1116:96;;1136:5;;1116:19;:96::i;2106:115:2:-;1411:7;;;;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;2165:7:::1;:14:::0;;-1:-1:-1;;2165:14:2::1;2175:4;2165:14;::::0;;2194:20:::1;2201:12;929:10:6::0;;850:96;3037:123:1;3085:4;3109:44;3147:4;3109:29;:44::i;:::-;3108:45;3101:52;;3037:123;:::o;1048:97:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1111:27:2::1;:25;:27::i;988:95:0:-:0;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;3451:96:19:-:0;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3306:717:4:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:4;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:4;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:4;;13094:2:42;3921:85:4;;;13076:21:42;13133:2;13113:18;;;13106:30;13172:34;13152:18;;;13145:62;-1:-1:-1;;;13223:18:42;;;13216:40;13273:19;;3921:85:4;12892:406:42;3921:85:4;3387:636;3306:717;;:::o;1186:320:5:-;-1:-1:-1;;;;;1476:19:5;;:23;;;1186:320::o;1151:95:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1224:7:2::1;:15:::0;;-1:-1:-1;;1224:15:2::1;::::0;;1151:95::o;1089:111:0:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:6::0;1161:18:0::1;:32::i;3872:223:5:-:0;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:5:o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:5;;13505:2:42;5148:81:5;;;13487:21:42;13544:2;13524:18;;;13517:30;13583:34;13563:18;;;13556:62;-1:-1:-1;;;13634:18:42;;;13627:36;13680:19;;5148:81:5;13303:402:42;5148:81:5;5247:18;5258:6;5247:10;:18::i;:::-;5239:60;;;;-1:-1:-1;;;5239:60:5;;13912:2:42;5239:60:5;;;13894:21:42;13951:2;13931:18;;;13924:30;13990:31;13970:18;;;13963:59;14039:18;;5239:60:5;13710:353:42;5239:60:5;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:5;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:5:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:5;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:42:-;-1:-1:-1;;;;;271:31:42;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:367::-;395:8;405:6;459:3;452:4;444:6;440:17;436:27;426:55;;477:1;474;467:12;426:55;-1:-1:-1;500:20:42;;-1:-1:-1;;;;;532:30:42;;529:50;;;575:1;572;565:12;529:50;612:4;604:6;600:17;588:29;;672:3;665:4;655:6;652:1;648:14;640:6;636:27;632:38;629:47;626:67;;;689:1;686;679:12;704:908;835:6;843;851;859;867;920:2;908:9;899:7;895:23;891:32;888:52;;;936:1;933;926:12;888:52;975:9;962:23;994:31;1019:5;994:31;:::i;:::-;1044:5;-1:-1:-1;1100:2:42;1085:18;;1072:32;-1:-1:-1;;;;;1153:14:42;;;1150:34;;;1180:1;1177;1170:12;1150:34;1219:70;1281:7;1272:6;1261:9;1257:22;1219:70;:::i;:::-;1308:8;;-1:-1:-1;1193:96:42;-1:-1:-1;1396:2:42;1381:18;;1368:32;;-1:-1:-1;1412:16:42;;;1409:36;;;1441:1;1438;1431:12;1409:36;;1480:72;1544:7;1533:8;1522:9;1518:24;1480:72;:::i;:::-;704:908;;;;-1:-1:-1;704:908:42;;-1:-1:-1;1571:8:42;;1454:98;704:908;-1:-1:-1;;;704:908:42:o;1617:118::-;1703:5;1696:13;1689:21;1682:5;1679:32;1669:60;;1725:1;1722;1715:12;1740:592;1823:6;1831;1839;1847;1900:3;1888:9;1879:7;1875:23;1871:33;1868:53;;;1917:1;1914;1907:12;1868:53;1956:9;1943:23;1975:31;2000:5;1975:31;:::i;:::-;2025:5;-1:-1:-1;2077:2:42;2062:18;;2049:32;;-1:-1:-1;2133:2:42;2118:18;;2105:32;2146:30;2105:32;2146:30;:::i;:::-;2195:7;-1:-1:-1;2254:2:42;2239:18;;2226:32;2267:33;2226:32;2267:33;:::i;:::-;1740:592;;;;-1:-1:-1;1740:592:42;;-1:-1:-1;;1740:592:42:o;2590:388::-;2658:6;2666;2719:2;2707:9;2698:7;2694:23;2690:32;2687:52;;;2735:1;2732;2725:12;2687:52;2774:9;2761:23;2793:31;2818:5;2793:31;:::i;:::-;2843:5;-1:-1:-1;2900:2:42;2885:18;;2872:32;2913:33;2872:32;2913:33;:::i;:::-;2965:7;2955:17;;;2590:388;;;;;:::o;3499:594::-;3594:6;3602;3610;3618;3626;3679:3;3667:9;3658:7;3654:23;3650:33;3647:53;;;3696:1;3693;3686:12;3647:53;3732:9;3719:23;3709:33;;3789:2;3778:9;3774:18;3761:32;3751:42;;3840:2;3829:9;3825:18;3812:32;3802:42;;3894:2;3883:9;3879:18;3866:32;3907:31;3932:5;3907:31;:::i;:::-;3957:5;-1:-1:-1;4014:3:42;3999:19;;3986:33;4028;3986;4028;:::i;:::-;4080:7;4070:17;;;3499:594;;;;;;;;:::o;4098:203::-;-1:-1:-1;;;;;4262:32:42;;;;4244:51;;4232:2;4217:18;;4098:203::o;4306:247::-;4365:6;4418:2;4406:9;4397:7;4393:23;4389:32;4386:52;;;4434:1;4431;4424:12;4386:52;4473:9;4460:23;4492:31;4517:5;4492:31;:::i;4558:180::-;4617:6;4670:2;4658:9;4649:7;4645:23;4641:32;4638:52;;;4686:1;4683;4676:12;4638:52;-1:-1:-1;4709:23:42;;4558:180;-1:-1:-1;4558:180:42:o;5340:340::-;5542:2;5524:21;;;5581:2;5561:18;;;5554:30;-1:-1:-1;;;5615:2:42;5600:18;;5593:46;5671:2;5656:18;;5340:340::o;5685:351::-;5887:2;5869:21;;;5926:2;5906:18;;;5899:30;-1:-1:-1;;;5960:2:42;5945:18;;5938:57;6027:2;6012:18;;5685:351::o;6041:522::-;6141:6;6136:3;6129:19;6111:3;6167:4;6196:2;6191:3;6187:12;6180:19;;6222:5;6245:1;6255:283;6269:6;6266:1;6263:13;6255:283;;;6346:6;6333:20;6366:33;6391:7;6366:33;:::i;:::-;-1:-1:-1;;;;;6424:33:42;6412:46;;6478:12;;;;6513:15;;;;6454:1;6284:9;6255:283;;;-1:-1:-1;6554:3:42;;6041:522;-1:-1:-1;;;;;6041:522:42:o;6568:519::-;6845:2;6834:9;6827:21;6808:4;6871:73;6940:2;6929:9;6925:18;6917:6;6909;6871:73;:::i;:::-;6992:9;6984:6;6980:22;6975:2;6964:9;6960:18;6953:50;7020:61;7074:6;7066;7058;7020:61;:::i;7092:356::-;7294:2;7276:21;;;7313:18;;;7306:30;7372:34;7367:2;7352:18;;7345:62;7439:2;7424:18;;7092:356::o;7915:245::-;7994:6;8002;8055:2;8043:9;8034:7;8030:23;8026:32;8023:52;;;8071:1;8068;8061:12;8023:52;-1:-1:-1;;8094:16:42;;8150:2;8135:18;;;8129:25;8094:16;;8129:25;;-1:-1:-1;7915:245:42:o;8165:184::-;8235:6;8288:2;8276:9;8267:7;8263:23;8259:32;8256:52;;;8304:1;8301;8294:12;8256:52;-1:-1:-1;8327:16:42;;8165:184;-1:-1:-1;8165:184:42:o;8354:251::-;8424:6;8477:2;8465:9;8456:7;8452:23;8448:32;8445:52;;;8493:1;8490;8483:12;8445:52;8525:9;8519:16;8544:31;8569:5;8544:31;:::i;9032:306::-;9120:6;9128;9136;9189:2;9177:9;9168:7;9164:23;9160:32;9157:52;;;9205:1;9202;9195:12;9157:52;9234:9;9228:16;9218:26;;9284:2;9273:9;9269:18;9263:25;9253:35;;9328:2;9317:9;9313:18;9307:25;9297:35;;9032:306;;;;;:::o;10514:258::-;10586:1;10596:113;10610:6;10607:1;10604:13;10596:113;;;10686:11;;;10680:18;10667:11;;;10660:39;10632:2;10625:10;10596:113;;;10727:6;10724:1;10721:13;10718:48;;;-1:-1:-1;;10762:1:42;10744:16;;10737:27;10514:258::o;10777:257::-;10818:3;10856:5;10850:12;10883:6;10878:3;10871:19;10899:63;10955:6;10948:4;10943:3;10939:14;10932:4;10925:5;10921:16;10899:63;:::i;:::-;11016:2;10995:15;-1:-1:-1;;10991:29:42;10982:39;;;;11023:4;10978:50;;10777:257;-1:-1:-1;;10777:257:42:o;11039:314::-;-1:-1:-1;;;;;11214:32:42;;11196:51;;11283:2;11278;11263:18;;11256:30;;;-1:-1:-1;;11303:44:42;;11328:18;;11320:6;11303:44;:::i;11738:407::-;11940:2;11922:21;;;11979:2;11959:18;;;11952:30;12018:34;12013:2;11998:18;;11991:62;-1:-1:-1;;;12084:2:42;12069:18;;12062:41;12135:3;12120:19;;11738:407::o;12150:265::-;12190:7;12256:1;12252;12248:6;12244:14;12241:1;12238:21;12233:1;12226:9;12219:17;12215:45;12212:168;;;12302:10;12297:3;12293:20;12290:1;12283:31;12337:4;12334:1;12327:15;12365:4;12362:1;12355:15;12212:168;-1:-1:-1;12400:9:42;;12150:265::o;12420:217::-;12460:1;12486;12476:132;;12530:10;12525:3;12521:20;12518:1;12511:31;12565:4;12562:1;12555:15;12593:4;12590:1;12583:15;12476:132;-1:-1:-1;12622:9:42;;12420:217::o;12642:245::-;12709:6;12762:2;12750:9;12741:7;12737:23;12733:32;12730:52;;;12778:1;12775;12768:12;12730:52;12810:9;12804:16;12829:28;12851:5;12829:28;:::i;14068:274::-;14197:3;14235:6;14229:13;14251:53;14297:6;14292:3;14285:4;14277:6;14273:17;14251:53;:::i;:::-;14320:16;;;;;14068:274;-1:-1:-1;;14068:274:42:o;14347:219::-;14496:2;14485:9;14478:21;14459:4;14516:44;14556:2;14545:9;14541:18;14533:6;14516:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {QuickswapFarmUpgradeable as Farm, SafeMath, IERC20, IERC20Upgradeable, SafeERC20Upgradeable, IUniswapV2Pair, Initializable} from \"./farms/QuickswapFarmUpgradeable.sol\";\r\n\r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract QuickswapFarmFactoryBeacon is Initializable, PausableUpgradeable, OwnableUpgradeable{\r\n    using SafeMath for uint256; \r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    /**\r\n     * @dev Contract Variables:\r\n     * farmBeacon - Farm contract implementation.\r\n     *\r\n     * distributor - Address authorized to make distributions.\r\n     * Farms - links {lpPools} to the deployed Farm contract.\r\n     * lpPools - list of pools that have corresponding deployed Farm contract.\r\n     */\r\n    address public farmBeacon;\r\n\r\n    address public distributor;\r\n    mapping(address => Farm) public Farms;\r\n    address[] public lpPools;\r\n\r\n    event FarmDeployed(address indexed farmAddress);\r\n    event Deposit(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Withdraw(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Distribute(address indexed lpPool);\r\n    event DistributorChanged(address indexed newDistributor);\r\n\r\n    modifier distributorOnly(){\r\n        require(msg.sender == distributor, 'Caller is not a distributor');\r\n        _;\r\n    }\r\n\r\n    // ============ Methods ============\r\n\r\n    function initialize(address upgrader) external initializer {\r\n        __Pausable_init();\r\n        __Ownable_init();\r\n        UpgradeableBeacon _farmBeacon = new UpgradeableBeacon(\r\n            address(new Farm())\r\n        );\r\n        farmBeacon = address(_farmBeacon);\r\n        transferOwnership(upgrader);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\r\n     * @param amountA  - Token A amount to deposit.\r\n     * @param amountB -  Token B amount to deposit.\r\n     * @param amountLP - LP Token amount to deposit.\r\n     * @param lpStakingPool - Address of the pool to deposit tokens in.\r\n     * @param recipient - Address which will recieve the deposit and leftover tokens.\r\n     \r\n     * @return sentA - Token A amount sent to the farm.\r\n     * @return sentB - Token B amount sent to the farm.\r\n     * @return liquidity - Total liquidity sent to the farm (in lpTokens).\r\n     */\r\n    function deposit(uint256 amountA, uint256 amountB, uint256 amountLP, address lpStakingPool, address recipient) external whenNotPaused returns(uint256 sentA, uint256 sentB, uint256 liquidity){\r\n        if(Farms[lpStakingPool] == Farm(address(0))){\r\n            Farms[lpStakingPool] = Farm(createFarm(lpStakingPool));\r\n            lpPools.push(lpStakingPool);\r\n        }\r\n\r\n        if(amountA > 0){\r\n            IERC20Upgradeable tokenA = IERC20Upgradeable(Farms[lpStakingPool].tokenA());\r\n            tokenA.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountA);\r\n        }\r\n        if(amountB > 0){\r\n            IERC20Upgradeable tokenB = IERC20Upgradeable(Farms[lpStakingPool].tokenB());\r\n            tokenB.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountB);\r\n        }\r\n        if(amountLP > 0){\r\n            IERC20Upgradeable lpPair = IERC20Upgradeable(Farms[lpStakingPool].lpPair()); \r\n            lpPair.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountLP);\r\n        }\r\n        \r\n       (sentA, sentB, liquidity) = Farms[lpStakingPool].deposit(amountA, amountB, amountLP, recipient); \r\n        emit Deposit(recipient, lpStakingPool, liquidity); \r\n    }\r\n\r\n    /** \r\n     * @dev Withdraws tokens from the given pool. \r\n     * @param lpStakingPool - LP pool to withdraw from.\r\n     * @param amount - LP amount to withdraw. \r\n     * @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\r\n     * @param recipient - The address which will recieve tokens.\r\n\r\n     * @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     * @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     */ \r\n    function withdraw(address lpStakingPool, uint256 amount, bool withdrawLP, address recipient) external whenNotPaused returns(uint256 amountA, uint256 amountB){\r\n        require(Farms[lpStakingPool] != Farm(address(0)), 'The given pool doesnt exist');\r\n        (amountA, amountB) = Farms[lpStakingPool].withdraw(msg.sender, amount, withdrawLP, recipient); \r\n        emit Withdraw(msg.sender, lpStakingPool, amount);  \r\n    }\r\n\r\n    /**\r\n     * @dev Distributes tokens between users.\r\n     * @param lpStakingPool - LP pool to distribute tokens in.\r\n     * @param rewardTokenToTokenARoute An array of token addresses.\r\n     * @param rewardTokenToTokenBRoute An array of token addresses.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */ \r\n    function distribute(\r\n        address lpStakingPool,\r\n        address[] calldata rewardTokenToTokenARoute, \r\n        address[] calldata rewardTokenToTokenBRoute\r\n    ) external distributorOnly whenNotPaused {\r\n        require(Farms[lpStakingPool] != Farm(address(0)), 'The given pool doesnt exist');\r\n\r\n        Farms[lpStakingPool].distribute(rewardTokenToTokenARoute, rewardTokenToTokenBRoute);\r\n        emit Distribute(lpStakingPool);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns tokens staked by the {_address} for the given {lpPair}.\r\n     * @param _address - The address to check stakes for.\r\n     * @param lpStakingPool - LP pool to check stakes in.\r\n\r\n     * @return stakeLP - Total user stake(in LP tokens).\r\n     * @return stakeA - Token A stake.\r\n     * @return stakeB - Token B stake.\r\n     */\r\n    function userStake(address _address, address lpStakingPool) external view returns (uint256 stakeLP, uint256 stakeA, uint256 stakeB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            stakeLP =  Farms[lpStakingPool].userBalance(_address);\r\n            (stakeA, stakeB) = getTokenStake(lpStakingPool, stakeLP);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n\r\n     * @return totalDepositsLP - Total deposits (in LP tokens).\r\n     * @return totalDepositsA - Token A deposits.\r\n     * @return totalDepositsB - Token B deposits.\r\n     */  \r\n    function totalDeposits(address lpStakingPool) external view returns (uint256 totalDepositsLP, uint256 totalDepositsA, uint256 totalDepositsB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            totalDepositsLP = Farms[lpStakingPool].getTotalDeposits();\r\n            (totalDepositsA, totalDepositsB) = getTokenStake(lpStakingPool, totalDepositsLP);\r\n        }\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return lpPools.length;\r\n    }\r\n\r\n    function transferDistributor(address newDistributor) external onlyOwner {\r\n        distributor = newDistributor;\r\n        emit DistributorChanged(newDistributor);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public override onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n        UpgradeableBeacon(farmBeacon).transferOwnership(newOwner);\r\n    }\r\n\r\n    function renounceOwnership() public override onlyOwner {\r\n        _transferOwnership(address(0));\r\n        UpgradeableBeacon(farmBeacon).renounceOwnership();\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n     * @param amountLP - Amount of LP tokens to convert.\r\n\r\n     * @return amountA - Token A amount.\r\n     * @return amountB - Token B amount.\r\n     */ \r\n    function getTokenStake(address lpStakingPool, uint256 amountLP) internal view returns (uint256 amountA, uint256 amountB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            address lpPair = Farms[lpStakingPool].lpPair();\r\n            uint256 totalSupply = IERC20(lpPair).totalSupply();\r\n            uint256 totalTokenAAmount = IERC20(Farms[lpStakingPool].tokenA()).balanceOf(lpPair);\r\n            amountA = amountLP.mul(totalTokenAAmount).div(totalSupply);\r\n\r\n            uint256 totalTokenBAmount = IERC20(Farms[lpStakingPool].tokenB()).balanceOf(lpPair);\r\n            amountB = amountLP.mul(totalTokenBAmount).div(totalSupply);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Deploys new Farm contract and calls initialize on it.\r\n     */\r\n    function createFarm(address lpStakingPool) internal returns (address) {\r\n        BeaconProxy proxy = new BeaconProxy(\r\n            farmBeacon,\r\n            abi.encodeWithSelector(\r\n                Farm(address(0)).initialize.selector,\r\n                lpStakingPool\r\n            )\r\n        );\r\n        emit FarmDeployed(address(proxy));\r\n        return address(proxy);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-branch\\contracts\\QuickswapFarmFactoryBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/QuickswapFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        2069
      ],
      "AddressUpgradeable": [
        853
      ],
      "BeaconProxy": [
        1483
      ],
      "Context": [
        2091
      ],
      "ContextUpgradeable": [
        895
      ],
      "ERC1967Upgrade": [
        1349
      ],
      "Farm": [
        7763
      ],
      "IBeacon": [
        1493
      ],
      "IERC20": [
        1772
      ],
      "IERC20Upgradeable": [
        386
      ],
      "IUniswapV2Pair": [
        9313
      ],
      "Initializable": [
        197
      ],
      "Ownable": [
        1000
      ],
      "OwnableUpgradeable": [
        123
      ],
      "PausableUpgradeable": [
        308
      ],
      "Proxy": [
        1401
      ],
      "QuickswapFarmFactoryBeacon": [
        4432
      ],
      "SafeERC20Upgradeable": [
        610
      ],
      "SafeMath": [
        2463
      ],
      "StorageSlot": [
        2151
      ],
      "UpgradeableBeacon": [
        1568
      ]
    },
    "id": 4433,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3743,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "id": 3744,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:22"
      },
      {
        "absolutePath": "project:/contracts/farms/QuickswapFarmUpgradeable.sol",
        "file": "./farms/QuickswapFarmUpgradeable.sol",
        "id": 3752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4433,
        "sourceUnit": 7764,
        "src": "95:176:22",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3745,
              "name": "QuickswapFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:24:22",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3746,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "137:8:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3747,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "147:6:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3748,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "155:17:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3749,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "174:20:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3750,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "196:14:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3751,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "212:13:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 3753,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4433,
        "sourceUnit": 1569,
        "src": "275:68:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 3754,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4433,
        "sourceUnit": 1484,
        "src": "345:62:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 3755,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4433,
        "sourceUnit": 309,
        "src": "409:78:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 3756,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4433,
        "sourceUnit": 124,
        "src": "489:75:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3757,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 197,
              "src": "607:13:22"
            },
            "id": 3758,
            "nodeType": "InheritanceSpecifier",
            "src": "607:13:22"
          },
          {
            "baseName": {
              "id": 3759,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 308,
              "src": "622:19:22"
            },
            "id": 3760,
            "nodeType": "InheritanceSpecifier",
            "src": "622:19:22"
          },
          {
            "baseName": {
              "id": 3761,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 123,
              "src": "643:18:22"
            },
            "id": 3762,
            "nodeType": "InheritanceSpecifier",
            "src": "643:18:22"
          }
        ],
        "canonicalName": "QuickswapFarmFactoryBeacon",
        "contractDependencies": [
          1483,
          1568,
          7763
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4432,
        "linearizedBaseContracts": [
          4432,
          123,
          308,
          895,
          197
        ],
        "name": "QuickswapFarmFactoryBeacon",
        "nameLocation": "577:26:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3765,
            "libraryName": {
              "id": 3763,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2463,
              "src": "674:8:22"
            },
            "nodeType": "UsingForDirective",
            "src": "668:27:22",
            "typeName": {
              "id": 3764,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "687:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3769,
            "libraryName": {
              "id": 3766,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 610,
              "src": "708:20:22"
            },
            "nodeType": "UsingForDirective",
            "src": "702:49:22",
            "typeName": {
              "id": 3768,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3767,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 386,
                "src": "733:17:22"
              },
              "referencedDeclaration": 386,
              "src": "733:17:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 3770,
              "nodeType": "StructuredDocumentation",
              "src": "759:311:22",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n distributor - Address authorized to make distributions.\n Farms - links {lpPools} to the deployed Farm contract.\n lpPools - list of pools that have corresponding deployed Farm contract."
            },
            "functionSelector": "d95a4d93",
            "id": 3772,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "1091:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 4432,
            "src": "1076:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3771,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1076:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 3774,
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1125:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 4432,
            "src": "1110:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3773,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1110:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 3779,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "1175:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 4432,
            "src": "1143:37:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
            },
            "typeName": {
              "id": 3778,
              "keyType": {
                "id": 3775,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1151:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1143:24:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
              },
              "valueType": {
                "id": 3777,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3776,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7763,
                  "src": "1162:4:22"
                },
                "referencedDeclaration": 7763,
                "src": "1162:4:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                  "typeString": "contract QuickswapFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 3782,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "1204:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 4432,
            "src": "1187:24:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3780,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1187:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3781,
              "nodeType": "ArrayTypeName",
              "src": "1187:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3786,
            "name": "FarmDeployed",
            "nameLocation": "1226:12:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3784,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "1255:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3786,
                  "src": "1239:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1238:29:22"
            },
            "src": "1220:48:22"
          },
          {
            "anonymous": false,
            "id": 3794,
            "name": "Deposit",
            "nameLocation": "1280:7:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3788,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1304:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3794,
                  "src": "1288:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3790,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1328:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3794,
                  "src": "1312:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1344:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3794,
                  "src": "1336:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:64:22"
            },
            "src": "1274:78:22"
          },
          {
            "anonymous": false,
            "id": 3802,
            "name": "Withdraw",
            "nameLocation": "1364:8:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3796,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1389:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3802,
                  "src": "1373:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3798,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1413:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3802,
                  "src": "1397:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3800,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1429:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3802,
                  "src": "1421:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:64:22"
            },
            "src": "1358:79:22"
          },
          {
            "anonymous": false,
            "id": 3806,
            "name": "Distribute",
            "nameLocation": "1449:10:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3804,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1476:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "1460:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1459:24:22"
            },
            "src": "1443:41:22"
          },
          {
            "anonymous": false,
            "id": 3810,
            "name": "DistributorChanged",
            "nameLocation": "1496:18:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3808,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "1531:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3810,
                  "src": "1515:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:32:22"
            },
            "src": "1490:57:22"
          },
          {
            "body": {
              "id": 3821,
              "nodeType": "Block",
              "src": "1581:96:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3813,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1600:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1600:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3815,
                          "name": "distributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3774,
                          "src": "1614:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1600:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742061206469737472696275746f72",
                        "id": 3817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1627:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f12c131d15fa266c9f1533970e76a76d7c94b16c9b22a3e71c87114164401d20",
                          "typeString": "literal_string \"Caller is not a distributor\""
                        },
                        "value": "Caller is not a distributor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f12c131d15fa266c9f1533970e76a76d7c94b16c9b22a3e71c87114164401d20",
                          "typeString": "literal_string \"Caller is not a distributor\""
                        }
                      ],
                      "id": 3812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1592:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:65:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3819,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:65:22"
                },
                {
                  "id": 3820,
                  "nodeType": "PlaceholderStatement",
                  "src": "1668:1:22"
                }
              ]
            },
            "id": 3822,
            "name": "distributorOnly",
            "nameLocation": "1564:15:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:2:22"
            },
            "src": "1555:122:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3861,
              "nodeType": "Block",
              "src": "1788:254:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3829,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "1799:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1799:17:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3831,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:17:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3832,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1827:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:16:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3834,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:16:22"
                },
                {
                  "assignments": [
                    3837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3837,
                      "mutability": "mutable",
                      "name": "_farmBeacon",
                      "nameLocation": "1872:11:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3861,
                      "src": "1854:29:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                        "typeString": "contract UpgradeableBeacon"
                      },
                      "typeName": {
                        "id": 3836,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3835,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1568,
                          "src": "1854:17:22"
                        },
                        "referencedDeclaration": 1568,
                        "src": "1854:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3849,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1930:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                "typeString": "function () returns (contract QuickswapFarmUpgradeable)"
                              },
                              "typeName": {
                                "id": 3844,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3843,
                                  "name": "Farm",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 7763,
                                  "src": "1934:4:22"
                                },
                                "referencedDeclaration": 7763,
                                "src": "1934:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                  "typeString": "contract QuickswapFarmUpgradeable"
                                }
                              }
                            },
                            "id": 3846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1930:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                              "typeString": "contract QuickswapFarmUpgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                              "typeString": "contract QuickswapFarmUpgradeable"
                            }
                          ],
                          "id": 3842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1922:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1922:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1922:19:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1886:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1568_$",
                        "typeString": "function (address) returns (contract UpgradeableBeacon)"
                      },
                      "typeName": {
                        "id": 3839,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3838,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1568,
                          "src": "1890:17:22"
                        },
                        "referencedDeclaration": 1568,
                        "src": "1890:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      }
                    },
                    "id": 3848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:66:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                      "typeString": "contract UpgradeableBeacon"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1854:98:22"
                },
                {
                  "expression": {
                    "id": 3855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3850,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3772,
                      "src": "1963:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3853,
                          "name": "_farmBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3837,
                          "src": "1984:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 3852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1976:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3851,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1976:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1976:20:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1963:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3856,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:33:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3858,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3824,
                        "src": "2025:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3857,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4264
                      ],
                      "referencedDeclaration": 4264,
                      "src": "2007:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2007:27:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3860,
                  "nodeType": "ExpressionStatement",
                  "src": "2007:27:22"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 3862,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3827,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3826,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "1776:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1776:11:22"
              }
            ],
            "name": "initialize",
            "nameLocation": "1738:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1757:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3862,
                  "src": "1749:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1748:18:22"
            },
            "returnParameters": {
              "id": 3828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:0:22"
            },
            "scope": 4432,
            "src": "1729:313:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4023,
              "nodeType": "Block",
              "src": "2913:1018:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 3893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3884,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "2927:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 3886,
                      "indexExpression": {
                        "id": 3885,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3871,
                        "src": "2933:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2927:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2964:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2956:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3888,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2956:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2956:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3887,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7763,
                        "src": "2951:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 3892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2951:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "2927:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3911,
                  "nodeType": "IfStatement",
                  "src": "2924:167:22",
                  "trueBody": {
                    "id": 3910,
                    "nodeType": "Block",
                    "src": "2968:123:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3894,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3779,
                              "src": "2983:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                              }
                            },
                            "id": 3896,
                            "indexExpression": {
                              "id": 3895,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3871,
                              "src": "2989:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2983:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                              "typeString": "contract QuickswapFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3899,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3871,
                                    "src": "3022:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3898,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4431,
                                  "src": "3011:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 3900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3011:25:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3897,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7763,
                              "src": "3006:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                "typeString": "type(contract QuickswapFarmUpgradeable)"
                              }
                            },
                            "id": 3901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3006:31:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                              "typeString": "contract QuickswapFarmUpgradeable"
                            }
                          },
                          "src": "2983:54:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "id": 3903,
                        "nodeType": "ExpressionStatement",
                        "src": "2983:54:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3907,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3871,
                              "src": "3065:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3904,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3782,
                              "src": "3052:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3052:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:27:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3909,
                        "nodeType": "ExpressionStatement",
                        "src": "3052:27:22"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3912,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3865,
                      "src": "3106:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3116:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3106:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3941,
                  "nodeType": "IfStatement",
                  "src": "3103:207:22",
                  "trueBody": {
                    "id": 3940,
                    "nodeType": "Block",
                    "src": "3118:192:22",
                    "statements": [
                      {
                        "assignments": [
                          3917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3917,
                            "mutability": "mutable",
                            "name": "tokenA",
                            "nameLocation": "3151:6:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3940,
                            "src": "3133:24:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3916,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3915,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 386,
                                "src": "3133:17:22"
                              },
                              "referencedDeclaration": 386,
                              "src": "3133:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3925,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3919,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3779,
                                    "src": "3178:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3921,
                                  "indexExpression": {
                                    "id": 3920,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3871,
                                    "src": "3184:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3178:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                },
                                "id": 3922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7113,
                                "src": "3178:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3178:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3918,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "3160:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3160:48:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3133:75:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3929,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3247:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3247:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3933,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3779,
                                    "src": "3267:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3935,
                                  "indexExpression": {
                                    "id": 3934,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3871,
                                    "src": "3273:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3267:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                ],
                                "id": 3932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3259:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3931,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3259:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3259:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3937,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3865,
                              "src": "3290:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3926,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3917,
                              "src": "3223:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3223:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3223:75:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3939,
                        "nodeType": "ExpressionStatement",
                        "src": "3223:75:22"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3942,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3867,
                      "src": "3323:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3333:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3323:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3971,
                  "nodeType": "IfStatement",
                  "src": "3320:207:22",
                  "trueBody": {
                    "id": 3970,
                    "nodeType": "Block",
                    "src": "3335:192:22",
                    "statements": [
                      {
                        "assignments": [
                          3947
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3947,
                            "mutability": "mutable",
                            "name": "tokenB",
                            "nameLocation": "3368:6:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3970,
                            "src": "3350:24:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3946,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3945,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 386,
                                "src": "3350:17:22"
                              },
                              "referencedDeclaration": 386,
                              "src": "3350:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3955,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3949,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3779,
                                    "src": "3395:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3951,
                                  "indexExpression": {
                                    "id": 3950,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3871,
                                    "src": "3401:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3395:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                },
                                "id": 3952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenB",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7115,
                                "src": "3395:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3395:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3948,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "3377:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3377:48:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3350:75:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3959,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3464:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3464:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3963,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3779,
                                    "src": "3484:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3965,
                                  "indexExpression": {
                                    "id": 3964,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3871,
                                    "src": "3490:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3484:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                ],
                                "id": 3962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3476:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3961,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3476:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3476:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3967,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3867,
                              "src": "3507:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3956,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3947,
                              "src": "3440:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3440:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3440:75:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3969,
                        "nodeType": "ExpressionStatement",
                        "src": "3440:75:22"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3972,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3869,
                      "src": "3540:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3551:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3540:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4001,
                  "nodeType": "IfStatement",
                  "src": "3537:210:22",
                  "trueBody": {
                    "id": 4000,
                    "nodeType": "Block",
                    "src": "3553:194:22",
                    "statements": [
                      {
                        "assignments": [
                          3977
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3977,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "3586:6:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 4000,
                            "src": "3568:24:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3976,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3975,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 386,
                                "src": "3568:17:22"
                              },
                              "referencedDeclaration": 386,
                              "src": "3568:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3985,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3979,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3779,
                                    "src": "3613:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3981,
                                  "indexExpression": {
                                    "id": 3980,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3871,
                                    "src": "3619:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3613:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                },
                                "id": 3982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lpPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7111,
                                "src": "3613:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3613:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3978,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "3595:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3595:48:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3568:75:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3989,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3683:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3683:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3993,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3779,
                                    "src": "3703:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3995,
                                  "indexExpression": {
                                    "id": 3994,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3871,
                                    "src": "3709:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3703:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                ],
                                "id": 3992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3695:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3991,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3695:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3695:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3997,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3869,
                              "src": "3726:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3986,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3977,
                              "src": "3659:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3659:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3659:76:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3999,
                        "nodeType": "ExpressionStatement",
                        "src": "3659:76:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 4002,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3878,
                          "src": "3767:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4003,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3880,
                          "src": "3774:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4004,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3882,
                          "src": "3781:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4005,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3766:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4010,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3865,
                          "src": "3823:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4011,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3867,
                          "src": "3832:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4012,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3869,
                          "src": "3841:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4013,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3873,
                          "src": "3851:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 4006,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3779,
                            "src": "3794:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4008,
                          "indexExpression": {
                            "id": 4007,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3871,
                            "src": "3800:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3794:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "id": 4009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7368,
                        "src": "3794:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 4014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3794:67:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3766:95:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4016,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:95:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4018,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3873,
                        "src": "3886:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4019,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3871,
                        "src": "3897:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4020,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3882,
                        "src": "3912:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4017,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3794,
                      "src": "3878:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3878:44:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4022,
                  "nodeType": "EmitStatement",
                  "src": "3873:49:22"
                }
              ]
            },
            "documentation": {
              "id": 3863,
              "nodeType": "StructuredDocumentation",
              "src": "2050:667:22",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpStakingPool - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 4024,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3876,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3875,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "2843:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2843:13:22"
              }
            ],
            "name": "deposit",
            "nameLocation": "2732:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3865,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2748:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2740:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3867,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2765:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2757:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3869,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2782:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2774:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3871,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "2800:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2792:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3873,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2823:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2815:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2739:94:22"
            },
            "returnParameters": {
              "id": 3883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3878,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2873:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2865:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3880,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2888:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2880:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3882,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2903:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4024,
                  "src": "2895:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2864:49:22"
            },
            "scope": 4432,
            "src": "2723:1208:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4078,
              "nodeType": "Block",
              "src": "4616:265:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        },
                        "id": 4052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4043,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3779,
                            "src": "4635:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4045,
                          "indexExpression": {
                            "id": 4044,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4027,
                            "src": "4641:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4635:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4672:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4664:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4047,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4664:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4664:10:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4046,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7763,
                            "src": "4659:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                              "typeString": "type(contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4659:16:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "src": "4635:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 4053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4677:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 4042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4627:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4055,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:80:22"
                },
                {
                  "expression": {
                    "id": 4069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 4056,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4038,
                          "src": "4719:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4057,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4040,
                          "src": "4728:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4058,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4718:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 4063,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4769:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4769:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4065,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4029,
                          "src": "4781:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4066,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4031,
                          "src": "4789:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 4067,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4033,
                          "src": "4801:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 4059,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3779,
                            "src": "4739:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4061,
                          "indexExpression": {
                            "id": 4060,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4027,
                            "src": "4745:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4739:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "id": 4062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7455,
                        "src": "4739:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 4068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4739:72:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4718:93:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4070,
                  "nodeType": "ExpressionStatement",
                  "src": "4718:93:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4837:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4837:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4074,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "4849:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4075,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4029,
                        "src": "4864:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4071,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3802,
                      "src": "4828:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:43:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4077,
                  "nodeType": "EmitStatement",
                  "src": "4823:48:22"
                }
              ]
            },
            "documentation": {
              "id": 4025,
              "nodeType": "StructuredDocumentation",
              "src": "3939:513:22",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpStakingPool - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 4079,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4036,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4035,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "4561:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "4561:13:22"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4468:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4027,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "4485:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "4477:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4029,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4508:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "4500:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4500:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4031,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "4521:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "4516:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4030,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4516:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4033,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4541:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "4533:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4533:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4476:75:22"
            },
            "returnParameters": {
              "id": 4041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4038,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4591:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "4583:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4583:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4040,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4608:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "4600:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4582:34:22"
            },
            "scope": 4432,
            "src": "4459:422:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4121,
              "nodeType": "Block",
              "src": "5439:236:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        },
                        "id": 4105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4096,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3779,
                            "src": "5458:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4098,
                          "indexExpression": {
                            "id": 4097,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4082,
                            "src": "5464:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5458:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5495:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5487:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4100,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5487:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5487:10:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4099,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7763,
                            "src": "5482:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                              "typeString": "type(contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5482:16:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "src": "5458:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 4106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5500:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 4095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5450:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5450:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4108,
                  "nodeType": "ExpressionStatement",
                  "src": "5450:80:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4113,
                        "name": "rewardTokenToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4085,
                        "src": "5575:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4114,
                        "name": "rewardTokenToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4088,
                        "src": "5601:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 4109,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "5543:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                            "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                          }
                        },
                        "id": 4111,
                        "indexExpression": {
                          "id": 4110,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4082,
                          "src": "5549:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5543:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        }
                      },
                      "id": 4112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7696,
                      "src": "5543:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,address[] memory) external"
                      }
                    },
                    "id": 4115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5543:83:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4116,
                  "nodeType": "ExpressionStatement",
                  "src": "5543:83:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4118,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4082,
                        "src": "5653:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4117,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3806,
                      "src": "5642:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5642:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4120,
                  "nodeType": "EmitStatement",
                  "src": "5637:30:22"
                }
              ]
            },
            "documentation": {
              "id": 4080,
              "nodeType": "StructuredDocumentation",
              "src": "4889:336:22",
              "text": " @dev Distributes tokens between users.\n @param lpStakingPool - LP pool to distribute tokens in.\n @param rewardTokenToTokenARoute An array of token addresses.\n @param rewardTokenToTokenBRoute An array of token addresses.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "33b10b3c",
            "id": 4122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4091,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4090,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3822,
                  "src": "5409:15:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5409:15:22"
              },
              {
                "id": 4093,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4092,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "5425:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5425:13:22"
              }
            ],
            "name": "distribute",
            "nameLocation": "5241:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4082,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5270:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4122,
                  "src": "5262:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5262:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4085,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenARoute",
                  "nameLocation": "5313:24:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4122,
                  "src": "5294:43:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4083,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5294:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4084,
                    "nodeType": "ArrayTypeName",
                    "src": "5294:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4088,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenBRoute",
                  "nameLocation": "5368:24:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4122,
                  "src": "5349:43:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4086,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5349:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4087,
                    "nodeType": "ArrayTypeName",
                    "src": "5349:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5251:148:22"
            },
            "returnParameters": {
              "id": 4094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5439:0:22"
            },
            "scope": 4432,
            "src": "5232:443:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4166,
              "nodeType": "Block",
              "src": "6168:215:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 4145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4136,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "6183:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4138,
                      "indexExpression": {
                        "id": 4137,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4127,
                        "src": "6189:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6183:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6220:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6212:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6212:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6212:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4139,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7763,
                        "src": "6207:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6207:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "6183:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4165,
                  "nodeType": "IfStatement",
                  "src": "6179:197:22",
                  "trueBody": {
                    "id": 4164,
                    "nodeType": "Block",
                    "src": "6225:151:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 4153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4146,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4130,
                            "src": "6240:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4151,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4125,
                                "src": "6284:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 4147,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3779,
                                  "src": "6251:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                    "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4149,
                                "indexExpression": {
                                  "id": 4148,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4127,
                                  "src": "6257:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6251:20:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                  "typeString": "contract QuickswapFarmUpgradeable"
                                }
                              },
                              "id": 4150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7732,
                              "src": "6251:32:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 4152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6251:42:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6240:53:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4154,
                        "nodeType": "ExpressionStatement",
                        "src": "6240:53:22"
                      },
                      {
                        "expression": {
                          "id": 4162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4155,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4132,
                                "src": "6309:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4156,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4134,
                                "src": "6317:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4157,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6308:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4159,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4127,
                                "src": "6341:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4160,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4130,
                                "src": "6356:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4158,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4389,
                              "src": "6327:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6327:37:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6308:56:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4163,
                        "nodeType": "ExpressionStatement",
                        "src": "6308:56:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4123,
              "nodeType": "StructuredDocumentation",
              "src": "5683:347:22",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpStakingPool - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 4167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "6045:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4125,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6063:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4167,
                  "src": "6055:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6055:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4127,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6081:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4167,
                  "src": "6073:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6073:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6054:41:22"
            },
            "returnParameters": {
              "id": 4135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4130,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "6127:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4167,
                  "src": "6119:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6119:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4132,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "6144:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4167,
                  "src": "6136:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6136:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4134,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "6160:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4167,
                  "src": "6152:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6152:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6118:49:22"
            },
            "scope": 4432,
            "src": "6036:347:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4208,
              "nodeType": "Block",
              "src": "6886:243:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 4188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4179,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "6901:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4181,
                      "indexExpression": {
                        "id": 4180,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4170,
                        "src": "6907:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6901:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6938:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6930:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6930:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6930:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4182,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7763,
                        "src": "6925:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6925:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "6901:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4207,
                  "nodeType": "IfStatement",
                  "src": "6897:225:22",
                  "trueBody": {
                    "id": 4206,
                    "nodeType": "Block",
                    "src": "6943:179:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 4195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4189,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4173,
                            "src": "6958:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 4190,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3779,
                                  "src": "6976:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                    "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4192,
                                "indexExpression": {
                                  "id": 4191,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4170,
                                  "src": "6982:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6976:20:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                  "typeString": "contract QuickswapFarmUpgradeable"
                                }
                              },
                              "id": 4193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTotalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7753,
                              "src": "6976:37:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 4194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6976:39:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6958:57:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4196,
                        "nodeType": "ExpressionStatement",
                        "src": "6958:57:22"
                      },
                      {
                        "expression": {
                          "id": 4204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4197,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4175,
                                "src": "7031:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4198,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4177,
                                "src": "7047:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4199,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7030:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4201,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4170,
                                "src": "7079:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4202,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4173,
                                "src": "7094:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4200,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4389,
                              "src": "7065:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7065:45:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "7030:80:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4205,
                        "nodeType": "ExpressionStatement",
                        "src": "7030:80:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4168,
              "nodeType": "StructuredDocumentation",
              "src": "6391:345:22",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpStakingPool - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 4209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "6753:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4170,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6775:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4209,
                  "src": "6767:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6767:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6766:23:22"
            },
            "returnParameters": {
              "id": 4178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4173,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "6821:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4209,
                  "src": "6813:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6813:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4175,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "6846:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4209,
                  "src": "6838:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6838:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4177,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "6870:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4209,
                  "src": "6862:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6812:73:22"
            },
            "scope": 4432,
            "src": "6744:385:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4217,
              "nodeType": "Block",
              "src": "7191:40:22",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4214,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3782,
                      "src": "7209:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7209:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4213,
                  "id": 4216,
                  "nodeType": "Return",
                  "src": "7202:21:22"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 4218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "7146:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7156:2:22"
            },
            "returnParameters": {
              "id": 4213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4218,
                  "src": "7182:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7182:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7181:9:22"
            },
            "scope": 4432,
            "src": "7137:94:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4233,
              "nodeType": "Block",
              "src": "7311:97:22",
              "statements": [
                {
                  "expression": {
                    "id": 4227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4225,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3774,
                      "src": "7322:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4226,
                      "name": "newDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "7336:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7322:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4228,
                  "nodeType": "ExpressionStatement",
                  "src": "7322:28:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4230,
                        "name": "newDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4220,
                        "src": "7385:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4229,
                      "name": "DistributorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3810,
                      "src": "7366:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7366:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4232,
                  "nodeType": "EmitStatement",
                  "src": "7361:39:22"
                }
              ]
            },
            "functionSelector": "e2332908",
            "id": 4234,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4222,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7301:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7301:9:22"
              }
            ],
            "name": "transferDistributor",
            "nameLocation": "7248:19:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4220,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "7276:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4234,
                  "src": "7268:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7268:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7267:24:22"
            },
            "returnParameters": {
              "id": 4224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7311:0:22"
            },
            "scope": 4432,
            "src": "7239:169:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              97
            ],
            "body": {
              "id": 4263,
              "nodeType": "Block",
              "src": "7487:199:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4243,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4236,
                          "src": "7506:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7526:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7518:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7518:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7518:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7506:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 4249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7530:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 4242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7498:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7498:73:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4251,
                  "nodeType": "ExpressionStatement",
                  "src": "7498:73:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4253,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4236,
                        "src": "7601:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4252,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "7582:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7582:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4255,
                  "nodeType": "ExpressionStatement",
                  "src": "7582:28:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4260,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4236,
                        "src": "7669:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4257,
                            "name": "farmBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3772,
                            "src": "7639:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4256,
                          "name": "UpgradeableBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "7621:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UpgradeableBeacon_$1568_$",
                            "typeString": "type(contract UpgradeableBeacon)"
                          }
                        },
                        "id": 4258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7621:29:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 4259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 979,
                      "src": "7621:47:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7621:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4262,
                  "nodeType": "ExpressionStatement",
                  "src": "7621:57:22"
                }
              ]
            },
            "functionSelector": "f2fde38b",
            "id": 4264,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4239,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7477:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7477:9:22"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "7425:17:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4238,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7468:8:22"
            },
            "parameters": {
              "id": 4237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4236,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "7451:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4264,
                  "src": "7443:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7443:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7442:18:22"
            },
            "returnParameters": {
              "id": 4241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7487:0:22"
            },
            "scope": 4432,
            "src": "7416:270:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              74
            ],
            "body": {
              "id": 4283,
              "nodeType": "Block",
              "src": "7749:109:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7787:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7779:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7779:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7779:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4270,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "7760:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7760:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4276,
                  "nodeType": "ExpressionStatement",
                  "src": "7760:30:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4278,
                            "name": "farmBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3772,
                            "src": "7819:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4277,
                          "name": "UpgradeableBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "7801:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UpgradeableBeacon_$1568_$",
                            "typeString": "type(contract UpgradeableBeacon)"
                          }
                        },
                        "id": 4279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7801:29:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 4280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 956,
                      "src": "7801:47:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7801:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4282,
                  "nodeType": "ExpressionStatement",
                  "src": "7801:49:22"
                }
              ]
            },
            "functionSelector": "715018a6",
            "id": 4284,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4268,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4267,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7739:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7739:9:22"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "7703:17:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4266,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7730:8:22"
            },
            "parameters": {
              "id": 4265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7720:2:22"
            },
            "returnParameters": {
              "id": 4269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7749:0:22"
            },
            "scope": 4432,
            "src": "7694:164:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4292,
              "nodeType": "Block",
              "src": "7902:27:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4289,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "7913:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7913:8:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4291,
                  "nodeType": "ExpressionStatement",
                  "src": "7913:8:22"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 4293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4286,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7892:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7892:9:22"
              }
            ],
            "name": "pause",
            "nameLocation": "7875:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7880:2:22"
            },
            "returnParameters": {
              "id": 4288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7902:0:22"
            },
            "scope": 4432,
            "src": "7866:63:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4301,
              "nodeType": "Block",
              "src": "7975:29:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4298,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "7986:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7986:10:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4300,
                  "nodeType": "ExpressionStatement",
                  "src": "7986:10:22"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 4302,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4296,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4295,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7965:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7965:9:22"
              }
            ],
            "name": "unpause",
            "nameLocation": "7946:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7953:2:22"
            },
            "returnParameters": {
              "id": 4297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7975:0:22"
            },
            "scope": 4432,
            "src": "7937:67:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4388,
              "nodeType": "Block",
              "src": "8462:546:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 4323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4314,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "8477:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4316,
                      "indexExpression": {
                        "id": 4315,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4305,
                        "src": "8483:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8477:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8514:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8506:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4318,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8506:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8506:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4317,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7763,
                        "src": "8501:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8501:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "8477:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4387,
                  "nodeType": "IfStatement",
                  "src": "8473:528:22",
                  "trueBody": {
                    "id": 4386,
                    "nodeType": "Block",
                    "src": "8519:482:22",
                    "statements": [
                      {
                        "assignments": [
                          4325
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4325,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "8542:6:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 4386,
                            "src": "8534:14:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4324,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8534:7:22",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4331,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 4326,
                                "name": "Farms",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3779,
                                "src": "8551:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                  "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                }
                              },
                              "id": 4328,
                              "indexExpression": {
                                "id": 4327,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4305,
                                "src": "8557:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8551:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                "typeString": "contract QuickswapFarmUpgradeable"
                              }
                            },
                            "id": 4329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7111,
                            "src": "8551:27:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 4330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8551:29:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8534:46:22"
                      },
                      {
                        "assignments": [
                          4333
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4333,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "8603:11:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 4386,
                            "src": "8595:19:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4332,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8595:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4339,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4335,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4325,
                                  "src": "8624:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4334,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1772,
                                "src": "8617:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8617:14:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1772",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1703,
                            "src": "8617:26:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 4338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8617:28:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8595:50:22"
                      },
                      {
                        "assignments": [
                          4341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4341,
                            "mutability": "mutable",
                            "name": "totalTokenAAmount",
                            "nameLocation": "8668:17:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 4386,
                            "src": "8660:25:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4340,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8660:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4352,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4350,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4325,
                              "src": "8736:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 4343,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3779,
                                        "src": "8695:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 4345,
                                      "indexExpression": {
                                        "id": 4344,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4305,
                                        "src": "8701:13:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8695:20:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                        "typeString": "contract QuickswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 4346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7113,
                                    "src": "8695:27:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 4347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8695:29:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4342,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1772,
                                "src": "8688:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8688:37:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1772",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1711,
                            "src": "8688:47:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8688:55:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8660:83:22"
                      },
                      {
                        "expression": {
                          "id": 4361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4353,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4310,
                            "src": "8758:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4359,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4333,
                                "src": "8804:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4356,
                                    "name": "totalTokenAAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4341,
                                    "src": "8781:17:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4354,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4307,
                                    "src": "8768:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2357,
                                  "src": "8768:12:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8768:31:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2372,
                              "src": "8768:35:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8768:48:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8758:58:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4362,
                        "nodeType": "ExpressionStatement",
                        "src": "8758:58:22"
                      },
                      {
                        "assignments": [
                          4364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4364,
                            "mutability": "mutable",
                            "name": "totalTokenBAmount",
                            "nameLocation": "8841:17:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 4386,
                            "src": "8833:25:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4363,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8833:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4375,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4373,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4325,
                              "src": "8909:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 4366,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3779,
                                        "src": "8868:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 4368,
                                      "indexExpression": {
                                        "id": 4367,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4305,
                                        "src": "8874:13:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8868:20:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                        "typeString": "contract QuickswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 4369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7115,
                                    "src": "8868:27:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 4370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8868:29:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4365,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1772,
                                "src": "8861:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8861:37:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1772",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1711,
                            "src": "8861:47:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8861:55:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8833:83:22"
                      },
                      {
                        "expression": {
                          "id": 4384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4376,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4312,
                            "src": "8931:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4382,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4333,
                                "src": "8977:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4379,
                                    "name": "totalTokenBAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4364,
                                    "src": "8954:17:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4377,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4307,
                                    "src": "8941:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2357,
                                  "src": "8941:12:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8941:31:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2372,
                              "src": "8941:35:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8941:48:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8931:58:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4385,
                        "nodeType": "ExpressionStatement",
                        "src": "8931:58:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4303,
              "nodeType": "StructuredDocumentation",
              "src": "8012:322:22",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpStakingPool - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 4389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "8350:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4305,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "8372:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4389,
                  "src": "8364:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8364:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4307,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "8395:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4389,
                  "src": "8387:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8387:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8363:41:22"
            },
            "returnParameters": {
              "id": 4313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4310,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "8436:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4389,
                  "src": "8428:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8428:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4312,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "8453:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4389,
                  "src": "8445:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8445:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8427:34:22"
            },
            "scope": 4432,
            "src": "8341:667:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4430,
              "nodeType": "Block",
              "src": "9175:305:22",
              "statements": [
                {
                  "assignments": [
                    4399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4399,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "9198:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 4430,
                      "src": "9186:17:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 4398,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4397,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "9186:11:22"
                        },
                        "referencedDeclaration": 1483,
                        "src": "9186:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4417,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4403,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3772,
                        "src": "9236:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4409,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9315:1:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4408,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9307:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 4407,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9307:7:22",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9307:10:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4406,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7763,
                                  "src": "9302:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$7763_$",
                                    "typeString": "type(contract QuickswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9302:16:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$7763",
                                  "typeString": "contract QuickswapFarmUpgradeable"
                                }
                              },
                              "id": 4412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7249,
                              "src": "9302:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 4413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9302:36:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 4414,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4392,
                            "src": "9357:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4404,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "9261:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9261:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 4415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9261:124:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9206:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1483_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 4401,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4400,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "9210:11:22"
                        },
                        "referencedDeclaration": 1483,
                        "src": "9210:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 4416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9206:190:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9186:210:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4421,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4399,
                            "src": "9433:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 4420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9425:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4419,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9425:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9425:14:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4418,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3786,
                      "src": "9412:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9412:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4424,
                  "nodeType": "EmitStatement",
                  "src": "9407:33:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4427,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4399,
                        "src": "9466:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 4426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9458:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4425,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9458:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9458:14:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4396,
                  "id": 4429,
                  "nodeType": "Return",
                  "src": "9451:21:22"
                }
              ]
            },
            "documentation": {
              "id": 4390,
              "nodeType": "StructuredDocumentation",
              "src": "9020:79:22",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 4431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "9114:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "9133:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4431,
                  "src": "9125:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9125:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9124:23:22"
            },
            "returnParameters": {
              "id": 4396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4431,
                  "src": "9166:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9166:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9165:9:22"
            },
            "scope": 4432,
            "src": "9105:375:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4433,
        "src": "568:8915:22",
        "usedErrors": []
      }
    ],
    "src": "33:9452:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-30T12:33:09.853Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256,address,address)": {
        "details": "Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.",
        "params": {
          "amountA": "- Token A amount to deposit.",
          "amountB": "-  Token B amount to deposit.",
          "amountLP": "- LP Token amount to deposit.",
          "lpStakingPool": "- Address of the pool to deposit tokens in.",
          "recipient": "- Address which will recieve the deposit and leftover tokens."
        },
        "returns": {
          "liquidity": "- Total liquidity sent to the farm (in lpTokens).",
          "sentA": "- Token A amount sent to the farm.",
          "sentB": "- Token B amount sent to the farm."
        }
      },
      "distribute(address,address[],address[])": {
        "details": "Distributes tokens between users.",
        "params": {
          "lpStakingPool": "- LP pool to distribute tokens in.",
          "rewardTokenToTokenARoute": "An array of token addresses.",
          "rewardTokenToTokenBRoute": "An array of token addresses. Note: This function can only be called by the distributor."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalDeposits(address)": {
        "details": "Returns total amount locked in the pool. Doesn't take pending rewards into account.",
        "params": {
          "lpStakingPool": "- LP pool to check total deposits in."
        },
        "returns": {
          "totalDepositsA": "- Token A deposits.",
          "totalDepositsB": "- Token B deposits.",
          "totalDepositsLP": "- Total deposits (in LP tokens)."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "userStake(address,address)": {
        "details": "Returns tokens staked by the {_address} for the given {lpPair}.",
        "params": {
          "_address": "- The address to check stakes for.",
          "lpStakingPool": "- LP pool to check stakes in."
        },
        "returns": {
          "stakeA": "- Token A stake.",
          "stakeB": "- Token B stake.",
          "stakeLP": "- Total user stake(in LP tokens)."
        }
      },
      "withdraw(address,uint256,bool,address)": {
        "details": "Withdraws tokens from the given pool. ",
        "params": {
          "amount": "- LP amount to withdraw. ",
          "lpStakingPool": "- LP pool to withdraw from.",
          "recipient": "- The address which will recieve tokens.",
          "withdrawLP": "- True: Withdraw in LP tokens, False: Withdraw in normal tokens."
        },
        "returns": {
          "amountA": "- Token A amount sent to the {recipient}, 0 if withdrawLP == false.",
          "amountB": "- Token B amount sent to the {recipient}, 0 if withdrawLP == false."
        }
      }
    },
    "stateVariables": {
      "farmBeacon": {
        "details": "Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - links {lpPools} to the deployed Farm contract. lpPools - list of pools that have corresponding deployed Farm contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}