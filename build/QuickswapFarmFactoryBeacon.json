{
  "contractName": "QuickswapFarmFactoryBeacon",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "DistributorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmAddress",
          "type": "address"
        }
      ],
      "name": "FarmDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Farms",
      "outputs": [
        {
          "internalType": "contract QuickswapFarmUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "upgrader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sentA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sentB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expectedReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedRewardBlock",
          "type": "uint256"
        }
      ],
      "name": "setExpectedReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenBRoute",
          "type": "address[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "userStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDepositsLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "transferDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmAddress\",\"type\":\"address\"}],\"name\":\"FarmDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Farms\",\"outputs\":[{\"internalType\":\"contract QuickswapFarmUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sentA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenBRoute\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedRewardBlock\",\"type\":\"uint256\"}],\"name\":\"setExpectedReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDepositsLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"transferDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"userStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256,address,address)\":{\"details\":\"Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\",\"params\":{\"amountA\":\"- Token A amount to deposit.\",\"amountB\":\"-  Token B amount to deposit.\",\"amountLP\":\"- LP Token amount to deposit.\",\"lpStakingPool\":\"- Address of the pool to deposit tokens in.\",\"recipient\":\"- Address which will recieve the deposit and leftover tokens.\"},\"returns\":{\"liquidity\":\"- Total liquidity sent to the farm (in lpTokens).\",\"sentA\":\"- Token A amount sent to the farm.\",\"sentB\":\"- Token B amount sent to the farm.\"}},\"distribute(address,address[],address[])\":{\"details\":\"Distributes tokens between users.\",\"params\":{\"lpStakingPool\":\"- LP pool to distribute tokens in.\",\"rewardTokenToTokenARoute\":\"An array of token addresses.\",\"rewardTokenToTokenBRoute\":\"An array of token addresses. Note: This function can only be called by the distributor.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setExpectedReward(address,uint256,uint256)\":{\"details\":\"Sets expected reward amount and block for token distribution calculations.\",\"params\":{\"expectedReward\":\"- New reward amount.\",\"expectedRewardBlock\":\"- New reward block. Note: This function can only be called by the distributor.\",\"lpStakingPool\":\"- LP pool to check total deposits in.\"}},\"totalDeposits(address)\":{\"details\":\"Returns total amount locked in the pool. Doesn't take pending rewards into account.\",\"params\":{\"lpStakingPool\":\"- LP pool to check total deposits in.\"},\"returns\":{\"totalDepositsA\":\"- Token A deposits.\",\"totalDepositsB\":\"- Token B deposits.\",\"totalDepositsLP\":\"- Total deposits (in LP tokens).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userStake(address,address)\":{\"details\":\"Returns tokens staked by the {_address} for the given {lpPair}.\",\"params\":{\"_address\":\"- The address to check stakes for.\",\"lpStakingPool\":\"- LP pool to check stakes in.\"},\"returns\":{\"stakeA\":\"- Token A stake.\",\"stakeB\":\"- Token B stake.\",\"stakeLP\":\"- Total user stake(in LP tokens).\"}},\"withdraw(address,uint256,bool,address)\":{\"details\":\"Withdraws tokens from the given pool. \",\"params\":{\"amount\":\"- LP amount to withdraw. \",\"lpStakingPool\":\"- LP pool to withdraw from.\",\"recipient\":\"- The address which will recieve tokens.\",\"withdrawLP\":\"- True: Withdraw in LP tokens, False: Withdraw in normal tokens.\"},\"returns\":{\"amountA\":\"- Token A amount sent to the {recipient}, 0 if withdrawLP == false.\",\"amountB\":\"- Token B amount sent to the {recipient}, 0 if withdrawLP == false.\"}}},\"stateVariables\":{\"farmBeacon\":{\"details\":\"Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - links {lpPools} to the deployed Farm contract. lpPools - list of pools that have corresponding deployed Farm contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/QuickswapFarmFactoryBeacon.sol\":\"QuickswapFarmFactoryBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xfd0d01e9036a03e50a71009749b9bfe7570a8f5b852ea409f794debfdd646dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f55720689d7006549fdaf3d565351e053a8156347955e1682c97afe907358c65\",\"dweb:/ipfs/QmXmr8DBkEP4xKqgRBi32SRg4WKPqfgy49j5aHSYkLvhGm\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xdfddefa47c1f11dde2c3b5533c76ccef27a526985c74d9c917deb699d5d46a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd15423cc0456b783054f974bc88f25b88c99319a2cfec4b5745acfedbbd1d88\",\"dweb:/ipfs/QmZVXupWzRDTXynYd2GLtB9CTGF9ehrqzcPhqXNVZPDCTc\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x48f7fc8c916a93d6045745daf350662fc9a57de82c5c4b42259064be4c11ef84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b10768f1c512d367d20a323a0b447e4674896319a8a90a59aeec7296f84b26b\",\"dweb:/ipfs/QmPQLzwEKLTP7UUnG6gVx5Y832tkP8vSpjajrrdXXDE2Ne\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x94f08740b99a0997bc8363edb752b38354f730a38c54eb7bdd38a8a22ff34aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e27babc1cc78d71ddfa1474f9b2cb04517ef4570fc4c41ecfa97ecf6aa25e7bf\",\"dweb:/ipfs/QmePWVAAJdWJtfgKAPJe1kRgYxorkNEFhGrAN2jLLGiFTX\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x08f7ba4d76d3b55d78ce381ce83f96486711defc7524a8048101888297686903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa5ee00837907842e1f7ae3e85424a0fed8e64fa9d1541736c999e39d27c2f56\",\"dweb:/ipfs/QmNyvN6Zur8mZSGhheNE9xZzyPGutEkwKwuraUz3TX1urD\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xe237a2794a6588efdbf8cf998283ad188ac0e32d5f3e1d7d8d286fdac82863bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fdb06bd9dc4fc5c059e9f2748d73ac06331e4a7efed604584e02b3e3501aaaa\",\"dweb:/ipfs/QmaZ33qA3ahXjmo8Q6M9rayAbrkDgH8eAimfpZ2Drr2txW\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d874c66c21369dce8d3fe0b6c41316b0c289e45c0b4a77090c010ac2bb80e61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c0d714529b6514f623c6d023ab0594ee0801da8afd5ee8167c323da6f0979a\",\"dweb:/ipfs/QmTmhKaXGfu5MGKaz1Pcjrh9xWbkNtzFeok4PxaKREdf9X\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/QuickswapFarmFactoryBeacon.sol\":{\"keccak256\":\"0xca5caf7f32dd8daf7d3845b2efa5045054c59de04f03cbe4a0d735de887dfc68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991002b4ea828b0bc2865638b8f4eae3db7227d9908d2b0223d77d8dd44a3711\",\"dweb:/ipfs/QmXMnMcGBsTFvp1ZULg3azR2pi1XCCV1MfQJWfxPd4zCao\"]},\"project:/contracts/farms/QuickswapFarmUpgradeable.sol\":{\"keccak256\":\"0xe13fd4fd96ad5f69f00c837ef2aecb4d3cb5a2ebcead76ddbea2364685695d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba818909083dfc5193f362a87cba7b06e2e36081f8b83541ee15b2014389b08\",\"dweb:/ipfs/Qmb9um9TcJZyiV8Tt7oV58HvTcJzWXKxjCCoFTx9MX6EFC\"]},\"project:/contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0x826b3660926458af9eafc9c71b14866dc40b0410df7e1f96034cbdbede645988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2580fbc503530cbeb7538d36464a7c7cf1649f1253a4a4af326cb346c0726b53\",\"dweb:/ipfs/QmThvkLqVkn9vgPh5cfrA8xUpM2dDazEhhKfF7KXu9XTy4\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0xdb2c9bb8e20128935a2c06324b64e5e275f14abca35c7b112f6dcbb34245d633\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33b7d29084c33c2ae856576276bf401539e79d4abd7bd5a5952d9d069107affa\",\"dweb:/ipfs/QmRiJyJfcsB6JEsypi9oorbUEBqwqeqTq69bx9pydUpAhK\"]},\"project:/contracts/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0xec9edfa4778dfd003d2f53807fc04f5274d28ade94226f7df74957de7c07111a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f9089e0dcf2871197521b6f84f353b9d63816bfa0c1a2ba64379492ffc77f53\",\"dweb:/ipfs/QmSnAv4R1MWmxjHh37Tp2yfHMQdnfPA9T17rTiLprixy2i\"]},\"project:/contracts/utils/OwnableUpgradeableNoTransfer.sol\":{\"keccak256\":\"0x918bfd500ec0019bfcc83b0cebb913f9543f3aa3a8ff2a92e4ec7a1aa32baf0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6135382f3481a69823c80d0b2e68a198202566df98b9c636fd6324c95a2acdd\",\"dweb:/ipfs/QmQhm18K3dh6fNL4DRjViAQEjvTVaB5urLsfxw3bHjLJhd\"]},\"project:/contracts/utils/UniswapV2ERC20.sol\":{\"keccak256\":\"0xbbbdc4a6ddfda4fb96183c620b03f783f89bb30356c1516de9de2f546df7432c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fa75bf9cb3deb89b16f30305a869f0263a4aec4be646743ab8b139e3cb02e7c\",\"dweb:/ipfs/QmRAXoB5ygYxoAKNej9vmDtsfkXxbvbpSkvWza5YZp6WWh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615a28806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620001065760003560e01c8063081e3eda146200010b57806333b10b3c14620001215780633f4ba83a146200013a578063430004c1146200014457806351bdca3e14620001715780635c975abb14620001a4578063613c91af14620001bb578063715018a614620001d25780637c770aae14620001dc5780638456cb5914620001f35780638da5cb5b14620001fd578063bfe109281462000216578063c4d66de8146200022a578063d95a4d931462000241578063e23329081462000255578063e9403256146200026c578063ecb039431462000283578063f2fde38b146200029a578063f9d9331d14620002b1575b600080fd5b609a546040519081526020015b60405180910390f35b62000138620001323660046200180d565b620002dd565b005b62000138620003fe565b6200015b62000155366004620018a7565b6200043e565b6040805192835260208301919091520162000118565b620001886200018236600462001901565b62000577565b6040805193845260208401929092529082015260600162000118565b60335460ff16604051901515815260200162000118565b62000138620001cc3660046200193f565b6200063e565b62000138620006f6565b62000188620001ed36600462001977565b62000736565b6200013862000a5d565b6200020762000a9b565b604051620001189190620019d2565b60985462000207906001600160a01b031681565b620001386200023b366004620019e6565b62000aaa565b60975462000207906001600160a01b031681565b6200013862000266366004620019e6565b62000c69565b620001886200027d366004620019e6565b62000ce7565b620002076200029436600462001a06565b62000da6565b62000138620002ab366004620019e6565b62000dd1565b62000207620002c2366004620019e6565b6099602052600090815260409020546001600160a01b031681565b6098546001600160a01b03163314620002f557600080fd5b60335460ff1615620003245760405162461bcd60e51b81526004016200031b9062001a20565b60405180910390fd5b6001600160a01b03858116600090815260996020526040902054166200034957600080fd5b6001600160a01b038086166000908152609960205260409081902054905162fd125360e81b815291169063fd125300906200038f90879087908790879060040162001a97565b600060405180830381600087803b158015620003aa57600080fd5b505af1158015620003bf573d6000803e3d6000fd5b50506040516001600160a01b03881692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a25050505050565b336200040962000a9b565b6001600160a01b031614620004325760405162461bcd60e51b81526004016200031b9062001ac2565b6200043c62000e7a565b565b6000806200044e60335460ff1690565b156200046e5760405162461bcd60e51b81526004016200031b9062001a20565b6001600160a01b03868116600090815260996020526040902054166200049357600080fd5b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af115801562000503573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000529919062001af7565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b03818116600090815260996020526040812054909182918291161562000637576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b90620005df908890600401620019d2565b602060405180830381865afa158015620005fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000623919062001b1c565b925062000631848462000f0b565b90925090505b9250925092565b6098546001600160a01b031633146200065657600080fd5b6001600160a01b03838116600090815260996020526040902054166200067b57600080fd5b6001600160a01b0383811660009081526099602052604090819020549051631d1b53a960e31b8152600481018590526024810184905291169063e8da9d4890604401600060405180830381600087803b158015620006d857600080fd5b505af1158015620006ed573d6000803e3d6000fd5b50505050505050565b336200070162000a9b565b6001600160a01b0316146200072a5760405162461bcd60e51b81526004016200031b9062001ac2565b6200043c600062001238565b60008060006200074860335460ff1690565b15620007685760405162461bcd60e51b81526004016200031b9062001a20565b6001600160a01b0385811660009081526099602052604090205416620007fb5762000793856200128a565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b87156200089c576001600160a01b0380861660009081526099602090815260409182902054825162fc63d160e41b815292516200089c9433949216928d928492630fc63d10926004808401939192918290030181865afa15801562000864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200088a919062001b36565b6001600160a01b031692919062001361565b861562000906576001600160a01b03808616600090815260996020908152604091829020548251635f64b55b60e01b81529251620009069433949216928c928492635f64b55b926004808401939192918290030181865afa15801562000864573d6000803e3d6000fd5b851562000970576001600160a01b0380861660009081526099602090815260409182902054825163452ed4f160e01b81529251620009709433949216928b92849263452ed4f1926004808401939192918290030181865afa15801562000864573d6000803e3d6000fd5b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af1158015620009e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a07919062001b56565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b3362000a6862000a9b565b6001600160a01b03161462000a915760405162461bcd60e51b81526004016200031b9062001ac2565b6200043c620013c3565b6065546001600160a01b031690565b600054610100900460ff1662000ac75760005460ff161562000ad1565b62000ad16200141f565b62000b365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200031b565b600054610100900460ff1615801562000b59576000805461ffff19166101011790555b62000b6362001432565b62000b6d62001466565b62000b788262001238565b60405162000b869062001786565b604051809103906000f08015801562000ba3573d6000803e3d6000fd5b5060405162000bb29062001794565b62000bbe9190620019d2565b604051809103906000f08015801562000bdb573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b0392909216918217905560405163f2fde38b60e01b815263f2fde38b9062000c1e908590600401620019d2565b600060405180830381600087803b15801562000c3957600080fd5b505af115801562000c4e573d6000803e3d6000fd5b50505050801562000c65576000805461ff00191690555b5050565b3362000c7462000a9b565b6001600160a01b03161462000c9d5760405162461bcd60e51b81526004016200031b9062001ac2565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000d9f576001600160a01b03808516600090815260996020908152604091829020548251637d88209760e01b81529251931692637d8820979260048082019392918290030181865afa15801562000d65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d8b919062001b1c565b925062000d99848462000f0b565b90925090505b9193909250565b609a818154811062000db757600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000ddc62000a9b565b6001600160a01b03161462000e055760405162461bcd60e51b81526004016200031b9062001ac2565b6001600160a01b03811662000e6c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200031b565b62000e778162001238565b50565b60335460ff1662000ec55760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016200031b565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000f019190620019d2565b60405180910390a1565b6001600160a01b0382811660009081526099602052604081205490918291161562001231576001600160a01b03808516600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000f88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fae919062001b36565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000ff1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001017919062001b1c565b6001600160a01b0380881660009081526099602090815260409182902054825162fc63d160e41b815292519495508594931692630fc63d109260048082019392918290030181865afa15801562001072573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001098919062001b36565b6001600160a01b03166370a08231846040518263ffffffff1660e01b8152600401620010c59190620019d2565b602060405180830381865afa158015620010e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001109919062001b1c565b62001115908762001b85565b62001121919062001bb3565b6001600160a01b03808816600090815260996020908152604091829020548251635f64b55b60e01b815292519498508594931692635f64b55b9260048082019392918290030181865afa1580156200117d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011a3919062001b36565b6001600160a01b03166370a08231846040518263ffffffff1660e01b8152600401620011d09190620019d2565b602060405180830381865afa158015620011ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001214919062001b1c565b62001220908762001b85565b6200122c919062001bb3565b925050505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b90620012ba908690602401620019d2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620012f990620017a2565b6200130692919062001c33565b604051809103906000f08015801562001323573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620013bd9085906200149a565b50505050565b60335460ff1615620013e95760405162461bcd60e51b81526004016200031b9062001a20565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000ef23390565b60006200142c3062001578565b15905090565b600054610100900460ff166200145c5760405162461bcd60e51b81526004016200031b9062001c59565b6200043c62001587565b600054610100900460ff16620014905760405162461bcd60e51b81526004016200031b9062001c59565b6200043c620015bd565b6000620014f1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620015f29092919063ffffffff16565b80519091501562001573578080602001905181019062001512919062001ca4565b620015735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200031b565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620015b15760405162461bcd60e51b81526004016200031b9062001c59565b6033805460ff19169055565b600054610100900460ff16620015e75760405162461bcd60e51b81526004016200031b9062001c59565b6200043c3362001238565b60606200160384846000856200160d565b90505b9392505050565b606082471015620016705760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200031b565b6200167b8562001578565b620016c95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200031b565b600080866001600160a01b03168587604051620016e7919062001cc4565b60006040518083038185875af1925050503d806000811462001726576040519150601f19603f3d011682016040523d82523d6000602084013e6200172b565b606091505b50915091506200173d82828662001748565b979650505050505050565b606083156200175957508162001606565b8251156200176a5782518084602001fd5b8160405162461bcd60e51b81526004016200031b919062001ce2565b612e728062001cf883390190565b6105238062004b6a83390190565b610966806200508d83390190565b6001600160a01b038116811462000e7757600080fd5b60008083601f840112620017d957600080fd5b5081356001600160401b03811115620017f157600080fd5b6020830191508360208260051b85010111156200123157600080fd5b6000806000806000606086880312156200182657600080fd5b85356200183381620017b0565b945060208601356001600160401b03808211156200185057600080fd5b6200185e89838a01620017c6565b909650945060408801359150808211156200187857600080fd5b506200188788828901620017c6565b969995985093965092949392505050565b801515811462000e7757600080fd5b60008060008060808587031215620018be57600080fd5b8435620018cb81620017b0565b9350602085013592506040850135620018e48162001898565b91506060850135620018f681620017b0565b939692955090935050565b600080604083850312156200191557600080fd5b82356200192281620017b0565b915060208301356200193481620017b0565b809150509250929050565b6000806000606084860312156200195557600080fd5b83356200196281620017b0565b95602085013595506040909401359392505050565b600080600080600060a086880312156200199057600080fd5b8535945060208601359350604086013592506060860135620019b281620017b0565b91506080860135620019c481620017b0565b809150509295509295909350565b6001600160a01b0391909116815260200190565b600060208284031215620019f957600080fd5b81356200160681620017b0565b60006020828403121562001a1957600080fd5b5035919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b8183526000602080850194508260005b8581101562001a8c57813562001a7081620017b0565b6001600160a01b03168752958201959082019060010162001a5a565b509495945050505050565b60408152600062001aad60408301868862001a4a565b82810360208401526200173d81858762001a4a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000806040838503121562001b0b57600080fd5b505080516020909101519092909150565b60006020828403121562001b2f57600080fd5b5051919050565b60006020828403121562001b4957600080fd5b81516200160681620017b0565b60008060006060848603121562001b6c57600080fd5b8351925060208401519150604084015190509250925092565b600081600019048311821515161562001bae57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001bd157634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101562001bf357818101518382015260200162001bd9565b83811115620013bd5750506000910152565b6000815180845262001c1f81602086016020860162001bd6565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620016039083018462001c05565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121562001cb757600080fd5b8151620016068162001898565b6000825162001cd881846020870162001bd6565b9190910192915050565b60208152600062001606602083018462001c0556fe60a06040523060805234801561001457600080fd5b506001606855608051612e2861004a600039600081816105ac015281816105f50152818161094b015261098b0152612e286000f3fe6080604052600436106101055760003560e01c80630103c92b1461010a57806306fdde031461013d578063095ea7b31461017c5780630fc63d10146101ac57806318160ddd146101d957806323b872dd146101ef578063313ce5671461020f5780633659cfe614610236578063430004c114610258578063452ed4f11461028d5780634f1ef286146102ad5780635f64b55b146102c057806370a08231146102e05780637d8820971461030d57806395d89b4114610323578063a9059cbb14610352578063c4d66de814610372578063dd62ed3e14610392578063e8da9d48146103ca578063f7c618c1146103ea578063fad3cc4b1461040a578063fd12530014610445575b600080fd5b34801561011657600080fd5b5061012a61012536600461250c565b610465565b6040519081526020015b60405180910390f35b34801561014957600080fd5b5061016f604051806040016040528060068152602001650556e6f2d4c560d41b81525081565b6040516101349190612555565b34801561018857600080fd5b5061019c610197366004612588565b6104f6565b6040519015158152602001610134565b3480156101b857600080fd5b50606b546101cc906001600160a01b031681565b60405161013491906125b4565b3480156101e557600080fd5b5061012a60005481565b3480156101fb57600080fd5b5061019c61020a3660046125c8565b61050c565b34801561021b57600080fd5b50610224601281565b60405160ff9091168152602001610134565b34801561024257600080fd5b5061025661025136600461250c565b6105a1565b005b34801561026457600080fd5b50610278610273366004612617565b610673565b60408051928352602083019190915201610134565b34801561029957600080fd5b50606a546101cc906001600160a01b031681565b6102566102bb3660046126b0565b610940565b3480156102cc57600080fd5b50606c546101cc906001600160a01b031681565b3480156102ec57600080fd5b5061012a6102fb36600461250c565b60016020526000908152604090205481565b34801561031957600080fd5b5061012a60765481565b34801561032f57600080fd5b5061016f604051806040016040528060038152602001620554c560ec1b81525081565b34801561035e57600080fd5b5061019c61036d366004612588565b6109fa565b34801561037e57600080fd5b5061025661038d36600461250c565b610a07565b34801561039e57600080fd5b5061012a6103ad366004612757565b600260209081526000928352604080842090915290825290205481565b3480156103d657600080fd5b506102566103e5366004612790565b610f33565b3480156103f657600080fd5b506069546101cc906001600160a01b031681565b34801561041657600080fd5b5061042a6104253660046127b2565b610f66565b60408051938452602084019290925290820152606001610134565b34801561045157600080fd5b50610256610460366004612833565b611228565b6001600160a01b0381166000908152607560209081526040808320607054845290915281205460ff16156104af57506001600160a01b031660009081526072602052604090205490565b6000546104be57506000919050565b600080546001600160a01b038416825260016020526040909120546076546104e691906128b4565b6104f091906128d3565b92915050565b6000610503338484611742565b50600192915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546000191461058b576001600160a01b038416600090815260026020908152604080832033845290915290205461056690836117a4565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6105968484846117b0565b5060015b9392505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105f35760405162461bcd60e51b81526004016105ea906128f5565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610625611844565b6001600160a01b03161461064b5760405162461bcd60e51b81526004016105ea9061292f565b61065481611860565b604080516000808252602082019092526106709183919061187c565b50565b6000803361067f6119c3565b6001600160a01b03161461069257600080fd5b600260685414156106b55760405162461bcd60e51b81526004016105ea90612969565b600260685584158015906106e057506001600160a01b03861660009081526072602052604090205415155b6106e957600080fd5b6106f2866119d2565b600043606e5411156107135743606e5461070c91906129a0565b9050610725565b600260715461072291906128d3565b90505b60006077548260765461073891906128b4565b61074291906129b7565b9050600061075083896128b4565b61075a90836129a0565b6001600160a01b038a16600090815260726020526040812080549293508a929091906107879084906129a0565b9250508190555087607660008282546107a091906129a0565b9091555050606f5482906107b59083906128b4565b6107bf91906128d3565b606f556107cd83828b611b62565b606d54604051632e1a7d4d60e01b8152600481018a90526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b50505050861561085757606a54610848906001600160a01b0316878a611c69565b60008094509450505050610930565b606b54606c54600080516020612dd38339815191529163baa2abde916001600160a01b0391821691168b6000808c610891426102586129b7565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af1158015610903573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092791906129cf565b90955093505050505b6001606855909590945092505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109895760405162461bcd60e51b81526004016105ea906128f5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109bb611844565b6001600160a01b0316146109e15760405162461bcd60e51b81526004016105ea9061292f565b6109ea82611860565b6109f68282600161187c565b5050565b60006105033384846117b0565b600354610100900460ff16610a225760035460ff1615610a2a565b610a2a611cbf565b610a465760405162461bcd60e51b81526004016105ea906129f3565b600354610100900460ff16158015610a68576003805461ffff19166101011790555b610a70611cd0565b606d80546001600160a01b0319166001600160a01b038416908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190612a41565b606a80546001600160a01b0319166001600160a01b03928316179055606d546040805163d1af0c7d60e01b81529051919092169163d1af0c7d9160048083019260209291908290030181865afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190612a41565b606980546001600160a01b0319166001600160a01b03928316179055606a5460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190612a41565b606b80546001600160a01b0319166001600160a01b03928316179055606a546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190612a41565b606c80546001600160a01b0319166001600160a01b03928316179055606a5460405163095ea7b360e01b815260001992919091169063095ea7b390610cbe9086908590600401612a5e565b6020604051808303816000875af1158015610cdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d019190612a77565b50606a5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610d4290600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d859190612a77565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610dc690600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190612a77565b50606b5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610e4a90600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610e69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8d9190612a77565b50606c5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610ece90600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190612a77565b50504360705562124f8060715580156109f6576003805461ff00191690555050565b33610f3c6119c3565b6001600160a01b031614610f4f57600080fd5b438111610f5b57600080fd5b606f91909155606e55565b6000808033610f736119c3565b6001600160a01b031614610f8657600080fd5b60026068541415610fa95760405162461bcd60e51b81526004016105ea90612969565b600260685560008715801590610fbf5750600087115b1561106d57606b54606c54600080516020612dd38339815191529163e8e33700916001600160a01b0391821691168b8b60008030610fff426102586129b7565b6040518963ffffffff1660e01b8152600401611022989796959493929190612a94565b6060604051808303816000875af1158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110659190612add565b919550935090505b61107786826129b7565b91506000821161108657600080fd5b61108f856119d2565b600043606e5411156110b05743606e546110a991906129a0565b90506110c2565b60026071546110bf91906128d3565b90505b6000607754826076546110d591906128b4565b6110df91906129b7565b90506000816110ee84876128b4565b6110f891906129b7565b6001600160a01b0389166000908152607260205260408120805492935087929091906111259084906129b7565b92505081905550846076600082825461113e91906129b7565b90915550508115611166578181606f5461115891906128b4565b61116291906128d3565b606f555b61117183828a611d55565b606d5460405163534a7e1d60e11b8152600481018790526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156111b757600080fd5b505af11580156111cb573d6000803e3d6000fd5b505050506111f288888d6111df91906129a0565b606b546001600160a01b03169190611c69565b61121388611200888d6129a0565b606c546001600160a01b03169190611c69565b50506001606855509297919650945092505050565b336112316119c3565b6001600160a01b03161461124457600080fd5b600260685414156112675760405162461bcd60e51b81526004016105ea90612969565b600260685560765461127857600080fd5b606d60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156112c857600080fd5b505af11580156112dc573d6000803e3d6000fd5b50506069546040516370a0823160e01b815260009350600292506001600160a01b03909116906370a08231906113169030906004016125b4565b602060405180830381865afa158015611333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113579190612b0b565b61136191906128d3565b90506000611371426102586129b7565b606954606b549192506001600160a01b03918216911614611411576040516338ed173960e01b8152600080516020612dd3833981519152906338ed1739906113c89085906000908b908b9030908990600401612b24565b6000604051808303816000875af11580156113e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261140f9190810190612b97565b505b606954606c546001600160a01b039081169116146114ae576040516338ed173960e01b8152600080516020612dd3833981519152906338ed1739906114659085906000908990899030908990600401612b24565b6000604051808303816000875af1158015611484573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114ac9190810190612b97565b505b606b54606c546040516370a0823160e01b8152600080516020612dd38339815191529263e8e33700926001600160a01b039182169291169082906370a08231906114fc9030906004016125b4565b602060405180830381865afa158015611519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153d9190612b0b565b606c546040516370a0823160e01b81526001600160a01b03909116906370a082319061156d9030906004016125b4565b602060405180830381865afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190612b0b565b60018030896040518963ffffffff1660e01b81526004016115d6989796959493929190612a94565b6060604051808303816000875af11580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116199190612add565b5050606a546040516370a0823160e01b8152600092506001600160a01b03909116906370a082319061164f9030906004016125b4565b602060405180830381865afa15801561166c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116909190612b0b565b9050801561170e5780607660008282546116aa91906129b7565b9091555050606d5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156116f557600080fd5b505af1158015611709573d6000803e3d6000fd5b505050505b60705461171b90436129a0565b6071819055611730908290610f5b90436129b7565b50504360705550506001606855505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061059a82846129a0565b6001600160a01b0383166000908152600160205260409020546117d390826117a4565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546118029082611e27565b6001600160a01b038084166000818152600160205260409081902093909355915190851690600080516020612db3833981519152906117979085815260200190565b600080516020612d6c833981519152546001600160a01b031690565b336118696119c3565b6001600160a01b03161461067057600080fd5b6000611886611844565b905061189184611e33565b60008351118061189e5750815b156118af576118ad8484611ec6565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166119bc57805460ff1916600117815560405161192a9086906118fb9085906024016125b4565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052611ec6565b50805460ff1916815561193b611844565b6001600160a01b0316826001600160a01b0316146119b35760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084016105ea565b6119bc85611eeb565b5050505050565b6036546001600160a01b031690565b6001600160a01b0381166000908152607560209081526040808320607054845290915290205460ff1615611a6c576001600160a01b038116600090815260726020908152604080832054607490925290912054611a2f90436129a0565b611a3991906128b4565b6001600160a01b03821660009081526073602052604081208054909190611a619084906129b7565b90915550611ae19050565b611a7581610465565b6001600160a01b0382166000908152607260205260409020819055607054611a9d90436129a0565b611aa791906128b4565b6001600160a01b038216600090815260736020908152604080832093909355607581528282206070548352905220805460ff191660011790555b6070546078541115611b2357607654607854611afd90436129a0565b611b0791906128b4565b60776000828254611b1891906129b7565b90915550611b419050565b607654607054611b3390436129a0565b611b3d91906128b4565b6077555b6001600160a01b031660009081526074602052604090204390819055607855565b6001600160a01b038116600090815260726020526040902054611ba8576001600160a01b038116600090815260016020526040902054611ba3908290611f2b565b505050565b600080546001600160a01b038316825260016020526040909120541415611bce57505050565b6000611bdb848484611fab565b9050611c638282611bee6012600a612d20565b611bf891906129a0565b611c046012600a612d20565b600054611c1190866128b4565b611c1b91906128d3565b6001600160a01b038616600090815260016020526040902054611c3e91906129a0565b611c4a6012600a612d20565b611c5491906128b4565b611c5e91906128d3565b611f2b565b50505050565b611ba38363a9059cbb60e01b8484604051602401611c88929190612a5e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261205e565b6000611cca30612130565b15905090565b600354610100900460ff16611ceb5760035460ff1615611cf3565b611cf3611cbf565b611d0f5760405162461bcd60e51b81526004016105ea906129f3565b600354610100900460ff16158015611d31576003805461ffff19166101011790555b611d3961213f565b611d416121ac565b8015610670576003805461ff001916905550565b600054611d7157611ba381611d6c6012600a612d20565b612233565b600080546001600160a01b038316825260016020526040909120541415611d9757505050565b6000611da4848484611fab565b9050611c638282611db76012600a612d20565b611dc191906129a0565b6001600160a01b038516600090815260016020526040902054611de66012600a612d20565b600054611df390876128b4565b611dfd91906128d3565b611e0791906129a0565b611e136012600a612d20565b611e1d91906128b4565b611d6c91906128d3565b600061059a82846129b7565b803b611e975760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105ea565b600080516020612d6c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b606061059a8383604051806060016040528060278152602001612d8c602791396122a4565b611ef481611e33565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b038216600090815260016020526040902054611f4e90826117a4565b6001600160a01b03831660009081526001602052604081209190915554611f7590826117a4565b60009081556040518281526001600160a01b03841690600080516020612db3833981519152906020015b60405180910390a35050565b6001600160a01b038116600090815260736020908152604080832054607290925282205482918591611fde9088906128b4565b611fe891906129b7565b606f54611ff591906128b4565b611fff91906128d3565b9050606f5460765461201191906129b7565b6001600160a01b0384166000908152607260205260409020546120359083906129b7565b6120416012600a612d20565b61204b91906128b4565b61205591906128d3565b95945050505050565b60006120b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123789092919063ffffffff16565b805190915015611ba357808060200190518101906120d19190612a77565b611ba35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105ea565b6001600160a01b03163b151590565b600354610100900460ff166121aa5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105ea565b565b600354610100900460ff166121c75760035460ff16156121cf565b6121cf611cbf565b6121eb5760405162461bcd60e51b81526004016105ea906129f3565b600354610100900460ff1615801561220d576003805461ffff19166101011790555b603680546001600160a01b031916331790558015610670576003805461ff001916905550565b6000546122409082611e27565b60009081556001600160a01b0383168152600160205260409020546122659082611e27565b6001600160a01b038316600081815260016020526040808220939093559151909190600080516020612db383398151915290611f9f9085815260200190565b6060833b6123035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105ea565b600080856001600160a01b03168560405161231e9190612d2f565b600060405180830381855af49150503d8060008114612359576040519150601f19603f3d011682016040523d82523d6000602084013e61235e565b606091505b509150915061236e82828661238f565b9695505050505050565b606061238784846000856123c8565b949350505050565b6060831561239e57508161059a565b8251156123ae5782518084602001fd5b8160405162461bcd60e51b81526004016105ea9190612555565b6060824710156124295760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105ea565b61243285612130565b61247e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ea565b600080866001600160a01b0316858760405161249a9190612d2f565b60006040518083038185875af1925050503d80600081146124d7576040519150601f19603f3d011682016040523d82523d6000602084013e6124dc565b606091505b50915091506124ec82828661238f565b979650505050505050565b6001600160a01b038116811461067057600080fd5b60006020828403121561251e57600080fd5b813561059a816124f7565b60005b8381101561254457818101518382015260200161252c565b83811115611c635750506000910152565b6020815260008251806020840152612574816040850160208701612529565b601f01601f19169190910160400192915050565b6000806040838503121561259b57600080fd5b82356125a6816124f7565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6000806000606084860312156125dd57600080fd5b83356125e8816124f7565b925060208401356125f8816124f7565b929592945050506040919091013590565b801515811461067057600080fd5b6000806000806080858703121561262d57600080fd5b8435612638816124f7565b935060208501359250604085013561264f81612609565b9150606085013561265f816124f7565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156126a8576126a861266a565b604052919050565b600080604083850312156126c357600080fd5b82356126ce816124f7565b91506020838101356001600160401b03808211156126eb57600080fd5b818601915086601f8301126126ff57600080fd5b8135818111156127115761271161266a565b612723601f8201601f19168501612680565b9150808252878482850101111561273957600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806040838503121561276a57600080fd5b8235612775816124f7565b91506020830135612785816124f7565b809150509250929050565b600080604083850312156127a357600080fd5b50508035926020909101359150565b600080600080608085870312156127c857600080fd5b843593506020850135925060408501359150606085013561265f816124f7565b60008083601f8401126127fa57600080fd5b5081356001600160401b0381111561281157600080fd5b6020830191508360208260051b850101111561282c57600080fd5b9250929050565b6000806000806040858703121561284957600080fd5b84356001600160401b038082111561286057600080fd5b61286c888389016127e8565b9096509450602087013591508082111561288557600080fd5b50612892878288016127e8565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156128ce576128ce61289e565b500290565b6000826128f057634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602c90820152600080516020612d4c83398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c90820152600080516020612d4c83398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000828210156129b2576129b261289e565b500390565b600082198211156129ca576129ca61289e565b500190565b600080604083850312156129e257600080fd5b505080516020909101519092909150565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215612a5357600080fd5b815161059a816124f7565b6001600160a01b03929092168252602082015260400190565b600060208284031215612a8957600080fd5b815161059a81612609565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612af257600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215612b1d57600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015612b76578335612b5b816124f7565b6001600160a01b031682529282019290820190600101612b48565b506001600160a01b0396909616606085015250505060800152949350505050565b60006020808385031215612baa57600080fd5b82516001600160401b0380821115612bc157600080fd5b818501915085601f830112612bd557600080fd5b815181811115612be757612be761266a565b8060051b9150612bf8848301612680565b8181529183018401918481019088841115612c1257600080fd5b938501935b83851015612c3057845182529385019390850190612c17565b98975050505050505050565b600181815b80851115612c77578160001904821115612c5d57612c5d61289e565b80851615612c6a57918102915b93841c9390800290612c41565b509250929050565b600082612c8e575060016104f0565b81612c9b575060006104f0565b8160018114612cb15760028114612cbb57612cd7565b60019150506104f0565b60ff841115612ccc57612ccc61289e565b50506001821b6104f0565b5060208310610133831016604e8410600b8410161715612cfa575081810a6104f0565b612d048383612c3c565b8060001904821115612d1857612d1861289e565b029392505050565b600061059a60ff841683612c7f565b60008251612d41818460208701612529565b919091019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ffa2646970667358221220acecb7c16010ccaa4bbbdc9805c7a4880a4b1a733d8064cde1baddd822526d5864736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207a931010d16e93aebdd6d857185803f7e7ab8f3c33081867bc498f6bd7eecc2864736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001065760003560e01c8063081e3eda146200010b57806333b10b3c14620001215780633f4ba83a146200013a578063430004c1146200014457806351bdca3e14620001715780635c975abb14620001a4578063613c91af14620001bb578063715018a614620001d25780637c770aae14620001dc5780638456cb5914620001f35780638da5cb5b14620001fd578063bfe109281462000216578063c4d66de8146200022a578063d95a4d931462000241578063e23329081462000255578063e9403256146200026c578063ecb039431462000283578063f2fde38b146200029a578063f9d9331d14620002b1575b600080fd5b609a546040519081526020015b60405180910390f35b62000138620001323660046200180d565b620002dd565b005b62000138620003fe565b6200015b62000155366004620018a7565b6200043e565b6040805192835260208301919091520162000118565b620001886200018236600462001901565b62000577565b6040805193845260208401929092529082015260600162000118565b60335460ff16604051901515815260200162000118565b62000138620001cc3660046200193f565b6200063e565b62000138620006f6565b62000188620001ed36600462001977565b62000736565b6200013862000a5d565b6200020762000a9b565b604051620001189190620019d2565b60985462000207906001600160a01b031681565b620001386200023b366004620019e6565b62000aaa565b60975462000207906001600160a01b031681565b6200013862000266366004620019e6565b62000c69565b620001886200027d366004620019e6565b62000ce7565b620002076200029436600462001a06565b62000da6565b62000138620002ab366004620019e6565b62000dd1565b62000207620002c2366004620019e6565b6099602052600090815260409020546001600160a01b031681565b6098546001600160a01b03163314620002f557600080fd5b60335460ff1615620003245760405162461bcd60e51b81526004016200031b9062001a20565b60405180910390fd5b6001600160a01b03858116600090815260996020526040902054166200034957600080fd5b6001600160a01b038086166000908152609960205260409081902054905162fd125360e81b815291169063fd125300906200038f90879087908790879060040162001a97565b600060405180830381600087803b158015620003aa57600080fd5b505af1158015620003bf573d6000803e3d6000fd5b50506040516001600160a01b03881692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a25050505050565b336200040962000a9b565b6001600160a01b031614620004325760405162461bcd60e51b81526004016200031b9062001ac2565b6200043c62000e7a565b565b6000806200044e60335460ff1690565b156200046e5760405162461bcd60e51b81526004016200031b9062001a20565b6001600160a01b03868116600090815260996020526040902054166200049357600080fd5b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af115801562000503573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000529919062001af7565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b03818116600090815260996020526040812054909182918291161562000637576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b90620005df908890600401620019d2565b602060405180830381865afa158015620005fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000623919062001b1c565b925062000631848462000f0b565b90925090505b9250925092565b6098546001600160a01b031633146200065657600080fd5b6001600160a01b03838116600090815260996020526040902054166200067b57600080fd5b6001600160a01b0383811660009081526099602052604090819020549051631d1b53a960e31b8152600481018590526024810184905291169063e8da9d4890604401600060405180830381600087803b158015620006d857600080fd5b505af1158015620006ed573d6000803e3d6000fd5b50505050505050565b336200070162000a9b565b6001600160a01b0316146200072a5760405162461bcd60e51b81526004016200031b9062001ac2565b6200043c600062001238565b60008060006200074860335460ff1690565b15620007685760405162461bcd60e51b81526004016200031b9062001a20565b6001600160a01b0385811660009081526099602052604090205416620007fb5762000793856200128a565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b87156200089c576001600160a01b0380861660009081526099602090815260409182902054825162fc63d160e41b815292516200089c9433949216928d928492630fc63d10926004808401939192918290030181865afa15801562000864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200088a919062001b36565b6001600160a01b031692919062001361565b861562000906576001600160a01b03808616600090815260996020908152604091829020548251635f64b55b60e01b81529251620009069433949216928c928492635f64b55b926004808401939192918290030181865afa15801562000864573d6000803e3d6000fd5b851562000970576001600160a01b0380861660009081526099602090815260409182902054825163452ed4f160e01b81529251620009709433949216928b92849263452ed4f1926004808401939192918290030181865afa15801562000864573d6000803e3d6000fd5b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af1158015620009e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a07919062001b56565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b3362000a6862000a9b565b6001600160a01b03161462000a915760405162461bcd60e51b81526004016200031b9062001ac2565b6200043c620013c3565b6065546001600160a01b031690565b600054610100900460ff1662000ac75760005460ff161562000ad1565b62000ad16200141f565b62000b365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200031b565b600054610100900460ff1615801562000b59576000805461ffff19166101011790555b62000b6362001432565b62000b6d62001466565b62000b788262001238565b60405162000b869062001786565b604051809103906000f08015801562000ba3573d6000803e3d6000fd5b5060405162000bb29062001794565b62000bbe9190620019d2565b604051809103906000f08015801562000bdb573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b0392909216918217905560405163f2fde38b60e01b815263f2fde38b9062000c1e908590600401620019d2565b600060405180830381600087803b15801562000c3957600080fd5b505af115801562000c4e573d6000803e3d6000fd5b50505050801562000c65576000805461ff00191690555b5050565b3362000c7462000a9b565b6001600160a01b03161462000c9d5760405162461bcd60e51b81526004016200031b9062001ac2565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000d9f576001600160a01b03808516600090815260996020908152604091829020548251637d88209760e01b81529251931692637d8820979260048082019392918290030181865afa15801562000d65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d8b919062001b1c565b925062000d99848462000f0b565b90925090505b9193909250565b609a818154811062000db757600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000ddc62000a9b565b6001600160a01b03161462000e055760405162461bcd60e51b81526004016200031b9062001ac2565b6001600160a01b03811662000e6c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200031b565b62000e778162001238565b50565b60335460ff1662000ec55760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016200031b565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000f019190620019d2565b60405180910390a1565b6001600160a01b0382811660009081526099602052604081205490918291161562001231576001600160a01b03808516600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000f88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fae919062001b36565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000ff1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001017919062001b1c565b6001600160a01b0380881660009081526099602090815260409182902054825162fc63d160e41b815292519495508594931692630fc63d109260048082019392918290030181865afa15801562001072573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001098919062001b36565b6001600160a01b03166370a08231846040518263ffffffff1660e01b8152600401620010c59190620019d2565b602060405180830381865afa158015620010e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001109919062001b1c565b62001115908762001b85565b62001121919062001bb3565b6001600160a01b03808816600090815260996020908152604091829020548251635f64b55b60e01b815292519498508594931692635f64b55b9260048082019392918290030181865afa1580156200117d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011a3919062001b36565b6001600160a01b03166370a08231846040518263ffffffff1660e01b8152600401620011d09190620019d2565b602060405180830381865afa158015620011ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001214919062001b1c565b62001220908762001b85565b6200122c919062001bb3565b925050505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b90620012ba908690602401620019d2565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620012f990620017a2565b6200130692919062001c33565b604051809103906000f08015801562001323573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620013bd9085906200149a565b50505050565b60335460ff1615620013e95760405162461bcd60e51b81526004016200031b9062001a20565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000ef23390565b60006200142c3062001578565b15905090565b600054610100900460ff166200145c5760405162461bcd60e51b81526004016200031b9062001c59565b6200043c62001587565b600054610100900460ff16620014905760405162461bcd60e51b81526004016200031b9062001c59565b6200043c620015bd565b6000620014f1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620015f29092919063ffffffff16565b80519091501562001573578080602001905181019062001512919062001ca4565b620015735760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200031b565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620015b15760405162461bcd60e51b81526004016200031b9062001c59565b6033805460ff19169055565b600054610100900460ff16620015e75760405162461bcd60e51b81526004016200031b9062001c59565b6200043c3362001238565b60606200160384846000856200160d565b90505b9392505050565b606082471015620016705760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200031b565b6200167b8562001578565b620016c95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200031b565b600080866001600160a01b03168587604051620016e7919062001cc4565b60006040518083038185875af1925050503d806000811462001726576040519150601f19603f3d011682016040523d82523d6000602084013e6200172b565b606091505b50915091506200173d82828662001748565b979650505050505050565b606083156200175957508162001606565b8251156200176a5782518084602001fd5b8160405162461bcd60e51b81526004016200031b919062001ce2565b612e728062001cf883390190565b6105238062004b6a83390190565b610966806200508d83390190565b6001600160a01b038116811462000e7757600080fd5b60008083601f840112620017d957600080fd5b5081356001600160401b03811115620017f157600080fd5b6020830191508360208260051b85010111156200123157600080fd5b6000806000806000606086880312156200182657600080fd5b85356200183381620017b0565b945060208601356001600160401b03808211156200185057600080fd5b6200185e89838a01620017c6565b909650945060408801359150808211156200187857600080fd5b506200188788828901620017c6565b969995985093965092949392505050565b801515811462000e7757600080fd5b60008060008060808587031215620018be57600080fd5b8435620018cb81620017b0565b9350602085013592506040850135620018e48162001898565b91506060850135620018f681620017b0565b939692955090935050565b600080604083850312156200191557600080fd5b82356200192281620017b0565b915060208301356200193481620017b0565b809150509250929050565b6000806000606084860312156200195557600080fd5b83356200196281620017b0565b95602085013595506040909401359392505050565b600080600080600060a086880312156200199057600080fd5b8535945060208601359350604086013592506060860135620019b281620017b0565b91506080860135620019c481620017b0565b809150509295509295909350565b6001600160a01b0391909116815260200190565b600060208284031215620019f957600080fd5b81356200160681620017b0565b60006020828403121562001a1957600080fd5b5035919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b8183526000602080850194508260005b8581101562001a8c57813562001a7081620017b0565b6001600160a01b03168752958201959082019060010162001a5a565b509495945050505050565b60408152600062001aad60408301868862001a4a565b82810360208401526200173d81858762001a4a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000806040838503121562001b0b57600080fd5b505080516020909101519092909150565b60006020828403121562001b2f57600080fd5b5051919050565b60006020828403121562001b4957600080fd5b81516200160681620017b0565b60008060006060848603121562001b6c57600080fd5b8351925060208401519150604084015190509250925092565b600081600019048311821515161562001bae57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001bd157634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101562001bf357818101518382015260200162001bd9565b83811115620013bd5750506000910152565b6000815180845262001c1f81602086016020860162001bd6565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620016039083018462001c05565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121562001cb757600080fd5b8151620016068162001898565b6000825162001cd881846020870162001bd6565b9190910192915050565b60208152600062001606602083018462001c0556fe60a06040523060805234801561001457600080fd5b506001606855608051612e2861004a600039600081816105ac015281816105f50152818161094b015261098b0152612e286000f3fe6080604052600436106101055760003560e01c80630103c92b1461010a57806306fdde031461013d578063095ea7b31461017c5780630fc63d10146101ac57806318160ddd146101d957806323b872dd146101ef578063313ce5671461020f5780633659cfe614610236578063430004c114610258578063452ed4f11461028d5780634f1ef286146102ad5780635f64b55b146102c057806370a08231146102e05780637d8820971461030d57806395d89b4114610323578063a9059cbb14610352578063c4d66de814610372578063dd62ed3e14610392578063e8da9d48146103ca578063f7c618c1146103ea578063fad3cc4b1461040a578063fd12530014610445575b600080fd5b34801561011657600080fd5b5061012a61012536600461250c565b610465565b6040519081526020015b60405180910390f35b34801561014957600080fd5b5061016f604051806040016040528060068152602001650556e6f2d4c560d41b81525081565b6040516101349190612555565b34801561018857600080fd5b5061019c610197366004612588565b6104f6565b6040519015158152602001610134565b3480156101b857600080fd5b50606b546101cc906001600160a01b031681565b60405161013491906125b4565b3480156101e557600080fd5b5061012a60005481565b3480156101fb57600080fd5b5061019c61020a3660046125c8565b61050c565b34801561021b57600080fd5b50610224601281565b60405160ff9091168152602001610134565b34801561024257600080fd5b5061025661025136600461250c565b6105a1565b005b34801561026457600080fd5b50610278610273366004612617565b610673565b60408051928352602083019190915201610134565b34801561029957600080fd5b50606a546101cc906001600160a01b031681565b6102566102bb3660046126b0565b610940565b3480156102cc57600080fd5b50606c546101cc906001600160a01b031681565b3480156102ec57600080fd5b5061012a6102fb36600461250c565b60016020526000908152604090205481565b34801561031957600080fd5b5061012a60765481565b34801561032f57600080fd5b5061016f604051806040016040528060038152602001620554c560ec1b81525081565b34801561035e57600080fd5b5061019c61036d366004612588565b6109fa565b34801561037e57600080fd5b5061025661038d36600461250c565b610a07565b34801561039e57600080fd5b5061012a6103ad366004612757565b600260209081526000928352604080842090915290825290205481565b3480156103d657600080fd5b506102566103e5366004612790565b610f33565b3480156103f657600080fd5b506069546101cc906001600160a01b031681565b34801561041657600080fd5b5061042a6104253660046127b2565b610f66565b60408051938452602084019290925290820152606001610134565b34801561045157600080fd5b50610256610460366004612833565b611228565b6001600160a01b0381166000908152607560209081526040808320607054845290915281205460ff16156104af57506001600160a01b031660009081526072602052604090205490565b6000546104be57506000919050565b600080546001600160a01b038416825260016020526040909120546076546104e691906128b4565b6104f091906128d3565b92915050565b6000610503338484611742565b50600192915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546000191461058b576001600160a01b038416600090815260026020908152604080832033845290915290205461056690836117a4565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6105968484846117b0565b5060015b9392505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105f35760405162461bcd60e51b81526004016105ea906128f5565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610625611844565b6001600160a01b03161461064b5760405162461bcd60e51b81526004016105ea9061292f565b61065481611860565b604080516000808252602082019092526106709183919061187c565b50565b6000803361067f6119c3565b6001600160a01b03161461069257600080fd5b600260685414156106b55760405162461bcd60e51b81526004016105ea90612969565b600260685584158015906106e057506001600160a01b03861660009081526072602052604090205415155b6106e957600080fd5b6106f2866119d2565b600043606e5411156107135743606e5461070c91906129a0565b9050610725565b600260715461072291906128d3565b90505b60006077548260765461073891906128b4565b61074291906129b7565b9050600061075083896128b4565b61075a90836129a0565b6001600160a01b038a16600090815260726020526040812080549293508a929091906107879084906129a0565b9250508190555087607660008282546107a091906129a0565b9091555050606f5482906107b59083906128b4565b6107bf91906128d3565b606f556107cd83828b611b62565b606d54604051632e1a7d4d60e01b8152600481018a90526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b50505050861561085757606a54610848906001600160a01b0316878a611c69565b60008094509450505050610930565b606b54606c54600080516020612dd38339815191529163baa2abde916001600160a01b0391821691168b6000808c610891426102586129b7565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af1158015610903573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092791906129cf565b90955093505050505b6001606855909590945092505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109895760405162461bcd60e51b81526004016105ea906128f5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109bb611844565b6001600160a01b0316146109e15760405162461bcd60e51b81526004016105ea9061292f565b6109ea82611860565b6109f68282600161187c565b5050565b60006105033384846117b0565b600354610100900460ff16610a225760035460ff1615610a2a565b610a2a611cbf565b610a465760405162461bcd60e51b81526004016105ea906129f3565b600354610100900460ff16158015610a68576003805461ffff19166101011790555b610a70611cd0565b606d80546001600160a01b0319166001600160a01b038416908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190612a41565b606a80546001600160a01b0319166001600160a01b03928316179055606d546040805163d1af0c7d60e01b81529051919092169163d1af0c7d9160048083019260209291908290030181865afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190612a41565b606980546001600160a01b0319166001600160a01b03928316179055606a5460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190612a41565b606b80546001600160a01b0319166001600160a01b03928316179055606a546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190612a41565b606c80546001600160a01b0319166001600160a01b03928316179055606a5460405163095ea7b360e01b815260001992919091169063095ea7b390610cbe9086908590600401612a5e565b6020604051808303816000875af1158015610cdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d019190612a77565b50606a5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610d4290600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d859190612a77565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610dc690600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190612a77565b50606b5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610e4a90600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610e69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8d9190612a77565b50606c5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390610ece90600080516020612dd3833981519152908590600401612a5e565b6020604051808303816000875af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190612a77565b50504360705562124f8060715580156109f6576003805461ff00191690555050565b33610f3c6119c3565b6001600160a01b031614610f4f57600080fd5b438111610f5b57600080fd5b606f91909155606e55565b6000808033610f736119c3565b6001600160a01b031614610f8657600080fd5b60026068541415610fa95760405162461bcd60e51b81526004016105ea90612969565b600260685560008715801590610fbf5750600087115b1561106d57606b54606c54600080516020612dd38339815191529163e8e33700916001600160a01b0391821691168b8b60008030610fff426102586129b7565b6040518963ffffffff1660e01b8152600401611022989796959493929190612a94565b6060604051808303816000875af1158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110659190612add565b919550935090505b61107786826129b7565b91506000821161108657600080fd5b61108f856119d2565b600043606e5411156110b05743606e546110a991906129a0565b90506110c2565b60026071546110bf91906128d3565b90505b6000607754826076546110d591906128b4565b6110df91906129b7565b90506000816110ee84876128b4565b6110f891906129b7565b6001600160a01b0389166000908152607260205260408120805492935087929091906111259084906129b7565b92505081905550846076600082825461113e91906129b7565b90915550508115611166578181606f5461115891906128b4565b61116291906128d3565b606f555b61117183828a611d55565b606d5460405163534a7e1d60e11b8152600481018790526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156111b757600080fd5b505af11580156111cb573d6000803e3d6000fd5b505050506111f288888d6111df91906129a0565b606b546001600160a01b03169190611c69565b61121388611200888d6129a0565b606c546001600160a01b03169190611c69565b50506001606855509297919650945092505050565b336112316119c3565b6001600160a01b03161461124457600080fd5b600260685414156112675760405162461bcd60e51b81526004016105ea90612969565b600260685560765461127857600080fd5b606d60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156112c857600080fd5b505af11580156112dc573d6000803e3d6000fd5b50506069546040516370a0823160e01b815260009350600292506001600160a01b03909116906370a08231906113169030906004016125b4565b602060405180830381865afa158015611333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113579190612b0b565b61136191906128d3565b90506000611371426102586129b7565b606954606b549192506001600160a01b03918216911614611411576040516338ed173960e01b8152600080516020612dd3833981519152906338ed1739906113c89085906000908b908b9030908990600401612b24565b6000604051808303816000875af11580156113e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261140f9190810190612b97565b505b606954606c546001600160a01b039081169116146114ae576040516338ed173960e01b8152600080516020612dd3833981519152906338ed1739906114659085906000908990899030908990600401612b24565b6000604051808303816000875af1158015611484573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114ac9190810190612b97565b505b606b54606c546040516370a0823160e01b8152600080516020612dd38339815191529263e8e33700926001600160a01b039182169291169082906370a08231906114fc9030906004016125b4565b602060405180830381865afa158015611519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153d9190612b0b565b606c546040516370a0823160e01b81526001600160a01b03909116906370a082319061156d9030906004016125b4565b602060405180830381865afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190612b0b565b60018030896040518963ffffffff1660e01b81526004016115d6989796959493929190612a94565b6060604051808303816000875af11580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116199190612add565b5050606a546040516370a0823160e01b8152600092506001600160a01b03909116906370a082319061164f9030906004016125b4565b602060405180830381865afa15801561166c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116909190612b0b565b9050801561170e5780607660008282546116aa91906129b7565b9091555050606d5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156116f557600080fd5b505af1158015611709573d6000803e3d6000fd5b505050505b60705461171b90436129a0565b6071819055611730908290610f5b90436129b7565b50504360705550506001606855505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061059a82846129a0565b6001600160a01b0383166000908152600160205260409020546117d390826117a4565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546118029082611e27565b6001600160a01b038084166000818152600160205260409081902093909355915190851690600080516020612db3833981519152906117979085815260200190565b600080516020612d6c833981519152546001600160a01b031690565b336118696119c3565b6001600160a01b03161461067057600080fd5b6000611886611844565b905061189184611e33565b60008351118061189e5750815b156118af576118ad8484611ec6565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166119bc57805460ff1916600117815560405161192a9086906118fb9085906024016125b4565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052611ec6565b50805460ff1916815561193b611844565b6001600160a01b0316826001600160a01b0316146119b35760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084016105ea565b6119bc85611eeb565b5050505050565b6036546001600160a01b031690565b6001600160a01b0381166000908152607560209081526040808320607054845290915290205460ff1615611a6c576001600160a01b038116600090815260726020908152604080832054607490925290912054611a2f90436129a0565b611a3991906128b4565b6001600160a01b03821660009081526073602052604081208054909190611a619084906129b7565b90915550611ae19050565b611a7581610465565b6001600160a01b0382166000908152607260205260409020819055607054611a9d90436129a0565b611aa791906128b4565b6001600160a01b038216600090815260736020908152604080832093909355607581528282206070548352905220805460ff191660011790555b6070546078541115611b2357607654607854611afd90436129a0565b611b0791906128b4565b60776000828254611b1891906129b7565b90915550611b419050565b607654607054611b3390436129a0565b611b3d91906128b4565b6077555b6001600160a01b031660009081526074602052604090204390819055607855565b6001600160a01b038116600090815260726020526040902054611ba8576001600160a01b038116600090815260016020526040902054611ba3908290611f2b565b505050565b600080546001600160a01b038316825260016020526040909120541415611bce57505050565b6000611bdb848484611fab565b9050611c638282611bee6012600a612d20565b611bf891906129a0565b611c046012600a612d20565b600054611c1190866128b4565b611c1b91906128d3565b6001600160a01b038616600090815260016020526040902054611c3e91906129a0565b611c4a6012600a612d20565b611c5491906128b4565b611c5e91906128d3565b611f2b565b50505050565b611ba38363a9059cbb60e01b8484604051602401611c88929190612a5e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261205e565b6000611cca30612130565b15905090565b600354610100900460ff16611ceb5760035460ff1615611cf3565b611cf3611cbf565b611d0f5760405162461bcd60e51b81526004016105ea906129f3565b600354610100900460ff16158015611d31576003805461ffff19166101011790555b611d3961213f565b611d416121ac565b8015610670576003805461ff001916905550565b600054611d7157611ba381611d6c6012600a612d20565b612233565b600080546001600160a01b038316825260016020526040909120541415611d9757505050565b6000611da4848484611fab565b9050611c638282611db76012600a612d20565b611dc191906129a0565b6001600160a01b038516600090815260016020526040902054611de66012600a612d20565b600054611df390876128b4565b611dfd91906128d3565b611e0791906129a0565b611e136012600a612d20565b611e1d91906128b4565b611d6c91906128d3565b600061059a82846129b7565b803b611e975760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105ea565b600080516020612d6c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b606061059a8383604051806060016040528060278152602001612d8c602791396122a4565b611ef481611e33565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b038216600090815260016020526040902054611f4e90826117a4565b6001600160a01b03831660009081526001602052604081209190915554611f7590826117a4565b60009081556040518281526001600160a01b03841690600080516020612db3833981519152906020015b60405180910390a35050565b6001600160a01b038116600090815260736020908152604080832054607290925282205482918591611fde9088906128b4565b611fe891906129b7565b606f54611ff591906128b4565b611fff91906128d3565b9050606f5460765461201191906129b7565b6001600160a01b0384166000908152607260205260409020546120359083906129b7565b6120416012600a612d20565b61204b91906128b4565b61205591906128d3565b95945050505050565b60006120b3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123789092919063ffffffff16565b805190915015611ba357808060200190518101906120d19190612a77565b611ba35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105ea565b6001600160a01b03163b151590565b600354610100900460ff166121aa5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105ea565b565b600354610100900460ff166121c75760035460ff16156121cf565b6121cf611cbf565b6121eb5760405162461bcd60e51b81526004016105ea906129f3565b600354610100900460ff1615801561220d576003805461ffff19166101011790555b603680546001600160a01b031916331790558015610670576003805461ff001916905550565b6000546122409082611e27565b60009081556001600160a01b0383168152600160205260409020546122659082611e27565b6001600160a01b038316600081815260016020526040808220939093559151909190600080516020612db383398151915290611f9f9085815260200190565b6060833b6123035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105ea565b600080856001600160a01b03168560405161231e9190612d2f565b600060405180830381855af49150503d8060008114612359576040519150601f19603f3d011682016040523d82523d6000602084013e61235e565b606091505b509150915061236e82828661238f565b9695505050505050565b606061238784846000856123c8565b949350505050565b6060831561239e57508161059a565b8251156123ae5782518084602001fd5b8160405162461bcd60e51b81526004016105ea9190612555565b6060824710156124295760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105ea565b61243285612130565b61247e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ea565b600080866001600160a01b0316858760405161249a9190612d2f565b60006040518083038185875af1925050503d80600081146124d7576040519150601f19603f3d011682016040523d82523d6000602084013e6124dc565b606091505b50915091506124ec82828661238f565b979650505050505050565b6001600160a01b038116811461067057600080fd5b60006020828403121561251e57600080fd5b813561059a816124f7565b60005b8381101561254457818101518382015260200161252c565b83811115611c635750506000910152565b6020815260008251806020840152612574816040850160208701612529565b601f01601f19169190910160400192915050565b6000806040838503121561259b57600080fd5b82356125a6816124f7565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6000806000606084860312156125dd57600080fd5b83356125e8816124f7565b925060208401356125f8816124f7565b929592945050506040919091013590565b801515811461067057600080fd5b6000806000806080858703121561262d57600080fd5b8435612638816124f7565b935060208501359250604085013561264f81612609565b9150606085013561265f816124f7565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156126a8576126a861266a565b604052919050565b600080604083850312156126c357600080fd5b82356126ce816124f7565b91506020838101356001600160401b03808211156126eb57600080fd5b818601915086601f8301126126ff57600080fd5b8135818111156127115761271161266a565b612723601f8201601f19168501612680565b9150808252878482850101111561273957600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806040838503121561276a57600080fd5b8235612775816124f7565b91506020830135612785816124f7565b809150509250929050565b600080604083850312156127a357600080fd5b50508035926020909101359150565b600080600080608085870312156127c857600080fd5b843593506020850135925060408501359150606085013561265f816124f7565b60008083601f8401126127fa57600080fd5b5081356001600160401b0381111561281157600080fd5b6020830191508360208260051b850101111561282c57600080fd5b9250929050565b6000806000806040858703121561284957600080fd5b84356001600160401b038082111561286057600080fd5b61286c888389016127e8565b9096509450602087013591508082111561288557600080fd5b50612892878288016127e8565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156128ce576128ce61289e565b500290565b6000826128f057634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602c90820152600080516020612d4c83398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c90820152600080516020612d4c83398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000828210156129b2576129b261289e565b500390565b600082198211156129ca576129ca61289e565b500190565b600080604083850312156129e257600080fd5b505080516020909101519092909150565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215612a5357600080fd5b815161059a816124f7565b6001600160a01b03929092168252602082015260400190565b600060208284031215612a8957600080fd5b815161059a81612609565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612af257600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215612b1d57600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015612b76578335612b5b816124f7565b6001600160a01b031682529282019290820190600101612b48565b506001600160a01b0396909616606085015250505060800152949350505050565b60006020808385031215612baa57600080fd5b82516001600160401b0380821115612bc157600080fd5b818501915085601f830112612bd557600080fd5b815181811115612be757612be761266a565b8060051b9150612bf8848301612680565b8181529183018401918481019088841115612c1257600080fd5b938501935b83851015612c3057845182529385019390850190612c17565b98975050505050505050565b600181815b80851115612c77578160001904821115612c5d57612c5d61289e565b80851615612c6a57918102915b93841c9390800290612c41565b509250929050565b600082612c8e575060016104f0565b81612c9b575060006104f0565b8160018114612cb15760028114612cbb57612cd7565b60019150506104f0565b60ff841115612ccc57612ccc61289e565b50506001821b6104f0565b5060208310610133831016604e8410600b8410161715612cfa575081810a6104f0565b612d048383612c3c565b8060001904821115612d1857612d1861289e565b029392505050565b600061059a60ff841683612c7f565b60008251612d41818460208701612529565b919091019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ffa2646970667358221220acecb7c16010ccaa4bbbdc9805c7a4880a4b1a733d8064cde1baddd822526d5864736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207a931010d16e93aebdd6d857185803f7e7ab8f3c33081867bc498f6bd7eecc2864736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14244:42",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:42",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:42",
                "type": ""
              }
            ],
            "src": "14:177:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:86:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "264:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "275:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "295:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "286:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "286:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "282:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "271:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:31:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "261:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:42:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:42"
                  },
                  "nodeType": "YulIf",
                  "src": "251:70:42"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "230:5:42",
                "type": ""
              }
            ],
            "src": "196:131:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "416:283:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "465:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "477:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "467:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "467:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "467:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "444:6:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "452:4:42",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "440:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "440:17:42"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "459:3:42"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "436:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "436:27:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "429:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:35:42"
                  },
                  "nodeType": "YulIf",
                  "src": "426:55:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "490:30:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "513:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "500:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "490:6:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "563:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "572:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "575:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "565:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "565:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "565:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "535:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "551:2:42",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "555:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "547:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "547:10:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "559:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "532:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:30:42"
                  },
                  "nodeType": "YulIf",
                  "src": "529:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "588:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "604:6:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "612:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:17:42"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "588:8:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "677:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "686:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "679:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "679:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "679:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "640:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "652:1:42",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "655:6:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "648:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "648:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "636:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "636:27:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "665:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "632:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:38:42"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "672:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "629:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:47:42"
                  },
                  "nodeType": "YulIf",
                  "src": "626:67:42"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "379:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "387:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "395:8:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "405:6:42",
                "type": ""
              }
            ],
            "src": "332:367:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "878:734:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "924:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "933:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "926:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "926:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "926:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "899:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "908:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "920:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "891:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "888:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "949:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "975:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "962:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "953:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1019:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "994:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "994:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1044:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1058:46:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1089:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1100:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1085:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1072:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1062:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1113:28:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1131:2:42",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1135:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:10:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1139:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:18:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1117:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1168:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1177:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1180:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1170:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1170:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1170:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1156:6:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1164:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1153:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:14:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1150:34:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1193:96:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1261:9:42"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1272:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1257:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1257:22:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1281:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1219:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1219:70:42"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "1197:8:42",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1207:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:18:42",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "1308:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1298:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1325:18:42",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "1335:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1325:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1352:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1385:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1396:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1368:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1356:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1429:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1438:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1441:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1431:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1431:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1431:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1415:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1425:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1412:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1409:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1454:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1522:9:42"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1533:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1518:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1518:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1544:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1480:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:72:42"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1458:8:42",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "1468:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1561:18:42",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "1571:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1561:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1588:18:42",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "1598:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1588:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "812:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "823:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "835:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "843:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "851:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "859:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "867:6:42",
                "type": ""
              }
            ],
            "src": "704:908:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1659:76:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1713:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1722:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1725:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1715:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1715:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1715:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1682:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1703:5:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:13:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1689:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1689:21:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1679:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1672:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1672:40:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1669:60:42"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1648:5:42",
                "type": ""
              }
            ],
            "src": "1617:118:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1858:474:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1905:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1914:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1917:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1907:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1907:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1907:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1879:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1888:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1875:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1875:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1900:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1871:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1868:53:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1930:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1943:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1943:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1934:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2000:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1975:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1975:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1975:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2015:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2025:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2015:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2039:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2066:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2077:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2062:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2062:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2049:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2039:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2090:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2105:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2094:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2168:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2146:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2185:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2195:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2211:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2243:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2254:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2239:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2239:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2226:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2215:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2292:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2267:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2267:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2309:17:42",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2319:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2309:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1811:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1823:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1831:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1839:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1847:6:42",
                "type": ""
              }
            ],
            "src": "1740:592:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2466:119:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2476:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2488:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2499:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2476:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2518:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2529:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2556:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2567:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2552:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2552:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2572:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2545:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2545:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2545:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2427:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2438:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2457:4:42",
                "type": ""
              }
            ],
            "src": "2337:248:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2677:301:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2723:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2732:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2735:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2725:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2725:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2725:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2698:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2707:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2694:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2719:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2690:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2690:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "2687:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2748:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2774:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2761:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2752:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2818:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2793:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2793:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2793:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2833:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2843:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2833:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2857:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2889:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2900:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2885:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2885:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2872:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2872:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2861:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2938:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2913:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2913:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2913:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2955:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2965:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2955:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2635:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2646:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2658:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2666:6:42",
                "type": ""
              }
            ],
            "src": "2590:388:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3140:162:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3150:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3162:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3173:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3158:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3158:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3150:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3192:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3203:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3185:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3185:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3230:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3246:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3273:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3284:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3269:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3269:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3289:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3093:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3104:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3112:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3120:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3131:4:42",
                "type": ""
              }
            ],
            "src": "2983:319:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3402:92:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3412:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3424:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3435:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3420:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3420:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3412:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3454:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3479:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3472:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3472:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3465:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3465:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3447:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3447:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3447:41:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3371:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3382:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3393:4:42",
                "type": ""
              }
            ],
            "src": "3307:187:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3603:279:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3649:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3658:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3661:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3651:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3651:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3651:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3624:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3633:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3620:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3620:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3645:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3616:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3616:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3613:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3674:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3700:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3687:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3687:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3678:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3744:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3719:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3719:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3719:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3759:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3769:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3759:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3783:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3810:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3821:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3806:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3806:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3793:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3793:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3783:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3834:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3861:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3872:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3857:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3857:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3844:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3834:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3553:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3564:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3576:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3584:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3592:6:42",
                "type": ""
              }
            ],
            "src": "3499:383:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4025:456:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4072:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4081:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4084:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4074:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4074:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4074:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4046:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4055:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4042:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4042:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4067:3:42",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4038:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4038:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4035:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4097:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4120:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4107:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4107:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4097:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4139:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4166:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4177:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4162:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4162:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4149:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4149:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4139:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4190:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4217:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4228:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4213:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4213:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4200:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4200:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4190:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4241:45:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4271:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4282:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4267:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4267:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4254:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4254:32:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4245:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4320:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4295:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4295:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4335:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4345:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4335:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4359:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4391:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4402:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4387:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4387:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4374:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4374:33:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4363:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4441:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4416:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4416:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4416:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4458:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4468:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4458:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3959:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3970:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3982:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3990:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3998:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4006:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4014:6:42",
                "type": ""
              }
            ],
            "src": "3887:594:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4587:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4597:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4609:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4620:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4605:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4605:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4597:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4639:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4654:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4670:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4675:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4666:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4666:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4679:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4662:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4662:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4650:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4650:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4632:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4632:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4556:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4567:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4578:4:42",
                "type": ""
              }
            ],
            "src": "4486:203:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4764:177:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4810:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4819:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4822:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4812:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4812:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4812:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4785:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4794:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4781:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4781:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4806:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4777:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4777:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4774:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4835:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4861:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4848:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4848:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4839:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4905:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4880:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4880:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4880:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4920:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4930:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4920:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4730:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4741:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4753:6:42",
                "type": ""
              }
            ],
            "src": "4694:247:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5016:110:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5062:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5071:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5074:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5064:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5064:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5064:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5037:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5046:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5033:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5033:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5058:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5029:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5029:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5026:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5087:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5110:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5097:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5097:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5087:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4982:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4993:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5005:6:42",
                "type": ""
              }
            ],
            "src": "4946:180:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5265:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5275:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5287:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5298:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5283:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5283:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5275:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5317:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5332:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5348:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5353:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5344:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5344:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5357:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5340:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5340:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5328:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5328:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5310:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5310:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5310:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_QuickswapFarmUpgradeable_$8243__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5234:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5245:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5256:4:42",
                "type": ""
              }
            ],
            "src": "5131:236:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5546:166:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5563:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5574:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5556:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5556:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5556:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5597:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5608:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5593:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5593:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5613:2:42",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5586:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5586:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5586:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5636:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5647:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5632:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5632:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5652:18:42",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5625:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5625:46:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5625:46:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5680:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5692:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5703:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5688:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5688:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5680:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5523:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5537:4:42",
                "type": ""
              }
            ],
            "src": "5372:340:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5795:444:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5812:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5817:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5805:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5805:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5805:19:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5833:14:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5843:4:42",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5837:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5856:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5867:3:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5872:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5863:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5863:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5856:3:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5884:19:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5898:5:42"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5888:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5912:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5921:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5916:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5980:234:42",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5994:35:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6022:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "6009:12:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6009:20:42"
                        },
                        "variables": [
                          {
                            "name": "value_1",
                            "nodeType": "YulTypedName",
                            "src": "5998:7:42",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "6067:7:42"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "6042:24:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6042:33:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6042:33:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6095:3:42"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6104:7:42"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6121:3:42",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6126:1:42",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "6117:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6117:11:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6130:1:42",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "6113:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6113:19:42"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6100:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6100:33:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6088:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6088:46:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6088:46:42"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6147:19:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6158:3:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6163:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6154:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6154:12:42"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6147:3:42"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6179:25:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6193:6:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6201:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6189:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6189:15:42"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6179:6:42"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5942:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5945:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5939:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5939:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5953:18:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5955:14:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5964:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5967:1:42",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5960:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5960:9:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5955:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5935:3:42",
                    "statements": []
                  },
                  "src": "5931:283:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6223:10:42",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6230:3:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6223:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5764:5:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5771:6:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5779:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5787:3:42",
                "type": ""
              }
            ],
            "src": "5717:522:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6493:270:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6510:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6521:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6503:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6503:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6503:21:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6533:87:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6585:6:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6593:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6605:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6616:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6601:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6601:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "6547:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6547:73:42"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6537:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6640:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6651:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6636:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6636:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "6660:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6656:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6656:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6629:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6629:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6629:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:69:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6734:6:42"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6742:6:42"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6750:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "6696:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:61:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6688:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6438:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6449:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6457:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6465:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6473:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6484:4:42",
                "type": ""
              }
            ],
            "src": "6244:519:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6942:182:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6959:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6970:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6952:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6952:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6993:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7004:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6989:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6989:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7009:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6982:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6982:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6982:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7032:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7043:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7028:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7028:18:42"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7048:34:42",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7021:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7021:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7021:62:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7092:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7104:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7115:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7100:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7100:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7092:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6919:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6933:4:42",
                "type": ""
              }
            ],
            "src": "6768:356:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7308:278:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7318:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7330:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7341:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7326:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7318:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7354:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7372:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7377:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7368:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7368:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7381:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7364:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7364:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7358:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7399:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7414:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7422:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7410:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7410:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7392:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7392:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7392:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7446:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7457:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7442:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7442:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7462:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7435:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7435:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7489:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7500:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7485:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7485:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7519:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7512:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7512:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7505:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7505:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7478:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7478:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7478:50:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7548:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7559:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7544:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7544:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7568:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7576:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7564:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7564:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7537:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7537:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7537:43:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7253:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7264:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7272:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7280:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7288:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7299:4:42",
                "type": ""
              }
            ],
            "src": "7129:457:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7689:147:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7735:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7744:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7747:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7737:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7737:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7737:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7710:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7719:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7706:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7706:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7731:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7702:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7702:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7699:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7760:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7776:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7770:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7770:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7760:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7795:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7815:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7826:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7811:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7811:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7805:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7805:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7795:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7647:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7658:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7670:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7678:6:42",
                "type": ""
              }
            ],
            "src": "7591:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7922:103:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7968:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7977:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7980:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7970:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7970:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7970:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7943:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7952:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7939:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7939:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7964:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7935:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7935:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7932:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7993:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8009:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8003:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8003:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7993:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7888:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7899:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7911:6:42",
                "type": ""
              }
            ],
            "src": "7841:184:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8111:170:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8157:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8166:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8169:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8159:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8159:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8159:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8132:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8141:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8128:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8128:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8153:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8124:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8124:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8121:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8182:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8201:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8195:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8195:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8186:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8245:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8220:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8220:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8220:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8260:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8270:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8260:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8077:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8088:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8100:6:42",
                "type": ""
              }
            ],
            "src": "8030:251:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8471:232:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8481:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8493:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8504:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8489:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8489:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8481:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8524:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8535:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8517:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8517:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8517:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8562:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8573:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8558:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8558:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8578:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8551:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8551:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8551:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8605:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8616:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8601:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8601:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8621:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8594:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8594:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8594:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8648:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8659:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8644:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8644:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "8668:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8684:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8689:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8680:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8680:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8693:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8676:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8676:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8664:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8664:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8637:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8637:60:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8637:60:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8416:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8427:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8435:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8443:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8451:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8462:4:42",
                "type": ""
              }
            ],
            "src": "8286:417:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8823:191:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8869:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8878:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8881:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8871:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8871:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8871:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8844:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8853:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8840:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8840:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8865:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8836:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8836:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8833:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8894:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8910:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8904:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8904:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8894:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8929:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8949:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8960:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8945:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8945:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8939:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8939:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8929:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8973:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8993:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9004:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8989:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8989:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8983:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8983:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8973:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8773:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8784:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8796:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8804:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8812:6:42",
                "type": ""
              }
            ],
            "src": "8708:306:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9193:236:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9210:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9221:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9203:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9203:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9203:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9244:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9255:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9240:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9240:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9260:2:42",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9233:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9233:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9233:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9283:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9294:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9279:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9279:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9299:34:42",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9272:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9272:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9272:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9354:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9365:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9350:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9350:18:42"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9370:16:42",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9343:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9343:44:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9343:44:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9396:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9408:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9419:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9404:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9404:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9396:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9170:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9184:4:42",
                "type": ""
              }
            ],
            "src": "9019:410:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9608:228:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9625:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9636:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9618:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9618:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9618:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9659:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9670:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9655:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9655:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9675:2:42",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9648:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9648:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9648:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9698:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9709:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9694:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9694:18:42"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9714:34:42",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9687:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9687:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9687:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9769:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9780:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9765:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9765:18:42"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9785:8:42",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9758:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9758:36:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9758:36:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9803:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9815:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9826:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9811:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9811:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9803:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9585:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9599:4:42",
                "type": ""
              }
            ],
            "src": "9434:402:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10015:170:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10032:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10043:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10025:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10025:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10025:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10066:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10077:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10062:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10062:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10082:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10055:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10055:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10055:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10105:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10116:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10101:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10101:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10121:22:42",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10094:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10094:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10094:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10153:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10165:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10176:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10161:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10161:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10153:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9992:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10006:4:42",
                "type": ""
              }
            ],
            "src": "9841:344:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10242:213:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10309:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10330:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10337:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10342:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10333:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10333:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10323:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10323:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10323:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10374:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10377:4:42",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10367:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10367:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10367:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10402:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10405:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10395:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10395:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10395:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10273:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10266:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10266:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10259:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10259:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10281:1:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10292:1:42",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10288:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10288:6:42"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10296:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10284:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10284:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10278:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10278:21:42"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10255:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10255:45:42"
                  },
                  "nodeType": "YulIf",
                  "src": "10252:168:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10429:20:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10444:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10447:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10440:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10440:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10429:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10221:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10224:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10230:7:42",
                "type": ""
              }
            ],
            "src": "10190:265:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10506:171:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10537:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10558:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10565:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10570:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10561:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10561:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10551:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10551:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10551:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10602:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10605:4:42",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10595:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10595:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10595:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10630:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10633:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10623:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10623:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10623:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10526:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10519:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10519:9:42"
                  },
                  "nodeType": "YulIf",
                  "src": "10516:132:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10657:14:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10666:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10669:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10662:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10662:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10657:1:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10491:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10494:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10500:1:42",
                "type": ""
              }
            ],
            "src": "10460:217:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10735:205:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10745:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10754:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10749:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10814:63:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10839:3:42"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10844:1:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10835:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10835:11:42"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10858:3:42"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10863:1:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10854:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10854:11:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10848:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10848:18:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10828:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10828:39:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10828:39:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10775:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10778:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10772:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10772:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10786:19:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10788:15:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10797:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10800:2:42",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10793:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10793:10:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10788:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10768:3:42",
                    "statements": []
                  },
                  "src": "10764:113:42"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10903:31:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10916:3:42"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10921:6:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10912:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10912:16:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10930:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10905:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10905:27:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10905:27:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10892:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10895:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10889:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10889:13:42"
                  },
                  "nodeType": "YulIf",
                  "src": "10886:48:42"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10713:3:42",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10718:3:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10723:6:42",
                "type": ""
              }
            ],
            "src": "10682:258:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10994:208:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11004:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11024:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11018:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11018:12:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11008:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11046:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11051:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11039:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11039:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11039:19:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11093:5:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11100:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11089:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11089:16:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11111:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11116:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11107:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11107:14:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11123:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "11067:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11067:63:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11067:63:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11139:57:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11154:3:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11167:6:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11175:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11163:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11163:15:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11184:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11180:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11180:7:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11159:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11159:29:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11150:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11150:39:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11191:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11146:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11146:50:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11139:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10971:5:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10978:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10986:3:42",
                "type": ""
              }
            ],
            "src": "10945:257:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11354:167:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11371:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11386:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11402:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11407:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11398:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11398:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11411:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11394:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11394:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11382:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11382:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11364:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11364:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11364:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11435:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11446:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11431:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11431:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11451:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11424:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11424:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11424:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11463:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11488:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11500:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11511:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11496:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11496:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "11471:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11471:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11463:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11315:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11326:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11334:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11345:4:42",
                "type": ""
              }
            ],
            "src": "11207:314:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11683:218:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11693:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11705:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11716:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11701:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11701:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11693:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11728:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11746:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11751:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11742:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11742:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11755:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11738:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11738:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11732:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11773:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11788:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11796:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11784:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11784:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11766:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11766:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11766:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11820:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11831:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11816:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11816:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11840:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11848:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11836:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11836:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11809:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11809:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11809:43:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11872:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11883:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11868:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11868:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11888:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11861:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11861:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11861:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11636:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11647:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11655:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11663:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11674:4:42",
                "type": ""
              }
            ],
            "src": "11526:375:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12080:233:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12097:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12108:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12090:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12090:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12090:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12131:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12142:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12127:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12127:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12147:2:42",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12120:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12120:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12120:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12170:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12181:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12166:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12166:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12186:34:42",
                        "type": "",
                        "value": "Initializable: contract is not i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12159:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12159:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12159:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12241:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12252:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12237:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12237:18:42"
                      },
                      {
                        "hexValue": "6e697469616c697a696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12257:13:42",
                        "type": "",
                        "value": "nitializing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12230:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12230:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12230:41:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12280:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12292:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12303:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12288:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12288:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12280:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12057:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12071:4:42",
                "type": ""
              }
            ],
            "src": "11906:407:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12396:167:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12442:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12451:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12454:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12444:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12444:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12444:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12417:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12426:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12413:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12413:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12438:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12409:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12409:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "12406:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12467:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12486:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12480:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12480:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12471:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12527:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12505:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12505:28:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12505:28:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12542:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12552:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12542:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12362:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12373:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12385:6:42",
                "type": ""
              }
            ],
            "src": "12318:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12742:232:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12759:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12770:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12752:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12752:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12752:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12793:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12804:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12789:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12789:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12809:2:42",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12782:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12782:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12782:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12832:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12843:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12828:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12828:18:42"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12848:34:42",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12821:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12821:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12821:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12903:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12914:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12899:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12899:18:42"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12919:12:42",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12892:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12892:40:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12892:40:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12941:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12953:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12964:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12949:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12949:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12941:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12719:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12733:4:42",
                "type": ""
              }
            ],
            "src": "12568:406:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13153:228:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13170:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13181:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13163:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13163:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13163:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13204:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13215:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13200:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13200:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13220:2:42",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13193:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13193:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13193:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13243:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13254:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13239:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13239:18:42"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13259:34:42",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13232:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13232:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13232:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13314:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13325:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13310:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13310:18:42"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13330:8:42",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13303:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13303:36:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13303:36:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13348:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13360:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13371:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13356:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13356:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13348:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13130:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13144:4:42",
                "type": ""
              }
            ],
            "src": "12979:402:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13560:179:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13577:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13588:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13570:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13570:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13570:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13611:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13622:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13607:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13607:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13627:2:42",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13600:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13600:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13600:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13650:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13661:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13646:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13646:18:42"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13666:31:42",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13639:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13639:59:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13639:59:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13707:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13719:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13730:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13715:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13715:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13707:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13537:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13551:4:42",
                "type": ""
              }
            ],
            "src": "13386:353:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13881:137:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13891:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13911:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13905:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13905:13:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13895:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13953:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13961:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13949:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13949:17:42"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13968:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13973:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13927:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13927:53:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13927:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13989:23:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14000:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14005:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13996:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13996:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13989:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13857:3:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13862:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13873:3:42",
                "type": ""
              }
            ],
            "src": "13744:274:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14144:98:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14161:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14172:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14154:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14154:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14154:21:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14184:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14209:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14221:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14232:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14217:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14217:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "14192:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14192:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14184:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14113:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14124:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14135:4:42",
                "type": ""
              }
            ],
            "src": "14023:219:42"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_QuickswapFarmUpgradeable_$8243__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_address_dyn_calldata(value2, value3, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "542:8719:22:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "542:8719:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7499:94;7571:7;:14;7499:94;;160:25:42;;;148:2;133:18;7499:94:22;;;;;;;;5628:412;;;;;;:::i;:::-;;:::i;:::-;;7849:67;;;:::i;4239:391::-;;;;;;:::i;:::-;;:::i;:::-;;;;2511:25:42;;;2567:2;2552:18;;2545:34;;;;2484:18;4239:391:22;2337:248:42;6401:347:22;;;;;;:::i;:::-;;:::i;:::-;;;;3185:25:42;;;3241:2;3226:18;;3219:34;;;;3269:18;;;3262:34;3173:2;3158:18;6401:347:22;2983:319:42;1341:84:2;1411:7;;;;1341:84;;3472:14:42;;3465:22;3447:41;;3435:2;3420:18;1341:84:2;3307:187:42;4994:283:22;;;;;;:::i;:::-;;:::i;1908:101:0:-;;;:::i;2648:1063:22:-;;;;;;:::i;:::-;;:::i;7778:63::-;;;:::i;1276:85:0:-;;;:::i;:::-;;;;;;;:::i;1051:26:22:-;;;;;-1:-1:-1;;;;;1051:26:22;;;1639:328;;;;;;:::i;:::-;;:::i;1017:25::-;;;;;-1:-1:-1;;;;;1017:25:22;;;7601:169;;;;;;:::i;:::-;;:::i;7109:382::-;;;;;;:::i;:::-;;:::i;1128:24::-;;;;;;:::i;:::-;;:::i;2158:198:0:-;;;;;;:::i;:::-;;:::i;1084:37:22:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1084:37:22;;;5628:412;1555:11;;-1:-1:-1;;;;;1555:11:22;1541:10;:25;1533:34;;;;;;1411:7:2;;;;1654:9:::1;1646:38;;;;-1:-1:-1::0;;;1646:38:2::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;5854:20:22;;::::2;5891:1;5854:20:::0;;;:5:::2;:20;::::0;;;;;::::2;5846:49;;;::::0;::::2;;-1:-1:-1::0;;;;;5908:20:22;;::::2;;::::0;;;:5:::2;:20;::::0;;;;;;;:83;;-1:-1:-1;;;5908:83:22;;:20;::::2;::::0;:31:::2;::::0;:83:::2;::::0;5940:24;;;;5966;;;;5908:83:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;6007:25:22::2;::::0;-1:-1:-1;;;;;6007:25:22;::::2;::::0;-1:-1:-1;6007:25:22::2;::::0;-1:-1:-1;6007:25:22;;::::2;5628:412:::0;;;;;:::o;7849:67::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7898:10:22::1;:8;:10::i;:::-;7849:67::o:0;4239:391::-;4363:15;4380;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4415:20:22;;::::1;4452:1;4415:20:::0;;;:5:::1;:20;::::0;;;;;::::1;4407:49;;;::::0;::::1;;-1:-1:-1::0;;;;;4488:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:72;;-1:-1:-1;;;4488:72:22;;4518:10:::1;4488:72;::::0;::::1;7392:34:42::0;7442:18;;;7435:34;;;7512:14;;7505:22;7485:18;;;7478:50;7564:15;;;7544:18;;;7537:43;4488:20:22;::::1;::::0;:29:::1;::::0;7326:19:42;;4488:72:22::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4577:43;::::0;160:25:42;;;4467:93:22;;-1:-1:-1;4467:93:22;-1:-1:-1;;;;;;4577:43:22;::::1;::::0;4586:10:::1;::::0;4577:43:::1;::::0;148:2:42;133:18;4577:43:22::1;;;;;;;4239:391:::0;;;;;;;:::o;6401:347::-;-1:-1:-1;;;;;6548:20:22;;;6484:15;6548:20;;;:5;:20;;;;;;6484:15;;;;;;6548:20;:40;6544:197;;-1:-1:-1;;;;;6616:20:22;;;;;;;:5;:20;;;;;;;;:42;;-1:-1:-1;;;6616:42:22;;:20;;;:32;;:42;;6649:8;;6616:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6605:53;;6692:37;6706:13;6721:7;6692:13;:37::i;:::-;6673:56;;-1:-1:-1;6673:56:22;-1:-1:-1;6544:197:22;6401:347;;;;;:::o;4994:283::-;1555:11;;-1:-1:-1;;;;;1555:11:22;1541:10;:25;1533:34;;;;;;-1:-1:-1;;;;;5141:20:22;;::::1;5178:1;5141:20:::0;;;:5:::1;:20;::::0;;;;;::::1;5133:49;;;::::0;::::1;;-1:-1:-1::0;;;;;5193:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:75;;-1:-1:-1;;;5193:75:22;;::::1;::::0;::::1;2511:25:42::0;;;2552:18;;;2545:34;;;5193:20:22;::::1;::::0;:38:::1;::::0;2484:18:42;;5193:75:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4994:283:::0;;;:::o;1908:101:0:-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;2648:1063:22:-:0;2790:13;2805;2820:17;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2852:20:22;;::::1;2889:1;2852:20:::0;;;:5:::1;:20;::::0;;;;;::::1;2849:167;;2936:25;2947:13;2936:10;:25::i;:::-;-1:-1:-1::0;;;;;2908:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;:54;;;;;::::1;-1:-1:-1::0;;;;;;2908:54:22;;::::1;;::::0;;;2977:7:::1;:27:::0;;2908:54;2977:27;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;;::::0;;2849:167:::1;3031:11:::0;;3028:159:::1;;-1:-1:-1::0;;;;;3144:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;;;3076:29;;-1:-1:-1;;;3076:29:22;;;;3058:117:::1;::::0;3124:10:::1;::::0;3144:20;::::1;::::0;3167:7;;3144:20;;3076:27:::1;::::0;:29:::1;::::0;;::::1;::::0;3144:20;;3076:29;;;;;;3144:20;3076:29:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3058:65:22::1;::::0;:117;;:65:::1;:117::i;:::-;3200:11:::0;;3197:159:::1;;-1:-1:-1::0;;;;;3313:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;;;3245:29;;-1:-1:-1;;;3245:29:22;;;;3227:117:::1;::::0;3293:10:::1;::::0;3313:20;::::1;::::0;3336:7;;3313:20;;3245:27:::1;::::0;:29:::1;::::0;;::::1;::::0;3313:20;;3245:29;;;;;;3313:20;3245:29:::1;;;;;;;;;::::0;::::1;;;;3227:117;3369:12:::0;;3366:161:::1;;-1:-1:-1::0;;;;;3483:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;;;3415:29;;-1:-1:-1;;;3415:29:22;;;;3397:118:::1;::::0;3463:10:::1;::::0;3483:20;::::1;::::0;3506:8;;3483:20;;3415:27:::1;::::0;:29:::1;::::0;;::::1;::::0;3483:20;;3415:29;;;;;;3483:20;3415:29:::1;;;;;;;;;::::0;::::1;;;;3397:118;-1:-1:-1::0;;;;;3574:20:22;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:67;;-1:-1:-1;;;3574:67:22;;::::1;::::0;::::1;8517:25:42::0;;;8558:18;;;8551:34;;;8601:18;;;8594:34;;;8664:32;;;8644:18;;;8637:60;3574:20:22;::::1;::::0;:28:::1;::::0;8489:19:42;;3574:67:22::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3658:44;::::0;160:25:42;;;3546:95:22;;-1:-1:-1;3546:95:22;;-1:-1:-1;3546:95:22;-1:-1:-1;;;;;;3658:44:22;;::::1;::::0;;;::::1;::::0;::::1;::::0;148:2:42;133:18;3658:44:22::1;;;;;;;2648:1063:::0;;;;;;;;;:::o;7778:63::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7825:8:22::1;:6;:8::i;1276:85:0:-:0;1348:6;;-1:-1:-1;;;;;1348:6:0;;1276:85::o;1639:328:22:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;2385:16;:14;:16::i;:::-;2361:107;;;;-1:-1:-1;;;2361:107:1;;9221:2:42;2361:107:1;;;9203:21:42;9260:2;9240:18;;;9233:30;9299:34;9279:18;;;9272:62;-1:-1:-1;;;9350:18:42;;;9343:44;9404:19;;2361:107:1;9019:410:42;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;1709:17:22::1;:15;:17::i;:::-;1737:16;:14;:16::i;:::-;1764:28;1783:8;1764:18;:28::i;:::-;1868:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1824:66;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1803:10:22::1;:88:::0;;-1:-1:-1;;;;;;1803:88:22::1;-1:-1:-1::0;;;;;1803:88:22;;;::::1;::::0;;::::1;::::0;;1902:57:::1;::::0;-1:-1:-1;;;1902:57:22;;:47:::1;::::0;:57:::1;::::0;1950:8;;1902:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2649:14:1::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;1639:328:22;:::o;7601:169::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7684:11:22::1;:28:::0;;-1:-1:-1;;;;;;7684:28:22::1;-1:-1:-1::0;;;;;7684:28:22;::::1;::::0;;::::1;::::0;;;7728:34:::1;::::0;::::1;::::0;-1:-1:-1;;7728:34:22::1;7601:169:::0;:::o;7109:382::-;-1:-1:-1;;;;;7266:20:22;;;7178:23;7266:20;;;:5;:20;;;;;;7178:23;;;;;;7266:20;:40;7262:222;;-1:-1:-1;;;;;7341:20:22;;;;;;;:5;:20;;;;;;;;;;:36;;-1:-1:-1;;;7341:36:22;;;;:20;;;:34;;:36;;;;;:20;:36;;;;;;:20;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7323:54;;7427:45;7441:13;7456:15;7427:13;:45::i;:::-;7392:80;;-1:-1:-1;7392:80:22;-1:-1:-1;7262:222:22;7109:382;;;;;:::o;1128:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1128:24:22;;-1:-1:-1;1128:24:22;:::o;2158:198:0:-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:0;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:0;;9636:2:42;2238:73:0::1;::::0;::::1;9618:21:42::0;9675:2;9655:18;;;9648:30;9714:34;9694:18;;;9687:62;-1:-1:-1;;;9765:18:42;;;9758:36;9811:19;;2238:73:0::1;9434:402:42::0;2238:73:0::1;2321:28;2340:8;2321:18;:28::i;:::-;2158:198:::0;:::o;2353:117:2:-;1411:7;;;;1912:41;;;;-1:-1:-1;;;1912:41:2;;10043:2:42;1912:41:2;;;10025:21:42;10082:2;10062:18;;;10055:30;-1:-1:-1;;;10101:18:42;;;10094:50;10161:18;;1912:41:2;9841:344:42;1912:41:2;2411:7:::1;:15:::0;;-1:-1:-1;;2411:15:2::1;::::0;;2441:22:::1;929:10:6::0;2450:12:2::1;2441:22;;;;;;:::i;:::-;;;;;;;;2353:117::o:0;8253:533:22:-;-1:-1:-1;;;;;8389:20:22;;;8340:15;8389:20;;;:5;:20;;;;;;8340:15;;;;8389:20;:40;8385:394;;-1:-1:-1;;;;;8463:20:22;;;8446:14;8463:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;8463:29:22;;;;8446:14;;8463:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8446:46;;8507:19;8536:6;-1:-1:-1;;;;;8529:26:22;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8600:20:22;;;;;;;:5;:20;;;;;;;;;;:29;;-1:-1:-1;;;8600:29:22;;;;8507:50;;-1:-1:-1;8507:50:22;;8600:20;;;:27;;:29;;;;;:20;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8593:47:22;;8641:6;8593:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8582:66;;:8;:66;:::i;:::-;:80;;;;:::i;:::-;-1:-1:-1;;;;;8705:20:22;;;;;;;:5;:20;;;;;;;;;;:29;;-1:-1:-1;;;8705:29:22;;;;8572:90;;-1:-1:-1;8756:11:22;;8705:20;;;:27;;:29;;;;;:20;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8698:47:22;;8746:6;8698:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8687:66;;:8;:66;:::i;:::-;:80;;;;:::i;:::-;8677:90;;8431:348;;8385:394;8253:533;;;;;:::o;2510:187:0:-;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;8883:375:22:-;9014:10;;9039:124;;8944:7;;;;-1:-1:-1;;;;;9014:10:22;;;;-1:-1:-1;;;9080:36:22;9039:124;;9135:13;;9039:124;;;:::i;:::-;;;;-1:-1:-1;;9039:124:22;;;;;;;;;;;;;;-1:-1:-1;;;;;9039:124:22;-1:-1:-1;;;;;;9039:124:22;;;;;;;;;;8984:190;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9190:28:22;;8964:210;;-1:-1:-1;;;;;;9190:28:22;;;;;;;;9244:5;8883:375;-1:-1:-1;;8883:375:22:o;967:252:4:-;1143:68;;;-1:-1:-1;;;;;11784:15:42;;;1143:68:4;;;11766:34:42;11836:15;;11816:18;;;11809:43;11868:18;;;;11861:34;;;1143:68:4;;;;;;;;;;11701:18:42;;;;1143:68:4;;;;;;;;-1:-1:-1;;;;;1143:68:4;-1:-1:-1;;;1143:68:4;;;1116:96;;1136:5;;1116:19;:96::i;:::-;967:252;;;;:::o;2106:115:2:-;1411:7;;;;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;2165:7:::1;:14:::0;;-1:-1:-1;;2165:14:2::1;2175:4;2165:14;::::0;;2194:20:::1;2201:12;929:10:6::0;;850:96;3037:123:1;3085:4;3109:44;3147:4;3109:29;:44::i;:::-;3108:45;3101:52;;3037:123;:::o;1048:97:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1111:27:2::1;:25;:27::i;988:95:0:-:0;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;3306:717:4:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:4;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:4;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:4;;12770:2:42;3921:85:4;;;12752:21:42;12809:2;12789:18;;;12782:30;12848:34;12828:18;;;12821:62;-1:-1:-1;;;12899:18:42;;;12892:40;12949:19;;3921:85:4;12568:406:42;3921:85:4;3387:636;3306:717;;:::o;1186:320:5:-;-1:-1:-1;;;;;1476:19:5;;:23;;;1186:320::o;1151:95:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1224:7:2::1;:15:::0;;-1:-1:-1;;1224:15:2::1;::::0;;1151:95::o;1089:111:0:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:6::0;1161:18:0::1;:32::i;3872:223:5:-:0;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:5;;13181:2:42;5148:81:5;;;13163:21:42;13220:2;13200:18;;;13193:30;13259:34;13239:18;;;13232:62;-1:-1:-1;;;13310:18:42;;;13303:36;13356:19;;5148:81:5;12979:402:42;5148:81:5;5247:18;5258:6;5247:10;:18::i;:::-;5239:60;;;;-1:-1:-1;;;5239:60:5;;13588:2:42;5239:60:5;;;13570:21:42;13627:2;13607:18;;;13600:30;13666:31;13646:18;;;13639:59;13715:18;;5239:60:5;13386:353:42;5239:60:5;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:5;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:5:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:5;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:42:-;-1:-1:-1;;;;;271:31:42;;261:42;;251:70;;317:1;314;307:12;332:367;395:8;405:6;459:3;452:4;444:6;440:17;436:27;426:55;;477:1;474;467:12;426:55;-1:-1:-1;500:20:42;;-1:-1:-1;;;;;532:30:42;;529:50;;;575:1;572;565:12;529:50;612:4;604:6;600:17;588:29;;672:3;665:4;655:6;652:1;648:14;640:6;636:27;632:38;629:47;626:67;;;689:1;686;679:12;704:908;835:6;843;851;859;867;920:2;908:9;899:7;895:23;891:32;888:52;;;936:1;933;926:12;888:52;975:9;962:23;994:31;1019:5;994:31;:::i;:::-;1044:5;-1:-1:-1;1100:2:42;1085:18;;1072:32;-1:-1:-1;;;;;1153:14:42;;;1150:34;;;1180:1;1177;1170:12;1150:34;1219:70;1281:7;1272:6;1261:9;1257:22;1219:70;:::i;:::-;1308:8;;-1:-1:-1;1193:96:42;-1:-1:-1;1396:2:42;1381:18;;1368:32;;-1:-1:-1;1412:16:42;;;1409:36;;;1441:1;1438;1431:12;1409:36;;1480:72;1544:7;1533:8;1522:9;1518:24;1480:72;:::i;:::-;704:908;;;;-1:-1:-1;704:908:42;;-1:-1:-1;1571:8:42;;1454:98;704:908;-1:-1:-1;;;704:908:42:o;1617:118::-;1703:5;1696:13;1689:21;1682:5;1679:32;1669:60;;1725:1;1722;1715:12;1740:592;1823:6;1831;1839;1847;1900:3;1888:9;1879:7;1875:23;1871:33;1868:53;;;1917:1;1914;1907:12;1868:53;1956:9;1943:23;1975:31;2000:5;1975:31;:::i;:::-;2025:5;-1:-1:-1;2077:2:42;2062:18;;2049:32;;-1:-1:-1;2133:2:42;2118:18;;2105:32;2146:30;2105:32;2146:30;:::i;:::-;2195:7;-1:-1:-1;2254:2:42;2239:18;;2226:32;2267:33;2226:32;2267:33;:::i;:::-;1740:592;;;;-1:-1:-1;1740:592:42;;-1:-1:-1;;1740:592:42:o;2590:388::-;2658:6;2666;2719:2;2707:9;2698:7;2694:23;2690:32;2687:52;;;2735:1;2732;2725:12;2687:52;2774:9;2761:23;2793:31;2818:5;2793:31;:::i;:::-;2843:5;-1:-1:-1;2900:2:42;2885:18;;2872:32;2913:33;2872:32;2913:33;:::i;:::-;2965:7;2955:17;;;2590:388;;;;;:::o;3499:383::-;3576:6;3584;3592;3645:2;3633:9;3624:7;3620:23;3616:32;3613:52;;;3661:1;3658;3651:12;3613:52;3700:9;3687:23;3719:31;3744:5;3719:31;:::i;:::-;3769:5;3821:2;3806:18;;3793:32;;-1:-1:-1;3872:2:42;3857:18;;;3844:32;;3499:383;-1:-1:-1;;;3499:383:42:o;3887:594::-;3982:6;3990;3998;4006;4014;4067:3;4055:9;4046:7;4042:23;4038:33;4035:53;;;4084:1;4081;4074:12;4035:53;4120:9;4107:23;4097:33;;4177:2;4166:9;4162:18;4149:32;4139:42;;4228:2;4217:9;4213:18;4200:32;4190:42;;4282:2;4271:9;4267:18;4254:32;4295:31;4320:5;4295:31;:::i;:::-;4345:5;-1:-1:-1;4402:3:42;4387:19;;4374:33;4416;4374;4416;:::i;:::-;4468:7;4458:17;;;3887:594;;;;;;;;:::o;4486:203::-;-1:-1:-1;;;;;4650:32:42;;;;4632:51;;4620:2;4605:18;;4486:203::o;4694:247::-;4753:6;4806:2;4794:9;4785:7;4781:23;4777:32;4774:52;;;4822:1;4819;4812:12;4774:52;4861:9;4848:23;4880:31;4905:5;4880:31;:::i;4946:180::-;5005:6;5058:2;5046:9;5037:7;5033:23;5029:32;5026:52;;;5074:1;5071;5064:12;5026:52;-1:-1:-1;5097:23:42;;4946:180;-1:-1:-1;4946:180:42:o;5372:340::-;5574:2;5556:21;;;5613:2;5593:18;;;5586:30;-1:-1:-1;;;5647:2:42;5632:18;;5625:46;5703:2;5688:18;;5372:340::o;5717:522::-;5817:6;5812:3;5805:19;5787:3;5843:4;5872:2;5867:3;5863:12;5856:19;;5898:5;5921:1;5931:283;5945:6;5942:1;5939:13;5931:283;;;6022:6;6009:20;6042:33;6067:7;6042:33;:::i;:::-;-1:-1:-1;;;;;6100:33:42;6088:46;;6154:12;;;;6189:15;;;;6130:1;5960:9;5931:283;;;-1:-1:-1;6230:3:42;;5717:522;-1:-1:-1;;;;;5717:522:42:o;6244:519::-;6521:2;6510:9;6503:21;6484:4;6547:73;6616:2;6605:9;6601:18;6593:6;6585;6547:73;:::i;:::-;6668:9;6660:6;6656:22;6651:2;6640:9;6636:18;6629:50;6696:61;6750:6;6742;6734;6696:61;:::i;6768:356::-;6970:2;6952:21;;;6989:18;;;6982:30;7048:34;7043:2;7028:18;;7021:62;7115:2;7100:18;;6768:356::o;7591:245::-;7670:6;7678;7731:2;7719:9;7710:7;7706:23;7702:32;7699:52;;;7747:1;7744;7737:12;7699:52;-1:-1:-1;;7770:16:42;;7826:2;7811:18;;;7805:25;7770:16;;7805:25;;-1:-1:-1;7591:245:42:o;7841:184::-;7911:6;7964:2;7952:9;7943:7;7939:23;7935:32;7932:52;;;7980:1;7977;7970:12;7932:52;-1:-1:-1;8003:16:42;;7841:184;-1:-1:-1;7841:184:42:o;8030:251::-;8100:6;8153:2;8141:9;8132:7;8128:23;8124:32;8121:52;;;8169:1;8166;8159:12;8121:52;8201:9;8195:16;8220:31;8245:5;8220:31;:::i;8708:306::-;8796:6;8804;8812;8865:2;8853:9;8844:7;8840:23;8836:32;8833:52;;;8881:1;8878;8871:12;8833:52;8910:9;8904:16;8894:26;;8960:2;8949:9;8945:18;8939:25;8929:35;;9004:2;8993:9;8989:18;8983:25;8973:35;;8708:306;;;;;:::o;10190:265::-;10230:7;10296:1;10292;10288:6;10284:14;10281:1;10278:21;10273:1;10266:9;10259:17;10255:45;10252:168;;;10342:10;10337:3;10333:20;10330:1;10323:31;10377:4;10374:1;10367:15;10405:4;10402:1;10395:15;10252:168;-1:-1:-1;10440:9:42;;10190:265::o;10460:217::-;10500:1;10526;10516:132;;10570:10;10565:3;10561:20;10558:1;10551:31;10605:4;10602:1;10595:15;10633:4;10630:1;10623:15;10516:132;-1:-1:-1;10662:9:42;;10460:217::o;10682:258::-;10754:1;10764:113;10778:6;10775:1;10772:13;10764:113;;;10854:11;;;10848:18;10835:11;;;10828:39;10800:2;10793:10;10764:113;;;10895:6;10892:1;10889:13;10886:48;;;-1:-1:-1;;10930:1:42;10912:16;;10905:27;10682:258::o;10945:257::-;10986:3;11024:5;11018:12;11051:6;11046:3;11039:19;11067:63;11123:6;11116:4;11111:3;11107:14;11100:4;11093:5;11089:16;11067:63;:::i;:::-;11184:2;11163:15;-1:-1:-1;;11159:29:42;11150:39;;;;11191:4;11146:50;;10945:257;-1:-1:-1;;10945:257:42:o;11207:314::-;-1:-1:-1;;;;;11382:32:42;;11364:51;;11451:2;11446;11431:18;;11424:30;;;-1:-1:-1;;11471:44:42;;11496:18;;11488:6;11471:44;:::i;11906:407::-;12108:2;12090:21;;;12147:2;12127:18;;;12120:30;12186:34;12181:2;12166:18;;12159:62;-1:-1:-1;;;12252:2:42;12237:18;;12230:41;12303:3;12288:19;;11906:407::o;12318:245::-;12385:6;12438:2;12426:9;12417:7;12413:23;12409:32;12406:52;;;12454:1;12451;12444:12;12406:52;12486:9;12480:16;12505:28;12527:5;12505:28;:::i;13744:274::-;13873:3;13911:6;13905:13;13927:53;13973:6;13968:3;13961:4;13953:6;13949:17;13927:53;:::i;:::-;13996:16;;;;;13744:274;-1:-1:-1;;13744:274:42:o;14023:219::-;14172:2;14161:9;14154:21;14135:4;14192:44;14232:2;14221:9;14217:18;14209:6;14192:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {QuickswapFarmUpgradeable as Farm, IERC20, IERC20Upgradeable, SafeERC20Upgradeable, Initializable} from \"./farms/QuickswapFarmUpgradeable.sol\";\r\n\r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract QuickswapFarmFactoryBeacon is Initializable, PausableUpgradeable, OwnableUpgradeable {\r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    /**\r\n     * @dev Contract Variables:\r\n     * farmBeacon - Farm contract implementation.\r\n     *\r\n     * distributor - Address authorized to make distributions.\r\n     * Farms - links {lpPools} to the deployed Farm contract.\r\n     * lpPools - list of pools that have corresponding deployed Farm contract.\r\n     */\r\n    address public farmBeacon;\r\n\r\n    address public distributor;\r\n    mapping(address => Farm) public Farms;\r\n    address[] public lpPools;\r\n\r\n    event FarmDeployed(address indexed farmAddress);\r\n    event Deposit(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Withdraw(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Distribute(address indexed lpPool);\r\n    event DistributorChanged(address indexed newDistributor);\r\n\r\n    modifier distributorOnly(){\r\n        require(msg.sender == distributor);\r\n        _;\r\n    }\r\n\r\n    // ============ Methods ============\r\n\r\n    function initialize(address upgrader) external initializer {\r\n        __Pausable_init();\r\n        __Ownable_init();\r\n        _transferOwnership(upgrader);\r\n        farmBeacon = address(new UpgradeableBeacon(\r\n            address(new Farm())\r\n        ));\r\n        UpgradeableBeacon(farmBeacon).transferOwnership(upgrader);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\r\n     * @param amountA  - Token A amount to deposit.\r\n     * @param amountB -  Token B amount to deposit.\r\n     * @param amountLP - LP Token amount to deposit.\r\n     * @param lpStakingPool - Address of the pool to deposit tokens in.\r\n     * @param recipient - Address which will recieve the deposit and leftover tokens.\r\n     \r\n     * @return sentA - Token A amount sent to the farm.\r\n     * @return sentB - Token B amount sent to the farm.\r\n     * @return liquidity - Total liquidity sent to the farm (in lpTokens).\r\n     */\r\n    function deposit(uint256 amountA, uint256 amountB, uint256 amountLP, address lpStakingPool, address recipient) external whenNotPaused returns(uint256 sentA, uint256 sentB, uint256 liquidity){\r\n        if(Farms[lpStakingPool] == Farm(address(0))){\r\n            Farms[lpStakingPool] = Farm(createFarm(lpStakingPool));\r\n            lpPools.push(lpStakingPool);\r\n        }\r\n\r\n        if(amountA > 0){\r\n            IERC20Upgradeable(Farms[lpStakingPool].tokenA()).safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountA);\r\n        }\r\n        if(amountB > 0){\r\n            IERC20Upgradeable(Farms[lpStakingPool].tokenB()).safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountB);\r\n        }\r\n        if(amountLP > 0){\r\n            IERC20Upgradeable(Farms[lpStakingPool].lpPair()).safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountLP);\r\n        }\r\n        \r\n       (sentA, sentB, liquidity) = Farms[lpStakingPool].deposit(amountA, amountB, amountLP, recipient); \r\n        emit Deposit(recipient, lpStakingPool, liquidity); \r\n    }\r\n\r\n    /** \r\n     * @dev Withdraws tokens from the given pool. \r\n     * @param lpStakingPool - LP pool to withdraw from.\r\n     * @param amount - LP amount to withdraw. \r\n     * @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\r\n     * @param recipient - The address which will recieve tokens.\r\n\r\n     * @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     * @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     */ \r\n    function withdraw(address lpStakingPool, uint256 amount, bool withdrawLP, address recipient) external whenNotPaused returns(uint256 amountA, uint256 amountB){\r\n        require(Farms[lpStakingPool] != Farm(address(0)));\r\n        (amountA, amountB) = Farms[lpStakingPool].withdraw(msg.sender, amount, withdrawLP, recipient); \r\n        emit Withdraw(msg.sender, lpStakingPool, amount);  \r\n    }\r\n\r\n    /**\r\n     * @dev Sets expected reward amount and block for token distribution calculations.\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n     * @param expectedReward - New reward amount.\r\n     * @param expectedRewardBlock - New reward block.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */  \r\n    function setExpectedReward(address lpStakingPool, uint256 expectedReward, uint256 expectedRewardBlock) external distributorOnly {\r\n        require(Farms[lpStakingPool] != Farm(address(0)));\r\n        Farms[lpStakingPool].setExpectedReward(expectedReward, expectedRewardBlock); \r\n    }\r\n\r\n    /**\r\n     * @dev Distributes tokens between users.\r\n     * @param lpStakingPool - LP pool to distribute tokens in.\r\n     * @param rewardTokenToTokenARoute An array of token addresses.\r\n     * @param rewardTokenToTokenBRoute An array of token addresses.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */ \r\n    function distribute(\r\n        address lpStakingPool,\r\n        address[] calldata rewardTokenToTokenARoute, \r\n        address[] calldata rewardTokenToTokenBRoute\r\n    ) external distributorOnly whenNotPaused {\r\n        require(Farms[lpStakingPool] != Farm(address(0)));\r\n\r\n        Farms[lpStakingPool].distribute(rewardTokenToTokenARoute, rewardTokenToTokenBRoute);\r\n        emit Distribute(lpStakingPool);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns tokens staked by the {_address} for the given {lpPair}.\r\n     * @param _address - The address to check stakes for.\r\n     * @param lpStakingPool - LP pool to check stakes in.\r\n\r\n     * @return stakeLP - Total user stake(in LP tokens).\r\n     * @return stakeA - Token A stake.\r\n     * @return stakeB - Token B stake.\r\n     */\r\n    function userStake(address _address, address lpStakingPool) external view returns (uint256 stakeLP, uint256 stakeA, uint256 stakeB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            stakeLP =  Farms[lpStakingPool].userBalance(_address);\r\n            (stakeA, stakeB) = getTokenStake(lpStakingPool, stakeLP);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n\r\n     * @return totalDepositsLP - Total deposits (in LP tokens).\r\n     * @return totalDepositsA - Token A deposits.\r\n     * @return totalDepositsB - Token B deposits.\r\n     */  \r\n    function totalDeposits(address lpStakingPool) external view returns (uint256 totalDepositsLP, uint256 totalDepositsA, uint256 totalDepositsB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            totalDepositsLP = Farms[lpStakingPool].totalDeposits();\r\n            (totalDepositsA, totalDepositsB) = getTokenStake(lpStakingPool, totalDepositsLP);\r\n        }\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return lpPools.length;\r\n    }\r\n\r\n    function transferDistributor(address newDistributor) external onlyOwner {\r\n        distributor = newDistributor;\r\n        emit DistributorChanged(newDistributor);\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n     * @param amountLP - Amount of LP tokens to convert.\r\n\r\n     * @return amountA - Token A amount.\r\n     * @return amountB - Token B amount.\r\n     */ \r\n    function getTokenStake(address lpStakingPool, uint256 amountLP) internal view returns (uint256 amountA, uint256 amountB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            address lpPair = Farms[lpStakingPool].lpPair();\r\n            uint256 totalSupply = IERC20(lpPair).totalSupply();\r\n            amountA = amountLP * IERC20(Farms[lpStakingPool].tokenA()).balanceOf(lpPair) / totalSupply;\r\n            amountB = amountLP * IERC20(Farms[lpStakingPool].tokenB()).balanceOf(lpPair) / totalSupply;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Deploys new Farm contract and calls initialize on it.\r\n     */\r\n    function createFarm(address lpStakingPool) internal returns (address) {\r\n        BeaconProxy proxy = new BeaconProxy(\r\n            farmBeacon,\r\n            abi.encodeWithSelector(\r\n                Farm(address(0)).initialize.selector,\r\n                lpStakingPool\r\n            )\r\n        );\r\n        emit FarmDeployed(address(proxy));\r\n        return address(proxy);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-branch\\contracts\\QuickswapFarmFactoryBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/QuickswapFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        2069
      ],
      "AddressUpgradeable": [
        853
      ],
      "BeaconProxy": [
        1483
      ],
      "Context": [
        2091
      ],
      "ContextUpgradeable": [
        895
      ],
      "ERC1967Upgrade": [
        1349
      ],
      "Farm": [
        8243
      ],
      "IBeacon": [
        1493
      ],
      "IERC20": [
        1772
      ],
      "IERC20Upgradeable": [
        386
      ],
      "Initializable": [
        197
      ],
      "Ownable": [
        1000
      ],
      "OwnableUpgradeable": [
        123
      ],
      "PausableUpgradeable": [
        308
      ],
      "Proxy": [
        1401
      ],
      "QuickswapFarmFactoryBeacon": [
        4296
      ],
      "SafeERC20Upgradeable": [
        610
      ],
      "StorageSlot": [
        2151
      ],
      "UpgradeableBeacon": [
        1568
      ]
    },
    "id": 4297,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3659,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "id": 3660,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:22"
      },
      {
        "absolutePath": "project:/contracts/farms/QuickswapFarmUpgradeable.sol",
        "file": "./farms/QuickswapFarmUpgradeable.sol",
        "id": 3666,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4297,
        "sourceUnit": 8244,
        "src": "95:150:22",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3661,
              "name": "QuickswapFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:24:22",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3662,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "137:6:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3663,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "145:17:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3664,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "164:20:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3665,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "186:13:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 3667,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4297,
        "sourceUnit": 1569,
        "src": "249:68:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 3668,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4297,
        "sourceUnit": 1484,
        "src": "319:62:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 3669,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4297,
        "sourceUnit": 309,
        "src": "383:78:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 3670,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4297,
        "sourceUnit": 124,
        "src": "463:75:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3671,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 197,
              "src": "581:13:22"
            },
            "id": 3672,
            "nodeType": "InheritanceSpecifier",
            "src": "581:13:22"
          },
          {
            "baseName": {
              "id": 3673,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 308,
              "src": "596:19:22"
            },
            "id": 3674,
            "nodeType": "InheritanceSpecifier",
            "src": "596:19:22"
          },
          {
            "baseName": {
              "id": 3675,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 123,
              "src": "617:18:22"
            },
            "id": 3676,
            "nodeType": "InheritanceSpecifier",
            "src": "617:18:22"
          }
        ],
        "canonicalName": "QuickswapFarmFactoryBeacon",
        "contractDependencies": [
          1483,
          1568,
          8243
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4296,
        "linearizedBaseContracts": [
          4296,
          123,
          308,
          895,
          197
        ],
        "name": "QuickswapFarmFactoryBeacon",
        "nameLocation": "551:26:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3680,
            "libraryName": {
              "id": 3677,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 610,
              "src": "649:20:22"
            },
            "nodeType": "UsingForDirective",
            "src": "643:49:22",
            "typeName": {
              "id": 3679,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3678,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 386,
                "src": "674:17:22"
              },
              "referencedDeclaration": 386,
              "src": "674:17:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 3681,
              "nodeType": "StructuredDocumentation",
              "src": "700:311:22",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n distributor - Address authorized to make distributions.\n Farms - links {lpPools} to the deployed Farm contract.\n lpPools - list of pools that have corresponding deployed Farm contract."
            },
            "functionSelector": "d95a4d93",
            "id": 3683,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "1032:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 4296,
            "src": "1017:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3682,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1017:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 3685,
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1066:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 4296,
            "src": "1051:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3684,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1051:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 3690,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "1116:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 4296,
            "src": "1084:37:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
            },
            "typeName": {
              "id": 3689,
              "keyType": {
                "id": 3686,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1092:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1084:24:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
              },
              "valueType": {
                "id": 3688,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3687,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8243,
                  "src": "1103:4:22"
                },
                "referencedDeclaration": 8243,
                "src": "1103:4:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                  "typeString": "contract QuickswapFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 3693,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "1145:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 4296,
            "src": "1128:24:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3691,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1128:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3692,
              "nodeType": "ArrayTypeName",
              "src": "1128:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3697,
            "name": "FarmDeployed",
            "nameLocation": "1167:12:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3695,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "1196:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3697,
                  "src": "1180:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:29:22"
            },
            "src": "1161:48:22"
          },
          {
            "anonymous": false,
            "id": 3705,
            "name": "Deposit",
            "nameLocation": "1221:7:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3699,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1245:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3705,
                  "src": "1229:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3701,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1269:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3705,
                  "src": "1253:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3703,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1285:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3705,
                  "src": "1277:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:64:22"
            },
            "src": "1215:78:22"
          },
          {
            "anonymous": false,
            "id": 3713,
            "name": "Withdraw",
            "nameLocation": "1305:8:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3707,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1330:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3713,
                  "src": "1314:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3709,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1354:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3713,
                  "src": "1338:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1370:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3713,
                  "src": "1362:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:64:22"
            },
            "src": "1299:79:22"
          },
          {
            "anonymous": false,
            "id": 3717,
            "name": "Distribute",
            "nameLocation": "1390:10:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3715,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1417:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "1401:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1400:24:22"
            },
            "src": "1384:41:22"
          },
          {
            "anonymous": false,
            "id": 3721,
            "name": "DistributorChanged",
            "nameLocation": "1437:18:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3719,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "1472:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3721,
                  "src": "1456:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:32:22"
            },
            "src": "1431:57:22"
          },
          {
            "body": {
              "id": 3731,
              "nodeType": "Block",
              "src": "1522:65:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3724,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1541:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1541:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3726,
                          "name": "distributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3685,
                          "src": "1555:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1541:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1533:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1533:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3729,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:34:22"
                },
                {
                  "id": 3730,
                  "nodeType": "PlaceholderStatement",
                  "src": "1578:1:22"
                }
              ]
            },
            "id": 3732,
            "name": "distributorOnly",
            "nameLocation": "1505:15:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1520:2:22"
            },
            "src": "1496:91:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3773,
              "nodeType": "Block",
              "src": "1698:269:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3739,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "1709:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:17:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3741,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:17:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3742,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1737:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1737:16:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3744,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:16:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3746,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3734,
                        "src": "1783:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3745,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "1764:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3748,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:28:22"
                },
                {
                  "expression": {
                    "id": 3764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3749,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3683,
                      "src": "1803:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3759,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1868:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                      "typeString": "function () returns (contract QuickswapFarmUpgradeable)"
                                    },
                                    "typeName": {
                                      "id": 3758,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 3757,
                                        "name": "Farm",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 8243,
                                        "src": "1872:4:22"
                                      },
                                      "referencedDeclaration": 8243,
                                      "src": "1872:4:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                        "typeString": "contract QuickswapFarmUpgradeable"
                                      }
                                    }
                                  },
                                  "id": 3760,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1868:10:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                ],
                                "id": 3756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1860:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3755,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1860:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1860:19:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1824:21:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1568_$",
                              "typeString": "function (address) returns (contract UpgradeableBeacon)"
                            },
                            "typeName": {
                              "id": 3753,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3752,
                                "name": "UpgradeableBeacon",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1568,
                                "src": "1828:17:22"
                              },
                              "referencedDeclaration": 1568,
                              "src": "1828:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                                "typeString": "contract UpgradeableBeacon"
                              }
                            }
                          },
                          "id": 3762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1824:66:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 3751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1816:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3750,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1816:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1816:75:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1803:88:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3765,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:88:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3770,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3734,
                        "src": "1950:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3767,
                            "name": "farmBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3683,
                            "src": "1920:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3766,
                          "name": "UpgradeableBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "1902:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UpgradeableBeacon_$1568_$",
                            "typeString": "type(contract UpgradeableBeacon)"
                          }
                        },
                        "id": 3768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1902:29:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 3769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 979,
                      "src": "1902:47:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3772,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:57:22"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 3774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3737,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3736,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "1686:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1686:11:22"
              }
            ],
            "name": "initialize",
            "nameLocation": "1648:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3734,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1667:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3774,
                  "src": "1659:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1658:18:22"
            },
            "returnParameters": {
              "id": 3738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:22"
            },
            "scope": 4296,
            "src": "1639:328:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3917,
              "nodeType": "Block",
              "src": "2838:873:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3796,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "2852:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 3798,
                      "indexExpression": {
                        "id": 3797,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "2858:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2852:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2889:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2881:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3800,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2881:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3799,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8243,
                        "src": "2876:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 3804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2876:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "2852:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3823,
                  "nodeType": "IfStatement",
                  "src": "2849:167:22",
                  "trueBody": {
                    "id": 3822,
                    "nodeType": "Block",
                    "src": "2893:123:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3806,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3690,
                              "src": "2908:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                              }
                            },
                            "id": 3808,
                            "indexExpression": {
                              "id": 3807,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3783,
                              "src": "2914:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2908:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                              "typeString": "contract QuickswapFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3811,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3783,
                                    "src": "2947:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3810,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4295,
                                  "src": "2936:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 3812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2936:25:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3809,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8243,
                              "src": "2931:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                "typeString": "type(contract QuickswapFarmUpgradeable)"
                              }
                            },
                            "id": 3813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2931:31:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                              "typeString": "contract QuickswapFarmUpgradeable"
                            }
                          },
                          "src": "2908:54:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "id": 3815,
                        "nodeType": "ExpressionStatement",
                        "src": "2908:54:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3819,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3783,
                              "src": "2990:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3816,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3693,
                              "src": "2977:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2977:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2977:27:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3821,
                        "nodeType": "ExpressionStatement",
                        "src": "2977:27:22"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3824,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3777,
                      "src": "3031:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3041:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3031:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3847,
                  "nodeType": "IfStatement",
                  "src": "3028:159:22",
                  "trueBody": {
                    "id": 3846,
                    "nodeType": "Block",
                    "src": "3043:144:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3835,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3124:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3124:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3839,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3690,
                                    "src": "3144:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3841,
                                  "indexExpression": {
                                    "id": 3840,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3783,
                                    "src": "3150:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3144:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                ],
                                "id": 3838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3136:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3837,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3136:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3136:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3843,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3777,
                              "src": "3167:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3828,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3690,
                                        "src": "3076:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3830,
                                      "indexExpression": {
                                        "id": 3829,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3783,
                                        "src": "3082:13:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3076:20:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                        "typeString": "contract QuickswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 3831,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7259,
                                    "src": "3076:27:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3076:29:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3827,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3058:17:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 3833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3058:48:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3058:65:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3058:117:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3845,
                        "nodeType": "ExpressionStatement",
                        "src": "3058:117:22"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3848,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "3200:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3210:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3200:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3871,
                  "nodeType": "IfStatement",
                  "src": "3197:159:22",
                  "trueBody": {
                    "id": 3870,
                    "nodeType": "Block",
                    "src": "3212:144:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3859,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3293:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3293:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3863,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3690,
                                    "src": "3313:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3865,
                                  "indexExpression": {
                                    "id": 3864,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3783,
                                    "src": "3319:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3313:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                ],
                                "id": 3862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3305:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3861,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3305:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3305:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3867,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3779,
                              "src": "3336:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3852,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3690,
                                        "src": "3245:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3854,
                                      "indexExpression": {
                                        "id": 3853,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3783,
                                        "src": "3251:13:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3245:20:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                        "typeString": "contract QuickswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 3855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7261,
                                    "src": "3245:27:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3245:29:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3851,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3227:17:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 3857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3227:48:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3227:65:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3227:117:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3869,
                        "nodeType": "ExpressionStatement",
                        "src": "3227:117:22"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3872,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3369:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3380:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3369:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3895,
                  "nodeType": "IfStatement",
                  "src": "3366:161:22",
                  "trueBody": {
                    "id": 3894,
                    "nodeType": "Block",
                    "src": "3382:145:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3883,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3463:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3463:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3887,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3690,
                                    "src": "3483:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                      "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3889,
                                  "indexExpression": {
                                    "id": 3888,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3783,
                                    "src": "3489:13:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3483:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                    "typeString": "contract QuickswapFarmUpgradeable"
                                  }
                                ],
                                "id": 3886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3475:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3885,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3475:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3475:29:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3891,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "3506:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3876,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3690,
                                        "src": "3415:5:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3878,
                                      "indexExpression": {
                                        "id": 3877,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3783,
                                        "src": "3421:13:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3415:20:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                        "typeString": "contract QuickswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 3879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lpPair",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7257,
                                    "src": "3415:27:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3880,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3415:29:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3875,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3397:17:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 3881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3397:48:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3397:65:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:118:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3893,
                        "nodeType": "ExpressionStatement",
                        "src": "3397:118:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3896,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3790,
                          "src": "3547:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3897,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3792,
                          "src": "3554:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3898,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3794,
                          "src": "3561:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3899,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3546:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3904,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3777,
                          "src": "3603:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3905,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "3612:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3906,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3781,
                          "src": "3621:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3907,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3785,
                          "src": "3631:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3900,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3690,
                            "src": "3574:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 3902,
                          "indexExpression": {
                            "id": 3901,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3783,
                            "src": "3580:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3574:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "id": 3903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7597,
                        "src": "3574:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 3908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3574:67:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3546:95:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3910,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:95:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3912,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3785,
                        "src": "3666:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3913,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "3677:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3914,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3794,
                        "src": "3692:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3911,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3705,
                      "src": "3658:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:44:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3916,
                  "nodeType": "EmitStatement",
                  "src": "3653:49:22"
                }
              ]
            },
            "documentation": {
              "id": 3775,
              "nodeType": "StructuredDocumentation",
              "src": "1975:667:22",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpStakingPool - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 3918,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3788,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3787,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "2768:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2768:13:22"
              }
            ],
            "name": "deposit",
            "nameLocation": "2657:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3777,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2673:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2665:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2665:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3779,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2690:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2682:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3781,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2707:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2699:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2699:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3783,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "2725:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2717:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2717:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3785,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2748:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2740:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2664:94:22"
            },
            "returnParameters": {
              "id": 3795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3790,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2798:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2790:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3792,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2813:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2805:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2805:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3794,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2828:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2820:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2789:49:22"
            },
            "scope": 4296,
            "src": "2648:1063:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3971,
              "nodeType": "Block",
              "src": "4396:234:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        },
                        "id": 3946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3937,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3690,
                            "src": "4415:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 3939,
                          "indexExpression": {
                            "id": 3938,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3921,
                            "src": "4421:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4415:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3943,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4452:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4444:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3941,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4444:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4444:10:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3940,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8243,
                            "src": "4439:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "type(contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 3945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4439:16:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "src": "4415:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4407:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4407:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3948,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:49:22"
                },
                {
                  "expression": {
                    "id": 3962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3949,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3932,
                          "src": "4468:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3950,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3934,
                          "src": "4477:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3951,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4467:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3956,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4518:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4518:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3958,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3923,
                          "src": "4530:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3959,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3925,
                          "src": "4538:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 3960,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "4550:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3952,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3690,
                            "src": "4488:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 3954,
                          "indexExpression": {
                            "id": 3953,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3921,
                            "src": "4494:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4488:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "id": 3955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7736,
                        "src": "4488:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 3961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4488:72:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4467:93:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3963,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:93:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4586:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4586:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3967,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3921,
                        "src": "4598:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3968,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "4613:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3964,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3713,
                      "src": "4577:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4577:43:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3970,
                  "nodeType": "EmitStatement",
                  "src": "4572:48:22"
                }
              ]
            },
            "documentation": {
              "id": 3919,
              "nodeType": "StructuredDocumentation",
              "src": "3719:513:22",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpStakingPool - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 3972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3929,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "4341:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "4341:13:22"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4248:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3921,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "4265:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3972,
                  "src": "4257:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4257:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3923,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4288:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3972,
                  "src": "4280:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4280:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3925,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "4301:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3972,
                  "src": "4296:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3924,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4296:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3927,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4321:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3972,
                  "src": "4313:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4256:75:22"
            },
            "returnParameters": {
              "id": 3935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3932,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4371:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3972,
                  "src": "4363:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3934,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4388:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3972,
                  "src": "4380:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4380:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4362:34:22"
            },
            "scope": 4296,
            "src": "4239:391:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4005,
              "nodeType": "Block",
              "src": "5122:155:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        },
                        "id": 3994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3985,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3690,
                            "src": "5141:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 3987,
                          "indexExpression": {
                            "id": 3986,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3975,
                            "src": "5147:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5141:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5178:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5170:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3989,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5170:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5170:10:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3988,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8243,
                            "src": "5165:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "type(contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 3993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5165:16:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "src": "5141:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5133:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5133:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3996,
                  "nodeType": "ExpressionStatement",
                  "src": "5133:49:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4001,
                        "name": "expectedReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3977,
                        "src": "5232:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4002,
                        "name": "expectedRewardBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3979,
                        "src": "5248:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3997,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3690,
                          "src": "5193:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                            "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                          }
                        },
                        "id": 3999,
                        "indexExpression": {
                          "id": 3998,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3975,
                          "src": "5199:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5193:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        }
                      },
                      "id": 4000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setExpectedReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8181,
                      "src": "5193:38:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 4003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5193:75:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4004,
                  "nodeType": "ExpressionStatement",
                  "src": "5193:75:22"
                }
              ]
            },
            "documentation": {
              "id": 3973,
              "nodeType": "StructuredDocumentation",
              "src": "4638:348:22",
              "text": " @dev Sets expected reward amount and block for token distribution calculations.\n @param lpStakingPool - LP pool to check total deposits in.\n @param expectedReward - New reward amount.\n @param expectedRewardBlock - New reward block.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "613c91af",
            "id": 4006,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3982,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3981,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3732,
                  "src": "5106:15:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5106:15:22"
              }
            ],
            "name": "setExpectedReward",
            "nameLocation": "5003:17:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3975,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5029:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4006,
                  "src": "5021:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3977,
                  "mutability": "mutable",
                  "name": "expectedReward",
                  "nameLocation": "5052:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4006,
                  "src": "5044:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5044:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3979,
                  "mutability": "mutable",
                  "name": "expectedRewardBlock",
                  "nameLocation": "5076:19:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4006,
                  "src": "5068:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5068:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:76:22"
            },
            "returnParameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5122:0:22"
            },
            "scope": 4296,
            "src": "4994:283:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4047,
              "nodeType": "Block",
              "src": "5835:205:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        },
                        "id": 4032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4023,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3690,
                            "src": "5854:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4025,
                          "indexExpression": {
                            "id": 4024,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4009,
                            "src": "5860:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5854:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4029,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5891:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5883:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4027,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5883:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5883:10:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4026,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8243,
                            "src": "5878:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                              "typeString": "type(contract QuickswapFarmUpgradeable)"
                            }
                          },
                          "id": 4031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5878:16:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                            "typeString": "contract QuickswapFarmUpgradeable"
                          }
                        },
                        "src": "5854:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5846:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5846:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4034,
                  "nodeType": "ExpressionStatement",
                  "src": "5846:49:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4039,
                        "name": "rewardTokenToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4012,
                        "src": "5940:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4040,
                        "name": "rewardTokenToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4015,
                        "src": "5966:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 4035,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3690,
                          "src": "5908:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                            "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                          }
                        },
                        "id": 4037,
                        "indexExpression": {
                          "id": 4036,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4009,
                          "src": "5914:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5908:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                          "typeString": "contract QuickswapFarmUpgradeable"
                        }
                      },
                      "id": 4038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8159,
                      "src": "5908:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,address[] memory) external"
                      }
                    },
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5908:83:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4042,
                  "nodeType": "ExpressionStatement",
                  "src": "5908:83:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4044,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4009,
                        "src": "6018:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4043,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3717,
                      "src": "6007:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6007:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4046,
                  "nodeType": "EmitStatement",
                  "src": "6002:30:22"
                }
              ]
            },
            "documentation": {
              "id": 4007,
              "nodeType": "StructuredDocumentation",
              "src": "5285:336:22",
              "text": " @dev Distributes tokens between users.\n @param lpStakingPool - LP pool to distribute tokens in.\n @param rewardTokenToTokenARoute An array of token addresses.\n @param rewardTokenToTokenBRoute An array of token addresses.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "33b10b3c",
            "id": 4048,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4017,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3732,
                  "src": "5805:15:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5805:15:22"
              },
              {
                "id": 4020,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4019,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "5821:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5821:13:22"
              }
            ],
            "name": "distribute",
            "nameLocation": "5637:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4009,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5666:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4048,
                  "src": "5658:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5658:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4012,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenARoute",
                  "nameLocation": "5709:24:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4048,
                  "src": "5690:43:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4010,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5690:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4011,
                    "nodeType": "ArrayTypeName",
                    "src": "5690:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4015,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenBRoute",
                  "nameLocation": "5764:24:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4048,
                  "src": "5745:43:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4013,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5745:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4014,
                    "nodeType": "ArrayTypeName",
                    "src": "5745:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5647:148:22"
            },
            "returnParameters": {
              "id": 4021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5835:0:22"
            },
            "scope": 4296,
            "src": "5628:412:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4092,
              "nodeType": "Block",
              "src": "6533:215:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 4071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4062,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "6548:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4064,
                      "indexExpression": {
                        "id": 4063,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4053,
                        "src": "6554:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6548:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6585:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6577:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4066,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6577:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6577:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4065,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8243,
                        "src": "6572:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6572:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "6548:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4091,
                  "nodeType": "IfStatement",
                  "src": "6544:197:22",
                  "trueBody": {
                    "id": 4090,
                    "nodeType": "Block",
                    "src": "6590:151:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 4079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4072,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4056,
                            "src": "6605:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4077,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4051,
                                "src": "6649:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 4073,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3690,
                                  "src": "6616:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                    "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4075,
                                "indexExpression": {
                                  "id": 4074,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4053,
                                  "src": "6622:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6616:20:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                  "typeString": "contract QuickswapFarmUpgradeable"
                                }
                              },
                              "id": 4076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8233,
                              "src": "6616:32:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 4078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6616:42:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6605:53:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4080,
                        "nodeType": "ExpressionStatement",
                        "src": "6605:53:22"
                      },
                      {
                        "expression": {
                          "id": 4088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4081,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4058,
                                "src": "6674:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4082,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4060,
                                "src": "6682:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4083,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6673:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4085,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4053,
                                "src": "6706:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4086,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4056,
                                "src": "6721:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4084,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4253,
                              "src": "6692:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6692:37:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6673:56:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4089,
                        "nodeType": "ExpressionStatement",
                        "src": "6673:56:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4049,
              "nodeType": "StructuredDocumentation",
              "src": "6048:347:22",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpStakingPool - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 4093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "6410:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4051,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6428:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "6420:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6420:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4053,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6446:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "6438:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6438:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6419:41:22"
            },
            "returnParameters": {
              "id": 4061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4056,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "6492:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "6484:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6484:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4058,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "6509:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "6501:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6501:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "6525:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4093,
                  "src": "6517:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6517:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6483:49:22"
            },
            "scope": 4296,
            "src": "6401:347:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4134,
              "nodeType": "Block",
              "src": "7251:240:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 4114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4105,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "7266:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4107,
                      "indexExpression": {
                        "id": 4106,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4096,
                        "src": "7272:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7266:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7303:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7295:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4109,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7295:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7295:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4108,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8243,
                        "src": "7290:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7290:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "7266:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4133,
                  "nodeType": "IfStatement",
                  "src": "7262:222:22",
                  "trueBody": {
                    "id": 4132,
                    "nodeType": "Block",
                    "src": "7308:176:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 4121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4115,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4099,
                            "src": "7323:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 4116,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3690,
                                  "src": "7341:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                    "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4118,
                                "indexExpression": {
                                  "id": 4117,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4096,
                                  "src": "7347:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7341:20:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                  "typeString": "contract QuickswapFarmUpgradeable"
                                }
                              },
                              "id": 4119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7300,
                              "src": "7341:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 4120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7341:36:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7323:54:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4122,
                        "nodeType": "ExpressionStatement",
                        "src": "7323:54:22"
                      },
                      {
                        "expression": {
                          "id": 4130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4123,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4101,
                                "src": "7393:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4124,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4103,
                                "src": "7409:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4125,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7392:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4127,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4096,
                                "src": "7441:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4128,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4099,
                                "src": "7456:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4126,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4253,
                              "src": "7427:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7427:45:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "7392:80:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4131,
                        "nodeType": "ExpressionStatement",
                        "src": "7392:80:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4094,
              "nodeType": "StructuredDocumentation",
              "src": "6756:345:22",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpStakingPool - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 4135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "7118:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4096,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "7140:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4135,
                  "src": "7132:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7132:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7131:23:22"
            },
            "returnParameters": {
              "id": 4104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4099,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "7186:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4135,
                  "src": "7178:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4101,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "7211:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4135,
                  "src": "7203:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7203:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4103,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "7235:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4135,
                  "src": "7227:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7227:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7177:73:22"
            },
            "scope": 4296,
            "src": "7109:382:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4143,
              "nodeType": "Block",
              "src": "7553:40:22",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4140,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3693,
                      "src": "7571:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7571:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4139,
                  "id": 4142,
                  "nodeType": "Return",
                  "src": "7564:21:22"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 4144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "7508:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7518:2:22"
            },
            "returnParameters": {
              "id": 4139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4144,
                  "src": "7544:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7544:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7543:9:22"
            },
            "scope": 4296,
            "src": "7499:94:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4159,
              "nodeType": "Block",
              "src": "7673:97:22",
              "statements": [
                {
                  "expression": {
                    "id": 4153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4151,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3685,
                      "src": "7684:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4152,
                      "name": "newDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4146,
                      "src": "7698:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7684:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4154,
                  "nodeType": "ExpressionStatement",
                  "src": "7684:28:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4156,
                        "name": "newDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4146,
                        "src": "7747:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4155,
                      "name": "DistributorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3721,
                      "src": "7728:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7728:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4158,
                  "nodeType": "EmitStatement",
                  "src": "7723:39:22"
                }
              ]
            },
            "functionSelector": "e2332908",
            "id": 4160,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4149,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4148,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7663:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7663:9:22"
              }
            ],
            "name": "transferDistributor",
            "nameLocation": "7610:19:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4146,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "7638:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4160,
                  "src": "7630:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7630:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7629:24:22"
            },
            "returnParameters": {
              "id": 4150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7673:0:22"
            },
            "scope": 4296,
            "src": "7601:169:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4168,
              "nodeType": "Block",
              "src": "7814:27:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4165,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "7825:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7825:8:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4167,
                  "nodeType": "ExpressionStatement",
                  "src": "7825:8:22"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 4169,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4162,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7804:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7804:9:22"
              }
            ],
            "name": "pause",
            "nameLocation": "7787:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7792:2:22"
            },
            "returnParameters": {
              "id": 4164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7814:0:22"
            },
            "scope": 4296,
            "src": "7778:63:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4177,
              "nodeType": "Block",
              "src": "7887:29:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4174,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "7898:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7898:10:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4176,
                  "nodeType": "ExpressionStatement",
                  "src": "7898:10:22"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 4178,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4171,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7877:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7877:9:22"
              }
            ],
            "name": "unpause",
            "nameLocation": "7858:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7865:2:22"
            },
            "returnParameters": {
              "id": 4173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7887:0:22"
            },
            "scope": 4296,
            "src": "7849:67:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4252,
              "nodeType": "Block",
              "src": "8374:412:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                      "typeString": "contract QuickswapFarmUpgradeable"
                    },
                    "id": 4199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4190,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3690,
                        "src": "8389:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4192,
                      "indexExpression": {
                        "id": 4191,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4181,
                        "src": "8395:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8389:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8426:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8418:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4194,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8418:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8418:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4193,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8243,
                        "src": "8413:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                          "typeString": "type(contract QuickswapFarmUpgradeable)"
                        }
                      },
                      "id": 4198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8413:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                        "typeString": "contract QuickswapFarmUpgradeable"
                      }
                    },
                    "src": "8389:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4251,
                  "nodeType": "IfStatement",
                  "src": "8385:394:22",
                  "trueBody": {
                    "id": 4250,
                    "nodeType": "Block",
                    "src": "8431:348:22",
                    "statements": [
                      {
                        "assignments": [
                          4201
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4201,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "8454:6:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 4250,
                            "src": "8446:14:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8446:7:22",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4207,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 4202,
                                "name": "Farms",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3690,
                                "src": "8463:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                  "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                }
                              },
                              "id": 4204,
                              "indexExpression": {
                                "id": 4203,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4181,
                                "src": "8469:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8463:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                "typeString": "contract QuickswapFarmUpgradeable"
                              }
                            },
                            "id": 4205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7257,
                            "src": "8463:27:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 4206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8463:29:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8446:46:22"
                      },
                      {
                        "assignments": [
                          4209
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4209,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "8515:11:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 4250,
                            "src": "8507:19:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4208,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8507:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4215,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4211,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4201,
                                  "src": "8536:6:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4210,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1772,
                                "src": "8529:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8529:14:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1772",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1703,
                            "src": "8529:26:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 4214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8529:28:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8507:50:22"
                      },
                      {
                        "expression": {
                          "id": 4231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4216,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4186,
                            "src": "8572:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4217,
                                "name": "amountLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4183,
                                "src": "8582:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 4226,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4201,
                                    "src": "8641:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 4219,
                                              "name": "Farms",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3690,
                                              "src": "8600:5:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                                "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                              }
                                            },
                                            "id": 4221,
                                            "indexExpression": {
                                              "id": 4220,
                                              "name": "lpStakingPool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4181,
                                              "src": "8606:13:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8600:20:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                              "typeString": "contract QuickswapFarmUpgradeable"
                                            }
                                          },
                                          "id": 4222,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenA",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 7259,
                                          "src": "8600:27:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 4223,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8600:29:22",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4218,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1772,
                                      "src": "8593:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 4224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8593:37:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1772",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 4225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1711,
                                  "src": "8593:47:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 4227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8593:55:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8582:66:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 4229,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4209,
                              "src": "8651:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8582:80:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8572:90:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4232,
                        "nodeType": "ExpressionStatement",
                        "src": "8572:90:22"
                      },
                      {
                        "expression": {
                          "id": 4248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4233,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4188,
                            "src": "8677:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4234,
                                "name": "amountLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4183,
                                "src": "8687:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 4243,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4201,
                                    "src": "8746:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 4236,
                                              "name": "Farms",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3690,
                                              "src": "8705:5:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                                "typeString": "mapping(address => contract QuickswapFarmUpgradeable)"
                                              }
                                            },
                                            "id": 4238,
                                            "indexExpression": {
                                              "id": 4237,
                                              "name": "lpStakingPool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4181,
                                              "src": "8711:13:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8705:20:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                              "typeString": "contract QuickswapFarmUpgradeable"
                                            }
                                          },
                                          "id": 4239,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenB",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 7261,
                                          "src": "8705:27:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 4240,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8705:29:22",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4235,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1772,
                                      "src": "8698:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 4241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8698:37:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1772",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 4242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1711,
                                  "src": "8698:47:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 4244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8698:55:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8687:66:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 4246,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4209,
                              "src": "8756:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8687:80:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8677:90:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4249,
                        "nodeType": "ExpressionStatement",
                        "src": "8677:90:22"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4179,
              "nodeType": "StructuredDocumentation",
              "src": "7924:322:22",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpStakingPool - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 4253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "8262:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4181,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "8284:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "8276:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8276:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4183,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "8307:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "8299:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8299:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8275:41:22"
            },
            "returnParameters": {
              "id": 4189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4186,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "8348:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "8340:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8340:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4188,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "8365:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4253,
                  "src": "8357:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8357:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8339:34:22"
            },
            "scope": 4296,
            "src": "8253:533:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4294,
              "nodeType": "Block",
              "src": "8953:305:22",
              "statements": [
                {
                  "assignments": [
                    4263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4263,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "8976:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 4294,
                      "src": "8964:17:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 4262,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4261,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "8964:11:22"
                        },
                        "referencedDeclaration": 1483,
                        "src": "8964:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4281,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4267,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3683,
                        "src": "9014:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4273,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9093:1:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9085:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 4271,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9085:7:22",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4274,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9085:10:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4270,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8243,
                                  "src": "9080:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_QuickswapFarmUpgradeable_$8243_$",
                                    "typeString": "type(contract QuickswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9080:16:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapFarmUpgradeable_$8243",
                                  "typeString": "contract QuickswapFarmUpgradeable"
                                }
                              },
                              "id": 4276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7429,
                              "src": "9080:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 4277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9080:36:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 4278,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4256,
                            "src": "9135:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4268,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "9039:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9039:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 4279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9039:124:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8984:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1483_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 4265,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4264,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "8988:11:22"
                        },
                        "referencedDeclaration": 1483,
                        "src": "8988:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 4280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8984:190:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8964:210:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4285,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4263,
                            "src": "9211:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 4284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9203:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9203:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9203:14:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4282,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3697,
                      "src": "9190:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9190:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4288,
                  "nodeType": "EmitStatement",
                  "src": "9185:33:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4291,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4263,
                        "src": "9244:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 4290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9236:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4289,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9236:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9236:14:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4260,
                  "id": 4293,
                  "nodeType": "Return",
                  "src": "9229:21:22"
                }
              ]
            },
            "documentation": {
              "id": 4254,
              "nodeType": "StructuredDocumentation",
              "src": "8798:79:22",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 4295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "8892:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "8911:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4295,
                  "src": "8903:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8903:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8902:23:22"
            },
            "returnParameters": {
              "id": 4260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4295,
                  "src": "8944:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8944:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8943:9:22"
            },
            "scope": 4296,
            "src": "8883:375:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4297,
        "src": "542:8719:22",
        "usedErrors": []
      }
    ],
    "src": "33:9230:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "137": {
      "links": {},
      "address": "0x9828E756D1deeBF7a81b850875b718C01647f85C",
      "transactionHash": "0xa445ea4cb1f3619af0f210303cbf003d69a63943733c7779b9a64347c3299256",
      "events": {}
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-09T09:02:59.738Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256,address,address)": {
        "details": "Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.",
        "params": {
          "amountA": "- Token A amount to deposit.",
          "amountB": "-  Token B amount to deposit.",
          "amountLP": "- LP Token amount to deposit.",
          "lpStakingPool": "- Address of the pool to deposit tokens in.",
          "recipient": "- Address which will recieve the deposit and leftover tokens."
        },
        "returns": {
          "liquidity": "- Total liquidity sent to the farm (in lpTokens).",
          "sentA": "- Token A amount sent to the farm.",
          "sentB": "- Token B amount sent to the farm."
        }
      },
      "distribute(address,address[],address[])": {
        "details": "Distributes tokens between users.",
        "params": {
          "lpStakingPool": "- LP pool to distribute tokens in.",
          "rewardTokenToTokenARoute": "An array of token addresses.",
          "rewardTokenToTokenBRoute": "An array of token addresses. Note: This function can only be called by the distributor."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setExpectedReward(address,uint256,uint256)": {
        "details": "Sets expected reward amount and block for token distribution calculations.",
        "params": {
          "expectedReward": "- New reward amount.",
          "expectedRewardBlock": "- New reward block. Note: This function can only be called by the distributor.",
          "lpStakingPool": "- LP pool to check total deposits in."
        }
      },
      "totalDeposits(address)": {
        "details": "Returns total amount locked in the pool. Doesn't take pending rewards into account.",
        "params": {
          "lpStakingPool": "- LP pool to check total deposits in."
        },
        "returns": {
          "totalDepositsA": "- Token A deposits.",
          "totalDepositsB": "- Token B deposits.",
          "totalDepositsLP": "- Total deposits (in LP tokens)."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "userStake(address,address)": {
        "details": "Returns tokens staked by the {_address} for the given {lpPair}.",
        "params": {
          "_address": "- The address to check stakes for.",
          "lpStakingPool": "- LP pool to check stakes in."
        },
        "returns": {
          "stakeA": "- Token A stake.",
          "stakeB": "- Token B stake.",
          "stakeLP": "- Total user stake(in LP tokens)."
        }
      },
      "withdraw(address,uint256,bool,address)": {
        "details": "Withdraws tokens from the given pool. ",
        "params": {
          "amount": "- LP amount to withdraw. ",
          "lpStakingPool": "- LP pool to withdraw from.",
          "recipient": "- The address which will recieve tokens.",
          "withdrawLP": "- True: Withdraw in LP tokens, False: Withdraw in normal tokens."
        },
        "returns": {
          "amountA": "- Token A amount sent to the {recipient}, 0 if withdrawLP == false.",
          "amountB": "- Token B amount sent to the {recipient}, 0 if withdrawLP == false."
        }
      }
    },
    "stateVariables": {
      "farmBeacon": {
        "details": "Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - links {lpPools} to the deployed Farm contract. lpPools - list of pools that have corresponding deployed Farm contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}