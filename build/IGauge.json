{
  "contractName": "IGauge",
  "abi": [
    {
      "inputs": [],
      "name": "NotAlive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotVoter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RewardRateTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroRewardRate",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimed0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimed1",
          "type": "uint256"
        }
      ],
      "name": "ClaimFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NotifyReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardPerToken",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_earned",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "left",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_left",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_isPool",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "notifyRewardAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotAlive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardRateTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroRewardRate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimed0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimed1\",\"type\":\"uint256\"}],\"name\":\"ClaimFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NotifyReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_earned\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isPool\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"left\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_left\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardPerToken\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"deposit(uint256)\":{\"params\":{\"_amount\":\".\"}},\"deposit(uint256,address)\":{\"params\":{\"_amount\":\".\",\"_recipient\":\"Recipient to give balance to\"}},\"getReward(address)\":{\"details\":\"Throws if not called by same address or voter.\",\"params\":{\"_account\":\".\"}},\"notifyRewardAmount(uint256)\":{\"details\":\"Notifies gauge of gauge rewards. Assumes gauge reward tokens is 18 decimals.      If not 18 decimals, rewardRate may have rounding issues.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256)\":{\"params\":{\"_amount\":\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Deposit LP tokens into gauge for msg.sender\"},\"deposit(uint256,address)\":{\"notice\":\"Deposit LP tokens into gauge for any user\"},\"earned(address)\":{\"notice\":\"Returns accrued balance to date from last claim / first deposit.\"},\"getReward(address)\":{\"notice\":\"Retrieve rewards for an address.\"},\"isPool()\":{\"notice\":\"Returns if gauge is linked to a legitimate Velodrome pool\"},\"lastTimeRewardApplicable()\":{\"notice\":\"Returns the last time the reward was modified or periodFinish if the reward has ended\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw LP tokens for user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IGauge.sol\":\"IGauge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":8000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"project:/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0x14098a454b8a7f9afdb2b3a8f6545daf93430b1049131c7ba8bdbefb463e1ff7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a2c83bcad6a1f696ec2d950b177e6ed40b4821b7f2416aca0f80e96092748ed\",\"dweb:/ipfs/QmcJsZFAswzJ677LLw2pkUMFFoVBdxMEtBaG5heCSZmS58\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\ninterface IGauge is IERC20 {\r\n    error NotAlive();\r\n    error NotAuthorized();\r\n    error NotVoter();\r\n    error RewardRateTooHigh();\r\n    error ZeroAmount();\r\n    error ZeroRewardRate();\r\n\r\n    event Deposit(address indexed from, address indexed to, uint256 amount);\r\n    event Withdraw(address indexed from, uint256 amount);\r\n    event NotifyReward(address indexed from, uint256 amount);\r\n    event ClaimFees(address indexed from, uint256 claimed0, uint256 claimed1);\r\n    event ClaimRewards(address indexed from, uint256 amount);\r\n\r\n    function rewardToken() external view returns (address);\r\n\r\n    function rewardPerToken() external view returns (uint256 _rewardPerToken);\r\n\r\n    /// @notice Returns the last time the reward was modified or periodFinish if the reward has ended\r\n    function lastTimeRewardApplicable() external view returns (uint256 _time);\r\n\r\n    /// @notice Returns accrued balance to date from last claim / first deposit.\r\n    function earned(address _account) external view returns (uint256 _earned);\r\n\r\n    function left() external view returns (uint256 _left);\r\n\r\n    /// @notice Returns if gauge is linked to a legitimate Velodrome pool\r\n    function isPool() external view returns (bool _isPool);\r\n\r\n    function stakingToken() external view returns (address _pool);\r\n\r\n    /// @notice Retrieve rewards for an address.\r\n    /// @dev Throws if not called by same address or voter.\r\n    /// @param _account .\r\n    function getReward(address _account) external;\r\n\r\n    /// @notice Deposit LP tokens into gauge for msg.sender\r\n    /// @param _amount .\r\n    function deposit(uint256 _amount) external;\r\n\r\n    /// @notice Deposit LP tokens into gauge for any user\r\n    /// @param _amount .\r\n    /// @param _recipient Recipient to give balance to\r\n    function deposit(uint256 _amount, address _recipient) external;\r\n\r\n    /// @notice Withdraw LP tokens for user\r\n    /// @param _amount .\r\n    function withdraw(uint256 _amount) external;\r\n\r\n    /// @dev Notifies gauge of gauge rewards. Assumes gauge reward tokens is 18 decimals.\r\n    ///      If not 18 decimals, rewardRate may have rounding issues.\r\n    function notifyRewardAmount(uint256 amount) external;\r\n}",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-optimism\\contracts\\interfaces\\IGauge.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IGauge.sol",
    "exportedSymbols": {
      "IERC20": [
        3326
      ],
      "IGauge": [
        11070
      ]
    },
    "id": 11071,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10948,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:40"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 10949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11071,
        "sourceUnit": 3327,
        "src": "58:56:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10950,
              "name": "IERC20",
              "nameLocations": [
                "136:6:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3326,
              "src": "136:6:40"
            },
            "id": 10951,
            "nodeType": "InheritanceSpecifier",
            "src": "136:6:40"
          }
        ],
        "canonicalName": "IGauge",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11070,
        "linearizedBaseContracts": [
          11070,
          3326
        ],
        "name": "IGauge",
        "nameLocation": "126:6:40",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "10f3d9c9",
            "id": 10953,
            "name": "NotAlive",
            "nameLocation": "156:8:40",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 10952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:40"
            },
            "src": "150:17:40"
          },
          {
            "errorSelector": "ea8e4eb5",
            "id": 10955,
            "name": "NotAuthorized",
            "nameLocation": "179:13:40",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 10954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "192:2:40"
            },
            "src": "173:22:40"
          },
          {
            "errorSelector": "c18384c1",
            "id": 10957,
            "name": "NotVoter",
            "nameLocation": "207:8:40",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 10956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:2:40"
            },
            "src": "201:17:40"
          },
          {
            "errorSelector": "3c6be1b3",
            "id": 10959,
            "name": "RewardRateTooHigh",
            "nameLocation": "230:17:40",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 10958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "247:2:40"
            },
            "src": "224:26:40"
          },
          {
            "errorSelector": "1f2a2005",
            "id": 10961,
            "name": "ZeroAmount",
            "nameLocation": "262:10:40",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 10960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:2:40"
            },
            "src": "256:19:40"
          },
          {
            "errorSelector": "07ced7af",
            "id": 10963,
            "name": "ZeroRewardRate",
            "nameLocation": "287:14:40",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 10962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:2:40"
            },
            "src": "281:23:40"
          },
          {
            "anonymous": false,
            "eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
            "id": 10971,
            "name": "Deposit",
            "nameLocation": "318:7:40",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10965,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "342:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "326:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10967,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "364:2:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "348:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10969,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "376:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "368:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "325:58:40"
            },
            "src": "312:72:40"
          },
          {
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "id": 10977,
            "name": "Withdraw",
            "nameLocation": "396:8:40",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10973,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "421:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10977,
                  "src": "405:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10975,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "435:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10977,
                  "src": "427:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "404:38:40"
            },
            "src": "390:53:40"
          },
          {
            "anonymous": false,
            "eventSelector": "095667752957714306e1a6ad83495404412df6fdb932fca6dc849a7ee910d4c1",
            "id": 10983,
            "name": "NotifyReward",
            "nameLocation": "455:12:40",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10979,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "484:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10983,
                  "src": "468:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10981,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "498:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10983,
                  "src": "490:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:38:40"
            },
            "src": "449:57:40"
          },
          {
            "anonymous": false,
            "eventSelector": "bc567d6cbad26368064baa0ab5a757be46aae4d70f707f9203d9d9b6c8ccbfa3",
            "id": 10991,
            "name": "ClaimFees",
            "nameLocation": "518:9:40",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10985,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "544:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10991,
                  "src": "528:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimed0",
                  "nameLocation": "558:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10991,
                  "src": "550:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10989,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimed1",
                  "nameLocation": "576:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10991,
                  "src": "568:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:58:40"
            },
            "src": "512:74:40"
          },
          {
            "anonymous": false,
            "eventSelector": "1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc67",
            "id": 10997,
            "name": "ClaimRewards",
            "nameLocation": "598:12:40",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10993,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "627:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10997,
                  "src": "611:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10995,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "641:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 10997,
                  "src": "633:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "610:38:40"
            },
            "src": "592:57:40"
          },
          {
            "functionSelector": "f7c618c1",
            "id": 11002,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rewardToken",
            "nameLocation": "666:11:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:40"
            },
            "returnParameters": {
              "id": 11001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11002,
                  "src": "703:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "702:9:40"
            },
            "scope": 11070,
            "src": "657:55:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "cd3daf9d",
            "id": 11007,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rewardPerToken",
            "nameLocation": "729:14:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:2:40"
            },
            "returnParameters": {
              "id": 11006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11005,
                  "mutability": "mutable",
                  "name": "_rewardPerToken",
                  "nameLocation": "777:15:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11007,
                  "src": "769:23:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "768:25:40"
            },
            "scope": 11070,
            "src": "720:74:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11008,
              "nodeType": "StructuredDocumentation",
              "src": "802:97:40",
              "text": "@notice Returns the last time the reward was modified or periodFinish if the reward has ended"
            },
            "functionSelector": "80faa57d",
            "id": 11013,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lastTimeRewardApplicable",
            "nameLocation": "914:24:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:2:40"
            },
            "returnParameters": {
              "id": 11012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11011,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "972:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11013,
                  "src": "964:13:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:15:40"
            },
            "scope": 11070,
            "src": "905:74:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11014,
              "nodeType": "StructuredDocumentation",
              "src": "987:76:40",
              "text": "@notice Returns accrued balance to date from last claim / first deposit."
            },
            "functionSelector": "008cc262",
            "id": 11021,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "earned",
            "nameLocation": "1078:6:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11016,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1093:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11021,
                  "src": "1085:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:18:40"
            },
            "returnParameters": {
              "id": 11020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11019,
                  "mutability": "mutable",
                  "name": "_earned",
                  "nameLocation": "1134:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11021,
                  "src": "1126:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1125:17:40"
            },
            "scope": 11070,
            "src": "1069:74:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "16e64048",
            "id": 11026,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "left",
            "nameLocation": "1160:4:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:40"
            },
            "returnParameters": {
              "id": 11025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11024,
                  "mutability": "mutable",
                  "name": "_left",
                  "nameLocation": "1198:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11026,
                  "src": "1190:13:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1189:15:40"
            },
            "scope": 11070,
            "src": "1151:54:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11027,
              "nodeType": "StructuredDocumentation",
              "src": "1213:69:40",
              "text": "@notice Returns if gauge is linked to a legitimate Velodrome pool"
            },
            "functionSelector": "e2e1c6db",
            "id": 11032,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPool",
            "nameLocation": "1297:6:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:40"
            },
            "returnParameters": {
              "id": 11031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11030,
                  "mutability": "mutable",
                  "name": "_isPool",
                  "nameLocation": "1334:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11032,
                  "src": "1329:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11029,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1328:14:40"
            },
            "scope": 11070,
            "src": "1288:55:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "72f702f3",
            "id": 11037,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakingToken",
            "nameLocation": "1360:12:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:2:40"
            },
            "returnParameters": {
              "id": 11036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11035,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "1406:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11037,
                  "src": "1398:13:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:15:40"
            },
            "scope": 11070,
            "src": "1351:62:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11038,
              "nodeType": "StructuredDocumentation",
              "src": "1421:132:40",
              "text": "@notice Retrieve rewards for an address.\n @dev Throws if not called by same address or voter.\n @param _account ."
            },
            "functionSelector": "c00007b0",
            "id": 11043,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getReward",
            "nameLocation": "1568:9:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11040,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1586:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11043,
                  "src": "1578:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:18:40"
            },
            "returnParameters": {
              "id": 11042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:40"
            },
            "scope": 11070,
            "src": "1559:46:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11044,
              "nodeType": "StructuredDocumentation",
              "src": "1613:81:40",
              "text": "@notice Deposit LP tokens into gauge for msg.sender\n @param _amount ."
            },
            "functionSelector": "b6b55f25",
            "id": 11049,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1709:7:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11046,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1725:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11049,
                  "src": "1717:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1716:17:40"
            },
            "returnParameters": {
              "id": 11048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1742:0:40"
            },
            "scope": 11070,
            "src": "1700:43:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11050,
              "nodeType": "StructuredDocumentation",
              "src": "1751:135:40",
              "text": "@notice Deposit LP tokens into gauge for any user\n @param _amount .\n @param _recipient Recipient to give balance to"
            },
            "functionSelector": "6e553f65",
            "id": 11057,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1901:7:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11052,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1917:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11057,
                  "src": "1909:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11054,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "1934:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11057,
                  "src": "1926:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:37:40"
            },
            "returnParameters": {
              "id": 11056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1954:0:40"
            },
            "scope": 11070,
            "src": "1892:63:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11058,
              "nodeType": "StructuredDocumentation",
              "src": "1963:65:40",
              "text": "@notice Withdraw LP tokens for user\n @param _amount ."
            },
            "functionSelector": "2e1a7d4d",
            "id": 11063,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2043:8:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11060,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2060:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11063,
                  "src": "2052:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2051:17:40"
            },
            "returnParameters": {
              "id": 11062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2077:0:40"
            },
            "scope": 11070,
            "src": "2034:44:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11064,
              "nodeType": "StructuredDocumentation",
              "src": "2086:156:40",
              "text": "@dev Notifies gauge of gauge rewards. Assumes gauge reward tokens is 18 decimals.\n      If not 18 decimals, rewardRate may have rounding issues."
            },
            "functionSelector": "3c6b16ab",
            "id": 11069,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "notifyRewardAmount",
            "nameLocation": "2257:18:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11066,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2284:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 11069,
                  "src": "2276:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2275:16:40"
            },
            "returnParameters": {
              "id": 11068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2300:0:40"
            },
            "scope": 11070,
            "src": "2248:53:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11071,
        "src": "116:2188:40",
        "usedErrors": [
          10953,
          10955,
          10957,
          10959,
          10961,
          10963
        ]
      }
    ],
    "src": "33:2271:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-09-29T15:40:25.516Z",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "deposit(uint256)": {
        "params": {
          "_amount": "."
        }
      },
      "deposit(uint256,address)": {
        "params": {
          "_amount": ".",
          "_recipient": "Recipient to give balance to"
        }
      },
      "getReward(address)": {
        "details": "Throws if not called by same address or voter.",
        "params": {
          "_account": "."
        }
      },
      "notifyRewardAmount(uint256)": {
        "details": "Notifies gauge of gauge rewards. Assumes gauge reward tokens is 18 decimals.      If not 18 decimals, rewardRate may have rounding issues."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "withdraw(uint256)": {
        "params": {
          "_amount": "."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256)": {
        "notice": "Deposit LP tokens into gauge for msg.sender"
      },
      "deposit(uint256,address)": {
        "notice": "Deposit LP tokens into gauge for any user"
      },
      "earned(address)": {
        "notice": "Returns accrued balance to date from last claim / first deposit."
      },
      "getReward(address)": {
        "notice": "Retrieve rewards for an address."
      },
      "isPool()": {
        "notice": "Returns if gauge is linked to a legitimate Velodrome pool"
      },
      "lastTimeRewardApplicable()": {
        "notice": "Returns the last time the reward was modified or periodFinish if the reward has ended"
      },
      "withdraw(uint256)": {
        "notice": "Withdraw LP tokens for user"
      }
    },
    "version": 1
  }
}