{
  "contractName": "IUnoFarmVelodrome",
  "abi": [
    {
      "inputs": [],
      "name": "CALLER_NOT_ASSET_ROUTER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CALL_ON_THE_SAME_BLOCK",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INSUFFICIENT_AMOUNT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_ASSET_ROUTER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_GAUGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_LP_POOL",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        }
      ],
      "name": "INVALID_ROUTE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NO_LIQUIDITY",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NO_LIQUIDITY_PROVIDED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "assetRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gauge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_assetRouter",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "contract IGauge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "stable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                }
              ],
              "internalType": "struct IRouter.Route[]",
              "name": "route",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct IUnoFarmVelodrome.SwapInfo[2]",
          "name": "swapInfos",
          "type": "tuple[2]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "feeTo",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "internalType": "struct IUnoFarm.FeeInfo",
          "name": "feeInfo",
          "type": "tuple"
        }
      ],
      "name": "distribute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CALLER_NOT_ASSET_ROUTER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALL_ON_THE_SAME_BLOCK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INSUFFICIENT_AMOUNT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ASSET_ROUTER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_GAUGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_LP_POOL\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"}],\"name\":\"INVALID_ROUTE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NO_LIQUIDITY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NO_LIQUIDITY_PROVIDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"assetRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"route\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"internalType\":\"struct IUnoFarmVelodrome.SwapInfo[2]\",\"name\":\"swapInfos\",\"type\":\"tuple[2]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct IUnoFarm.FeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"}],\"name\":\"distribute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"contract IGauge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assetRouter\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/apps/velodrome/interfaces/IUnoFarmVelodrome.sol\":\"IUnoFarmVelodrome\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/contracts/apps/velodrome/interfaces/IUnoFarmVelodrome.sol\":{\"keccak256\":\"0x28e3363305b348b66dfad2c865c150d882cdcd5ba2e82c740fc615e9735d57a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f2f69002346b215668c85efc25c0f821fa520656be6abf1b095bb3bda66d327\",\"dweb:/ipfs/QmVsCRzRCLiqpbzUh5Y4sSTfmaH3Ptf9z6e9ek1fdeN8A9\"]},\"project:/contracts/interfaces/IGauge.sol\":{\"keccak256\":\"0x5b82cdd7496b1b6d55326aab501d3783154d8103a2b6ec0e6b592bda67ad71c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63aed220ab004745a3f44fc12a6fd09af623ad7771fe385719b671dcbc7f2764\",\"dweb:/ipfs/QmQ3yBeTN4uLF49dJhcdbgDJosAhUEUvnjkq2UeXHazCPi\"]},\"project:/contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0x3c48f83694984559f75c4963cc6ca6c6e93260799be51affc1387fc09760e487\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119e7e8af7e400f13398e3262c23604bf9fad092dc806b75675be7a8f8ed5337\",\"dweb:/ipfs/Qma1kimRpHp2Pb5eADXEmkxJvKwRQftv2X6Rt81cJpou5k\"]},\"project:/contracts/interfaces/IUnoFarm.sol\":{\"keccak256\":\"0xfd634d3e1025d1bb4950c7d12b36371ddd6400743cc1fc65d6233cf7f18a7895\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86cc02382565943e732069f238ab53c697542598ff6dd82c8c378b1ae6e291b3\",\"dweb:/ipfs/QmedZu1bKosN6dyisTzC1B1s8PcyEu3ieDqdbmZfU4pcaS\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\n\r\nimport '../../../interfaces/IUnoFarm.sol';\r\nimport \"../../../interfaces/IGauge.sol\"; \r\nimport \"../../../interfaces/IRouter.sol\";\r\n\r\ninterface IUnoFarmVelodrome is IUnoFarm { \r\n\t/**\r\n     * @dev SwapInfo:\r\n     * {route} - Array of token addresses describing swap routes.\r\n     * {amountOutMin} - The minimum amount of output token that must be received for the transaction not to revert.\r\n     */\r\n    struct SwapInfo{\r\n        IRouter.Route[] route;\r\n        uint256 amountOutMin;\r\n    }\r\n\r\n    error INVALID_GAUGE();\r\n\r\n    function isStable() external view returns (bool);\r\n    function gauge() external view returns (IGauge);\r\n    \r\n    function distribute(\r\n        SwapInfo[2] calldata swapInfos,\r\n        FeeInfo calldata feeInfo\r\n    ) external returns(uint256 reward);\r\n}\r\n\r\n",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-optimism\\contracts\\apps\\velodrome\\interfaces\\IUnoFarmVelodrome.sol",
  "ast": {
    "absolutePath": "project:/contracts/apps/velodrome/interfaces/IUnoFarmVelodrome.sol",
    "exportedSymbols": {
      "IERC20": [
        1911
      ],
      "IGauge": [
        6271
      ],
      "IRouter": [
        6996
      ],
      "IUnoFarm": [
        7972
      ],
      "IUnoFarmVelodrome": [
        6110
      ]
    },
    "id": 6111,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6071,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:27"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IUnoFarm.sol",
        "file": "../../../interfaces/IUnoFarm.sol",
        "id": 6072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6111,
        "sourceUnit": 7973,
        "src": "60:42:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IGauge.sol",
        "file": "../../../interfaces/IGauge.sol",
        "id": 6073,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6111,
        "sourceUnit": 6272,
        "src": "104:40:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IRouter.sol",
        "file": "../../../interfaces/IRouter.sol",
        "id": 6074,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6111,
        "sourceUnit": 6997,
        "src": "147:41:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6075,
              "name": "IUnoFarm",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7972,
              "src": "223:8:27"
            },
            "id": 6076,
            "nodeType": "InheritanceSpecifier",
            "src": "223:8:27"
          }
        ],
        "canonicalName": "IUnoFarmVelodrome",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 6110,
        "linearizedBaseContracts": [
          6110,
          7972
        ],
        "name": "IUnoFarmVelodrome",
        "nameLocation": "202:17:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IUnoFarmVelodrome.SwapInfo",
            "id": 6083,
            "members": [
              {
                "constant": false,
                "id": 6080,
                "mutability": "mutable",
                "name": "route",
                "nameLocation": "504:5:27",
                "nodeType": "VariableDeclaration",
                "scope": 6083,
                "src": "488:21:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                  "typeString": "struct IRouter.Route[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 6078,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6077,
                      "name": "IRouter.Route",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6470,
                      "src": "488:13:27"
                    },
                    "referencedDeclaration": 6470,
                    "src": "488:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                      "typeString": "struct IRouter.Route"
                    }
                  },
                  "id": 6079,
                  "nodeType": "ArrayTypeName",
                  "src": "488:15:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                    "typeString": "struct IRouter.Route[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6082,
                "mutability": "mutable",
                "name": "amountOutMin",
                "nameLocation": "528:12:27",
                "nodeType": "VariableDeclaration",
                "scope": 6083,
                "src": "520:20:27",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6081,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapInfo",
            "nameLocation": "469:8:27",
            "nodeType": "StructDefinition",
            "scope": 6110,
            "src": "462:86:27",
            "visibility": "public"
          },
          {
            "id": 6085,
            "name": "INVALID_GAUGE",
            "nameLocation": "562:13:27",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:27"
            },
            "src": "556:22:27"
          },
          {
            "functionSelector": "09047bdd",
            "id": 6090,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isStable",
            "nameLocation": "595:8:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:27"
            },
            "returnParameters": {
              "id": 6089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6088,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6090,
                  "src": "629:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6087,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "628:6:27"
            },
            "scope": 6110,
            "src": "586:49:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a6f19c84",
            "id": 6096,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gauge",
            "nameLocation": "650:5:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:27"
            },
            "returnParameters": {
              "id": 6095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6094,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6096,
                  "src": "681:6:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGauge_$6271",
                    "typeString": "contract IGauge"
                  },
                  "typeName": {
                    "id": 6093,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6092,
                      "name": "IGauge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6271,
                      "src": "681:6:27"
                    },
                    "referencedDeclaration": 6271,
                    "src": "681:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGauge_$6271",
                      "typeString": "contract IGauge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "680:8:27"
            },
            "scope": 6110,
            "src": "641:48:27",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "1b6b19ec",
            "id": 6109,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "distribute",
            "nameLocation": "710:10:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6101,
                  "mutability": "mutable",
                  "name": "swapInfos",
                  "nameLocation": "752:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6109,
                  "src": "731:30:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SwapInfo_$6083_calldata_ptr_$2_calldata_ptr",
                    "typeString": "struct IUnoFarmVelodrome.SwapInfo[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6098,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6097,
                        "name": "SwapInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6083,
                        "src": "731:8:27"
                      },
                      "referencedDeclaration": 6083,
                      "src": "731:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapInfo_$6083_storage_ptr",
                        "typeString": "struct IUnoFarmVelodrome.SwapInfo"
                      }
                    },
                    "id": 6100,
                    "length": {
                      "hexValue": "32",
                      "id": 6099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "740:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "731:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SwapInfo_$6083_storage_$2_storage_ptr",
                      "typeString": "struct IUnoFarmVelodrome.SwapInfo[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6104,
                  "mutability": "mutable",
                  "name": "feeInfo",
                  "nameLocation": "789:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6109,
                  "src": "772:24:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FeeInfo_$7889_calldata_ptr",
                    "typeString": "struct IUnoFarm.FeeInfo"
                  },
                  "typeName": {
                    "id": 6103,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6102,
                      "name": "FeeInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7889,
                      "src": "772:7:27"
                    },
                    "referencedDeclaration": 7889,
                    "src": "772:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FeeInfo_$7889_storage_ptr",
                      "typeString": "struct IUnoFarm.FeeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:83:27"
            },
            "returnParameters": {
              "id": 6108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6107,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "829:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6109,
                  "src": "821:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:16:27"
            },
            "scope": 6110,
            "src": "701:136:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6111,
        "src": "192:648:27",
        "usedErrors": [
          6085,
          7891,
          7893,
          7895,
          7897,
          7899,
          7901,
          7903,
          7905,
          7911
        ]
      }
    ],
    "src": "33:811:27"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-07-11T10:41:07.821Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}