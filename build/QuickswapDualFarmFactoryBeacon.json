{
  "contractName": "QuickswapDualFarmFactoryBeacon",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "DistributorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmAddress",
          "type": "address"
        }
      ],
      "name": "FarmDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Farms",
      "outputs": [
        {
          "internalType": "contract QuickswapDualFarmUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "upgrader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sentA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sentB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenAToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenAToTokenBRoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenBToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenBToTokenBRoute",
          "type": "address[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "userStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDepositsLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "transferDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmAddress\",\"type\":\"address\"}],\"name\":\"FarmDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Farms\",\"outputs\":[{\"internalType\":\"contract QuickswapDualFarmUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sentA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenAToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenAToTokenBRoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenBToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenBToTokenBRoute\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDepositsLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"transferDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"userStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256,address,address)\":{\"details\":\"Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\",\"params\":{\"amountA\":\"- Token A amount to deposit.\",\"amountB\":\"-  Token B amount to deposit.\",\"amountLP\":\"- LP Token amount to deposit.\",\"lpStakingPool\":\"- Address of the pool to deposit tokens in.\",\"recipient\":\"- Address which will recieve the deposit and leftover tokens.\"},\"returns\":{\"liquidity\":\"- Total liquidity sent to the farm (in lpTokens).\",\"sentA\":\"- Token A amount sent to the farm.\",\"sentB\":\"- Token B amount sent to the farm.\"}},\"distribute(address,address[],address[],address[],address[])\":{\"details\":\"Distributes tokens between users.\",\"params\":{\"lpStakingPool\":\"- LP pool to distribute tokens in.\",\"rewardTokenAToTokenARoute\":\"An array of token addresses.\",\"rewardTokenAToTokenBRoute\":\"An array of token addresses.\",\"rewardTokenBToTokenARoute\":\"An array of token addresses.\",\"rewardTokenBToTokenBRoute\":\"An array of token addresses. Note: This function can only be called by the distributor.\"}},\"totalDeposits(address)\":{\"details\":\"Returns total amount locked in the pool. Doesn't take pending rewards into account.\",\"params\":{\"lpStakingPool\":\"- LP pool to check total deposits in.\"},\"returns\":{\"totalDepositsA\":\"- Token A deposits.\",\"totalDepositsB\":\"- Token B deposits.\",\"totalDepositsLP\":\"- Total deposits (in LP tokens).\"}},\"userStake(address,address)\":{\"details\":\"Returns tokens staked by the {_address} for the given {lpPair}.\",\"params\":{\"_address\":\"- The address to check stakes for.\",\"lpStakingPool\":\"- LP pool to check stakes in.\"},\"returns\":{\"stakeA\":\"- Token A stake.\",\"stakeB\":\"- Token B stake.\",\"stakeLP\":\"- Total user stake(in LP tokens).\"}},\"withdraw(address,uint256,bool,address)\":{\"details\":\"Withdraws tokens from the given pool. \",\"params\":{\"amount\":\"- LP amount to withdraw. \",\"lpStakingPool\":\"- LP pool to withdraw from.\",\"recipient\":\"- The address which will recieve tokens.\",\"withdrawLP\":\"- True: Withdraw in LP tokens, False: Withdraw in normal tokens.\"},\"returns\":{\"amountA\":\"- Token A amount sent to the {recipient}, 0 if withdrawLP == false.\",\"amountB\":\"- Token B amount sent to the {recipient}, 0 if withdrawLP == false.\"}}},\"stateVariables\":{\"farmBeacon\":{\"details\":\"Contract Variables: farmBeacon - Farm contract implementation. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract. distributor - Address authorized to make distributions.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/QuickswapDualFarmFactoryBeacon.sol\":\"QuickswapDualFarmFactoryBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x0edeb16b9821ae2b16e9d69c383b38d3ad2fbb3e0c06cf809a0786d96e602551\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88adc865fb1bd8dab4c58096e1d5887713f62c0405f8d2d17294727a8f43d8f7\",\"dweb:/ipfs/QmUJ27zsjxCatfoTFWho4k4qdhuBTorMqLuJzWqUX4Sdmg\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x54878f0d2f40b5e13f84977bcd3c71d4c38581414e7efb4909cb16dd3ace392f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de34b91166c2da5be35edc989b7cc9033fa1c15ef7ad93916208d25081089736\",\"dweb:/ipfs/QmSKZ1DeBfbEmDcvh5sKRpwqnTz5YNJtyAybzbkRgTET6N\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x20ba3c551439998a53313a63959be77ab70f14338a39592c7a6eb36e8bc3d148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b4ad713900e1f3f43788b00742e0c1a885c254decf8fb8d854f4769401239cd\",\"dweb:/ipfs/QmatiW29TqVMi4dgfHM2Uppn4LqsSeJZtnVvT2rrYqyjR2\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9\",\"dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/QuickswapDualFarmFactoryBeacon.sol\":{\"keccak256\":\"0xc25a7a5a7c9bf1e744beafca072d8ab9408300f5a596ef2ba8bcff626c85eb56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://618c2a592d62bb71c9e4cdfdab2b274ed57e3e128c5c5857f61cd10c7e3af8c9\",\"dweb:/ipfs/Qmdp5Hu5Ayu2gjHYq39x6ha4TxzC5cdvjo6ChtnSjH7YAy\"]},\"project:/contracts/farms/QuickswapDualFarmUpgradeable.sol\":{\"keccak256\":\"0x109eb79b7f20c0879567d78ac968910437fcb7e30d3f8dc2f5179a2f114ddd58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d412c35f8804b27902414272fd6729a49f7cca74edcb7a35900b27e92e02f1b4\",\"dweb:/ipfs/QmNb3B7qugYrsGuQQJpuMiLJXigeJitJ9BAwj9Pn8UPaLY\"]},\"project:/contracts/interfaces/IStakingDualRewards.sol\":{\"keccak256\":\"0xb66973d0379a9e1fe37d2b474720d055dbdeeca2324720bfa6a09941f18cac45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2a423dc664dba5965b3a93199556251124dbe9739a67f6b155f4630b46bef56\",\"dweb:/ipfs/QmWAqsLtZPf4wLAPpcDYVLogfiWBBMx2CRpbbD7Fp4XPSJ\"]},\"project:/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xa3d83596fa1f4b8a66b37bf6ed9b8f193d16964f718feada7ff6b27817de51a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734097d009c568d586d793ef891a3da29e7a24330e290b2b3553e676f4c9c3a7\",\"dweb:/ipfs/QmUhmfSvgMBRnJNYHfNjDKtti7Fna6Uqr4rsKuJeHkEScw\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x1530b00512450cd32128a92e9444a96da92399a84ab1e1a3539b4817cf91676b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e40fa52888c0351f252749cdeb252ea4cdecbfd893e31563a606cc5cf455aa2a\",\"dweb:/ipfs/QmUah3Qkt6U8WErkh6TDdZwwgcXRzMmzrFKeuoHr8KmiaN\"]},\"project:/contracts/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0xec9edfa4778dfd003d2f53807fc04f5274d28ade94226f7df74957de7c07111a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f9089e0dcf2871197521b6f84f353b9d63816bfa0c1a2ba64379492ffc77f53\",\"dweb:/ipfs/QmSnAv4R1MWmxjHh37Tp2yfHMQdnfPA9T17rTiLprixy2i\"]},\"project:/contracts/utils/Cooldown.sol\":{\"keccak256\":\"0xb9dcb6b93efb728bf356c0fadb2b124083f28317147fef31e3c57df79673e7e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd8bd1180c0fe93e63807b6bf06c73e76845bcc578031e22917f176cc50d1c59\",\"dweb:/ipfs/QmRi11ypJ3Byvrn4cetvZW6YwkD5pBkyMp3n3J219qQyjP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506151c6806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c8063d2dd71ad116200007a578063d2dd71ad146200019b578063d95a4d9314620001b2578063e233290814620001cc578063e940325614620001e3578063ecb0394314620001fa578063f9d9331d146200021157600080fd5b8063081e3eda14620000c8578063430004c114620000de57806351bdca3e146200010b5780637c770aae146200013e578063bfe109281462000155578063c4d66de81462000182575b600080fd5b6002546040519081526020015b60405180910390f35b620000f5620000ef36600462001431565b6200023d565b60408051928352602083019190915201620000d5565b620001226200011c3660046200148b565b62000392565b60408051938452602084019290925290820152606001620000d5565b620001226200014f366004620014c9565b62000454565b60035462000169906001600160a01b031681565b6040516001600160a01b039091168152602001620000d5565b620001996200019336600462001524565b620007ff565b005b62000199620001ac3660046200158c565b620009b3565b60005462000169906201000090046001600160a01b031681565b62000199620001dd36600462001524565b62000b4f565b62000122620001f436600462001524565b62000c0a565b620001696200020b36600462001674565b62000cc9565b620001696200022236600462001524565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b038481166000908152600160205260408120549091829116620002ae5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e74206578697374000000000060448201526064015b60405180910390fd5b6001600160a01b038681166000908152600160205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af11580156200031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034491906200168e565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526001602052604081205490918291829116156200044d576001600160a01b0384811660009081526001602052604090819020549051630103c92b60e01b81528783166004820152911690630103c92b90602401602060405180830381865afa15801562000413573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004399190620016b3565b925062000447848462000cf4565b90925090505b9250925092565b6001600160a01b0382811660009081526001602052604081205490918291829116620004ee5762000485856200101c565b6001600160a01b03808716600081815260016020819052604082208054959094166001600160a01b03199586161790935560028054938401815590527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180549092161790555b8715620005a4576001600160a01b03808616600090815260016020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa1580156200054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005729190620016cd565b6001600160a01b03808816600090815260016020526040902054919250620005a291818416913391168c620010ea565b505b86156200065b576001600160a01b038086166000908152600160209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa15801562000603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006299190620016cd565b6001600160a01b038088166000908152600160205260409020549192506200065991818416913391168b620010ea565b505b851562000712576001600160a01b03808616600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa158015620006ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e09190620016cd565b6001600160a01b038088166000908152600160205260409020549192506200071091818416913391168a620010ea565b505b6001600160a01b038581166000908152600160205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af115801562000783573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a99190620016ed565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b600054610100900460ff166200081c5760005460ff161562000820565b303b155b620008855760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002a5565b600054610100900460ff16158015620008a8576000805461ffff19166101011790555b6000604051620008b890620013df565b604051809103906000f080158015620008d5573d6000803e3d6000fd5b50604051620008e490620013ed565b6001600160a01b039091168152602001604051809103906000f08015801562000911573d6000803e3d6000fd5b5060405163f2fde38b60e01b81526001600160a01b0385811660048301529192509082169063f2fde38b90602401600060405180830381600087803b1580156200095a57600080fd5b505af11580156200096f573d6000803e3d6000fd5b5050600080546001600160a01b03909416620100000262010000600160b01b03199094169390931790925550508015620009af576000805461ff00191690555b5050565b6003546001600160a01b03161580620009d657506003546001600160a01b031633145b62000a245760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b6001600160a01b038981166000908152600160205260409020541662000a8d5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e7420657869737400000000006044820152606401620002a5565b6001600160a01b03808a16600090815260016020526040908190205490516373ad67d760e01b81529116906373ad67d79062000adc908b908b908b908b908b908b908b908b9060040162001769565b600060405180830381600087803b15801562000af757600080fd5b505af115801562000b0c573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b6003546001600160a01b0316158062000b7257506003546001600160a01b031633145b62000bc05760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260016020526040812054909182918291161562000cc2576001600160a01b03808516600090815260016020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000c88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cae9190620016b3565b925062000cbc848462000cf4565b90925090505b9193909250565b6002818154811062000cda57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0382811660009081526001602052604081205490918291161562001015576001600160a01b03808516600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000d71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d979190620016cd565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000dda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e009190620016b3565b6001600160a01b03808816600090815260016020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562000e5b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e819190620016cd565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a0823190602401602060405180830381865afa15801562000eca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef09190620016b3565b905062000f0a8262000f0388846200114c565b9062001161565b6001600160a01b038089166000908152600160209081526040808320548151635f64b55b60e01b81529151959a5092949290931692635f64b55b92600480830193928290030181865afa15801562000f66573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f8c9190620016cd565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a0823190602401602060405180830381865afa15801562000fd5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ffb9190620016b3565b90506200100e8362000f0389846200114c565b9450505050505b9250929050565b60008054604080516001600160a01b0385811660248301523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b17905291518493620100009004909216916200108290620013fb565b6200108f9291906200182e565b604051809103906000f080158015620010ac573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620011469085906200116f565b50505050565b60006200115a828462001854565b9392505050565b60006200115a828462001882565b6000620011c6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200124d9092919063ffffffff16565b805190915015620012485780806020019051810190620011e79190620018a5565b620012485760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620002a5565b505050565b60606200125e848460008562001266565b949350505050565b606082471015620012c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620002a5565b6001600160a01b0385163b620013225760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002a5565b600080866001600160a01b03168587604051620013409190620018c5565b60006040518083038185875af1925050503d80600081146200137f576040519150601f19603f3d011682016040523d82523d6000602084013e62001384565b606091505b509150915062001396828286620013a1565b979650505050505050565b60608315620013b25750816200115a565b825115620013c35782518084602001fd5b8160405162461bcd60e51b8152600401620002a59190620018e3565b6129e580620018f983390190565b61052980620042de83390190565b61098a806200480783390190565b6001600160a01b03811681146200141f57600080fd5b50565b80151581146200141f57600080fd5b600080600080608085870312156200144857600080fd5b8435620014558162001409565b93506020850135925060408501356200146e8162001422565b91506060850135620014808162001409565b939692955090935050565b600080604083850312156200149f57600080fd5b8235620014ac8162001409565b91506020830135620014be8162001409565b809150509250929050565b600080600080600060a08688031215620014e257600080fd5b8535945060208601359350604086013592506060860135620015048162001409565b91506080860135620015168162001409565b809150509295509295909350565b6000602082840312156200153757600080fd5b81356200115a8162001409565b60008083601f8401126200155757600080fd5b50813567ffffffffffffffff8111156200157057600080fd5b6020830191508360208260051b85010111156200101557600080fd5b600080600080600080600080600060a08a8c031215620015ab57600080fd5b8935620015b88162001409565b985060208a013567ffffffffffffffff80821115620015d657600080fd5b620015e48d838e0162001544565b909a50985060408c0135915080821115620015fe57600080fd5b6200160c8d838e0162001544565b909850965060608c01359150808211156200162657600080fd5b620016348d838e0162001544565b909650945060808c01359150808211156200164e57600080fd5b506200165d8c828d0162001544565b915080935050809150509295985092959850929598565b6000602082840312156200168757600080fd5b5035919050565b60008060408385031215620016a257600080fd5b505080516020909101519092909150565b600060208284031215620016c657600080fd5b5051919050565b600060208284031215620016e057600080fd5b81516200115a8162001409565b6000806000606084860312156200170357600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b858110156200175e578135620017428162001409565b6001600160a01b0316875295820195908201906001016200172c565b509495945050505050565b6080815260006200177f608083018a8c6200171c565b82810360208401526200179481898b6200171c565b90508281036040840152620017ab8187896200171c565b90508281036060840152620017c28185876200171c565b9b9a5050505050505050505050565b60005b83811015620017ee578181015183820152602001620017d4565b83811115620011465750506000910152565b600081518084526200181a816020860160208601620017d1565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200125e9083018462001800565b60008160001904831182151516156200187d57634e487b7160e01b600052601160045260246000fd5b500290565b600082620018a057634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620018b857600080fd5b81516200115a8162001422565b60008251620018d9818460208701620017d1565b9190910192915050565b6020815260006200115a60208301846200180056fe60a06040523060805234801561001457600080fd5b5060016065556080516129946100516000396000818161041c0152818161046501528181610dc001528181610e000152610e9301526129946000f3fe6080604052600436106100fe5760003560e01c806352d1902d1161009557806373ad67d71161006457806373ad67d7146102975780638da5cb5b146102b7578063aa7b83e3146102d5578063f2fde38b146102f5578063fad3cc4b1461031557600080fd5b806352d1902d1461022d5780635f64b55b146102425780636b8ba92c14610262578063715018a61461028257600080fd5b8063430004c1116100d1578063430004c1146101a5578063452ed4f1146101da578063485cc955146101fa5780634f1ef2861461021a57600080fd5b80630103c92b146101035780630fc63d1014610136578063168a48221461016e5780633659cfe614610183575b600080fd5b34801561010f57600080fd5b5061012361011e3660046121d4565b610350565b6040519081526020015b60405180910390f35b34801561014257600080fd5b50606a54610156906001600160a01b031681565b6040516001600160a01b03909116815260200161012d565b34801561017a57600080fd5b506101236103db565b34801561018f57600080fd5b506101a361019e3660046121d4565b610411565b005b3480156101b157600080fd5b506101c56101c03660046121ff565b6104fa565b6040805192835260208301919091520161012d565b3480156101e657600080fd5b50606954610156906001600160a01b031681565b34801561020657600080fd5b506101a3610215366004612252565b610720565b6101a36102283660046122d2565b610db5565b34801561023957600080fd5b50610123610e86565b34801561024e57600080fd5b50606b54610156906001600160a01b031681565b34801561026e57600080fd5b50606754610156906001600160a01b031681565b34801561028e57600080fd5b506101a3610f39565b3480156102a357600080fd5b506101a36102b23660046123c6565b610f6f565b3480156102c357600080fd5b506033546001600160a01b0316610156565b3480156102e157600080fd5b50606854610156906001600160a01b031681565b34801561030157600080fd5b506101a36103103660046121d4565b611694565b34801561032157600080fd5b5061033561033036600461248a565b61172c565b6040805193845260208401929092529082015260600161012d565b6001600160a01b03811660009081526074602052604081205460725482916103ae91670de0b6b3a7640000916103a8916103899161194e565b6001600160a01b0387166000908152607360205260409020549061195a565b90611966565b6001600160a01b0384166000908152607360205260409020549091506103d49082611972565b9392505050565b600061040c610403670de0b6b3a76400006103a860725460715461195a90919063ffffffff16565b60715490611972565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104635760405162461bcd60e51b815260040161045a906124c0565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104ac600080516020612918833981519152546001600160a01b031690565b6001600160a01b0316146104d25760405162461bcd60e51b815260040161045a9061250c565b6104db8161197e565b604080516000808252602082019092526104f7918391906119a8565b50565b600080336001600160a01b03166105196033546001600160a01b031690565b6001600160a01b03161461053f5760405162461bcd60e51b815260040161045a90612558565b600260655414156105625760405162461bcd60e51b815260040161045a9061258d565b60026065556001600160a01b0386166000908152607360205260409020546105dc5760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b606482015260840161045a565b60006105e787611b13565b905060006105f5828861194e565b90508015610607576106078882611bc4565b851561063257606954610624906001600160a01b03168689611c60565b600080935093505050610710565b606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163baa2abde916001600160a01b0391821691168a6000808b61067242610258611972565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af11580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070891906125c4565b909450925050505b6001606555909590945092505050565b600054610100900460ff1661073b5760005460ff161561073f565b303b155b6107a25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045a565b600054610100900460ff161580156107c4576000805461ffff19166101011790555b6107cc611cb2565b6107d582611694565b606c80546001600160a01b0319166001600160a01b038516908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085291906125e8565b606980546001600160a01b0319166001600160a01b03928316179055606c54604080516317f4408360e21b815290519190921691635fd1020c9160048083019260209291908290030181865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d491906125e8565b606780546001600160a01b0319166001600160a01b03928316179055606c5460408051634462633360e11b8152905191909216916388c4c6669160048083019260209291908290030181865afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095691906125e8565b606880546001600160a01b0319166001600160a01b0392831617905560695460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d891906125e8565b606a80546001600160a01b0319166001600160a01b039283161790556069546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a91906125e8565b606b80546001600160a01b0319166001600160a01b0392831617905560695460405163095ea7b360e01b815285831660048201526000196024820181905292919091169063095ea7b3906044016020604051808303816000875af1158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea9190612605565b5060695460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190612605565b5060675460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfe9190612605565b5060685460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c889190612605565b50606a5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d129190612605565b50606b5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9c9190612605565b50508015610db0576000805461ff00191690555b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610dfe5760405162461bcd60e51b815260040161045a906124c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e47600080516020612918833981519152546001600160a01b031690565b6001600160a01b031614610e6d5760405162461bcd60e51b815260040161045a9061250c565b610e768261197e565b610e82828260016119a8565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f265760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161045a565b5060008051602061291883398151915290565b6033546001600160a01b03163314610f635760405162461bcd60e51b815260040161045a90612558565b610f6d6000611ce1565b565b6033546001600160a01b03163314610f995760405162461bcd60e51b815260040161045a90612558565b60026065541415610fbc5760405162461bcd60e51b815260040161045a9061258d565b60026065556071546110205760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b606482015260840161045a565b606c60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561107057600080fd5b505af1158015611084573d6000803e3d6000fd5b50506067546040516370a0823160e01b8152306004820152600093506110fd92506002916001600160a01b0316906370a08231906024015b602060405180830381865afa1580156110d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190612622565b6068546040516370a0823160e01b815230600482015291925060009161113a916002916001600160a01b03909116906370a08231906024016110bc565b606754606a549192506001600160a01b039182169116146111eb5773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398360008d8d3061118142610258611972565b6040518763ffffffff1660e01b81526004016111a29695949392919061263b565b6000604051808303816000875af11580156111c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111e991908101906126ae565b505b606754606b546001600160a01b039081169116146112995773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398360008b8b3061122f42610258611972565b6040518763ffffffff1660e01b81526004016112509695949392919061263b565b6000604051808303816000875af115801561126f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261129791908101906126ae565b505b606854606a546001600160a01b039081169116146113475773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398260008989306112dd42610258611972565b6040518763ffffffff1660e01b81526004016112fe9695949392919061263b565b6000604051808303816000875af115801561131d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261134591908101906126ae565b505b606854606b546001600160a01b039081169116146113f55773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed173982600087873061138b42610258611972565b6040518763ffffffff1660e01b81526004016113ac9695949392919061263b565b6000604051808303816000875af11580156113cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113f391908101906126ae565b505b606a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561143e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114629190612622565b606b546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d49190612622565b606a54606b5491925073a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b03908116911685856001803061151842610258611972565b6040518963ffffffff1660e01b815260040161153b989796959493929190612754565b6060604051808303816000875af115801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e919061279d565b50506069546040516370a0823160e01b8152306004820152600092506001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f09190612622565b905080156116805760715461161e90611615906103a8670de0b6b3a76400008561195a565b60725490611972565b607255606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561166757600080fd5b505af115801561167b573d6000803e3d6000fd5b505050505b505060016065555050505050505050505050565b6033546001600160a01b031633146116be5760405162461bcd60e51b815260040161045a90612558565b6001600160a01b0381166117235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045a565b6104f781611ce1565b60008080336001600160a01b031661174c6033546001600160a01b031690565b6001600160a01b0316146117725760405162461bcd60e51b815260040161045a90612558565b600260655414156117955760405162461bcd60e51b815260040161045a9061258d565b60026065556001600160a01b038416600090815260736020526040812054156117c4576117c185611b13565b90505b600080891180156117d55750600088115b1561188957606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b0391821691168c8c6000803061181b42610258611972565b6040518963ffffffff1660e01b815260040161183e989796959493929190612754565b6060604051808303816000875af115801561185d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611881919061279d565b919650945090505b6118938188611972565b9250600083116118e55760405162461bcd60e51b815260206004820152601860248201527f54686520616d6f756e742070726f766964656420697320300000000000000000604482015260640161045a565b6118f8866118f38585611972565b611bc4565b611919866119068b8861194e565b606a546001600160a01b03169190611c60565b61193a866119278a8761194e565b606b546001600160a01b03169190611c60565b505060016065819055509450945094915050565b60006103d482846127e1565b60006103d482846127f8565b60006103d48284612817565b60006103d48284612839565b6033546001600160a01b031633146104f75760405162461bcd60e51b815260040161045a90612558565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156119db57610db083611d33565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a35575060408051601f3d908101601f19168201909252611a3291810190612622565b60015b611a985760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161045a565b6000805160206129188339815191528114611b075760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161045a565b50610db0838383611dcf565b600080611b1f83610350565b6001600160a01b038416600090815260736020526040902054607154919250611b48919061194e565b6071556001600160a01b0383811660009081526073602052604080822091909155606c549051632e1a7d4d60e01b815260048101849052911690632e1a7d4d90602401600060405180830381600087803b158015611ba557600080fd5b505af1158015611bb9573d6000803e3d6000fd5b509295945050505050565b6001600160a01b0382166000908152607360209081526040808320849055607254607490925290912055607154611bfb9082611972565b607155606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611c4457600080fd5b505af1158015611c58573d6000803e3d6000fd5b505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610db0908490611dfa565b600054610100900460ff16611cd95760405162461bcd60e51b815260040161045a90612851565b610f6d611ecc565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b611da05760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161045a565b60008051602061291883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611dd883611efc565b600082511180611de55750805b15610db057611df48383611f3c565b50505050565b6000611e4f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f619092919063ffffffff16565b805190915015610db05780806020019051810190611e6d9190612605565b610db05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161045a565b600054610100900460ff16611ef35760405162461bcd60e51b815260040161045a90612851565b610f6d33611ce1565b611f0581611d33565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103d4838360405180606001604052806027815260200161293860279139611f78565b6060611f708484600085612055565b949350505050565b60606001600160a01b0384163b611fe05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161045a565b600080856001600160a01b031685604051611ffb91906128c8565b600060405180830381855af49150503d8060008114612036576040519150601f19603f3d011682016040523d82523d6000602084013e61203b565b606091505b509150915061204b828286612186565b9695505050505050565b6060824710156120b65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161045a565b6001600160a01b0385163b61210d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045a565b600080866001600160a01b0316858760405161212991906128c8565b60006040518083038185875af1925050503d8060008114612166576040519150601f19603f3d011682016040523d82523d6000602084013e61216b565b606091505b509150915061217b828286612186565b979650505050505050565b606083156121955750816103d4565b8251156121a55782518084602001fd5b8160405162461bcd60e51b815260040161045a91906128e4565b6001600160a01b03811681146104f757600080fd5b6000602082840312156121e657600080fd5b81356103d4816121bf565b80151581146104f757600080fd5b6000806000806080858703121561221557600080fd5b8435612220816121bf565b9350602085013592506040850135612237816121f1565b91506060850135612247816121bf565b939692955090935050565b6000806040838503121561226557600080fd5b8235612270816121bf565b91506020830135612280816121bf565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156122ca576122ca61228b565b604052919050565b600080604083850312156122e557600080fd5b82356122f0816121bf565b915060208381013567ffffffffffffffff8082111561230e57600080fd5b818601915086601f83011261232257600080fd5b8135818111156123345761233461228b565b612346601f8201601f191685016122a1565b9150808252878482850101111561235c57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f84011261238c57600080fd5b50813567ffffffffffffffff8111156123a457600080fd5b6020830191508360208260051b85010111156123bf57600080fd5b9250929050565b6000806000806000806000806080898b0312156123e257600080fd5b883567ffffffffffffffff808211156123fa57600080fd5b6124068c838d0161237a565b909a50985060208b013591508082111561241f57600080fd5b61242b8c838d0161237a565b909850965060408b013591508082111561244457600080fd5b6124508c838d0161237a565b909650945060608b013591508082111561246957600080fd5b506124768b828c0161237a565b999c989b5096995094979396929594505050565b600080600080608085870312156124a057600080fd5b8435935060208501359250604085013591506060850135612247816121bf565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600080604083850312156125d757600080fd5b505080516020909101519092909150565b6000602082840312156125fa57600080fd5b81516103d4816121bf565b60006020828403121561261757600080fd5b81516103d4816121f1565b60006020828403121561263457600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b8881101561268d578335612672816121bf565b6001600160a01b03168252928201929082019060010161265f565b506001600160a01b0396909616606085015250505060800152949350505050565b600060208083850312156126c157600080fd5b825167ffffffffffffffff808211156126d957600080fd5b818501915085601f8301126126ed57600080fd5b8151818111156126ff576126ff61228b565b8060051b91506127108483016122a1565b818152918301840191848101908884111561272a57600080fd5b938501935b838510156127485784518252938501939085019061272f565b98975050505050505050565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b6000806000606084860312156127b257600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b6000828210156127f3576127f36127cb565b500390565b6000816000190483118215151615612812576128126127cb565b500290565b60008261283457634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561284c5761284c6127cb565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b838110156128b757818101518382015260200161289f565b83811115611df45750506000910152565b600082516128da81846020870161289c565b9190910192915050565b602081526000825180602084015261290381604085016020870161289c565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a15d99faa2a8f8c523741bff417b13c452b40b9cb0944799ebdc044e8385b64364736f6c634300080a0033608060405234801561001057600080fd5b5060405161052938038061052983398101604081905261002f91610151565b61003833610047565b61004181610097565b50610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03163b151590565b60006020828403121561016357600080fd5b81516001600160a01b038116811461017a57600080fd5b9392505050565b610399806101906000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102fe565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102fe565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061032e565b60405180910390fd5b61010281610219565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061032e565b61016d60006102ae565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061032e565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b610207816102ae565b50565b6001600160a01b03163b151590565b6001600160a01b0381163b61028c5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031057600080fd5b81356001600160a01b038116811461032757600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f0a243b52461696fadf05325e53c8019325f72ee91b3a6ba2f983ff13a83604364736f6c634300080a0033608060405260405161098a38038061098a8339810160408190526100229161048b565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161054b565b6000805160206109438339815191521461006957610069610570565b6100758282600061007c565b50506105f0565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610586565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610586565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061094383398151915260001b61031360201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161096360279139610316565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61037e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b03168560405161039991906105a1565b600060405180830381855af49150503d80600081146103d4576040519150601f19603f3d011682016040523d82523d6000602084013e6103d9565b606091505b5090925090506103ea8282866103f4565b9695505050505050565b606083156104035750816102fd565b8251156104135782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105bd565b80516001600160a01b038116811461044457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047a578181015183820152602001610462565b838111156101405750506000910152565b6000806040838503121561049e57600080fd5b6104a78361042d565b60208401519092506001600160401b03808211156104c457600080fd5b818501915085601f8301126104d857600080fd5b8151818111156104ea576104ea610449565b604051601f8201601f19908116603f0116810190838211818310171561051257610512610449565b8160405282815288602084870101111561052b57600080fd5b61053c83602083016020880161045f565b80955050505050509250929050565b60008282101561056b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561059857600080fd5b6102fd8261042d565b600082516105b381846020870161045f565b9190910192915050565b60208152600082518060208401526105dc81604085016020870161045f565b601f01601f19169190910160400192915050565b610344806105ff6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e860279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061023f565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101ac9190610298565b600060405180830381855af49150503d80600081146101e7576040519150601f19603f3d011682016040523d82523d6000602084013e6101ec565b606091505b50915091506101fc828286610206565b9695505050505050565b6060831561021557508161004e565b8251156102255782518084602001fd5b8160405162461bcd60e51b815260040161018891906102b4565b60006020828403121561025157600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028357818101518382015260200161026b565b83811115610292576000848401525b50505050565b600082516102aa818460208701610268565b9190910192915050565b60208152600082518060208401526102d3816040850160208701610268565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122058fee286ec8c0f6a9e56c42f4511af15e2d551bc7768492988b09d51b654ef8064736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200ba34b9587d6a3a242339f0044fab183f2daadbb87c4ae1762d276cecad30b9564736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000c35760003560e01c8063d2dd71ad116200007a578063d2dd71ad146200019b578063d95a4d9314620001b2578063e233290814620001cc578063e940325614620001e3578063ecb0394314620001fa578063f9d9331d146200021157600080fd5b8063081e3eda14620000c8578063430004c114620000de57806351bdca3e146200010b5780637c770aae146200013e578063bfe109281462000155578063c4d66de81462000182575b600080fd5b6002546040519081526020015b60405180910390f35b620000f5620000ef36600462001431565b6200023d565b60408051928352602083019190915201620000d5565b620001226200011c3660046200148b565b62000392565b60408051938452602084019290925290820152606001620000d5565b620001226200014f366004620014c9565b62000454565b60035462000169906001600160a01b031681565b6040516001600160a01b039091168152602001620000d5565b620001996200019336600462001524565b620007ff565b005b62000199620001ac3660046200158c565b620009b3565b60005462000169906201000090046001600160a01b031681565b62000199620001dd36600462001524565b62000b4f565b62000122620001f436600462001524565b62000c0a565b620001696200020b36600462001674565b62000cc9565b620001696200022236600462001524565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b038481166000908152600160205260408120549091829116620002ae5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e74206578697374000000000060448201526064015b60405180910390fd5b6001600160a01b038681166000908152600160205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af11580156200031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034491906200168e565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526001602052604081205490918291829116156200044d576001600160a01b0384811660009081526001602052604090819020549051630103c92b60e01b81528783166004820152911690630103c92b90602401602060405180830381865afa15801562000413573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004399190620016b3565b925062000447848462000cf4565b90925090505b9250925092565b6001600160a01b0382811660009081526001602052604081205490918291829116620004ee5762000485856200101c565b6001600160a01b03808716600081815260016020819052604082208054959094166001600160a01b03199586161790935560028054938401815590527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180549092161790555b8715620005a4576001600160a01b03808616600090815260016020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa1580156200054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005729190620016cd565b6001600160a01b03808816600090815260016020526040902054919250620005a291818416913391168c620010ea565b505b86156200065b576001600160a01b038086166000908152600160209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa15801562000603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006299190620016cd565b6001600160a01b038088166000908152600160205260409020549192506200065991818416913391168b620010ea565b505b851562000712576001600160a01b03808616600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa158015620006ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e09190620016cd565b6001600160a01b038088166000908152600160205260409020549192506200071091818416913391168a620010ea565b505b6001600160a01b038581166000908152600160205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af115801562000783573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a99190620016ed565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b600054610100900460ff166200081c5760005460ff161562000820565b303b155b620008855760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002a5565b600054610100900460ff16158015620008a8576000805461ffff19166101011790555b6000604051620008b890620013df565b604051809103906000f080158015620008d5573d6000803e3d6000fd5b50604051620008e490620013ed565b6001600160a01b039091168152602001604051809103906000f08015801562000911573d6000803e3d6000fd5b5060405163f2fde38b60e01b81526001600160a01b0385811660048301529192509082169063f2fde38b90602401600060405180830381600087803b1580156200095a57600080fd5b505af11580156200096f573d6000803e3d6000fd5b5050600080546001600160a01b03909416620100000262010000600160b01b03199094169390931790925550508015620009af576000805461ff00191690555b5050565b6003546001600160a01b03161580620009d657506003546001600160a01b031633145b62000a245760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b6001600160a01b038981166000908152600160205260409020541662000a8d5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e7420657869737400000000006044820152606401620002a5565b6001600160a01b03808a16600090815260016020526040908190205490516373ad67d760e01b81529116906373ad67d79062000adc908b908b908b908b908b908b908b908b9060040162001769565b600060405180830381600087803b15801562000af757600080fd5b505af115801562000b0c573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b6003546001600160a01b0316158062000b7257506003546001600160a01b031633145b62000bc05760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260016020526040812054909182918291161562000cc2576001600160a01b03808516600090815260016020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000c88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cae9190620016b3565b925062000cbc848462000cf4565b90925090505b9193909250565b6002818154811062000cda57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0382811660009081526001602052604081205490918291161562001015576001600160a01b03808516600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000d71573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d979190620016cd565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000dda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e009190620016b3565b6001600160a01b03808816600090815260016020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562000e5b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e819190620016cd565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a0823190602401602060405180830381865afa15801562000eca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef09190620016b3565b905062000f0a8262000f0388846200114c565b9062001161565b6001600160a01b038089166000908152600160209081526040808320548151635f64b55b60e01b81529151959a5092949290931692635f64b55b92600480830193928290030181865afa15801562000f66573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f8c9190620016cd565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a0823190602401602060405180830381865afa15801562000fd5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ffb9190620016b3565b90506200100e8362000f0389846200114c565b9450505050505b9250929050565b60008054604080516001600160a01b0385811660248301523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b17905291518493620100009004909216916200108290620013fb565b6200108f9291906200182e565b604051809103906000f080158015620010ac573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620011469085906200116f565b50505050565b60006200115a828462001854565b9392505050565b60006200115a828462001882565b6000620011c6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200124d9092919063ffffffff16565b805190915015620012485780806020019051810190620011e79190620018a5565b620012485760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620002a5565b505050565b60606200125e848460008562001266565b949350505050565b606082471015620012c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620002a5565b6001600160a01b0385163b620013225760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002a5565b600080866001600160a01b03168587604051620013409190620018c5565b60006040518083038185875af1925050503d80600081146200137f576040519150601f19603f3d011682016040523d82523d6000602084013e62001384565b606091505b509150915062001396828286620013a1565b979650505050505050565b60608315620013b25750816200115a565b825115620013c35782518084602001fd5b8160405162461bcd60e51b8152600401620002a59190620018e3565b6129e580620018f983390190565b61052980620042de83390190565b61098a806200480783390190565b6001600160a01b03811681146200141f57600080fd5b50565b80151581146200141f57600080fd5b600080600080608085870312156200144857600080fd5b8435620014558162001409565b93506020850135925060408501356200146e8162001422565b91506060850135620014808162001409565b939692955090935050565b600080604083850312156200149f57600080fd5b8235620014ac8162001409565b91506020830135620014be8162001409565b809150509250929050565b600080600080600060a08688031215620014e257600080fd5b8535945060208601359350604086013592506060860135620015048162001409565b91506080860135620015168162001409565b809150509295509295909350565b6000602082840312156200153757600080fd5b81356200115a8162001409565b60008083601f8401126200155757600080fd5b50813567ffffffffffffffff8111156200157057600080fd5b6020830191508360208260051b85010111156200101557600080fd5b600080600080600080600080600060a08a8c031215620015ab57600080fd5b8935620015b88162001409565b985060208a013567ffffffffffffffff80821115620015d657600080fd5b620015e48d838e0162001544565b909a50985060408c0135915080821115620015fe57600080fd5b6200160c8d838e0162001544565b909850965060608c01359150808211156200162657600080fd5b620016348d838e0162001544565b909650945060808c01359150808211156200164e57600080fd5b506200165d8c828d0162001544565b915080935050809150509295985092959850929598565b6000602082840312156200168757600080fd5b5035919050565b60008060408385031215620016a257600080fd5b505080516020909101519092909150565b600060208284031215620016c657600080fd5b5051919050565b600060208284031215620016e057600080fd5b81516200115a8162001409565b6000806000606084860312156200170357600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b858110156200175e578135620017428162001409565b6001600160a01b0316875295820195908201906001016200172c565b509495945050505050565b6080815260006200177f608083018a8c6200171c565b82810360208401526200179481898b6200171c565b90508281036040840152620017ab8187896200171c565b90508281036060840152620017c28185876200171c565b9b9a5050505050505050505050565b60005b83811015620017ee578181015183820152602001620017d4565b83811115620011465750506000910152565b600081518084526200181a816020860160208601620017d1565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200125e9083018462001800565b60008160001904831182151516156200187d57634e487b7160e01b600052601160045260246000fd5b500290565b600082620018a057634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620018b857600080fd5b81516200115a8162001422565b60008251620018d9818460208701620017d1565b9190910192915050565b6020815260006200115a60208301846200180056fe60a06040523060805234801561001457600080fd5b5060016065556080516129946100516000396000818161041c0152818161046501528181610dc001528181610e000152610e9301526129946000f3fe6080604052600436106100fe5760003560e01c806352d1902d1161009557806373ad67d71161006457806373ad67d7146102975780638da5cb5b146102b7578063aa7b83e3146102d5578063f2fde38b146102f5578063fad3cc4b1461031557600080fd5b806352d1902d1461022d5780635f64b55b146102425780636b8ba92c14610262578063715018a61461028257600080fd5b8063430004c1116100d1578063430004c1146101a5578063452ed4f1146101da578063485cc955146101fa5780634f1ef2861461021a57600080fd5b80630103c92b146101035780630fc63d1014610136578063168a48221461016e5780633659cfe614610183575b600080fd5b34801561010f57600080fd5b5061012361011e3660046121d4565b610350565b6040519081526020015b60405180910390f35b34801561014257600080fd5b50606a54610156906001600160a01b031681565b6040516001600160a01b03909116815260200161012d565b34801561017a57600080fd5b506101236103db565b34801561018f57600080fd5b506101a361019e3660046121d4565b610411565b005b3480156101b157600080fd5b506101c56101c03660046121ff565b6104fa565b6040805192835260208301919091520161012d565b3480156101e657600080fd5b50606954610156906001600160a01b031681565b34801561020657600080fd5b506101a3610215366004612252565b610720565b6101a36102283660046122d2565b610db5565b34801561023957600080fd5b50610123610e86565b34801561024e57600080fd5b50606b54610156906001600160a01b031681565b34801561026e57600080fd5b50606754610156906001600160a01b031681565b34801561028e57600080fd5b506101a3610f39565b3480156102a357600080fd5b506101a36102b23660046123c6565b610f6f565b3480156102c357600080fd5b506033546001600160a01b0316610156565b3480156102e157600080fd5b50606854610156906001600160a01b031681565b34801561030157600080fd5b506101a36103103660046121d4565b611694565b34801561032157600080fd5b5061033561033036600461248a565b61172c565b6040805193845260208401929092529082015260600161012d565b6001600160a01b03811660009081526074602052604081205460725482916103ae91670de0b6b3a7640000916103a8916103899161194e565b6001600160a01b0387166000908152607360205260409020549061195a565b90611966565b6001600160a01b0384166000908152607360205260409020549091506103d49082611972565b9392505050565b600061040c610403670de0b6b3a76400006103a860725460715461195a90919063ffffffff16565b60715490611972565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104635760405162461bcd60e51b815260040161045a906124c0565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104ac600080516020612918833981519152546001600160a01b031690565b6001600160a01b0316146104d25760405162461bcd60e51b815260040161045a9061250c565b6104db8161197e565b604080516000808252602082019092526104f7918391906119a8565b50565b600080336001600160a01b03166105196033546001600160a01b031690565b6001600160a01b03161461053f5760405162461bcd60e51b815260040161045a90612558565b600260655414156105625760405162461bcd60e51b815260040161045a9061258d565b60026065556001600160a01b0386166000908152607360205260409020546105dc5760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b606482015260840161045a565b60006105e787611b13565b905060006105f5828861194e565b90508015610607576106078882611bc4565b851561063257606954610624906001600160a01b03168689611c60565b600080935093505050610710565b606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163baa2abde916001600160a01b0391821691168a6000808b61067242610258611972565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af11580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070891906125c4565b909450925050505b6001606555909590945092505050565b600054610100900460ff1661073b5760005460ff161561073f565b303b155b6107a25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045a565b600054610100900460ff161580156107c4576000805461ffff19166101011790555b6107cc611cb2565b6107d582611694565b606c80546001600160a01b0319166001600160a01b038516908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085291906125e8565b606980546001600160a01b0319166001600160a01b03928316179055606c54604080516317f4408360e21b815290519190921691635fd1020c9160048083019260209291908290030181865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d491906125e8565b606780546001600160a01b0319166001600160a01b03928316179055606c5460408051634462633360e11b8152905191909216916388c4c6669160048083019260209291908290030181865afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095691906125e8565b606880546001600160a01b0319166001600160a01b0392831617905560695460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d891906125e8565b606a80546001600160a01b0319166001600160a01b039283161790556069546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a91906125e8565b606b80546001600160a01b0319166001600160a01b0392831617905560695460405163095ea7b360e01b815285831660048201526000196024820181905292919091169063095ea7b3906044016020604051808303816000875af1158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea9190612605565b5060695460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190612605565b5060675460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfe9190612605565b5060685460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c889190612605565b50606a5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d129190612605565b50606b5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9c9190612605565b50508015610db0576000805461ff00191690555b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610dfe5760405162461bcd60e51b815260040161045a906124c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e47600080516020612918833981519152546001600160a01b031690565b6001600160a01b031614610e6d5760405162461bcd60e51b815260040161045a9061250c565b610e768261197e565b610e82828260016119a8565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f265760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161045a565b5060008051602061291883398151915290565b6033546001600160a01b03163314610f635760405162461bcd60e51b815260040161045a90612558565b610f6d6000611ce1565b565b6033546001600160a01b03163314610f995760405162461bcd60e51b815260040161045a90612558565b60026065541415610fbc5760405162461bcd60e51b815260040161045a9061258d565b60026065556071546110205760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b606482015260840161045a565b606c60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561107057600080fd5b505af1158015611084573d6000803e3d6000fd5b50506067546040516370a0823160e01b8152306004820152600093506110fd92506002916001600160a01b0316906370a08231906024015b602060405180830381865afa1580156110d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190612622565b6068546040516370a0823160e01b815230600482015291925060009161113a916002916001600160a01b03909116906370a08231906024016110bc565b606754606a549192506001600160a01b039182169116146111eb5773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398360008d8d3061118142610258611972565b6040518763ffffffff1660e01b81526004016111a29695949392919061263b565b6000604051808303816000875af11580156111c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111e991908101906126ae565b505b606754606b546001600160a01b039081169116146112995773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398360008b8b3061122f42610258611972565b6040518763ffffffff1660e01b81526004016112509695949392919061263b565b6000604051808303816000875af115801561126f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261129791908101906126ae565b505b606854606a546001600160a01b039081169116146113475773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398260008989306112dd42610258611972565b6040518763ffffffff1660e01b81526004016112fe9695949392919061263b565b6000604051808303816000875af115801561131d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261134591908101906126ae565b505b606854606b546001600160a01b039081169116146113f55773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed173982600087873061138b42610258611972565b6040518763ffffffff1660e01b81526004016113ac9695949392919061263b565b6000604051808303816000875af11580156113cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113f391908101906126ae565b505b606a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561143e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114629190612622565b606b546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d49190612622565b606a54606b5491925073a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b03908116911685856001803061151842610258611972565b6040518963ffffffff1660e01b815260040161153b989796959493929190612754565b6060604051808303816000875af115801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e919061279d565b50506069546040516370a0823160e01b8152306004820152600092506001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f09190612622565b905080156116805760715461161e90611615906103a8670de0b6b3a76400008561195a565b60725490611972565b607255606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561166757600080fd5b505af115801561167b573d6000803e3d6000fd5b505050505b505060016065555050505050505050505050565b6033546001600160a01b031633146116be5760405162461bcd60e51b815260040161045a90612558565b6001600160a01b0381166117235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045a565b6104f781611ce1565b60008080336001600160a01b031661174c6033546001600160a01b031690565b6001600160a01b0316146117725760405162461bcd60e51b815260040161045a90612558565b600260655414156117955760405162461bcd60e51b815260040161045a9061258d565b60026065556001600160a01b038416600090815260736020526040812054156117c4576117c185611b13565b90505b600080891180156117d55750600088115b1561188957606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b0391821691168c8c6000803061181b42610258611972565b6040518963ffffffff1660e01b815260040161183e989796959493929190612754565b6060604051808303816000875af115801561185d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611881919061279d565b919650945090505b6118938188611972565b9250600083116118e55760405162461bcd60e51b815260206004820152601860248201527f54686520616d6f756e742070726f766964656420697320300000000000000000604482015260640161045a565b6118f8866118f38585611972565b611bc4565b611919866119068b8861194e565b606a546001600160a01b03169190611c60565b61193a866119278a8761194e565b606b546001600160a01b03169190611c60565b505060016065819055509450945094915050565b60006103d482846127e1565b60006103d482846127f8565b60006103d48284612817565b60006103d48284612839565b6033546001600160a01b031633146104f75760405162461bcd60e51b815260040161045a90612558565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156119db57610db083611d33565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a35575060408051601f3d908101601f19168201909252611a3291810190612622565b60015b611a985760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161045a565b6000805160206129188339815191528114611b075760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161045a565b50610db0838383611dcf565b600080611b1f83610350565b6001600160a01b038416600090815260736020526040902054607154919250611b48919061194e565b6071556001600160a01b0383811660009081526073602052604080822091909155606c549051632e1a7d4d60e01b815260048101849052911690632e1a7d4d90602401600060405180830381600087803b158015611ba557600080fd5b505af1158015611bb9573d6000803e3d6000fd5b509295945050505050565b6001600160a01b0382166000908152607360209081526040808320849055607254607490925290912055607154611bfb9082611972565b607155606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611c4457600080fd5b505af1158015611c58573d6000803e3d6000fd5b505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610db0908490611dfa565b600054610100900460ff16611cd95760405162461bcd60e51b815260040161045a90612851565b610f6d611ecc565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b611da05760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161045a565b60008051602061291883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611dd883611efc565b600082511180611de55750805b15610db057611df48383611f3c565b50505050565b6000611e4f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f619092919063ffffffff16565b805190915015610db05780806020019051810190611e6d9190612605565b610db05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161045a565b600054610100900460ff16611ef35760405162461bcd60e51b815260040161045a90612851565b610f6d33611ce1565b611f0581611d33565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103d4838360405180606001604052806027815260200161293860279139611f78565b6060611f708484600085612055565b949350505050565b60606001600160a01b0384163b611fe05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161045a565b600080856001600160a01b031685604051611ffb91906128c8565b600060405180830381855af49150503d8060008114612036576040519150601f19603f3d011682016040523d82523d6000602084013e61203b565b606091505b509150915061204b828286612186565b9695505050505050565b6060824710156120b65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161045a565b6001600160a01b0385163b61210d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161045a565b600080866001600160a01b0316858760405161212991906128c8565b60006040518083038185875af1925050503d8060008114612166576040519150601f19603f3d011682016040523d82523d6000602084013e61216b565b606091505b509150915061217b828286612186565b979650505050505050565b606083156121955750816103d4565b8251156121a55782518084602001fd5b8160405162461bcd60e51b815260040161045a91906128e4565b6001600160a01b03811681146104f757600080fd5b6000602082840312156121e657600080fd5b81356103d4816121bf565b80151581146104f757600080fd5b6000806000806080858703121561221557600080fd5b8435612220816121bf565b9350602085013592506040850135612237816121f1565b91506060850135612247816121bf565b939692955090935050565b6000806040838503121561226557600080fd5b8235612270816121bf565b91506020830135612280816121bf565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156122ca576122ca61228b565b604052919050565b600080604083850312156122e557600080fd5b82356122f0816121bf565b915060208381013567ffffffffffffffff8082111561230e57600080fd5b818601915086601f83011261232257600080fd5b8135818111156123345761233461228b565b612346601f8201601f191685016122a1565b9150808252878482850101111561235c57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f84011261238c57600080fd5b50813567ffffffffffffffff8111156123a457600080fd5b6020830191508360208260051b85010111156123bf57600080fd5b9250929050565b6000806000806000806000806080898b0312156123e257600080fd5b883567ffffffffffffffff808211156123fa57600080fd5b6124068c838d0161237a565b909a50985060208b013591508082111561241f57600080fd5b61242b8c838d0161237a565b909850965060408b013591508082111561244457600080fd5b6124508c838d0161237a565b909650945060608b013591508082111561246957600080fd5b506124768b828c0161237a565b999c989b5096995094979396929594505050565b600080600080608085870312156124a057600080fd5b8435935060208501359250604085013591506060850135612247816121bf565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600080604083850312156125d757600080fd5b505080516020909101519092909150565b6000602082840312156125fa57600080fd5b81516103d4816121bf565b60006020828403121561261757600080fd5b81516103d4816121f1565b60006020828403121561263457600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b8881101561268d578335612672816121bf565b6001600160a01b03168252928201929082019060010161265f565b506001600160a01b0396909616606085015250505060800152949350505050565b600060208083850312156126c157600080fd5b825167ffffffffffffffff808211156126d957600080fd5b818501915085601f8301126126ed57600080fd5b8151818111156126ff576126ff61228b565b8060051b91506127108483016122a1565b818152918301840191848101908884111561272a57600080fd5b938501935b838510156127485784518252938501939085019061272f565b98975050505050505050565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b6000806000606084860312156127b257600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b6000828210156127f3576127f36127cb565b500390565b6000816000190483118215151615612812576128126127cb565b500290565b60008261283457634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561284c5761284c6127cb565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b838110156128b757818101518382015260200161289f565b83811115611df45750506000910152565b600082516128da81846020870161289c565b9190910192915050565b602081526000825180602084015261290381604085016020870161289c565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a15d99faa2a8f8c523741bff417b13c452b40b9cb0944799ebdc044e8385b64364736f6c634300080a0033608060405234801561001057600080fd5b5060405161052938038061052983398101604081905261002f91610151565b61003833610047565b61004181610097565b50610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03163b151590565b60006020828403121561016357600080fd5b81516001600160a01b038116811461017a57600080fd5b9392505050565b610399806101906000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102fe565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102fe565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061032e565b60405180910390fd5b61010281610219565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061032e565b61016d60006102ae565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061032e565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b610207816102ae565b50565b6001600160a01b03163b151590565b6001600160a01b0381163b61028c5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031057600080fd5b81356001600160a01b038116811461032757600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f0a243b52461696fadf05325e53c8019325f72ee91b3a6ba2f983ff13a83604364736f6c634300080a0033608060405260405161098a38038061098a8339810160408190526100229161048b565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161054b565b6000805160206109438339815191521461006957610069610570565b6100758282600061007c565b50506105f0565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610586565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610586565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061094383398151915260001b61031360201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161096360279139610316565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61037e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b03168560405161039991906105a1565b600060405180830381855af49150503d80600081146103d4576040519150601f19603f3d011682016040523d82523d6000602084013e6103d9565b606091505b5090925090506103ea8282866103f4565b9695505050505050565b606083156104035750816102fd565b8251156104135782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105bd565b80516001600160a01b038116811461044457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047a578181015183820152602001610462565b838111156101405750506000910152565b6000806040838503121561049e57600080fd5b6104a78361042d565b60208401519092506001600160401b03808211156104c457600080fd5b818501915085601f8301126104d857600080fd5b8151818111156104ea576104ea610449565b604051601f8201601f19908116603f0116810190838211818310171561051257610512610449565b8160405282815288602084870101111561052b57600080fd5b61053c83602083016020880161045f565b80955050505050509250929050565b60008282101561056b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561059857600080fd5b6102fd8261042d565b600082516105b381846020870161045f565b9190910192915050565b60208152600082518060208401526105dc81604085016020870161045f565b601f01601f19169190910160400192915050565b610344806105ff6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e860279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061023f565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101ac9190610298565b600060405180830381855af49150503d80600081146101e7576040519150601f19603f3d011682016040523d82523d6000602084013e6101ec565b606091505b50915091506101fc828286610206565b9695505050505050565b6060831561021557508161004e565b8251156102255782518084602001fd5b8160405162461bcd60e51b815260040161018891906102b4565b60006020828403121561025157600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028357818101518382015260200161026b565b83811115610292576000848401525b50505050565b600082516102aa818460208701610268565b9190910192915050565b60208152600082518060208401526102d3816040850160208701610268565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122058fee286ec8c0f6a9e56c42f4511af15e2d551bc7768492988b09d51b654ef8064736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200ba34b9587d6a3a242339f0044fab183f2daadbb87c4ae1762d276cecad30b9564736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13913:40",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:40",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:40",
                "type": ""
              }
            ],
            "src": "14:177:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:86:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "264:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "275:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "295:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "286:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "286:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "282:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "271:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:31:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "261:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:42:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:40"
                  },
                  "nodeType": "YulIf",
                  "src": "251:70:40"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "230:5:40",
                "type": ""
              }
            ],
            "src": "196:131:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "374:76:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "397:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "411:13:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "404:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "404:21:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "394:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "394:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "387:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "387:40:40"
                  },
                  "nodeType": "YulIf",
                  "src": "384:60:40"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "363:5:40",
                "type": ""
              }
            ],
            "src": "332:118:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "573:474:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "620:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "629:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "632:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "622:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "622:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "622:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "594:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "603:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "590:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "590:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "615:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "586:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "583:53:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "645:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "671:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "658:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "649:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "715:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "690:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "690:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "690:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "730:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "740:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "730:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "754:42:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "764:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:32:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "805:47:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "837:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "848:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "820:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:32:40"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "809:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "883:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "861:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "861:30:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "900:17:40",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "910:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "900:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "926:47:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "958:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "969:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "954:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "941:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:32:40"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "930:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1007:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "982:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:33:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1024:17:40",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1034:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1024:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "515:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "526:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "538:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "546:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "554:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "562:6:40",
                "type": ""
              }
            ],
            "src": "455:592:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:119:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1203:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1191:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1244:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:25:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1271:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1282:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1267:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1267:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1287:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1260:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1260:34:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1153:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1172:4:40",
                "type": ""
              }
            ],
            "src": "1052:248:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:301:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1438:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1447:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1440:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1440:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1440:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1405:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "1402:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1463:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1489:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1476:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1467:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1533:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1508:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1508:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1548:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1558:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1572:47:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1604:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1600:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1587:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:32:40"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1576:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1653:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1628:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:33:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:17:40",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1680:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1350:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1361:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1373:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1381:6:40",
                "type": ""
              }
            ],
            "src": "1305:388:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:162:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1877:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1907:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1918:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:25:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1961:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1934:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1934:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1988:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1999:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1984:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1984:18:40"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2004:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1977:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1977:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1977:34:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1808:9:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1819:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1827:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1835:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1846:4:40",
                "type": ""
              }
            ],
            "src": "1698:319:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2160:456:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2207:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2216:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2219:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2209:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2209:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2209:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2181:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2190:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2177:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2202:3:40",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2173:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "2170:53:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2232:33:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2255:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2242:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2232:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2274:42:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2301:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2312:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2297:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2297:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2284:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2284:32:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2274:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2325:42:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2352:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2363:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2348:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2348:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2335:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:32:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2376:45:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2406:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2417:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2402:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2402:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2389:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2389:32:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2380:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2455:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2430:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2430:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2430:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2470:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2480:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2470:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2494:48:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2526:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2537:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2522:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2522:19:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2509:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2509:33:40"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2498:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2576:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2551:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2551:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2551:33:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2593:17:40",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2603:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2593:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2094:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2105:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2117:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2125:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2133:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2141:6:40",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2149:6:40",
                "type": ""
              }
            ],
            "src": "2022:594:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2722:102:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2732:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2744:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2755:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2740:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2732:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2774:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2789:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2805:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2810:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2801:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2801:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2814:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2797:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2797:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2785:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2785:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2767:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2767:51:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2767:51:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2691:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2702:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2713:4:40",
                "type": ""
              }
            ],
            "src": "2621:203:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2899:177:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2945:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2954:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2957:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2947:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2947:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2947:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2920:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2929:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2916:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2916:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2941:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2912:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "2909:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2970:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2996:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2983:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2983:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2974:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3040:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3015:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3015:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3055:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3065:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3055:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2865:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2876:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2888:6:40",
                "type": ""
              }
            ],
            "src": "2829:247:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3165:283:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3214:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3223:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3226:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3216:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3216:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3216:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3193:6:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3201:4:40",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3189:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3189:17:40"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3208:3:40"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3185:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3185:27:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3178:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3178:35:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3175:55:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3239:30:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3262:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3249:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:20:40"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3239:6:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3312:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3321:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3324:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3314:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3314:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3314:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3284:6:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3292:18:40",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3281:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3281:30:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3278:50:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3337:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3353:6:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3349:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:17:40"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "3337:8:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3426:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3435:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3438:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3428:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3428:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3428:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3389:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3401:1:40",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3404:6:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3397:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3397:14:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3385:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3385:27:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3381:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:38:40"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3421:3:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3378:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3378:47:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3375:67:40"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3128:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3136:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "3144:8:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3154:6:40",
                "type": ""
              }
            ],
            "src": "3081:367:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3731:1262:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3778:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3787:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3790:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3780:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3780:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3780:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3752:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3761:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3748:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3773:3:40",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3744:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3744:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3741:53:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3803:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3829:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3816:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3807:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3873:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3848:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3848:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3848:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3888:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3898:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3888:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3912:46:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3943:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3954:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3939:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3939:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3926:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3926:32:40"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3916:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3967:28:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3977:18:40",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3971:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4022:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4031:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4034:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4024:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4024:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4024:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4010:6:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4018:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4007:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4007:14:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4004:34:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4047:96:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4115:9:40"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4126:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4111:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4111:22:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4135:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4073:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:70:40"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "4051:8:40",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "4061:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4152:18:40",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "4162:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4152:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4179:18:40",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "4189:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4179:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4206:48:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4239:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4250:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4235:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4235:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4222:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4222:32:40"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4210:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4283:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4292:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4295:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4285:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4285:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4285:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4269:8:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4279:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4266:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:16:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4263:36:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4308:98:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4376:9:40"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4387:8:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4372:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4372:24:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4398:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4334:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4334:72:40"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "4312:8:40",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "4322:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4415:18:40",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "4425:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4415:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4442:18:40",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "4452:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4442:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4469:48:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4502:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4513:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4498:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4498:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4485:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4485:32:40"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "4473:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4546:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4555:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4558:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4548:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4548:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4548:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "4532:8:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4542:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4529:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4529:16:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4526:36:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4571:98:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4639:9:40"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "4650:8:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4635:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4635:24:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4661:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4597:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:72:40"
                  },
                  "variables": [
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "4575:8:40",
                      "type": ""
                    },
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "4585:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4678:18:40",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "4688:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4678:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4705:18:40",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "4715:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "4705:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4732:49:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4765:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4776:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4761:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4761:19:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4748:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4748:33:40"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "4736:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4810:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4819:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4822:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4812:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4812:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4812:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "4796:8:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4806:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4793:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:16:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4790:36:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4835:98:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4903:9:40"
                          },
                          {
                            "name": "offset_3",
                            "nodeType": "YulIdentifier",
                            "src": "4914:8:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4899:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:24:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4925:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4861:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4861:72:40"
                  },
                  "variables": [
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "4839:8:40",
                      "type": ""
                    },
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "4849:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4942:18:40",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "4952:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "4942:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4969:18:40",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "4979:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "4969:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3633:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3644:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3656:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3664:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3672:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3680:6:40",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3688:6:40",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3696:6:40",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3704:6:40",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "3712:6:40",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "3720:6:40",
                "type": ""
              }
            ],
            "src": "3453:1540:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5068:110:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5114:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5123:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5126:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5116:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5116:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5116:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5089:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5098:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5085:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5085:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5110:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5081:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5081:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "5078:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5139:33:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5162:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5149:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5149:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5139:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5034:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5045:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5057:6:40",
                "type": ""
              }
            ],
            "src": "4998:180:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5321:102:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5331:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5343:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5354:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5339:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5339:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5331:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5373:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5388:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5404:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5409:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5400:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5400:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5413:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5396:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5396:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5384:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5384:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5366:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5366:51:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5366:51:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_QuickswapDualFarmUpgradeable_$6373__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5290:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5301:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5312:4:40",
                "type": ""
              }
            ],
            "src": "5183:240:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5602:177:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5619:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5630:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5612:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5612:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5612:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5653:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5664:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5649:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5649:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5669:2:40",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5642:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5642:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5642:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5692:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5703:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5688:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5688:18:40"
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5708:29:40",
                        "type": "",
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5681:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5681:57:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5681:57:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5747:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5759:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5770:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5755:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5755:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5747:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5579:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5593:4:40",
                "type": ""
              }
            ],
            "src": "5428:351:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5963:278:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5973:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5985:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5996:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5981:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5973:4:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6009:29:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6027:3:40",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6032:1:40",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6023:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6023:11:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6036:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6019:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6019:19:40"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6013:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6054:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6069:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6077:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6065:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6065:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6047:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6047:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6047:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6101:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6112:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6097:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6097:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6117:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6090:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6090:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6090:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6144:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6155:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6140:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6140:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "6174:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6167:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6167:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6160:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6160:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6133:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6133:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6133:50:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6203:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6214:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6199:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6199:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6223:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6231:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6219:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6219:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6192:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:43:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6192:43:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5908:9:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5919:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5927:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5935:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5943:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5954:4:40",
                "type": ""
              }
            ],
            "src": "5784:457:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6344:147:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6390:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6399:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6402:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6392:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6392:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6392:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6365:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6374:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6361:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6361:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6386:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6357:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "6354:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6415:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6431:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6425:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6425:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6415:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6450:35:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6470:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6481:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6466:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6466:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6460:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6460:25:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6450:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6302:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6313:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6325:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6333:6:40",
                "type": ""
              }
            ],
            "src": "6246:245:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6577:103:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6623:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6632:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6635:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6625:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6625:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6625:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6598:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6607:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6594:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6594:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6619:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6590:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6590:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "6587:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6648:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6664:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6658:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6648:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6543:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6554:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6566:6:40",
                "type": ""
              }
            ],
            "src": "6496:184:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6766:170:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6812:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6821:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6824:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6814:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6814:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6814:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6787:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6796:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6783:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6783:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6808:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6779:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6779:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "6776:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6837:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6856:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6850:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6850:16:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6841:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6900:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6875:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6875:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6875:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6915:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6925:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6915:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6732:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6743:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6755:6:40",
                "type": ""
              }
            ],
            "src": "6685:251:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7126:232:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7136:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7148:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7159:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7144:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7144:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7136:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7179:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7190:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7172:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7172:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7172:25:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7217:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7228:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7213:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7213:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7233:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7206:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7206:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7206:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7260:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7271:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7256:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7256:18:40"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7276:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7249:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7249:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7249:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7303:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7314:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7299:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7299:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7323:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7339:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7344:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7335:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7335:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7348:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7331:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7331:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7319:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7319:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7292:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7292:60:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7292:60:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7071:9:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7082:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7090:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7098:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7106:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7117:4:40",
                "type": ""
              }
            ],
            "src": "6941:417:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7478:191:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7524:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7533:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7536:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7526:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7526:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7526:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7499:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7508:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7495:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7495:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7520:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7491:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7491:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7488:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7549:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7565:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7559:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7559:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7549:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7584:35:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7604:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7615:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7600:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7600:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7594:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7594:25:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7584:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7628:35:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7648:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7659:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7644:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7644:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7638:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7638:25:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7628:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7428:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7439:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7451:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7459:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7467:6:40",
                "type": ""
              }
            ],
            "src": "7363:306:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7848:236:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7865:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7876:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7858:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7858:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7858:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7899:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7910:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7895:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7895:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7915:2:40",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7888:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7888:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7888:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7938:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7949:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7934:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7934:18:40"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7954:34:40",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7927:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7927:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7927:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8009:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8020:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8005:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8005:18:40"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8025:16:40",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7998:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:44:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7998:44:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8051:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8063:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8074:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8059:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8059:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8051:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7825:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7839:4:40",
                "type": ""
              }
            ],
            "src": "7674:410:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8263:179:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8280:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8291:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8273:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8273:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8273:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8314:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8325:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8310:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8310:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8330:2:40",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8303:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8303:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8303:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8353:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8364:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8349:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8349:18:40"
                      },
                      {
                        "hexValue": "5468652063616c6c6572206973206e6f74206469737472696275746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8369:31:40",
                        "type": "",
                        "value": "The caller is not distributor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8342:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8342:59:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8342:59:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8410:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8422:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8433:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8418:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8418:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8410:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8240:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8254:4:40",
                "type": ""
              }
            ],
            "src": "8089:353:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8525:444:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8542:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8547:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8535:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8535:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8535:19:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8563:14:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8573:4:40",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8567:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8586:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8597:3:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8602:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8593:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8586:3:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8614:19:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8628:5:40"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "8618:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8642:10:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8651:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8646:1:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8710:234:40",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8724:35:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8752:6:40"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "8739:12:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8739:20:40"
                        },
                        "variables": [
                          {
                            "name": "value_1",
                            "nodeType": "YulTypedName",
                            "src": "8728:7:40",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "8797:7:40"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "8772:24:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8772:33:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8772:33:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8825:3:40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8834:7:40"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8851:3:40",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8856:1:40",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "8847:3:40"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8847:11:40"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8860:1:40",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "8843:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8843:19:40"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "8830:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8830:33:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8818:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8818:46:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8818:46:40"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8877:19:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8888:3:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8893:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8884:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8884:12:40"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8877:3:40"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8909:25:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8923:6:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8931:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8919:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8919:15:40"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8909:6:40"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8672:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8675:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8669:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8669:13:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8683:18:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8685:14:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8694:1:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8697:1:40",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8690:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8690:9:40"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8685:1:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8665:3:40",
                    "statements": []
                  },
                  "src": "8661:283:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8953:10:40",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8960:3:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8953:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8494:5:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8501:6:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8509:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8517:3:40",
                "type": ""
              }
            ],
            "src": "8447:522:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9399:558:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9416:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9427:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9409:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9409:22:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9409:22:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9440:88:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9492:6:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9500:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9512:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9523:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9508:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9508:19:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9454:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9454:74:40"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "9444:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9548:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9559:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9544:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9544:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "9568:6:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9576:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9564:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9564:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9537:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9537:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9537:50:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9596:75:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9648:6:40"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9656:6:40"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "9664:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9610:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9610:61:40"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "9600:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9691:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9702:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9687:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9687:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "9711:6:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9719:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9707:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9707:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9680:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9680:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9680:50:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9739:75:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "9791:6:40"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "9799:6:40"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "9807:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9753:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9753:61:40"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "9743:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9834:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9845:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9830:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9830:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulIdentifier",
                            "src": "9854:6:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9862:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9850:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9850:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9823:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9823:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9823:50:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9882:69:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "9928:6:40"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "9936:6:40"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "9944:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9890:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9890:61:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9882:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9312:9:40",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "9323:6:40",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9331:6:40",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9339:6:40",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9347:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9355:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9363:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9371:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9379:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9390:4:40",
                "type": ""
              }
            ],
            "src": "8974:983:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10091:175:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10101:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10113:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10124:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10109:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10109:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10101:4:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10136:29:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10154:3:40",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10159:1:40",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10150:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10150:11:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10163:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10146:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10146:19:40"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10140:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10181:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10196:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10204:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10192:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10192:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10174:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10174:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10174:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10228:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10239:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10224:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10224:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10248:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10256:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10244:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10244:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10217:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10217:43:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10217:43:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10052:9:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10063:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10071:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10082:4:40",
                "type": ""
              }
            ],
            "src": "9962:304:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10324:205:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10334:10:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10343:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10338:1:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10403:63:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10428:3:40"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10433:1:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10424:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10424:11:40"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10447:3:40"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10452:1:40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10443:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10443:11:40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10437:5:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10437:18:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10417:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10417:39:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10417:39:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10364:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10367:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10361:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10361:13:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10375:19:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10377:15:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10386:1:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10389:2:40",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10382:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10382:10:40"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10377:1:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10357:3:40",
                    "statements": []
                  },
                  "src": "10353:113:40"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10492:31:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10505:3:40"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10510:6:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10501:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10501:16:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10519:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10494:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10494:27:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10494:27:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10481:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10484:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10478:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10478:13:40"
                  },
                  "nodeType": "YulIf",
                  "src": "10475:48:40"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10302:3:40",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10307:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10312:6:40",
                "type": ""
              }
            ],
            "src": "10271:258:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10583:208:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10593:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10613:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10607:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10607:12:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10597:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10635:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10640:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10628:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10628:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10628:19:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10682:5:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10689:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10678:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10678:16:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10700:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10705:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10696:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10696:14:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10712:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "10656:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10656:63:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10656:63:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10728:57:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10743:3:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10756:6:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10764:2:40",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10752:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10752:15:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10773:2:40",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10769:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10769:7:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10748:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10748:29:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10739:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10739:39:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10780:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10735:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10735:50:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10728:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10560:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10567:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10575:3:40",
                "type": ""
              }
            ],
            "src": "10534:257:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10943:167:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10960:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10975:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10991:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10996:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10987:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10987:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11000:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10983:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10983:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10971:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10971:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10953:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10953:51:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10953:51:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11024:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11035:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11020:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11020:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11040:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11013:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11013:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11013:30:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11052:52:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11077:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11089:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11100:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11085:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11085:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "11060:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11060:44:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11052:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10904:9:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10915:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10923:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10934:4:40",
                "type": ""
              }
            ],
            "src": "10796:314:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11272:218:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11282:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11294:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11305:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11290:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11290:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11282:4:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11317:29:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11335:3:40",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11340:1:40",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11331:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11331:11:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11344:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11327:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11327:19:40"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11321:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11362:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11377:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11385:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11373:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11373:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11355:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11355:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11355:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11409:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11420:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11405:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11405:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11429:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11437:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11425:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11425:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11398:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11398:43:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11398:43:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11461:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11472:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11457:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11457:18:40"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11477:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11450:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11450:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11450:34:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11225:9:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11236:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11244:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11252:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11263:4:40",
                "type": ""
              }
            ],
            "src": "11115:375:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11547:213:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11614:111:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11635:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11642:3:40",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11647:10:40",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11638:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11638:20:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11628:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11628:31:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11628:31:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11679:1:40",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11682:4:40",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11672:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11672:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11672:15:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11707:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11710:4:40",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11700:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11700:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11700:15:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11578:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11571:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11571:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11564:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11564:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11586:1:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11597:1:40",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11593:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11593:6:40"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11601:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11589:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11589:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11583:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11583:21:40"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11560:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11560:45:40"
                  },
                  "nodeType": "YulIf",
                  "src": "11557:168:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11734:20:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11749:1:40"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11752:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11745:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11745:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11734:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11526:1:40",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11529:1:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11535:7:40",
                "type": ""
              }
            ],
            "src": "11495:265:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11811:171:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11842:111:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11863:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11870:3:40",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11875:10:40",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11866:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11866:20:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11856:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11856:31:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11856:31:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11907:1:40",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11910:4:40",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11900:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11900:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11900:15:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11935:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11938:4:40",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11928:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11928:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11928:15:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11831:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11824:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11824:9:40"
                  },
                  "nodeType": "YulIf",
                  "src": "11821:132:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11962:14:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11971:1:40"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11974:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11967:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11967:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11962:1:40"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11796:1:40",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11799:1:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11805:1:40",
                "type": ""
              }
            ],
            "src": "11765:217:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12065:167:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12111:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12120:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12123:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12113:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12113:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12113:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12086:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12095:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12082:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12082:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12107:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12078:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12078:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "12075:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12136:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12155:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12149:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12149:16:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12140:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12196:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12174:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12174:28:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12174:28:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12211:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12221:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12211:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12031:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12042:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12054:6:40",
                "type": ""
              }
            ],
            "src": "11987:245:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12411:232:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12428:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12439:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12421:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12421:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12421:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12462:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12473:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12458:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12458:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12478:2:40",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12451:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12451:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12451:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12501:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12512:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12497:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12497:18:40"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12517:34:40",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12490:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12490:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12490:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12572:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12583:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12568:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12568:18:40"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12588:12:40",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12561:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12561:40:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12561:40:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12610:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12622:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12633:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12618:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12618:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12610:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12388:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12402:4:40",
                "type": ""
              }
            ],
            "src": "12237:406:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12822:228:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12839:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12850:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12832:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12832:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12832:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12873:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12884:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12869:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12869:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12889:2:40",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12862:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12862:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12862:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12912:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12923:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12908:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12908:18:40"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12928:34:40",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12901:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12901:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12901:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12983:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12994:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12979:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12979:18:40"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12999:8:40",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12972:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12972:36:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12972:36:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13017:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13029:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13040:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13025:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13025:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13017:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12799:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12813:4:40",
                "type": ""
              }
            ],
            "src": "12648:402:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13229:179:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13246:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13257:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13239:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13239:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13239:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13280:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13291:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13276:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13276:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13296:2:40",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13269:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13269:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13269:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13319:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13330:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13315:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13315:18:40"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13335:31:40",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13308:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13308:59:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13308:59:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13376:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13388:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13399:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13384:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13384:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13376:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13206:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13220:4:40",
                "type": ""
              }
            ],
            "src": "13055:353:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13550:137:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13560:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13580:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13574:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13574:13:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13564:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13622:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13630:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13618:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13618:17:40"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13637:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13642:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13596:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13596:53:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13596:53:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13658:23:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13669:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13674:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13665:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13665:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13658:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13526:3:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13531:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13542:3:40",
                "type": ""
              }
            ],
            "src": "13413:274:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13813:98:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13830:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13841:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13823:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13823:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13823:21:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13853:52:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13878:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13890:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13901:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13886:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13886:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "13861:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13861:44:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13853:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13782:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13793:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13804:4:40",
                "type": ""
              }
            ],
            "src": "13692:219:40"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_3), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_QuickswapDualFarmUpgradeable_$6373__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"The given pool doesnt exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"The caller is not distributor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_address_dyn_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_address_dyn_calldata(value4, value5, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        tail := abi_encode_array_address_dyn_calldata(value6, value7, tail_3)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 40,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "420:8580:21:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "420:8580:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7216:94;7288:7;:14;7216:94;;160:25:40;;;148:2;133:18;7216:94:21;;;;;;;;4251:407;;;;;;:::i;:::-;;:::i;:::-;;;;1226:25:40;;;1282:2;1267:18;;1260:34;;;;1199:18;4251:407:21;1052:248:40;6116:346:21;;;;;;:::i;:::-;;:::i;:::-;;;;1900:25:40;;;1956:2;1941:18;;1934:34;;;;1984:18;;;1977:34;1888:2;1873:18;6116:346:21;1698:319:40;2526:1197:21;;;;;;:::i;:::-;;:::i;1000:26::-;;;;;-1:-1:-1;;;;;1000:26:21;;;;;;-1:-1:-1;;;;;2785:32:40;;;2767:51;;2755:2;2740:18;1000:26:21;2621:203:40;1575:270:21;;;;;;:::i;:::-;;:::i;:::-;;5151:604;;;;;;:::i;:::-;;:::i;891:25::-;;;;;;;;-1:-1:-1;;;;;891:25:21;;;8822:175;;;;;;:::i;:::-;;:::i;6823:385::-;;;;;;:::i;:::-;;:::i;969:24::-;;;;;;:::i;:::-;;:::i;925:37::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;925:37:21;;;4251:407;-1:-1:-1;;;;;4413:20:21;;;4361:15;4413:20;;;:5;:20;;;;;;4361:15;;;;4413:20;4405:80;;;;-1:-1:-1;;;4405:80:21;;5630:2:40;4405:80:21;;;5612:21:40;5669:2;5649:18;;;5642:30;5708:29;5688:18;;;5681:57;5755:18;;4405:80:21;;;;;;;;;-1:-1:-1;;;;;4517:20:21;;;;;;;:5;:20;;;;;;;;:72;;-1:-1:-1;;;4517:72:21;;4547:10;4517:72;;;6047:34:40;6097:18;;;6090:34;;;6167:14;;6160:22;6140:18;;;6133:50;6219:15;;;6199:18;;;6192:43;4517:20:21;;;:29;;5981:19:40;;4517:72:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4606:43;;160:25:40;;;4496:93:21;;-1:-1:-1;4496:93:21;-1:-1:-1;;;;;;4606:43:21;;;4615:10;;4606:43;;148:2:40;133:18;4606:43:21;;;;;;;4251:407;;;;;;;:::o;6116:346::-;-1:-1:-1;;;;;6263:20:21;;;6199:15;6263:20;;;:5;:20;;;;;;6199:15;;;;;;6263:20;:40;6259:196;;-1:-1:-1;;;;;6330:20:21;;;;;;;:5;:20;;;;;;;;:42;;-1:-1:-1;;;6330:42:21;;2785:32:40;;;6330:42:21;;;2767:51:40;6330:20:21;;;:32;;2740:18:40;;6330:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6320:52;;6406:37;6420:13;6435:7;6406:13;:37::i;:::-;6387:56;;-1:-1:-1;6387:56:21;-1:-1:-1;6259:196:21;6116:346;;;;;:::o;2526:1197::-;-1:-1:-1;;;;;2717:20:21;;;2654:13;2717:20;;;:5;:20;;;;;;2654:13;;;;;;2717:20;2714:168;;2801:25;2812:13;2801:10;:25::i;:::-;-1:-1:-1;;;;;2773:20:21;;;;;;;:5;:20;;;;;;;:54;;;;;;-1:-1:-1;;;;;;2773:54:21;;;;;;;2842:7;:27;;;;;;;;;;;;;;;;;;;;;2714:168;2897:11;;2894:207;;-1:-1:-1;;;;;2969:20:21;;;2924:24;2969:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;2969:29:21;;;;2924:24;;2969:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3058:20:21;;;;;;;:5;:20;;;;;;2924:75;;-1:-1:-1;3014:75:21;;:23;;;;3038:10;;3058:20;3081:7;3014:23;:75::i;:::-;2909:192;2894:207;3114:11;;3111:208;;-1:-1:-1;;;;;3186:20:21;;;3141:24;3186:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;3186:29:21;;;;3141:24;;3186:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3275:20:21;;;;;;;:5;:20;;;;;;3141:75;;-1:-1:-1;3231:75:21;;:23;;;;3255:10;;3275:20;3298:7;3231:23;:75::i;:::-;3126:193;3111:208;3332:12;;3329:209;;-1:-1:-1;;;;;3405:20:21;;;3360:24;3405:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;3405:29:21;;;;3360:24;;3405:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3494:20:21;;;;;;;:5;:20;;;;;;3360:75;;-1:-1:-1;3450:76:21;;:23;;;;3474:10;;3494:20;3517:8;3450:23;:76::i;:::-;3345:193;3329:209;-1:-1:-1;;;;;3586:20:21;;;;;;;:5;:20;;;;;;;;:67;;-1:-1:-1;;;3586:67:21;;;;;7172:25:40;;;7213:18;;;7206:34;;;7256:18;;;7249:34;;;7319:32;;;7299:18;;;7292:60;3586:20:21;;;:28;;7144:19:40;;3586:67:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3670:44;;160:25:40;;;3558:95:21;;-1:-1:-1;3558:95:21;;-1:-1:-1;3558:95:21;-1:-1:-1;;;;;;3670:44:21;;;;;;;;;;148:2:40;133:18;3670:44:21;;;;;;;2526:1197;;;;;;;;;:::o;1575:270::-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:4;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;7876:2:40;2361:107:1;;;7858:21:40;7915:2;7895:18;;;7888:30;7954:34;7934:18;;;7927:62;-1:-1:-1;;;8005:18:40;;;7998:44;8059:19;;2361:107:1;7674:410:40;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;1645:29:21::1;1721:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1677:66;;;;;:::i;:::-;-1:-1:-1::0;;;;;2785:32:40;;;2767:51;;2755:2;2740:18;1677:66:21::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1754:39:21::1;::::0;-1:-1:-1;;;1754:39:21;;-1:-1:-1;;;;;2785:32:40;;;1754:39:21::1;::::0;::::1;2767:51:40::0;1645:98:21;;-1:-1:-1;1754:29:21;;::::1;::::0;::::1;::::0;2740:18:40;;1754:39:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1804:10:21::1;:33:::0;;-1:-1:-1;;;;;1804:33:21;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;1804:33:21;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;2645:66:1;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;1575:270:21;:::o;5151:604::-;1415:11;;-1:-1:-1;;;;;1415:11:21;:25;;:54;;-1:-1:-1;1458:11:21;;-1:-1:-1;;;;;1458:11:21;1444:10;:25;1415:54;1407:96;;;;-1:-1:-1;;;1407:96:21;;8291:2:40;1407:96:21;;;8273:21:40;8330:2;8310:18;;;8303:30;8369:31;8349:18;;;8342:59;8418:18;;1407:96:21;8089:353:40;1407:96:21;-1:-1:-1;;;;;5474:20:21;;::::1;5511:1;5474:20:::0;;;:5:::1;:20;::::0;;;;;::::1;5466:80;;;::::0;-1:-1:-1;;;5466:80:21;;5630:2:40;5466:80:21::1;::::0;::::1;5612:21:40::0;5669:2;5649:18;;;5642:30;5708:29;5688:18;;;5681:57;5755:18;;5466:80:21::1;5428:351:40::0;5466:80:21::1;-1:-1:-1::0;;;;;5567:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:139;;-1:-1:-1;;;5567:139:21;;:20;::::1;::::0;:31:::1;::::0;:139:::1;::::0;5599:25;;;;5626;;;;5653;;;;5680;;;;5567:139:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5722:25:21::1;::::0;-1:-1:-1;;;;;5722:25:21;::::1;::::0;-1:-1:-1;5722:25:21::1;::::0;-1:-1:-1;5722:25:21;;::::1;5151:604:::0;;;;;;;;;:::o;8822:175::-;1415:11;;-1:-1:-1;;;;;1415:11:21;:25;;:54;;-1:-1:-1;1458:11:21;;-1:-1:-1;;;;;1458:11:21;1444:10;:25;1415:54;1407:96;;;;-1:-1:-1;;;1407:96:21;;8291:2:40;1407:96:21;;;8273:21:40;8330:2;8310:18;;;8303:30;8369:31;8349:18;;;8342:59;8418:18;;1407:96:21;8089:353:40;1407:96:21;8911:11:::1;:28:::0;;-1:-1:-1;;;;;;8911:28:21::1;-1:-1:-1::0;;;;;8911:28:21;::::1;::::0;;::::1;::::0;;;8955:34:::1;::::0;::::1;::::0;-1:-1:-1;;8955:34:21::1;8822:175:::0;:::o;6823:385::-;-1:-1:-1;;;;;6980:20:21;;;6892:23;6980:20;;;:5;:20;;;;;;6892:23;;;;;;6980:20;:40;6976:225;;-1:-1:-1;;;;;7055:20:21;;;;;;;:5;:20;;;;;;;;;;:39;;-1:-1:-1;;;7055:39:21;;;;:20;;;:37;;:39;;;;;:20;:39;;;;;;:20;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7037:57;;7144:45;7158:13;7173:15;7144:13;:45::i;:::-;7109:80;;-1:-1:-1;7109:80:21;-1:-1:-1;6976:225:21;6823:385;;;;;:::o;969:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;969:24:21;;-1:-1:-1;969:24:21;:::o;8147:667::-;-1:-1:-1;;;;;8283:20:21;;;8234:15;8283:20;;;:5;:20;;;;;;8234:15;;;;8283:20;:40;8279:528;;-1:-1:-1;;;;;8357:20:21;;;8340:14;8357:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;8357:29:21;;;;8340:14;;8357:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8340:46;;8401:19;8430:6;-1:-1:-1;;;;;8423:26:21;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8501:20:21;;;8466:25;8501:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;8501:29:21;;;;8401:50;;-1:-1:-1;8466:25:21;;8501:20;;;;;:27;;:29;;;;;:20;:29;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8494:55;;-1:-1:-1;;;8494:55:21;;-1:-1:-1;;;;;2785:32:40;;;8494:55:21;;;2767:51:40;8494:47:21;;;;;;;2740:18:40;;8494:55:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8466:83;-1:-1:-1;8574:48:21;8610:11;8574:31;:8;8466:83;8574:12;:31::i;:::-;:35;;:48::i;:::-;-1:-1:-1;;;;;8674:20:21;;;8639:25;8674:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;8674:29:21;;;;8564:58;;-1:-1:-1;8639:25:21;;8674:20;;;;;:27;;:29;;;;;:20;:29;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8667:55;;-1:-1:-1;;;8667:55:21;;-1:-1:-1;;;;;2785:32:40;;;8667:55:21;;;2767:51:40;8667:47:21;;;;;;;2740:18:40;;8667:55:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8639:83;-1:-1:-1;8747:48:21;8783:11;8747:31;:8;8639:83;8747:12;:31::i;:48::-;8737:58;;8325:482;;;;8279:528;8147:667;;;;;:::o;7403:407::-;7464:7;7534:10;;7559:156;;;-1:-1:-1;;;;;10192:15:40;;;7559:156:21;;;10174:34:40;7695:4:21;10224:18:40;;;;10217:43;;;;7559:156:21;;;;;;;;;;10109:18:40;;;;7559:156:21;;;;;;;-1:-1:-1;;;;;7559:156:21;-1:-1:-1;;;7559:156:21;;;7504:222;;7464:7;;7534:10;;;;;;;7504:222;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7742:28:21;;7484:242;;-1:-1:-1;;;;;;7742:28:21;;;;;;;;7796:5;7403:407;-1:-1:-1;;7403:407:21:o;967:252:3:-;1143:68;;;-1:-1:-1;;;;;11373:15:40;;;1143:68:3;;;11355:34:40;11425:15;;11405:18;;;11398:43;11457:18;;;;11450:34;;;1143:68:3;;;;;;;;;;11290:18:40;;;;1143:68:3;;;;;;;;-1:-1:-1;;;;;1143:68:3;-1:-1:-1;;;1143:68:3;;;1116:96;;1136:5;;1116:19;:96::i;:::-;967:252;;;;:::o;3451:96:19:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3306:717:3:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:3;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:3;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:3;;12439:2:40;3921:85:3;;;12421:21:40;12478:2;12458:18;;;12451:30;12517:34;12497:18;;;12490:62;-1:-1:-1;;;12568:18:40;;;12561:40;12618:19;;3921:85:3;12237:406:40;3921:85:3;3387:636;3306:717;;:::o;3872:223:4:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:4:o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:4;;12850:2:40;5148:81:4;;;12832:21:40;12889:2;12869:18;;;12862:30;12928:34;12908:18;;;12901:62;-1:-1:-1;;;12979:18:40;;;12972:36;13025:19;;5148:81:4;12648:402:40;5148:81:4;-1:-1:-1;;;;;1476:19:4;;;5239:60;;;;-1:-1:-1;;;5239:60:4;;13257:2:40;5239:60:4;;;13239:21:40;13296:2;13276:18;;;13269:30;13335:31;13315:18;;;13308:59;13384:18;;5239:60:4;13055:353:40;5239:60:4;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:4;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:4:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:4;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:4;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:40:-;-1:-1:-1;;;;;271:31:40;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:118::-;418:5;411:13;404:21;397:5;394:32;384:60;;440:1;437;430:12;455:592;538:6;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;671:9;658:23;690:31;715:5;690:31;:::i;:::-;740:5;-1:-1:-1;792:2:40;777:18;;764:32;;-1:-1:-1;848:2:40;833:18;;820:32;861:30;820:32;861:30;:::i;:::-;910:7;-1:-1:-1;969:2:40;954:18;;941:32;982:33;941:32;982:33;:::i;:::-;455:592;;;;-1:-1:-1;455:592:40;;-1:-1:-1;;455:592:40:o;1305:388::-;1373:6;1381;1434:2;1422:9;1413:7;1409:23;1405:32;1402:52;;;1450:1;1447;1440:12;1402:52;1489:9;1476:23;1508:31;1533:5;1508:31;:::i;:::-;1558:5;-1:-1:-1;1615:2:40;1600:18;;1587:32;1628:33;1587:32;1628:33;:::i;:::-;1680:7;1670:17;;;1305:388;;;;;:::o;2022:594::-;2117:6;2125;2133;2141;2149;2202:3;2190:9;2181:7;2177:23;2173:33;2170:53;;;2219:1;2216;2209:12;2170:53;2255:9;2242:23;2232:33;;2312:2;2301:9;2297:18;2284:32;2274:42;;2363:2;2352:9;2348:18;2335:32;2325:42;;2417:2;2406:9;2402:18;2389:32;2430:31;2455:5;2430:31;:::i;:::-;2480:5;-1:-1:-1;2537:3:40;2522:19;;2509:33;2551;2509;2551;:::i;:::-;2603:7;2593:17;;;2022:594;;;;;;;;:::o;2829:247::-;2888:6;2941:2;2929:9;2920:7;2916:23;2912:32;2909:52;;;2957:1;2954;2947:12;2909:52;2996:9;2983:23;3015:31;3040:5;3015:31;:::i;3081:367::-;3144:8;3154:6;3208:3;3201:4;3193:6;3189:17;3185:27;3175:55;;3226:1;3223;3216:12;3175:55;-1:-1:-1;3249:20:40;;3292:18;3281:30;;3278:50;;;3324:1;3321;3314:12;3278:50;3361:4;3353:6;3349:17;3337:29;;3421:3;3414:4;3404:6;3401:1;3397:14;3389:6;3385:27;3381:38;3378:47;3375:67;;;3438:1;3435;3428:12;3453:1540;3656:6;3664;3672;3680;3688;3696;3704;3712;3720;3773:3;3761:9;3752:7;3748:23;3744:33;3741:53;;;3790:1;3787;3780:12;3741:53;3829:9;3816:23;3848:31;3873:5;3848:31;:::i;:::-;3898:5;-1:-1:-1;3954:2:40;3939:18;;3926:32;3977:18;4007:14;;;4004:34;;;4034:1;4031;4024:12;4004:34;4073:70;4135:7;4126:6;4115:9;4111:22;4073:70;:::i;:::-;4162:8;;-1:-1:-1;4047:96:40;-1:-1:-1;4250:2:40;4235:18;;4222:32;;-1:-1:-1;4266:16:40;;;4263:36;;;4295:1;4292;4285:12;4263:36;4334:72;4398:7;4387:8;4376:9;4372:24;4334:72;:::i;:::-;4425:8;;-1:-1:-1;4308:98:40;-1:-1:-1;4513:2:40;4498:18;;4485:32;;-1:-1:-1;4529:16:40;;;4526:36;;;4558:1;4555;4548:12;4526:36;4597:72;4661:7;4650:8;4639:9;4635:24;4597:72;:::i;:::-;4688:8;;-1:-1:-1;4571:98:40;-1:-1:-1;4776:3:40;4761:19;;4748:33;;-1:-1:-1;4793:16:40;;;4790:36;;;4822:1;4819;4812:12;4790:36;;4861:72;4925:7;4914:8;4903:9;4899:24;4861:72;:::i;:::-;4835:98;;4952:8;4942:18;;;4979:8;4969:18;;;3453:1540;;;;;;;;;;;:::o;4998:180::-;5057:6;5110:2;5098:9;5089:7;5085:23;5081:32;5078:52;;;5126:1;5123;5116:12;5078:52;-1:-1:-1;5149:23:40;;4998:180;-1:-1:-1;4998:180:40:o;6246:245::-;6325:6;6333;6386:2;6374:9;6365:7;6361:23;6357:32;6354:52;;;6402:1;6399;6392:12;6354:52;-1:-1:-1;;6425:16:40;;6481:2;6466:18;;;6460:25;6425:16;;6460:25;;-1:-1:-1;6246:245:40:o;6496:184::-;6566:6;6619:2;6607:9;6598:7;6594:23;6590:32;6587:52;;;6635:1;6632;6625:12;6587:52;-1:-1:-1;6658:16:40;;6496:184;-1:-1:-1;6496:184:40:o;6685:251::-;6755:6;6808:2;6796:9;6787:7;6783:23;6779:32;6776:52;;;6824:1;6821;6814:12;6776:52;6856:9;6850:16;6875:31;6900:5;6875:31;:::i;7363:306::-;7451:6;7459;7467;7520:2;7508:9;7499:7;7495:23;7491:32;7488:52;;;7536:1;7533;7526:12;7488:52;7565:9;7559:16;7549:26;;7615:2;7604:9;7600:18;7594:25;7584:35;;7659:2;7648:9;7644:18;7638:25;7628:35;;7363:306;;;;;:::o;8447:522::-;8547:6;8542:3;8535:19;8517:3;8573:4;8602:2;8597:3;8593:12;8586:19;;8628:5;8651:1;8661:283;8675:6;8672:1;8669:13;8661:283;;;8752:6;8739:20;8772:33;8797:7;8772:33;:::i;:::-;-1:-1:-1;;;;;8830:33:40;8818:46;;8884:12;;;;8919:15;;;;8860:1;8690:9;8661:283;;;-1:-1:-1;8960:3:40;;8447:522;-1:-1:-1;;;;;8447:522:40:o;8974:983::-;9427:3;9416:9;9409:22;9390:4;9454:74;9523:3;9512:9;9508:19;9500:6;9492;9454:74;:::i;:::-;9576:9;9568:6;9564:22;9559:2;9548:9;9544:18;9537:50;9610:61;9664:6;9656;9648;9610:61;:::i;:::-;9596:75;;9719:9;9711:6;9707:22;9702:2;9691:9;9687:18;9680:50;9753:61;9807:6;9799;9791;9753:61;:::i;:::-;9739:75;;9862:9;9854:6;9850:22;9845:2;9834:9;9830:18;9823:50;9890:61;9944:6;9936;9928;9890:61;:::i;:::-;9882:69;8974:983;-1:-1:-1;;;;;;;;;;;8974:983:40:o;10271:258::-;10343:1;10353:113;10367:6;10364:1;10361:13;10353:113;;;10443:11;;;10437:18;10424:11;;;10417:39;10389:2;10382:10;10353:113;;;10484:6;10481:1;10478:13;10475:48;;;-1:-1:-1;;10519:1:40;10501:16;;10494:27;10271:258::o;10534:257::-;10575:3;10613:5;10607:12;10640:6;10635:3;10628:19;10656:63;10712:6;10705:4;10700:3;10696:14;10689:4;10682:5;10678:16;10656:63;:::i;:::-;10773:2;10752:15;-1:-1:-1;;10748:29:40;10739:39;;;;10780:4;10735:50;;10534:257;-1:-1:-1;;10534:257:40:o;10796:314::-;-1:-1:-1;;;;;10971:32:40;;10953:51;;11040:2;11035;11020:18;;11013:30;;;-1:-1:-1;;11060:44:40;;11085:18;;11077:6;11060:44;:::i;11495:265::-;11535:7;11601:1;11597;11593:6;11589:14;11586:1;11583:21;11578:1;11571:9;11564:17;11560:45;11557:168;;;11647:10;11642:3;11638:20;11635:1;11628:31;11682:4;11679:1;11672:15;11710:4;11707:1;11700:15;11557:168;-1:-1:-1;11745:9:40;;11495:265::o;11765:217::-;11805:1;11831;11821:132;;11875:10;11870:3;11866:20;11863:1;11856:31;11910:4;11907:1;11900:15;11938:4;11935:1;11928:15;11821:132;-1:-1:-1;11967:9:40;;11765:217::o;11987:245::-;12054:6;12107:2;12095:9;12086:7;12082:23;12078:32;12075:52;;;12123:1;12120;12113:12;12075:52;12155:9;12149:16;12174:28;12196:5;12174:28;:::i;13413:274::-;13542:3;13580:6;13574:13;13596:53;13642:6;13637:3;13630:4;13622:6;13618:17;13596:53;:::i;:::-;13665:16;;;;;13413:274;-1:-1:-1;;13413:274:40:o;13692:219::-;13841:2;13830:9;13823:21;13804:4;13861:44;13901:2;13890:9;13886:18;13878:6;13861:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {QuickswapDualFarmUpgradeable as Farm, SafeMath, IERC20, IERC20Upgradeable, SafeERC20Upgradeable, IUniswapV2Pair, Initializable} from \"./farms/QuickswapDualFarmUpgradeable.sol\"; \r\n\r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\r\n\r\ncontract QuickswapDualFarmFactoryBeacon is Initializable{\r\n    using SafeMath for uint256; \r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    /**\r\n     * @dev Contract Variables:\r\n     * farmBeacon - Farm contract implementation.\r\n     *\r\n     * Farms - Links {lpPools} to the deployed Farm contract.\r\n     * lpPools - List of pools that have corresponding deployed Farm contract.\r\n     * distributor - Address authorized to make distributions.\r\n     */\r\n    address public farmBeacon;\r\n\r\n    mapping(address => Farm) public Farms;\r\n    address[] public lpPools;\r\n    address public distributor;\r\n\r\n    event FarmDeployed(address indexed farmAddress);\r\n    event Deposit(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Withdraw(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Distribute(address indexed lpPool);\r\n    event DistributorChanged(address indexed newDistributor);\r\n\r\n    modifier distributorOnly(){\r\n        require(distributor == address(0) || msg.sender == distributor, 'The caller is not distributor');\r\n        _;\r\n    }\r\n\r\n    // ============ Methods ============\r\n\r\n    function initialize(address upgrader) external initializer {\r\n        UpgradeableBeacon _farmBeacon = new UpgradeableBeacon(\r\n            address(new Farm())\r\n        );\r\n        _farmBeacon.transferOwnership(upgrader);\r\n        farmBeacon = address(_farmBeacon);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\r\n     * @param amountA  - Token A amount to deposit.\r\n     * @param amountB -  Token B amount to deposit.\r\n     * @param amountLP - LP Token amount to deposit.\r\n     * @param lpStakingPool - Address of the pool to deposit tokens in.\r\n     * @param recipient - Address which will recieve the deposit and leftover tokens.\r\n     \r\n     * @return sentA - Token A amount sent to the farm.\r\n     * @return sentB - Token B amount sent to the farm.\r\n     * @return liquidity - Total liquidity sent to the farm (in lpTokens).\r\n     */\r\n    function deposit(uint256 amountA, uint256 amountB, uint256 amountLP, address lpStakingPool, address recipient) external returns(uint256 sentA, uint256 sentB, uint256 liquidity) {\r\n        if(Farms[lpStakingPool] == Farm(address(0))){\r\n            Farms[lpStakingPool] = Farm(createFarm(lpStakingPool));\r\n            lpPools.push(lpStakingPool); \r\n        }\r\n\r\n        if(amountA > 0){\r\n            IERC20Upgradeable tokenA = IERC20Upgradeable(Farms[lpStakingPool].tokenA());\r\n            tokenA.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountA);\r\n        }\r\n        if(amountB > 0){\r\n            IERC20Upgradeable tokenB = IERC20Upgradeable(Farms[lpStakingPool].tokenB());\r\n            tokenB.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountB); \r\n        }\r\n        if(amountLP > 0){\r\n            IERC20Upgradeable lpPair = IERC20Upgradeable(Farms[lpStakingPool].lpPair());\r\n            lpPair.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountLP);\r\n        }\r\n        \r\n        (sentA, sentB, liquidity) = Farms[lpStakingPool].deposit(amountA, amountB, amountLP, recipient); \r\n        emit Deposit(recipient, lpStakingPool, liquidity); \r\n    }\r\n\r\n    /** \r\n     * @dev Withdraws tokens from the given pool. \r\n     * @param lpStakingPool - LP pool to withdraw from.\r\n     * @param amount - LP amount to withdraw. \r\n     * @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\r\n     * @param recipient - The address which will recieve tokens.\r\n\r\n     * @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     * @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     */ \r\n    function withdraw(address lpStakingPool, uint256 amount, bool withdrawLP, address recipient) external returns(uint256 amountA, uint256 amountB){\r\n        require(Farms[lpStakingPool] != Farm(address(0)), 'The given pool doesnt exist');\r\n        (amountA, amountB) = Farms[lpStakingPool].withdraw(msg.sender, amount, withdrawLP, recipient); \r\n        emit Withdraw(msg.sender, lpStakingPool, amount); \r\n    }\r\n\r\n    /**\r\n     * @dev Distributes tokens between users.\r\n     * @param lpStakingPool - LP pool to distribute tokens in.\r\n     * @param rewardTokenAToTokenARoute An array of token addresses.\r\n     * @param rewardTokenAToTokenBRoute An array of token addresses.\r\n     * @param rewardTokenBToTokenARoute An array of token addresses.\r\n     * @param rewardTokenBToTokenBRoute An array of token addresses.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */ \r\n    function distribute(\r\n        address lpStakingPool,\r\n        address[] calldata rewardTokenAToTokenARoute,\r\n        address[] calldata rewardTokenAToTokenBRoute,\r\n        address[] calldata rewardTokenBToTokenARoute,\r\n        address[] calldata rewardTokenBToTokenBRoute\r\n    ) external distributorOnly {\r\n        require(Farms[lpStakingPool] != Farm(address(0)), 'The given pool doesnt exist');\r\n        \r\n        Farms[lpStakingPool].distribute(rewardTokenAToTokenARoute, rewardTokenAToTokenBRoute, rewardTokenBToTokenARoute, rewardTokenBToTokenBRoute);\r\n        emit Distribute(lpStakingPool);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns tokens staked by the {_address} for the given {lpPair}.\r\n     * @param _address - The address to check stakes for.\r\n     * @param lpStakingPool - LP pool to check stakes in.\r\n\r\n     * @return stakeLP - Total user stake(in LP tokens).\r\n     * @return stakeA - Token A stake.\r\n     * @return stakeB - Token B stake.\r\n     */\r\n    function userStake(address _address, address lpStakingPool) external view returns (uint256 stakeLP, uint256 stakeA, uint256 stakeB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            stakeLP = Farms[lpStakingPool].userBalance(_address);\r\n            (stakeA, stakeB) = getTokenStake(lpStakingPool, stakeLP);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n\r\n     * @return totalDepositsLP - Total deposits (in LP tokens).\r\n     * @return totalDepositsA - Token A deposits.\r\n     * @return totalDepositsB - Token B deposits.\r\n     */  \r\n    function totalDeposits(address lpStakingPool) external view returns (uint256 totalDepositsLP, uint256 totalDepositsA, uint256 totalDepositsB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            totalDepositsLP = Farms[lpStakingPool].getTotalDeposits();\r\n            (totalDepositsA, totalDepositsB) = getTokenStake(lpStakingPool, totalDepositsLP);\r\n        }\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return lpPools.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys new Farm contract and calls initialize on it.\r\n     */\r\n    function createFarm(address lpStakingPool) internal returns (address) {\r\n        BeaconProxy proxy = new BeaconProxy(\r\n            farmBeacon,\r\n            abi.encodeWithSelector(\r\n                Farm(address(0)).initialize.selector,\r\n                lpStakingPool,\r\n                address(this)\r\n            )\r\n        );\r\n        emit FarmDeployed(address(proxy));\r\n        return address(proxy);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n     * @param amountLP - Amount of LP tokens to convert.\r\n\r\n     * @return amountA - Token A amount.\r\n     * @return amountB - Token B amount.\r\n     */ \r\n    function getTokenStake(address lpStakingPool, uint256 amountLP) internal view returns (uint256 amountA, uint256 amountB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            address lpPair = Farms[lpStakingPool].lpPair();\r\n            uint256 totalSupply = IERC20(lpPair).totalSupply();\r\n            uint256 totalTokenAAmount = IERC20(Farms[lpStakingPool].tokenA()).balanceOf(lpPair);\r\n            amountA = amountLP.mul(totalTokenAAmount).div(totalSupply);\r\n\r\n            uint256 totalTokenBAmount = IERC20(Farms[lpStakingPool].tokenB()).balanceOf(lpPair);\r\n            amountB = amountLP.mul(totalTokenBAmount).div(totalSupply);\r\n        }\r\n    }\r\n\r\n    function transferDistributor(address newDistributor) external distributorOnly {\r\n        distributor = newDistributor;\r\n        emit DistributorChanged(newDistributor);\r\n    }\r\n} ",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts\\contracts\\QuickswapDualFarmFactoryBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/QuickswapDualFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        1965
      ],
      "BeaconProxy": [
        1351
      ],
      "Context": [
        1987
      ],
      "ERC1967Upgrade": [
        1217
      ],
      "Farm": [
        6373
      ],
      "IBeacon": [
        1361
      ],
      "IERC1822Proxiable": [
        899
      ],
      "IERC20": [
        1670
      ],
      "IERC20Upgradeable": [
        275
      ],
      "IUniswapV2Pair": [
        8667
      ],
      "Initializable": [
        197
      ],
      "Ownable": [
        889
      ],
      "Proxy": [
        1269
      ],
      "QuickswapDualFarmFactoryBeacon": [
        3506
      ],
      "SafeERC20Upgradeable": [
        499
      ],
      "SafeMath": [
        2359
      ],
      "StorageSlot": [
        2047
      ],
      "UpgradeableBeacon": [
        1436
      ]
    },
    "id": 3507,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2882,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:21"
      },
      {
        "id": 2883,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:21"
      },
      {
        "absolutePath": "project:/contracts/farms/QuickswapDualFarmUpgradeable.sol",
        "file": "./farms/QuickswapDualFarmUpgradeable.sol",
        "id": 2891,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3507,
        "sourceUnit": 6374,
        "src": "95:184:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2884,
              "name": "QuickswapDualFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:28:21",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2885,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "141:8:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2886,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "151:6:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2887,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "159:17:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2888,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "178:20:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2889,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "200:14:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2890,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "216:13:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 2892,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3507,
        "sourceUnit": 1437,
        "src": "284:68:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 2893,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3507,
        "sourceUnit": 1352,
        "src": "354:62:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2894,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 197,
              "src": "463:13:21"
            },
            "id": 2895,
            "nodeType": "InheritanceSpecifier",
            "src": "463:13:21"
          }
        ],
        "canonicalName": "QuickswapDualFarmFactoryBeacon",
        "contractDependencies": [
          1351,
          1436,
          6373
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3506,
        "linearizedBaseContracts": [
          3506,
          197
        ],
        "name": "QuickswapDualFarmFactoryBeacon",
        "nameLocation": "429:30:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2898,
            "libraryName": {
              "id": 2896,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2359,
              "src": "489:8:21"
            },
            "nodeType": "UsingForDirective",
            "src": "483:27:21",
            "typeName": {
              "id": 2897,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2902,
            "libraryName": {
              "id": 2899,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 499,
              "src": "523:20:21"
            },
            "nodeType": "UsingForDirective",
            "src": "517:49:21",
            "typeName": {
              "id": 2901,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2900,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 275,
                "src": "548:17:21"
              },
              "referencedDeclaration": 275,
              "src": "548:17:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 2903,
              "nodeType": "StructuredDocumentation",
              "src": "574:311:21",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n Farms - Links {lpPools} to the deployed Farm contract.\n lpPools - List of pools that have corresponding deployed Farm contract.\n distributor - Address authorized to make distributions."
            },
            "functionSelector": "d95a4d93",
            "id": 2905,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "906:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3506,
            "src": "891:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2904,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "891:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 2910,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "957:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 3506,
            "src": "925:37:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
            },
            "typeName": {
              "id": 2909,
              "keyType": {
                "id": 2906,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "933:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "925:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
              },
              "valueType": {
                "id": 2908,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2907,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6373,
                  "src": "944:4:21"
                },
                "referencedDeclaration": 6373,
                "src": "944:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                  "typeString": "contract QuickswapDualFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 2913,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "986:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3506,
            "src": "969:24:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2911,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "969:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2912,
              "nodeType": "ArrayTypeName",
              "src": "969:9:21",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 2915,
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1015:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 3506,
            "src": "1000:26:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2914,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1000:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2919,
            "name": "FarmDeployed",
            "nameLocation": "1041:12:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2917,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "1070:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2919,
                  "src": "1054:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1053:29:21"
            },
            "src": "1035:48:21"
          },
          {
            "anonymous": false,
            "id": 2927,
            "name": "Deposit",
            "nameLocation": "1095:7:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2921,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1119:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2927,
                  "src": "1103:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2923,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1143:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2927,
                  "src": "1127:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2925,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1159:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2927,
                  "src": "1151:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1102:64:21"
            },
            "src": "1089:78:21"
          },
          {
            "anonymous": false,
            "id": 2935,
            "name": "Withdraw",
            "nameLocation": "1179:8:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2929,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1204:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "1188:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2931,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1228:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "1212:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2933,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1244:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2935,
                  "src": "1236:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:64:21"
            },
            "src": "1173:79:21"
          },
          {
            "anonymous": false,
            "id": 2939,
            "name": "Distribute",
            "nameLocation": "1264:10:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2937,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1291:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2939,
                  "src": "1275:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1274:24:21"
            },
            "src": "1258:41:21"
          },
          {
            "anonymous": false,
            "id": 2943,
            "name": "DistributorChanged",
            "nameLocation": "1311:18:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2941,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "1346:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2943,
                  "src": "1330:30:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1330:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1329:32:21"
            },
            "src": "1305:57:21"
          },
          {
            "body": {
              "id": 2961,
              "nodeType": "Block",
              "src": "1396:127:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2946,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "1415:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1438:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1430:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2947,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1430:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1430:10:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1415:25:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2952,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1444:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1444:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2954,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "1458:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1444:25:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1415:54:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063616c6c6572206973206e6f74206469737472696275746f72",
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1471:31:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5",
                          "typeString": "literal_string \"The caller is not distributor\""
                        },
                        "value": "The caller is not distributor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5",
                          "typeString": "literal_string \"The caller is not distributor\""
                        }
                      ],
                      "id": 2945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1407:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:96:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2959,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:96:21"
                },
                {
                  "id": 2960,
                  "nodeType": "PlaceholderStatement",
                  "src": "1514:1:21"
                }
              ]
            },
            "id": 2962,
            "name": "distributorOnly",
            "nameLocation": "1379:15:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1394:2:21"
            },
            "src": "1370:153:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2997,
              "nodeType": "Block",
              "src": "1634:211:21",
              "statements": [
                {
                  "assignments": [
                    2971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2971,
                      "mutability": "mutable",
                      "name": "_farmBeacon",
                      "nameLocation": "1663:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2997,
                      "src": "1645:29:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                        "typeString": "contract UpgradeableBeacon"
                      },
                      "typeName": {
                        "id": 2970,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2969,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1436,
                          "src": "1645:17:21"
                        },
                        "referencedDeclaration": 1436,
                        "src": "1645:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2983,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1721:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                "typeString": "function () returns (contract QuickswapDualFarmUpgradeable)"
                              },
                              "typeName": {
                                "id": 2978,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2977,
                                  "name": "Farm",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 6373,
                                  "src": "1725:4:21"
                                },
                                "referencedDeclaration": 6373,
                                "src": "1725:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              }
                            },
                            "id": 2980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1721:10:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          ],
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1713:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2975,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1713:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1713:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1677:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1436_$",
                        "typeString": "function (address) returns (contract UpgradeableBeacon)"
                      },
                      "typeName": {
                        "id": 2973,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2972,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1436,
                          "src": "1681:17:21"
                        },
                        "referencedDeclaration": 1436,
                        "src": "1681:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      }
                    },
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:66:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                      "typeString": "contract UpgradeableBeacon"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1645:98:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2987,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2964,
                        "src": "1784:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2984,
                        "name": "_farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2971,
                        "src": "1754:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 2986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 868,
                      "src": "1754:29:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:39:21"
                },
                {
                  "expression": {
                    "id": 2995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2990,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2905,
                      "src": "1804:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2993,
                          "name": "_farmBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2971,
                          "src": "1825:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 2992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1817:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2991,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1817:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1817:20:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1804:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2996,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:33:21"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 2998,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2967,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2966,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "1622:11:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1622:11:21"
              }
            ],
            "name": "initialize",
            "nameLocation": "1584:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2964,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1603:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "1595:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:18:21"
            },
            "returnParameters": {
              "id": 2968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:21"
            },
            "scope": 3506,
            "src": "1575:270:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3157,
              "nodeType": "Block",
              "src": "2703:1020:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3018,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "2717:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3020,
                      "indexExpression": {
                        "id": 3019,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3007,
                        "src": "2723:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2717:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2754:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2746:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3022,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2746:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2746:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3021,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6373,
                        "src": "2741:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2741:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "2717:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3045,
                  "nodeType": "IfStatement",
                  "src": "2714:168:21",
                  "trueBody": {
                    "id": 3044,
                    "nodeType": "Block",
                    "src": "2758:124:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3028,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2910,
                              "src": "2773:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3030,
                            "indexExpression": {
                              "id": 3029,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "2779:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2773:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3033,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "2812:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3032,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3402,
                                  "src": "2801:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 3034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2801:25:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3031,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6373,
                              "src": "2796:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2796:31:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "src": "2773:54:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3037,
                        "nodeType": "ExpressionStatement",
                        "src": "2773:54:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3041,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "2855:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3038,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2913,
                              "src": "2842:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2842:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2842:27:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3043,
                        "nodeType": "ExpressionStatement",
                        "src": "2842:27:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3046,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3001,
                      "src": "2897:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2907:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2897:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3075,
                  "nodeType": "IfStatement",
                  "src": "2894:207:21",
                  "trueBody": {
                    "id": 3074,
                    "nodeType": "Block",
                    "src": "2909:192:21",
                    "statements": [
                      {
                        "assignments": [
                          3051
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3051,
                            "mutability": "mutable",
                            "name": "tokenA",
                            "nameLocation": "2942:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3074,
                            "src": "2924:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3050,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3049,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 275,
                                "src": "2924:17:21"
                              },
                              "referencedDeclaration": 275,
                              "src": "2924:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3059,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3053,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2910,
                                    "src": "2969:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3055,
                                  "indexExpression": {
                                    "id": 3054,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "2975:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2969:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3056,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5615,
                                "src": "2969:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2969:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3052,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "2951:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2951:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2924:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3063,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3038:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3038:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3067,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2910,
                                    "src": "3058:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3069,
                                  "indexExpression": {
                                    "id": 3068,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "3064:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3058:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3050:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3065,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3050:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3050:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3071,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3001,
                              "src": "3081:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3060,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "3014:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 332,
                            "src": "3014:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$275_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3014:75:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3073,
                        "nodeType": "ExpressionStatement",
                        "src": "3014:75:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3076,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3003,
                      "src": "3114:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3124:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3114:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3105,
                  "nodeType": "IfStatement",
                  "src": "3111:208:21",
                  "trueBody": {
                    "id": 3104,
                    "nodeType": "Block",
                    "src": "3126:193:21",
                    "statements": [
                      {
                        "assignments": [
                          3081
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3081,
                            "mutability": "mutable",
                            "name": "tokenB",
                            "nameLocation": "3159:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3104,
                            "src": "3141:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3080,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3079,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 275,
                                "src": "3141:17:21"
                              },
                              "referencedDeclaration": 275,
                              "src": "3141:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3089,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3083,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2910,
                                    "src": "3186:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3085,
                                  "indexExpression": {
                                    "id": 3084,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "3192:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3186:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenB",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5617,
                                "src": "3186:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3186:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3082,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "3168:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3168:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3141:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3093,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3255:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3255:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3097,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2910,
                                    "src": "3275:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3099,
                                  "indexExpression": {
                                    "id": 3098,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "3281:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3275:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3267:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3095,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3267:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3267:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3101,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3003,
                              "src": "3298:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3090,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3081,
                              "src": "3231:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 332,
                            "src": "3231:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$275_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3231:75:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3103,
                        "nodeType": "ExpressionStatement",
                        "src": "3231:75:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3106,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3005,
                      "src": "3332:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3343:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3332:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3135,
                  "nodeType": "IfStatement",
                  "src": "3329:209:21",
                  "trueBody": {
                    "id": 3134,
                    "nodeType": "Block",
                    "src": "3345:193:21",
                    "statements": [
                      {
                        "assignments": [
                          3111
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3111,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "3378:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3134,
                            "src": "3360:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3110,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3109,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 275,
                                "src": "3360:17:21"
                              },
                              "referencedDeclaration": 275,
                              "src": "3360:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3119,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3113,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2910,
                                    "src": "3405:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3115,
                                  "indexExpression": {
                                    "id": 3114,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "3411:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3405:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lpPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5613,
                                "src": "3405:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3405:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3112,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "3387:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3387:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3360:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3123,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3474:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3474:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3127,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2910,
                                    "src": "3494:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3129,
                                  "indexExpression": {
                                    "id": 3128,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3007,
                                    "src": "3500:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3494:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3486:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3125,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3486:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3486:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3131,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3005,
                              "src": "3517:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3120,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3111,
                              "src": "3450:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 332,
                            "src": "3450:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$275_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3450:76:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3133,
                        "nodeType": "ExpressionStatement",
                        "src": "3450:76:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3136,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3012,
                          "src": "3559:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3137,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3014,
                          "src": "3566:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3138,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3016,
                          "src": "3573:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3139,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3558:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3144,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3001,
                          "src": "3615:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3145,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3003,
                          "src": "3624:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3146,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3005,
                          "src": "3633:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3147,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3009,
                          "src": "3643:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3140,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2910,
                            "src": "3586:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3142,
                          "indexExpression": {
                            "id": 3141,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3007,
                            "src": "3592:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3586:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5913,
                        "src": "3586:28:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 3148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3586:67:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3558:95:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "3558:95:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3152,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3009,
                        "src": "3678:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3153,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3007,
                        "src": "3689:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3154,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3016,
                        "src": "3704:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3151,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2927,
                      "src": "3670:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3156,
                  "nodeType": "EmitStatement",
                  "src": "3665:49:21"
                }
              ]
            },
            "documentation": {
              "id": 2999,
              "nodeType": "StructuredDocumentation",
              "src": "1853:667:21",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpStakingPool - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 3158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2535:7:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3001,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2551:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2543:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2543:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3003,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2568:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2560:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3005,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2585:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2577:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3007,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "2603:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2595:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3009,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2626:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2618:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2542:94:21"
            },
            "returnParameters": {
              "id": 3017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2662:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2654:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3014,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2677:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2669:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3016,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2692:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3158,
                  "src": "2684:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2653:49:21"
            },
            "scope": 3506,
            "src": "2526:1197:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3210,
              "nodeType": "Block",
              "src": "4394:264:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3175,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2910,
                            "src": "4413:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3177,
                          "indexExpression": {
                            "id": 3176,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3161,
                            "src": "4419:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4413:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4450:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4442:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3179,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4442:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4442:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3178,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6373,
                            "src": "4437:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4437:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "4413:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4455:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 3174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4405:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:80:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:80:21"
                },
                {
                  "expression": {
                    "id": 3201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3188,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3170,
                          "src": "4497:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3189,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3172,
                          "src": "4506:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3190,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4496:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4547:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4547:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3197,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3163,
                          "src": "4559:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3198,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3165,
                          "src": "4567:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 3199,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3167,
                          "src": "4579:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3191,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2910,
                            "src": "4517:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3193,
                          "indexExpression": {
                            "id": 3192,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3161,
                            "src": "4523:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4517:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6000,
                        "src": "4517:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 3200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4517:72:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4496:93:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3202,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:93:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4615:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4615:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3206,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "4627:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3207,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3163,
                        "src": "4642:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3203,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2935,
                      "src": "4606:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4606:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3209,
                  "nodeType": "EmitStatement",
                  "src": "4601:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3159,
              "nodeType": "StructuredDocumentation",
              "src": "3731:513:21",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpStakingPool - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 3211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4260:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3161,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "4277:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3211,
                  "src": "4269:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4269:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4300:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3211,
                  "src": "4292:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4292:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3165,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "4313:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3211,
                  "src": "4308:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3164,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4308:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4333:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3211,
                  "src": "4325:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4268:75:21"
            },
            "returnParameters": {
              "id": 3173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4369:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3211,
                  "src": "4361:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4361:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3172,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4386:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3211,
                  "src": "4378:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4360:34:21"
            },
            "scope": 3506,
            "src": "4251:407:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3259,
              "nodeType": "Block",
              "src": "5455:300:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3232,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2910,
                            "src": "5474:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3234,
                          "indexExpression": {
                            "id": 3233,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3214,
                            "src": "5480:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5474:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5511:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5503:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3236,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5503:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5503:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3235,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6373,
                            "src": "5498:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5498:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "5474:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 3242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5516:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 3231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5466:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5466:80:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3244,
                  "nodeType": "ExpressionStatement",
                  "src": "5466:80:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3249,
                        "name": "rewardTokenAToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3217,
                        "src": "5599:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 3250,
                        "name": "rewardTokenAToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3220,
                        "src": "5626:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 3251,
                        "name": "rewardTokenBToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3223,
                        "src": "5653:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 3252,
                        "name": "rewardTokenBToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3226,
                        "src": "5680:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3245,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "5567:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                            "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                          }
                        },
                        "id": 3247,
                        "indexExpression": {
                          "id": 3246,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3214,
                          "src": "5573:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5567:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        }
                      },
                      "id": 3248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6306,
                      "src": "5567:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,address[] memory,address[] memory,address[] memory) external"
                      }
                    },
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5567:139:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3254,
                  "nodeType": "ExpressionStatement",
                  "src": "5567:139:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3256,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3214,
                        "src": "5733:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3255,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2939,
                      "src": "5722:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5722:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3258,
                  "nodeType": "EmitStatement",
                  "src": "5717:30:21"
                }
              ]
            },
            "documentation": {
              "id": 3212,
              "nodeType": "StructuredDocumentation",
              "src": "4666:478:21",
              "text": " @dev Distributes tokens between users.\n @param lpStakingPool - LP pool to distribute tokens in.\n @param rewardTokenAToTokenARoute An array of token addresses.\n @param rewardTokenAToTokenBRoute An array of token addresses.\n @param rewardTokenBToTokenARoute An array of token addresses.\n @param rewardTokenBToTokenBRoute An array of token addresses.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "d2dd71ad",
            "id": 3260,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3228,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2962,
                  "src": "5439:15:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "5439:15:21"
              }
            ],
            "name": "distribute",
            "nameLocation": "5160:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3214,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5189:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3260,
                  "src": "5181:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5181:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3217,
                  "mutability": "mutable",
                  "name": "rewardTokenAToTokenARoute",
                  "nameLocation": "5232:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3260,
                  "src": "5213:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3215,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5213:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3216,
                    "nodeType": "ArrayTypeName",
                    "src": "5213:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3220,
                  "mutability": "mutable",
                  "name": "rewardTokenAToTokenBRoute",
                  "nameLocation": "5287:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3260,
                  "src": "5268:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3218,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5268:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3219,
                    "nodeType": "ArrayTypeName",
                    "src": "5268:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3223,
                  "mutability": "mutable",
                  "name": "rewardTokenBToTokenARoute",
                  "nameLocation": "5342:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3260,
                  "src": "5323:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3221,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5323:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3222,
                    "nodeType": "ArrayTypeName",
                    "src": "5323:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3226,
                  "mutability": "mutable",
                  "name": "rewardTokenBToTokenBRoute",
                  "nameLocation": "5397:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3260,
                  "src": "5378:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3224,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5378:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3225,
                    "nodeType": "ArrayTypeName",
                    "src": "5378:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:259:21"
            },
            "returnParameters": {
              "id": 3230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5455:0:21"
            },
            "scope": 3506,
            "src": "5151:604:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3304,
              "nodeType": "Block",
              "src": "6248:214:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3274,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "6263:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3276,
                      "indexExpression": {
                        "id": 3275,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3265,
                        "src": "6269:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6263:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6300:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6292:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6292:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6292:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3277,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6373,
                        "src": "6287:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6287:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "6263:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3303,
                  "nodeType": "IfStatement",
                  "src": "6259:196:21",
                  "trueBody": {
                    "id": 3302,
                    "nodeType": "Block",
                    "src": "6305:150:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3284,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3268,
                            "src": "6320:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3289,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3263,
                                "src": "6363:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 3285,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2910,
                                  "src": "6330:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3287,
                                "indexExpression": {
                                  "id": 3286,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3265,
                                  "src": "6336:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6330:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6342,
                              "src": "6330:32:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6330:42:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6320:52:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3292,
                        "nodeType": "ExpressionStatement",
                        "src": "6320:52:21"
                      },
                      {
                        "expression": {
                          "id": 3300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3293,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3270,
                                "src": "6388:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3294,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3272,
                                "src": "6396:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3295,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6387:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3297,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3265,
                                "src": "6420:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3298,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3268,
                                "src": "6435:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3296,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "6406:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6406:37:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6387:56:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3301,
                        "nodeType": "ExpressionStatement",
                        "src": "6387:56:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3261,
              "nodeType": "StructuredDocumentation",
              "src": "5763:347:21",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpStakingPool - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 3305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "6125:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6143:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3305,
                  "src": "6135:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6135:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3265,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6161:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3305,
                  "src": "6153:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6153:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6134:41:21"
            },
            "returnParameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3268,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "6207:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3305,
                  "src": "6199:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6199:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3270,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "6224:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3305,
                  "src": "6216:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6216:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3272,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "6240:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3305,
                  "src": "6232:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6232:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6198:49:21"
            },
            "scope": 3506,
            "src": "6116:346:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3346,
              "nodeType": "Block",
              "src": "6965:243:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3317,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "6980:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3319,
                      "indexExpression": {
                        "id": 3318,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3308,
                        "src": "6986:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6980:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7017:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7009:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3321,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7009:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7009:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3320,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6373,
                        "src": "7004:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7004:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "6980:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3345,
                  "nodeType": "IfStatement",
                  "src": "6976:225:21",
                  "trueBody": {
                    "id": 3344,
                    "nodeType": "Block",
                    "src": "7022:179:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3327,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3311,
                            "src": "7037:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 3328,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2910,
                                  "src": "7055:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3330,
                                "indexExpression": {
                                  "id": 3329,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3308,
                                  "src": "7061:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7055:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTotalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6363,
                              "src": "7055:37:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7055:39:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7037:57:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3334,
                        "nodeType": "ExpressionStatement",
                        "src": "7037:57:21"
                      },
                      {
                        "expression": {
                          "id": 3342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3335,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3313,
                                "src": "7110:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3336,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3315,
                                "src": "7126:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3337,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7109:32:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3339,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3308,
                                "src": "7158:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3340,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3311,
                                "src": "7173:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3338,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "7144:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7144:45:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "7109:80:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3343,
                        "nodeType": "ExpressionStatement",
                        "src": "7109:80:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3306,
              "nodeType": "StructuredDocumentation",
              "src": "6470:345:21",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpStakingPool - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 3347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "6832:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3308,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6854:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3347,
                  "src": "6846:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6846:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6845:23:21"
            },
            "returnParameters": {
              "id": 3316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3311,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "6900:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3347,
                  "src": "6892:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6892:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3313,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "6925:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3347,
                  "src": "6917:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6917:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3315,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "6949:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3347,
                  "src": "6941:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6941:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6891:73:21"
            },
            "scope": 3506,
            "src": "6823:385:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3355,
              "nodeType": "Block",
              "src": "7270:40:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3352,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2913,
                      "src": "7288:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7288:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3351,
                  "id": 3354,
                  "nodeType": "Return",
                  "src": "7281:21:21"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 3356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "7225:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7235:2:21"
            },
            "returnParameters": {
              "id": 3351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "7261:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7261:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7260:9:21"
            },
            "scope": 3506,
            "src": "7216:94:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3401,
              "nodeType": "Block",
              "src": "7473:337:21",
              "statements": [
                {
                  "assignments": [
                    3366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3366,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "7496:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3401,
                      "src": "7484:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 3365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3364,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1351,
                          "src": "7484:11:21"
                        },
                        "referencedDeclaration": 1351,
                        "src": "7484:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3388,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3370,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2905,
                        "src": "7534:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 3376,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7613:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 3375,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7605:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3374,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7605:7:21",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7605:10:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3373,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6373,
                                  "src": "7600:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                    "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7600:16:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5793,
                              "src": "7600:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                                "typeString": "function (address,address) external"
                              }
                            },
                            "id": 3380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7600:36:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3381,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3359,
                            "src": "7655:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3384,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7695:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmFactoryBeacon_$3506",
                                  "typeString": "contract QuickswapDualFarmFactoryBeacon"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmFactoryBeacon_$3506",
                                  "typeString": "contract QuickswapDualFarmFactoryBeacon"
                                }
                              ],
                              "id": 3383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7687:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3382,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7687:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7687:13:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3371,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "7559:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7559:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7559:156:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7504:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1351_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 3368,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3367,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1351,
                          "src": "7508:11:21"
                        },
                        "referencedDeclaration": 1351,
                        "src": "7508:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 3387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7504:222:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7484:242:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3392,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3366,
                            "src": "7763:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 3391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7755:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3390,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7755:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7755:14:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3389,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2919,
                      "src": "7742:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7742:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3395,
                  "nodeType": "EmitStatement",
                  "src": "7737:33:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3398,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "7796:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 3397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7788:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3396,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7788:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7788:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3363,
                  "id": 3400,
                  "nodeType": "Return",
                  "src": "7781:21:21"
                }
              ]
            },
            "documentation": {
              "id": 3357,
              "nodeType": "StructuredDocumentation",
              "src": "7318:79:21",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 3402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "7412:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3359,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "7431:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3402,
                  "src": "7423:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7423:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7422:23:21"
            },
            "returnParameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3402,
                  "src": "7464:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7464:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7463:9:21"
            },
            "scope": 3506,
            "src": "7403:407:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3488,
              "nodeType": "Block",
              "src": "8268:546:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3414,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2910,
                        "src": "8283:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3416,
                      "indexExpression": {
                        "id": 3415,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3405,
                        "src": "8289:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8283:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8320:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8312:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3418,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8312:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8312:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3417,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6373,
                        "src": "8307:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8307:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "8283:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3487,
                  "nodeType": "IfStatement",
                  "src": "8279:528:21",
                  "trueBody": {
                    "id": 3486,
                    "nodeType": "Block",
                    "src": "8325:482:21",
                    "statements": [
                      {
                        "assignments": [
                          3425
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3425,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "8348:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3486,
                            "src": "8340:14:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3424,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8340:7:21",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3431,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 3426,
                                "name": "Farms",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2910,
                                "src": "8357:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                  "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                }
                              },
                              "id": 3428,
                              "indexExpression": {
                                "id": 3427,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3405,
                                "src": "8363:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8357:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                "typeString": "contract QuickswapDualFarmUpgradeable"
                              }
                            },
                            "id": 3429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5613,
                            "src": "8357:27:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8357:29:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8340:46:21"
                      },
                      {
                        "assignments": [
                          3433
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3433,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "8409:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3486,
                            "src": "8401:19:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3432,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8401:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3439,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3435,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3425,
                                  "src": "8430:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3434,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "8423:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1670_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8423:14:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1601,
                            "src": "8423:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8423:28:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8401:50:21"
                      },
                      {
                        "assignments": [
                          3441
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3441,
                            "mutability": "mutable",
                            "name": "totalTokenAAmount",
                            "nameLocation": "8474:17:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3486,
                            "src": "8466:25:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3440,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8466:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3452,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3450,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3425,
                              "src": "8542:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3443,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2910,
                                        "src": "8501:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3445,
                                      "indexExpression": {
                                        "id": 3444,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3405,
                                        "src": "8507:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8501:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5615,
                                    "src": "8501:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8501:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3442,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "8494:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1670_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8494:37:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1609,
                            "src": "8494:47:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8494:55:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8466:83:21"
                      },
                      {
                        "expression": {
                          "id": 3461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3453,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3410,
                            "src": "8564:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3459,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3433,
                                "src": "8610:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3456,
                                    "name": "totalTokenAAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3441,
                                    "src": "8587:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3454,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3407,
                                    "src": "8574:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2253,
                                  "src": "8574:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8574:31:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2268,
                              "src": "8574:35:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8574:48:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8564:58:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3462,
                        "nodeType": "ExpressionStatement",
                        "src": "8564:58:21"
                      },
                      {
                        "assignments": [
                          3464
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3464,
                            "mutability": "mutable",
                            "name": "totalTokenBAmount",
                            "nameLocation": "8647:17:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3486,
                            "src": "8639:25:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3463,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8639:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3475,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3473,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3425,
                              "src": "8715:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3466,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2910,
                                        "src": "8674:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$6373_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3468,
                                      "indexExpression": {
                                        "id": 3467,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3405,
                                        "src": "8680:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8674:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$6373",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5617,
                                    "src": "8674:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8674:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3465,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "8667:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1670_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8667:37:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1609,
                            "src": "8667:47:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8667:55:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8639:83:21"
                      },
                      {
                        "expression": {
                          "id": 3484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3476,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3412,
                            "src": "8737:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3482,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3433,
                                "src": "8783:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3479,
                                    "name": "totalTokenBAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3464,
                                    "src": "8760:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3477,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3407,
                                    "src": "8747:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2253,
                                  "src": "8747:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8747:31:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2268,
                              "src": "8747:35:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8747:48:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8737:58:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3485,
                        "nodeType": "ExpressionStatement",
                        "src": "8737:58:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3403,
              "nodeType": "StructuredDocumentation",
              "src": "7818:322:21",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpStakingPool - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 3489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "8156:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3405,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "8178:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "8170:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8170:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3407,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "8201:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "8193:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8169:41:21"
            },
            "returnParameters": {
              "id": 3413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3410,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "8242:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "8234:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8234:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3412,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "8259:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "8251:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8251:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8233:34:21"
            },
            "scope": 3506,
            "src": "8147:667:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3504,
              "nodeType": "Block",
              "src": "8900:97:21",
              "statements": [
                {
                  "expression": {
                    "id": 3498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3496,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "8911:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3497,
                      "name": "newDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "8925:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8911:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3499,
                  "nodeType": "ExpressionStatement",
                  "src": "8911:28:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3501,
                        "name": "newDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3491,
                        "src": "8974:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3500,
                      "name": "DistributorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2943,
                      "src": "8955:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8955:34:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3503,
                  "nodeType": "EmitStatement",
                  "src": "8950:39:21"
                }
              ]
            },
            "functionSelector": "e2332908",
            "id": 3505,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3493,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2962,
                  "src": "8884:15:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "8884:15:21"
              }
            ],
            "name": "transferDistributor",
            "nameLocation": "8831:19:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3491,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "8859:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3505,
                  "src": "8851:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8851:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8850:24:21"
            },
            "returnParameters": {
              "id": 3495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8900:0:21"
            },
            "scope": 3506,
            "src": "8822:175:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3507,
        "src": "420:8580:21",
        "usedErrors": []
      }
    ],
    "src": "33:8968:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d08": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "farmAddress",
              "type": "address"
            }
          ],
          "name": "FarmDeployed",
          "type": "event"
        },
        "0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            }
          ],
          "name": "Distribute",
          "type": "event"
        },
        "0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF635DB454B99057EC340A8DF5f8996662612dBD2",
      "transactionHash": "0xb5995c4be6d8b87073112b8e1b8731ac74332b2c245cf9309cdb12d3ff1c879d"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-25T08:46:03.141Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256,address,address)": {
        "details": "Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.",
        "params": {
          "amountA": "- Token A amount to deposit.",
          "amountB": "-  Token B amount to deposit.",
          "amountLP": "- LP Token amount to deposit.",
          "lpStakingPool": "- Address of the pool to deposit tokens in.",
          "recipient": "- Address which will recieve the deposit and leftover tokens."
        },
        "returns": {
          "liquidity": "- Total liquidity sent to the farm (in lpTokens).",
          "sentA": "- Token A amount sent to the farm.",
          "sentB": "- Token B amount sent to the farm."
        }
      },
      "distribute(address,address[],address[],address[],address[])": {
        "details": "Distributes tokens between users.",
        "params": {
          "lpStakingPool": "- LP pool to distribute tokens in.",
          "rewardTokenAToTokenARoute": "An array of token addresses.",
          "rewardTokenAToTokenBRoute": "An array of token addresses.",
          "rewardTokenBToTokenARoute": "An array of token addresses.",
          "rewardTokenBToTokenBRoute": "An array of token addresses. Note: This function can only be called by the distributor."
        }
      },
      "totalDeposits(address)": {
        "details": "Returns total amount locked in the pool. Doesn't take pending rewards into account.",
        "params": {
          "lpStakingPool": "- LP pool to check total deposits in."
        },
        "returns": {
          "totalDepositsA": "- Token A deposits.",
          "totalDepositsB": "- Token B deposits.",
          "totalDepositsLP": "- Total deposits (in LP tokens)."
        }
      },
      "userStake(address,address)": {
        "details": "Returns tokens staked by the {_address} for the given {lpPair}.",
        "params": {
          "_address": "- The address to check stakes for.",
          "lpStakingPool": "- LP pool to check stakes in."
        },
        "returns": {
          "stakeA": "- Token A stake.",
          "stakeB": "- Token B stake.",
          "stakeLP": "- Total user stake(in LP tokens)."
        }
      },
      "withdraw(address,uint256,bool,address)": {
        "details": "Withdraws tokens from the given pool. ",
        "params": {
          "amount": "- LP amount to withdraw. ",
          "lpStakingPool": "- LP pool to withdraw from.",
          "recipient": "- The address which will recieve tokens.",
          "withdrawLP": "- True: Withdraw in LP tokens, False: Withdraw in normal tokens."
        },
        "returns": {
          "amountA": "- Token A amount sent to the {recipient}, 0 if withdrawLP == false.",
          "amountB": "- Token B amount sent to the {recipient}, 0 if withdrawLP == false."
        }
      }
    },
    "stateVariables": {
      "farmBeacon": {
        "details": "Contract Variables: farmBeacon - Farm contract implementation. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract. distributor - Address authorized to make distributions."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}