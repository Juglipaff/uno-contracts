{
  "contractName": "QuickswapDualFarmFactoryBeacon",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmAddress",
          "type": "address"
        }
      ],
      "name": "FarmDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Farms",
      "outputs": [
        {
          "internalType": "contract QuickswapDualFarmUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "farmBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "upgrader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sentA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sentB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "userStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDepositsLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmAddress\",\"type\":\"address\"}],\"name\":\"FarmDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Farms\",\"outputs\":[{\"internalType\":\"contract QuickswapDualFarmUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sentA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDepositsLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"userStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256,address,address)\":{\"details\":\"Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\",\"params\":{\"amountA\":\"- Token A amount to deposit.\",\"amountB\":\"-  Token B amount to deposit.\",\"amountLP\":\"- LP Token amount to deposit.\",\"lpStakingPool\":\"- Address of the pool to deposit tokens in.\",\"recipient\":\"- Address which will recieve the deposit and leftover tokens.\"},\"returns\":{\"liquidity\":\"- Total liquidity sent to the farm (in lpTokens).\",\"sentA\":\"- Token A amount sent to the farm.\",\"sentB\":\"- Token B amount sent to the farm.\"}},\"distribute(address)\":{\"details\":\"Distributes tokens between users.\",\"params\":{\"lpStakingPool\":\"- LP pool to distribute tokens in.\"}},\"totalDeposits(address)\":{\"details\":\"Returns total amount locked in the pool. Doesn't take pending rewards into account.\",\"params\":{\"lpStakingPool\":\"- LP pool to check total deposits in.\"},\"returns\":{\"totalDepositsA\":\"- Token A deposits.\",\"totalDepositsB\":\"- Token B deposits.\",\"totalDepositsLP\":\"- Total deposits (in LP tokens).\"}},\"userStake(address,address)\":{\"details\":\"Returns tokens staked by the {_address} for the given {lpPair}.\",\"params\":{\"_address\":\"- The address to check stakes for.\",\"lpStakingPool\":\"- LP pool to check stakes in.\"},\"returns\":{\"stakeA\":\"- Token A stake.\",\"stakeB\":\"- Token B stake.\",\"stakeLP\":\"- Total user stake(in LP tokens).\"}},\"withdraw(address,uint256,bool,address)\":{\"details\":\"Withdraws tokens from the given pool. \",\"params\":{\"amount\":\"- LP amount to withdraw. \",\"lpStakingPool\":\"- LP pool to withdraw from.\",\"recipient\":\"- The address which will recieve tokens.\",\"withdrawLP\":\"- True: Withdraw in LP tokens, False: Withdraw in normal tokens.\"},\"returns\":{\"amountA\":\"- Token A amount sent to the {recipient}, 0 if withdrawLP == false.\",\"amountB\":\"- Token B amount sent to the {recipient}, 0 if withdrawLP == false.\"}}},\"stateVariables\":{\"farmBeacon\":{\"details\":\"Contract Variables: farmBeacon - Farm contract implementation. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/QuickswapDualFarmFactoryBeacon.sol\":\"QuickswapDualFarmFactoryBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x6287586f5e4a103c89d4dda41406136cdf283cc625bd1ebfdf1468aae5bfe449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30e2e913292e86a9bce50d51882b23ef57ae4c811003ec96cf39b1781f68b202\",\"dweb:/ipfs/QmUXqjyiAHbEMJ4zLfaduWYuVwp1HozqVhtChe9VfdpjoV\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xfd0d01e9036a03e50a71009749b9bfe7570a8f5b852ea409f794debfdd646dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f55720689d7006549fdaf3d565351e053a8156347955e1682c97afe907358c65\",\"dweb:/ipfs/QmXmr8DBkEP4xKqgRBi32SRg4WKPqfgy49j5aHSYkLvhGm\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xdfddefa47c1f11dde2c3b5533c76ccef27a526985c74d9c917deb699d5d46a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd15423cc0456b783054f974bc88f25b88c99319a2cfec4b5745acfedbbd1d88\",\"dweb:/ipfs/QmZVXupWzRDTXynYd2GLtB9CTGF9ehrqzcPhqXNVZPDCTc\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x48f7fc8c916a93d6045745daf350662fc9a57de82c5c4b42259064be4c11ef84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b10768f1c512d367d20a323a0b447e4674896319a8a90a59aeec7296f84b26b\",\"dweb:/ipfs/QmPQLzwEKLTP7UUnG6gVx5Y832tkP8vSpjajrrdXXDE2Ne\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x94f08740b99a0997bc8363edb752b38354f730a38c54eb7bdd38a8a22ff34aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e27babc1cc78d71ddfa1474f9b2cb04517ef4570fc4c41ecfa97ecf6aa25e7bf\",\"dweb:/ipfs/QmePWVAAJdWJtfgKAPJe1kRgYxorkNEFhGrAN2jLLGiFTX\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x08f7ba4d76d3b55d78ce381ce83f96486711defc7524a8048101888297686903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa5ee00837907842e1f7ae3e85424a0fed8e64fa9d1541736c999e39d27c2f56\",\"dweb:/ipfs/QmNyvN6Zur8mZSGhheNE9xZzyPGutEkwKwuraUz3TX1urD\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xe237a2794a6588efdbf8cf998283ad188ac0e32d5f3e1d7d8d286fdac82863bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fdb06bd9dc4fc5c059e9f2748d73ac06331e4a7efed604584e02b3e3501aaaa\",\"dweb:/ipfs/QmaZ33qA3ahXjmo8Q6M9rayAbrkDgH8eAimfpZ2Drr2txW\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d874c66c21369dce8d3fe0b6c41316b0c289e45c0b4a77090c010ac2bb80e61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c0d714529b6514f623c6d023ab0594ee0801da8afd5ee8167c323da6f0979a\",\"dweb:/ipfs/QmTmhKaXGfu5MGKaz1Pcjrh9xWbkNtzFeok4PxaKREdf9X\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/QuickswapDualFarmFactoryBeacon.sol\":{\"keccak256\":\"0x410f457814a3943a8ac4f6f200d502ce9589e943f652dd8155006d0f343404e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6042ed47135c04d1b2c96df77eb866e9cf1ca6f2fa70517956173af2cd8bee41\",\"dweb:/ipfs/QmPzRqKEzp5ZDTk1SwvPiJCoqzX1CeHfESL6reZNNNuKed\"]},\"project:/contracts/farms/QuickswapDualFarmUpgradeable.sol\":{\"keccak256\":\"0xedf8d4b1bd515b247c010d75fb995ca2f83d04e52147426127b1b7f27d556529\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74aee22be4319b1b9ee3591ae3648fd19016297060a15712412dd384968feb8a\",\"dweb:/ipfs/QmQV5fmfhN31NTNNvQ55wZn6TPLb8Ux4YKtBcjNGoLeoiq\"]},\"project:/contracts/interfaces/IStakingDualRewards.sol\":{\"keccak256\":\"0xb66973d0379a9e1fe37d2b474720d055dbdeeca2324720bfa6a09941f18cac45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2a423dc664dba5965b3a93199556251124dbe9739a67f6b155f4630b46bef56\",\"dweb:/ipfs/QmWAqsLtZPf4wLAPpcDYVLogfiWBBMx2CRpbbD7Fp4XPSJ\"]},\"project:/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xa3d83596fa1f4b8a66b37bf6ed9b8f193d16964f718feada7ff6b27817de51a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734097d009c568d586d793ef891a3da29e7a24330e290b2b3553e676f4c9c3a7\",\"dweb:/ipfs/QmUhmfSvgMBRnJNYHfNjDKtti7Fna6Uqr4rsKuJeHkEScw\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x1530b00512450cd32128a92e9444a96da92399a84ab1e1a3539b4817cf91676b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e40fa52888c0351f252749cdeb252ea4cdecbfd893e31563a606cc5cf455aa2a\",\"dweb:/ipfs/QmUah3Qkt6U8WErkh6TDdZwwgcXRzMmzrFKeuoHr8KmiaN\"]},\"project:/contracts/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0xec9edfa4778dfd003d2f53807fc04f5274d28ade94226f7df74957de7c07111a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f9089e0dcf2871197521b6f84f353b9d63816bfa0c1a2ba64379492ffc77f53\",\"dweb:/ipfs/QmSnAv4R1MWmxjHh37Tp2yfHMQdnfPA9T17rTiLprixy2i\"]},\"project:/contracts/utils/Cooldown.sol\":{\"keccak256\":\"0xb9dcb6b93efb728bf356c0fadb2b124083f28317147fef31e3c57df79673e7e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd8bd1180c0fe93e63807b6bf06c73e76845bcc578031e22917f176cc50d1c59\",\"dweb:/ipfs/QmRi11ypJ3Byvrn4cetvZW6YwkD5pBkyMp3n3J219qQyjP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061545f806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c8063c4d66de8116200006e578063c4d66de81462000156578063d95a4d93146200016d578063e940325614620001a0578063ecb0394314620001b7578063f9d9331d14620001ce57600080fd5b8063081e3eda14620000b0578063430004c114620000c657806351bdca3e14620000f357806363453ae114620001265780637c770aae146200013f575b600080fd5b6002546040519081526020015b60405180910390f35b620000dd620000d736600462001291565b620001fa565b60408051928352602083019190915201620000bd565b6200010a62000104366004620012eb565b6200034f565b60408051938452602084019290925290820152606001620000bd565b6200013d6200013736600462001329565b62000411565b005b6200010a6200015036600462001349565b6200051b565b6200013d6200016736600462001329565b620008c6565b60005462000187906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001620000bd565b6200010a620001b136600462001329565b62000a73565b62000187620001c8366004620013a4565b62000b32565b62000187620001df36600462001329565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b0384811660009081526001602052604081205490918291166200026b5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e74206578697374000000000060448201526064015b60405180910390fd5b6001600160a01b038681166000908152600160205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af1158015620002db573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003019190620013be565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526001602052604081205490918291829116156200040a576001600160a01b0384811660009081526001602052604090819020549051630103c92b60e01b81528783166004820152911690630103c92b90602401602060405180830381865afa158015620003d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f69190620013e3565b925062000404848462000b5d565b90925090505b9250925092565b6001600160a01b03818116600090815260016020526040902054166200047a5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e742065786973740000000000604482015260640162000262565b6001600160a01b0380821660009081526001602052604080822054815163e4fc6b6d60e01b8152915193169263e4fc6b6d9260048084019391929182900301818387803b158015620004cb57600080fd5b505af1158015620004e0573d6000803e3d6000fd5b50506040516001600160a01b03841692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a250565b6001600160a01b0382811660009081526001602052604081205490918291829116620005b5576200054c8562000e85565b6001600160a01b03808716600081815260016020819052604082208054959094166001600160a01b03199586161790935560028054938401815590527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180549092161790555b87156200066b576001600160a01b03808616600090815260016020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa15801562000613573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006399190620013fd565b6001600160a01b038088166000908152600160205260409020549192506200066991818416913391168c62000f53565b505b861562000722576001600160a01b038086166000908152600160209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa158015620006ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f09190620013fd565b6001600160a01b038088166000908152600160205260409020549192506200072091818416913391168b62000f53565b505b8515620007d9576001600160a01b03808616600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000781573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a79190620013fd565b6001600160a01b03808816600090815260016020526040902054919250620007d791818416913391168a62000f53565b505b6001600160a01b038581166000908152600160205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af11580156200084a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087091906200141d565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b600054610100900460ff1680620008e0575060005460ff16155b620009455760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000262565b600054610100900460ff1615801562000968576000805461ffff19166101011790555b600060405162000978906200123f565b604051809103906000f08015801562000995573d6000803e3d6000fd5b50604051620009a4906200124d565b6001600160a01b039091168152602001604051809103906000f080158015620009d1573d6000803e3d6000fd5b5060405163f2fde38b60e01b81526001600160a01b0385811660048301529192509082169063f2fde38b90602401600060405180830381600087803b15801562000a1a57600080fd5b505af115801562000a2f573d6000803e3d6000fd5b5050600080546001600160a01b03909416620100000262010000600160b01b0319909416939093179092555050801562000a6f576000805461ff00191690555b5050565b6001600160a01b03818116600090815260016020526040812054909182918291161562000b2b576001600160a01b03808516600090815260016020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000af1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b179190620013e3565b925062000b25848462000b5d565b90925090505b9193909250565b6002818154811062000b4357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0382811660009081526001602052604081205490918291161562000e7e576001600160a01b03808516600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000bda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c009190620013fd565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c699190620013e3565b6001600160a01b03808816600090815260016020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562000cc4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cea9190620013fd565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a0823190602401602060405180830381865afa15801562000d33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d599190620013e3565b905062000d738262000d6c888462000fb5565b9062000fca565b6001600160a01b038089166000908152600160209081526040808320548151635f64b55b60e01b81529151959a5092949290931692635f64b55b92600480830193928290030181865afa15801562000dcf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000df59190620013fd565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a0823190602401602060405180830381865afa15801562000e3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e649190620013e3565b905062000e778362000d6c898462000fb5565b9450505050505b9250929050565b60008054604080516001600160a01b0385811660248301523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b179052915184936201000090049092169162000eeb906200125b565b62000ef8929190620014a9565b604051809103906000f08015801562000f15573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905262000faf90859062000fd8565b50505050565b600062000fc38284620014cf565b9392505050565b600062000fc38284620014fd565b60006200102f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620010b69092919063ffffffff16565b805190915015620010b1578080602001905181019062001050919062001520565b620010b15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000262565b505050565b6060620010c78484600085620010cf565b949350505050565b606082471015620011325760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000262565b843b620011825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000262565b600080866001600160a01b03168587604051620011a0919062001540565b60006040518083038185875af1925050503d8060008114620011df576040519150601f19603f3d011682016040523d82523d6000602084013e620011e4565b606091505b5091509150620011f682828662001201565b979650505050505050565b606083156200121257508162000fc3565b825115620012235782518084602001fd5b8160405162461bcd60e51b81526004016200026291906200155e565b613042806200157483390190565b61050e80620045b683390190565b6109668062004ac483390190565b6001600160a01b03811681146200127f57600080fd5b50565b80151581146200127f57600080fd5b60008060008060808587031215620012a857600080fd5b8435620012b58162001269565b9350602085013592506040850135620012ce8162001282565b91506060850135620012e08162001269565b939692955090935050565b60008060408385031215620012ff57600080fd5b82356200130c8162001269565b915060208301356200131e8162001269565b809150509250929050565b6000602082840312156200133c57600080fd5b813562000fc38162001269565b600080600080600060a086880312156200136257600080fd5b8535945060208601359350604086013592506060860135620013848162001269565b91506080860135620013968162001269565b809150509295509295909350565b600060208284031215620013b757600080fd5b5035919050565b60008060408385031215620013d257600080fd5b505080516020909101519092909150565b600060208284031215620013f657600080fd5b5051919050565b6000602082840312156200141057600080fd5b815162000fc38162001269565b6000806000606084860312156200143357600080fd5b8351925060208401519150604084015190509250925092565b60005b83811015620014695781810151838201526020016200144f565b8381111562000faf5750506000910152565b60008151808452620014958160208601602086016200144c565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620010c7908301846200147b565b6000816000190483118215151615620014f857634e487b7160e01b600052601160045260246000fd5b500290565b6000826200151b57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200153357600080fd5b815162000fc38162001282565b60008251620015548184602087016200144c565b9190910192915050565b60208152600062000fc360208301846200147b56fe60a06040523060805234801561001457600080fd5b506001606555608051612ff861004a600039600081816103f10152818161043a015281816114aa01526114ea0152612ff86000f3fe6080604052600436106100f35760003560e01c80635f64b55b1161008a578063aa7b83e311610059578063aa7b83e314610295578063e4fc6b6d146102b5578063f2fde38b146102ca578063fad3cc4b146102ea57600080fd5b80635f64b55b146102225780636b8ba92c14610242578063715018a6146102625780638da5cb5b1461027757600080fd5b8063430004c1116100c6578063430004c11461019a578063452ed4f1146101cf578063485cc955146101ef5780634f1ef2861461020f57600080fd5b80630103c92b146100f85780630fc63d101461012b578063168a4822146101635780633659cfe614610178575b600080fd5b34801561010457600080fd5b5061011861011336600461293e565b610325565b6040519081526020015b60405180910390f35b34801561013757600080fd5b50606a5461014b906001600160a01b031681565b6040516001600160a01b039091168152602001610122565b34801561016f57600080fd5b506101186103b0565b34801561018457600080fd5b5061019861019336600461293e565b6103e6565b005b3480156101a657600080fd5b506101ba6101b5366004612969565b6104b8565b60408051928352602083019190915201610122565b3480156101db57600080fd5b5060695461014b906001600160a01b031681565b3480156101fb57600080fd5b5061019861020a3660046129bc565b61076d565b61019861021d366004612a3c565b61149f565b34801561022e57600080fd5b50606b5461014b906001600160a01b031681565b34801561024e57600080fd5b5060675461014b906001600160a01b031681565b34801561026e57600080fd5b50610198611559565b34801561028357600080fd5b506033546001600160a01b031661014b565b3480156102a157600080fd5b5060685461014b906001600160a01b031681565b3480156102c157600080fd5b5061019861158f565b3480156102d657600080fd5b506101986102e536600461293e565b611ca8565b3480156102f657600080fd5b5061030a610305366004612ae4565b611d40565b60408051938452602084019290925290820152606001610122565b6001600160a01b038116600090815260746020526040812054607254829161038391670de0b6b3a76400009161037d9161035e91612016565b6001600160a01b03871660009081526073602052604090205490612022565b9061202e565b6001600160a01b0384166000908152607360205260409020549091506103a9908261203a565b9392505050565b60006103e16103d8670de0b6b3a764000061037d60725460715461202290919063ffffffff16565b6071549061203a565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104385760405162461bcd60e51b815260040161042f90612b1a565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661046a612046565b6001600160a01b0316146104905760405162461bcd60e51b815260040161042f90612b66565b61049981612074565b604080516000808252602082019092526104b59183919061209e565b50565b600080336001600160a01b03166104d76033546001600160a01b031690565b6001600160a01b0316146104fd5760405162461bcd60e51b815260040161042f90612bb2565b600260655414156105205760405162461bcd60e51b815260040161042f90612be7565b60026065556001600160a01b03861660009081526073602052604090205461059a5760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b606482015260840161042f565b60006105a5876121e9565b905060006105b38288612016565b90508015610654576001600160a01b03881660009081526073602090815260408083208490556072546074909252909120556071546105f2908261203a565b607155606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561063b57600080fd5b505af115801561064f573d6000803e3d6000fd5b505050505b851561067f57606954610671906001600160a01b0316868961229e565b60008093509350505061075d565b606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163baa2abde916001600160a01b0391821691168a6000808b6106bf4261025861203a565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af1158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190612c1e565b909450925050505b6001606555909590945092505050565b600054610100900460ff1680610786575060005460ff16155b6107a25760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff161580156107c4576000805461ffff19166101011790555b6107cc6122f0565b6107d582611ca8565b606c80546001600160a01b0319166001600160a01b038516908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190612c90565b606980546001600160a01b0319166001600160a01b03928316179055606c54604080516317f4408360e21b815290519190921691635fd1020c9160048083019260209291908290030181865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190612c90565b606780546001600160a01b0319166001600160a01b03928316179055606c5460408051634462633360e11b8152905191909216916388c4c6669160048083019260209291908290030181865afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190612c90565b606880546001600160a01b0319166001600160a01b0392831617905560695460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190612c90565b606a80546001600160a01b0319166001600160a01b039283161790556069546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190612c90565b606b80546001600160a01b0319166001600160a01b03928316179055606a54600080516020612fa383398151915291161415610b0b57604080518082019091526067546001600160a01b03168152600080516020612fa38339815191526020820152610aca90606d9060026128af565b50604080518082019091526068546001600160a01b03168152600080516020612fa38339815191526020820152610b0590606f9060026128af565b50610de5565b606754606a546001600160a01b03908116911614610c7b57606a5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa158015610b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bba9190612c90565b6001600160a01b03161415610c3257604080516080810182526067546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606a549091166060820152610c2c90606d9060046128af565b50610c7b565b604080516060810182526067546001600160a01b039081168252600080516020612fa38339815191526020830152606a541691810191909152610c7990606d9060036128af565b505b606854606a546001600160a01b03908116911614610de557606a5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190612c90565b6001600160a01b03161415610d9c57604080516080810182526068546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606a549091166060820152610b0590606f9060046128af565b604080516060810182526068546001600160a01b039081168252600080516020612fa38339815191526020830152606a541691810191909152610de390606f9060036128af565b505b606b546001600160a01b0316600080516020612fa38339815191521415610e8157604080518082019091526067546001600160a01b03168152600080516020612fa38339815191526020820152610e4090606e9060026128af565b50604080518082019091526068546001600160a01b03168152600080516020612fa38339815191526020820152610e7b9060709060026128af565b5061115b565b606754606b546001600160a01b03908116911614610ff157606b5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f309190612c90565b6001600160a01b03161415610fa857604080516080810182526067546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606b549091166060820152610fa290606e9060046128af565b50610ff1565b604080516060810182526067546001600160a01b039081168252600080516020612fa38339815191526020830152606b541691810191909152610fef90606e9060036128af565b505b606854606b546001600160a01b0390811691161461115b57606b5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190612c90565b6001600160a01b0316141561111257604080516080810182526068546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606b549091166060820152610e7b9060709060046128af565b604080516060810182526068546001600160a01b039081168252600080516020612fa38339815191526020830152606b5416918101919091526111599060709060036128af565b505b60695460405163095ea7b360e01b81526001600160a01b0385811660048301526000196024830181905292169063095ea7b3906044016020604051808303816000875af11580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190612cad565b5060695460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561123a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125e9190612cad565b5060675460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af11580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190612cad565b5060685460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561134e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113729190612cad565b50606a5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af11580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc9190612cad565b50606b5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015611462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114869190612cad565b5050801561149a576000805461ff00191690555b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156114e85760405162461bcd60e51b815260040161042f90612b1a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661151a612046565b6001600160a01b0316146115405760405162461bcd60e51b815260040161042f90612b66565b61154982612074565b6115558282600161209e565b5050565b6033546001600160a01b031633146115835760405162461bcd60e51b815260040161042f90612bb2565b61158d600061236b565b565b6033546001600160a01b031633146115b95760405162461bcd60e51b815260040161042f90612bb2565b600260655414156115dc5760405162461bcd60e51b815260040161042f90612be7565b60026065556071546116405760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b606482015260840161042f565b606c60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561169057600080fd5b505af11580156116a4573d6000803e3d6000fd5b50506067546040516370a0823160e01b81523060048201526000935061171d92506002916001600160a01b0316906370a08231906024015b602060405180830381865afa1580156116f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190612cca565b6068546040516370a0823160e01b815230600482015291925060009161175a916002916001600160a01b03909116906370a08231906024016116dc565b606754606a549192506001600160a01b0391821691161461180a5773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed1739836000606d306117a14261025861203a565b6040518663ffffffff1660e01b81526004016117c1959493929190612ce3565b6000604051808303816000875af11580156117e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118089190810190612d59565b505b606754606b546001600160a01b039081169116146118b75773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed1739836000606e3061184e4261025861203a565b6040518663ffffffff1660e01b815260040161186e959493929190612ce3565b6000604051808303816000875af115801561188d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118b59190810190612d59565b505b606854606a546001600160a01b039081169116146119645773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed1739826000606f306118fb4261025861203a565b6040518663ffffffff1660e01b815260040161191b959493929190612ce3565b6000604051808303816000875af115801561193a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119629190810190612d59565b505b606854606b546001600160a01b03908116911614611a115773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398260006070306119a84261025861203a565b6040518663ffffffff1660e01b81526004016119c8959493929190612ce3565b6000604051808303816000875af11580156119e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a0f9190810190612d59565b505b606a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7e9190612cca565b606b546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af09190612cca565b606a54606b5491925073a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b039081169116858560018030611b344261025861203a565b6040518963ffffffff1660e01b8152600401611b57989796959493929190612dff565b6060604051808303816000875af1158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9a9190612e48565b50506069546040516370a0823160e01b8152306004820152600092506001600160a01b03909116906370a0823190602401602060405180830381865afa158015611be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0c9190612cca565b90508015611c9c57607154611c3a90611c319061037d670de0b6b3a764000085612022565b6072549061203a565b607255606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611c8357600080fd5b505af1158015611c97573d6000803e3d6000fd5b505050505b50506001606555505050565b6033546001600160a01b03163314611cd25760405162461bcd60e51b815260040161042f90612bb2565b6001600160a01b038116611d375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b6104b58161236b565b60008080336001600160a01b0316611d606033546001600160a01b031690565b6001600160a01b031614611d865760405162461bcd60e51b815260040161042f90612bb2565b60026065541415611da95760405162461bcd60e51b815260040161042f90612be7565b60026065556001600160a01b03841660009081526073602052604081205415611dd857611dd5856121e9565b90505b60008089118015611de95750600088115b15611e9d57606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b0391821691168c8c60008030611e2f4261025861203a565b6040518963ffffffff1660e01b8152600401611e52989796959493929190612dff565b6060604051808303816000875af1158015611e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e959190612e48565b919650945090505b6000611ea9828961203a565b11611ef65760405162461bcd60e51b815260206004820152601860248201527f54686520616d6f756e742070726f766964656420697320300000000000000000604482015260640161042f565b6000611f0c83611f06848b61203a565b9061203a565b6001600160a01b0388166000908152607360209081526040808320849055607254607490925290912055607154909150611f46908261203a565b607155606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611f8f57600080fd5b505af1158015611fa3573d6000803e3d6000fd5b50505050611fd187611fbe888d61201690919063ffffffff16565b606a546001600160a01b0316919061229e565b611ff287611fdf8b88612016565b606b546001600160a01b0316919061229e565b8585611ffe848b61203a565b6001606555919c909b50909950975050505050505050565b60006103a98284612e8c565b60006103a98284612ea3565b60006103a98284612ec2565b60006103a98284612ee4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6033546001600160a01b031633146104b55760405162461bcd60e51b815260040161042f90612bb2565b60006120a8612046565b90506120b3846123bd565b6000835111806120c05750815b156120d1576120cf8484612462565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166121e257805460ff191660011781556040516001600160a01b038316602482015261215090869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052612462565b50805460ff19168155612161612046565b6001600160a01b0316826001600160a01b0316146121d95760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b606482015260840161042f565b6121e285612487565b5050505050565b6000806121f583610325565b6001600160a01b03841660009081526073602052604090205460715491925061221e9190612016565b607155606c54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561226757600080fd5b505af115801561227b573d6000803e3d6000fd5b5050506001600160a01b0390931660009081526073602052604081205592915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261149a9084906124c7565b600054610100900460ff1680612309575060005460ff16155b6123255760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff16158015612347576000805461ffff19166101011790555b61234f612599565b612357612603565b80156104b5576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803b6124215760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161042f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60606103a98383604051806060016040528060278152602001612f7c60279139612663565b612490816123bd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600061251c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127379092919063ffffffff16565b80519091501561149a578080602001905181019061253a9190612cad565b61149a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161042f565b600054610100900460ff16806125b2575060005460ff16155b6125ce5760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff16158015612357576000805461ffff191661010117905580156104b5576000805461ff001916905550565b600054610100900460ff168061261c575060005460ff16155b6126385760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff1615801561265a576000805461ffff19166101011790555b6123573361236b565b6060833b6126c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161042f565b600080856001600160a01b0316856040516126dd9190612f2c565b600060405180830381855af49150503d8060008114612718576040519150601f19603f3d011682016040523d82523d6000602084013e61271d565b606091505b509150915061272d82828661274e565b9695505050505050565b60606127468484600085612787565b949350505050565b6060831561275d5750816103a9565b82511561276d5782518084602001fd5b8160405162461bcd60e51b815260040161042f9190612f48565b6060824710156127e85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161042f565b843b6128365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161042f565b600080866001600160a01b031685876040516128529190612f2c565b60006040518083038185875af1925050503d806000811461288f576040519150601f19603f3d011682016040523d82523d6000602084013e612894565b606091505b50915091506128a482828661274e565b979650505050505050565b828054828255906000526020600020908101928215612904579160200282015b8281111561290457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906128cf565b50612910929150612914565b5090565b5b808211156129105760008155600101612915565b6001600160a01b03811681146104b557600080fd5b60006020828403121561295057600080fd5b81356103a981612929565b80151581146104b557600080fd5b6000806000806080858703121561297f57600080fd5b843561298a81612929565b93506020850135925060408501356129a18161295b565b915060608501356129b181612929565b939692955090935050565b600080604083850312156129cf57600080fd5b82356129da81612929565b915060208301356129ea81612929565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612a3457612a346129f5565b604052919050565b60008060408385031215612a4f57600080fd5b8235612a5a81612929565b915060208381013567ffffffffffffffff80821115612a7857600080fd5b818601915086601f830112612a8c57600080fd5b813581811115612a9e57612a9e6129f5565b612ab0601f8201601f19168501612a0b565b91508082528784828501011115612ac657600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060008060808587031215612afa57600080fd5b84359350602085013592506040850135915060608501356129b181612929565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008060408385031215612c3157600080fd5b505080516020909101519092909150565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215612ca257600080fd5b81516103a981612929565b600060208284031215612cbf57600080fd5b81516103a98161295b565b600060208284031215612cdc57600080fd5b5051919050565b600060a082018783526020878185015260a0604085015281875480845260c0860191508860005282600020935060005b81811015612d385784546001600160a01b031683526001948501949284019201612d13565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020808385031215612d6c57600080fd5b825167ffffffffffffffff80821115612d8457600080fd5b818501915085601f830112612d9857600080fd5b815181811115612daa57612daa6129f5565b8060051b9150612dbb848301612a0b565b8181529183018401918481019088841115612dd557600080fd5b938501935b83851015612df357845182529385019390850190612dda565b98975050505050505050565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612e5d57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600082821015612e9e57612e9e612e76565b500390565b6000816000190483118215151615612ebd57612ebd612e76565b500290565b600082612edf57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612ef757612ef7612e76565b500190565b60005b83811015612f17578181015183820152602001612eff565b83811115612f26576000848401525b50505050565b60008251612f3e818460208701612efc565b9190910192915050565b6020815260008251806020840152612f67816040850160208701612efc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65640000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f619a264697066735822122063236375ab1d7fcbe63a02c9527ef2fdd63c9909ca1c1397814572e00fc1527b64736f6c634300080a0033608060405234801561001057600080fd5b5060405161050e38038061050e83398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b610387806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102ec565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102ec565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061031c565b60405180910390fd5b61010281610210565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061031c565b61016d600061029c565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061031c565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b6102078161029c565b50565b3b151590565b803b61027a5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102fe57600080fd5b81356001600160a01b038116811461031557600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f38851aee149f6cb40aeac6937079313f2718278a6a870226b9aa0f1154da6d064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220290e359b41cd317860188e900ad787ed596340dd51e77de9300f9bed50952b1464736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d32affa667ec2294caac3b1d3873f2063b83cb05ac7f9e61a8f84148830dc61964736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c8063c4d66de8116200006e578063c4d66de81462000156578063d95a4d93146200016d578063e940325614620001a0578063ecb0394314620001b7578063f9d9331d14620001ce57600080fd5b8063081e3eda14620000b0578063430004c114620000c657806351bdca3e14620000f357806363453ae114620001265780637c770aae146200013f575b600080fd5b6002546040519081526020015b60405180910390f35b620000dd620000d736600462001291565b620001fa565b60408051928352602083019190915201620000bd565b6200010a62000104366004620012eb565b6200034f565b60408051938452602084019290925290820152606001620000bd565b6200013d6200013736600462001329565b62000411565b005b6200010a6200015036600462001349565b6200051b565b6200013d6200016736600462001329565b620008c6565b60005462000187906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001620000bd565b6200010a620001b136600462001329565b62000a73565b62000187620001c8366004620013a4565b62000b32565b62000187620001df36600462001329565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b0384811660009081526001602052604081205490918291166200026b5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e74206578697374000000000060448201526064015b60405180910390fd5b6001600160a01b038681166000908152600160205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af1158015620002db573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003019190620013be565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526001602052604081205490918291829116156200040a576001600160a01b0384811660009081526001602052604090819020549051630103c92b60e01b81528783166004820152911690630103c92b90602401602060405180830381865afa158015620003d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f69190620013e3565b925062000404848462000b5d565b90925090505b9250925092565b6001600160a01b03818116600090815260016020526040902054166200047a5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e742065786973740000000000604482015260640162000262565b6001600160a01b0380821660009081526001602052604080822054815163e4fc6b6d60e01b8152915193169263e4fc6b6d9260048084019391929182900301818387803b158015620004cb57600080fd5b505af1158015620004e0573d6000803e3d6000fd5b50506040516001600160a01b03841692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a250565b6001600160a01b0382811660009081526001602052604081205490918291829116620005b5576200054c8562000e85565b6001600160a01b03808716600081815260016020819052604082208054959094166001600160a01b03199586161790935560028054938401815590527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180549092161790555b87156200066b576001600160a01b03808616600090815260016020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa15801562000613573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006399190620013fd565b6001600160a01b038088166000908152600160205260409020549192506200066991818416913391168c62000f53565b505b861562000722576001600160a01b038086166000908152600160209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa158015620006ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f09190620013fd565b6001600160a01b038088166000908152600160205260409020549192506200072091818416913391168b62000f53565b505b8515620007d9576001600160a01b03808616600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000781573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a79190620013fd565b6001600160a01b03808816600090815260016020526040902054919250620007d791818416913391168a62000f53565b505b6001600160a01b038581166000908152600160205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af11580156200084a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087091906200141d565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b600054610100900460ff1680620008e0575060005460ff16155b620009455760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000262565b600054610100900460ff1615801562000968576000805461ffff19166101011790555b600060405162000978906200123f565b604051809103906000f08015801562000995573d6000803e3d6000fd5b50604051620009a4906200124d565b6001600160a01b039091168152602001604051809103906000f080158015620009d1573d6000803e3d6000fd5b5060405163f2fde38b60e01b81526001600160a01b0385811660048301529192509082169063f2fde38b90602401600060405180830381600087803b15801562000a1a57600080fd5b505af115801562000a2f573d6000803e3d6000fd5b5050600080546001600160a01b03909416620100000262010000600160b01b0319909416939093179092555050801562000a6f576000805461ff00191690555b5050565b6001600160a01b03818116600090815260016020526040812054909182918291161562000b2b576001600160a01b03808516600090815260016020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000af1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b179190620013e3565b925062000b25848462000b5d565b90925090505b9193909250565b6002818154811062000b4357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0382811660009081526001602052604081205490918291161562000e7e576001600160a01b03808516600090815260016020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000bda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c009190620013fd565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c43573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c699190620013e3565b6001600160a01b03808816600090815260016020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562000cc4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cea9190620013fd565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a0823190602401602060405180830381865afa15801562000d33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d599190620013e3565b905062000d738262000d6c888462000fb5565b9062000fca565b6001600160a01b038089166000908152600160209081526040808320548151635f64b55b60e01b81529151959a5092949290931692635f64b55b92600480830193928290030181865afa15801562000dcf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000df59190620013fd565b6040516370a0823160e01b81526001600160a01b03868116600483015291909116906370a0823190602401602060405180830381865afa15801562000e3e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e649190620013e3565b905062000e778362000d6c898462000fb5565b9450505050505b9250929050565b60008054604080516001600160a01b0385811660248301523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b179052915184936201000090049092169162000eeb906200125b565b62000ef8929190620014a9565b604051809103906000f08015801562000f15573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905262000faf90859062000fd8565b50505050565b600062000fc38284620014cf565b9392505050565b600062000fc38284620014fd565b60006200102f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620010b69092919063ffffffff16565b805190915015620010b1578080602001905181019062001050919062001520565b620010b15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000262565b505050565b6060620010c78484600085620010cf565b949350505050565b606082471015620011325760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000262565b843b620011825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000262565b600080866001600160a01b03168587604051620011a0919062001540565b60006040518083038185875af1925050503d8060008114620011df576040519150601f19603f3d011682016040523d82523d6000602084013e620011e4565b606091505b5091509150620011f682828662001201565b979650505050505050565b606083156200121257508162000fc3565b825115620012235782518084602001fd5b8160405162461bcd60e51b81526004016200026291906200155e565b613042806200157483390190565b61050e80620045b683390190565b6109668062004ac483390190565b6001600160a01b03811681146200127f57600080fd5b50565b80151581146200127f57600080fd5b60008060008060808587031215620012a857600080fd5b8435620012b58162001269565b9350602085013592506040850135620012ce8162001282565b91506060850135620012e08162001269565b939692955090935050565b60008060408385031215620012ff57600080fd5b82356200130c8162001269565b915060208301356200131e8162001269565b809150509250929050565b6000602082840312156200133c57600080fd5b813562000fc38162001269565b600080600080600060a086880312156200136257600080fd5b8535945060208601359350604086013592506060860135620013848162001269565b91506080860135620013968162001269565b809150509295509295909350565b600060208284031215620013b757600080fd5b5035919050565b60008060408385031215620013d257600080fd5b505080516020909101519092909150565b600060208284031215620013f657600080fd5b5051919050565b6000602082840312156200141057600080fd5b815162000fc38162001269565b6000806000606084860312156200143357600080fd5b8351925060208401519150604084015190509250925092565b60005b83811015620014695781810151838201526020016200144f565b8381111562000faf5750506000910152565b60008151808452620014958160208601602086016200144c565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620010c7908301846200147b565b6000816000190483118215151615620014f857634e487b7160e01b600052601160045260246000fd5b500290565b6000826200151b57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200153357600080fd5b815162000fc38162001282565b60008251620015548184602087016200144c565b9190910192915050565b60208152600062000fc360208301846200147b56fe60a06040523060805234801561001457600080fd5b506001606555608051612ff861004a600039600081816103f10152818161043a015281816114aa01526114ea0152612ff86000f3fe6080604052600436106100f35760003560e01c80635f64b55b1161008a578063aa7b83e311610059578063aa7b83e314610295578063e4fc6b6d146102b5578063f2fde38b146102ca578063fad3cc4b146102ea57600080fd5b80635f64b55b146102225780636b8ba92c14610242578063715018a6146102625780638da5cb5b1461027757600080fd5b8063430004c1116100c6578063430004c11461019a578063452ed4f1146101cf578063485cc955146101ef5780634f1ef2861461020f57600080fd5b80630103c92b146100f85780630fc63d101461012b578063168a4822146101635780633659cfe614610178575b600080fd5b34801561010457600080fd5b5061011861011336600461293e565b610325565b6040519081526020015b60405180910390f35b34801561013757600080fd5b50606a5461014b906001600160a01b031681565b6040516001600160a01b039091168152602001610122565b34801561016f57600080fd5b506101186103b0565b34801561018457600080fd5b5061019861019336600461293e565b6103e6565b005b3480156101a657600080fd5b506101ba6101b5366004612969565b6104b8565b60408051928352602083019190915201610122565b3480156101db57600080fd5b5060695461014b906001600160a01b031681565b3480156101fb57600080fd5b5061019861020a3660046129bc565b61076d565b61019861021d366004612a3c565b61149f565b34801561022e57600080fd5b50606b5461014b906001600160a01b031681565b34801561024e57600080fd5b5060675461014b906001600160a01b031681565b34801561026e57600080fd5b50610198611559565b34801561028357600080fd5b506033546001600160a01b031661014b565b3480156102a157600080fd5b5060685461014b906001600160a01b031681565b3480156102c157600080fd5b5061019861158f565b3480156102d657600080fd5b506101986102e536600461293e565b611ca8565b3480156102f657600080fd5b5061030a610305366004612ae4565b611d40565b60408051938452602084019290925290820152606001610122565b6001600160a01b038116600090815260746020526040812054607254829161038391670de0b6b3a76400009161037d9161035e91612016565b6001600160a01b03871660009081526073602052604090205490612022565b9061202e565b6001600160a01b0384166000908152607360205260409020549091506103a9908261203a565b9392505050565b60006103e16103d8670de0b6b3a764000061037d60725460715461202290919063ffffffff16565b6071549061203a565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104385760405162461bcd60e51b815260040161042f90612b1a565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661046a612046565b6001600160a01b0316146104905760405162461bcd60e51b815260040161042f90612b66565b61049981612074565b604080516000808252602082019092526104b59183919061209e565b50565b600080336001600160a01b03166104d76033546001600160a01b031690565b6001600160a01b0316146104fd5760405162461bcd60e51b815260040161042f90612bb2565b600260655414156105205760405162461bcd60e51b815260040161042f90612be7565b60026065556001600160a01b03861660009081526073602052604090205461059a5760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b606482015260840161042f565b60006105a5876121e9565b905060006105b38288612016565b90508015610654576001600160a01b03881660009081526073602090815260408083208490556072546074909252909120556071546105f2908261203a565b607155606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b15801561063b57600080fd5b505af115801561064f573d6000803e3d6000fd5b505050505b851561067f57606954610671906001600160a01b0316868961229e565b60008093509350505061075d565b606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163baa2abde916001600160a01b0391821691168a6000808b6106bf4261025861203a565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af1158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190612c1e565b909450925050505b6001606555909590945092505050565b600054610100900460ff1680610786575060005460ff16155b6107a25760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff161580156107c4576000805461ffff19166101011790555b6107cc6122f0565b6107d582611ca8565b606c80546001600160a01b0319166001600160a01b038516908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190612c90565b606980546001600160a01b0319166001600160a01b03928316179055606c54604080516317f4408360e21b815290519190921691635fd1020c9160048083019260209291908290030181865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190612c90565b606780546001600160a01b0319166001600160a01b03928316179055606c5460408051634462633360e11b8152905191909216916388c4c6669160048083019260209291908290030181865afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190612c90565b606880546001600160a01b0319166001600160a01b0392831617905560695460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190612c90565b606a80546001600160a01b0319166001600160a01b039283161790556069546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190612c90565b606b80546001600160a01b0319166001600160a01b03928316179055606a54600080516020612fa383398151915291161415610b0b57604080518082019091526067546001600160a01b03168152600080516020612fa38339815191526020820152610aca90606d9060026128af565b50604080518082019091526068546001600160a01b03168152600080516020612fa38339815191526020820152610b0590606f9060026128af565b50610de5565b606754606a546001600160a01b03908116911614610c7b57606a5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa158015610b96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bba9190612c90565b6001600160a01b03161415610c3257604080516080810182526067546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606a549091166060820152610c2c90606d9060046128af565b50610c7b565b604080516060810182526067546001600160a01b039081168252600080516020612fa38339815191526020830152606a541691810191909152610c7990606d9060036128af565b505b606854606a546001600160a01b03908116911614610de557606a5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190612c90565b6001600160a01b03161415610d9c57604080516080810182526068546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606a549091166060820152610b0590606f9060046128af565b604080516060810182526068546001600160a01b039081168252600080516020612fa38339815191526020830152606a541691810191909152610de390606f9060036128af565b505b606b546001600160a01b0316600080516020612fa38339815191521415610e8157604080518082019091526067546001600160a01b03168152600080516020612fa38339815191526020820152610e4090606e9060026128af565b50604080518082019091526068546001600160a01b03168152600080516020612fa38339815191526020820152610e7b9060709060026128af565b5061115b565b606754606b546001600160a01b03908116911614610ff157606b5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f309190612c90565b6001600160a01b03161415610fa857604080516080810182526067546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606b549091166060820152610fa290606e9060046128af565b50610ff1565b604080516060810182526067546001600160a01b039081168252600080516020612fa38339815191526020830152606b541691810191909152610fef90606e9060036128af565b505b606854606b546001600160a01b0390811691161461115b57606b5460405163e6a4390560e01b8152600080516020612fa383398151915260048201526001600160a01b039091166024820152600090735757371414417b8c6caad45baef941abc7d3ab329063e6a4390590604401602060405180830381865afa15801561107c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a09190612c90565b6001600160a01b0316141561111257604080516080810182526068546001600160a01b039081168252600080516020612fa3833981519152602083015273831753dd7087cac61ab5644b308642cc1c33dc1392820192909252606b549091166060820152610e7b9060709060046128af565b604080516060810182526068546001600160a01b039081168252600080516020612fa38339815191526020830152606b5416918101919091526111599060709060036128af565b505b60695460405163095ea7b360e01b81526001600160a01b0385811660048301526000196024830181905292169063095ea7b3906044016020604051808303816000875af11580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190612cad565b5060695460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561123a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125e9190612cad565b5060675460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af11580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190612cad565b5060685460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af115801561134e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113729190612cad565b50606a5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af11580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc9190612cad565b50606b5460405163095ea7b360e01b815273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015611462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114869190612cad565b5050801561149a576000805461ff00191690555b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156114e85760405162461bcd60e51b815260040161042f90612b1a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661151a612046565b6001600160a01b0316146115405760405162461bcd60e51b815260040161042f90612b66565b61154982612074565b6115558282600161209e565b5050565b6033546001600160a01b031633146115835760405162461bcd60e51b815260040161042f90612bb2565b61158d600061236b565b565b6033546001600160a01b031633146115b95760405162461bcd60e51b815260040161042f90612bb2565b600260655414156115dc5760405162461bcd60e51b815260040161042f90612be7565b60026065556071546116405760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b606482015260840161042f565b606c60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561169057600080fd5b505af11580156116a4573d6000803e3d6000fd5b50506067546040516370a0823160e01b81523060048201526000935061171d92506002916001600160a01b0316906370a08231906024015b602060405180830381865afa1580156116f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190612cca565b6068546040516370a0823160e01b815230600482015291925060009161175a916002916001600160a01b03909116906370a08231906024016116dc565b606754606a549192506001600160a01b0391821691161461180a5773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed1739836000606d306117a14261025861203a565b6040518663ffffffff1660e01b81526004016117c1959493929190612ce3565b6000604051808303816000875af11580156117e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118089190810190612d59565b505b606754606b546001600160a01b039081169116146118b75773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed1739836000606e3061184e4261025861203a565b6040518663ffffffff1660e01b815260040161186e959493929190612ce3565b6000604051808303816000875af115801561188d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118b59190810190612d59565b505b606854606a546001600160a01b039081169116146119645773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed1739826000606f306118fb4261025861203a565b6040518663ffffffff1660e01b815260040161191b959493929190612ce3565b6000604051808303816000875af115801561193a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119629190810190612d59565b505b606854606b546001600160a01b03908116911614611a115773a5e0829caced8ffdd4de3c43696c57f7d7a678ff6338ed17398260006070306119a84261025861203a565b6040518663ffffffff1660e01b81526004016119c8959493929190612ce3565b6000604051808303816000875af11580156119e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a0f9190810190612d59565b505b606a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7e9190612cca565b606b546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af09190612cca565b606a54606b5491925073a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b039081169116858560018030611b344261025861203a565b6040518963ffffffff1660e01b8152600401611b57989796959493929190612dff565b6060604051808303816000875af1158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9a9190612e48565b50506069546040516370a0823160e01b8152306004820152600092506001600160a01b03909116906370a0823190602401602060405180830381865afa158015611be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0c9190612cca565b90508015611c9c57607154611c3a90611c319061037d670de0b6b3a764000085612022565b6072549061203a565b607255606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611c8357600080fd5b505af1158015611c97573d6000803e3d6000fd5b505050505b50506001606555505050565b6033546001600160a01b03163314611cd25760405162461bcd60e51b815260040161042f90612bb2565b6001600160a01b038116611d375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b6104b58161236b565b60008080336001600160a01b0316611d606033546001600160a01b031690565b6001600160a01b031614611d865760405162461bcd60e51b815260040161042f90612bb2565b60026065541415611da95760405162461bcd60e51b815260040161042f90612be7565b60026065556001600160a01b03841660009081526073602052604081205415611dd857611dd5856121e9565b90505b60008089118015611de95750600088115b15611e9d57606a54606b5473a5e0829caced8ffdd4de3c43696c57f7d7a678ff9163e8e33700916001600160a01b0391821691168c8c60008030611e2f4261025861203a565b6040518963ffffffff1660e01b8152600401611e52989796959493929190612dff565b6060604051808303816000875af1158015611e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e959190612e48565b919650945090505b6000611ea9828961203a565b11611ef65760405162461bcd60e51b815260206004820152601860248201527f54686520616d6f756e742070726f766964656420697320300000000000000000604482015260640161042f565b6000611f0c83611f06848b61203a565b9061203a565b6001600160a01b0388166000908152607360209081526040808320849055607254607490925290912055607154909150611f46908261203a565b607155606c5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611f8f57600080fd5b505af1158015611fa3573d6000803e3d6000fd5b50505050611fd187611fbe888d61201690919063ffffffff16565b606a546001600160a01b0316919061229e565b611ff287611fdf8b88612016565b606b546001600160a01b0316919061229e565b8585611ffe848b61203a565b6001606555919c909b50909950975050505050505050565b60006103a98284612e8c565b60006103a98284612ea3565b60006103a98284612ec2565b60006103a98284612ee4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6033546001600160a01b031633146104b55760405162461bcd60e51b815260040161042f90612bb2565b60006120a8612046565b90506120b3846123bd565b6000835111806120c05750815b156120d1576120cf8484612462565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff166121e257805460ff191660011781556040516001600160a01b038316602482015261215090869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052612462565b50805460ff19168155612161612046565b6001600160a01b0316826001600160a01b0316146121d95760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b606482015260840161042f565b6121e285612487565b5050505050565b6000806121f583610325565b6001600160a01b03841660009081526073602052604090205460715491925061221e9190612016565b607155606c54604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561226757600080fd5b505af115801561227b573d6000803e3d6000fd5b5050506001600160a01b0390931660009081526073602052604081205592915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261149a9084906124c7565b600054610100900460ff1680612309575060005460ff16155b6123255760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff16158015612347576000805461ffff19166101011790555b61234f612599565b612357612603565b80156104b5576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803b6124215760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161042f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60606103a98383604051806060016040528060278152602001612f7c60279139612663565b612490816123bd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600061251c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127379092919063ffffffff16565b80519091501561149a578080602001905181019061253a9190612cad565b61149a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161042f565b600054610100900460ff16806125b2575060005460ff16155b6125ce5760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff16158015612357576000805461ffff191661010117905580156104b5576000805461ff001916905550565b600054610100900460ff168061261c575060005460ff16155b6126385760405162461bcd60e51b815260040161042f90612c42565b600054610100900460ff1615801561265a576000805461ffff19166101011790555b6123573361236b565b6060833b6126c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161042f565b600080856001600160a01b0316856040516126dd9190612f2c565b600060405180830381855af49150503d8060008114612718576040519150601f19603f3d011682016040523d82523d6000602084013e61271d565b606091505b509150915061272d82828661274e565b9695505050505050565b60606127468484600085612787565b949350505050565b6060831561275d5750816103a9565b82511561276d5782518084602001fd5b8160405162461bcd60e51b815260040161042f9190612f48565b6060824710156127e85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161042f565b843b6128365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161042f565b600080866001600160a01b031685876040516128529190612f2c565b60006040518083038185875af1925050503d806000811461288f576040519150601f19603f3d011682016040523d82523d6000602084013e612894565b606091505b50915091506128a482828661274e565b979650505050505050565b828054828255906000526020600020908101928215612904579160200282015b8281111561290457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906128cf565b50612910929150612914565b5090565b5b808211156129105760008155600101612915565b6001600160a01b03811681146104b557600080fd5b60006020828403121561295057600080fd5b81356103a981612929565b80151581146104b557600080fd5b6000806000806080858703121561297f57600080fd5b843561298a81612929565b93506020850135925060408501356129a18161295b565b915060608501356129b181612929565b939692955090935050565b600080604083850312156129cf57600080fd5b82356129da81612929565b915060208301356129ea81612929565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612a3457612a346129f5565b604052919050565b60008060408385031215612a4f57600080fd5b8235612a5a81612929565b915060208381013567ffffffffffffffff80821115612a7857600080fd5b818601915086601f830112612a8c57600080fd5b813581811115612a9e57612a9e6129f5565b612ab0601f8201601f19168501612a0b565b91508082528784828501011115612ac657600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060008060808587031215612afa57600080fd5b84359350602085013592506040850135915060608501356129b181612929565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008060408385031215612c3157600080fd5b505080516020909101519092909150565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215612ca257600080fd5b81516103a981612929565b600060208284031215612cbf57600080fd5b81516103a98161295b565b600060208284031215612cdc57600080fd5b5051919050565b600060a082018783526020878185015260a0604085015281875480845260c0860191508860005282600020935060005b81811015612d385784546001600160a01b031683526001948501949284019201612d13565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020808385031215612d6c57600080fd5b825167ffffffffffffffff80821115612d8457600080fd5b818501915085601f830112612d9857600080fd5b815181811115612daa57612daa6129f5565b8060051b9150612dbb848301612a0b565b8181529183018401918481019088841115612dd557600080fd5b938501935b83851015612df357845182529385019390850190612dda565b98975050505050505050565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612e5d57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600082821015612e9e57612e9e612e76565b500390565b6000816000190483118215151615612ebd57612ebd612e76565b500290565b600082612edf57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612ef757612ef7612e76565b500190565b60005b83811015612f17578181015183820152602001612eff565b83811115612f26576000848401525b50505050565b60008251612f3e818460208701612efc565b9190910192915050565b6020815260008251806020840152612f67816040850160208701612efc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65640000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f619a264697066735822122063236375ab1d7fcbe63a02c9527ef2fdd63c9909ca1c1397814572e00fc1527b64736f6c634300080a0033608060405234801561001057600080fd5b5060405161050e38038061050e83398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b610387806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102ec565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102ec565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061031c565b60405180910390fd5b61010281610210565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061031c565b61016d600061029c565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061031c565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b6102078161029c565b50565b3b151590565b803b61027a5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102fe57600080fd5b81356001600160a01b038116811461031557600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f38851aee149f6cb40aeac6937079313f2718278a6a870226b9aa0f1154da6d064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220290e359b41cd317860188e900ad787ed596340dd51e77de9300f9bed50952b1464736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d32affa667ec2294caac3b1d3873f2063b83cb05ac7f9e61a8f84148830dc61964736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10123:51",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:51",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:51",
                "type": ""
              }
            ],
            "src": "14:177:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:86:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "264:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "275:5:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:3:51",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "295:1:51",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "286:3:51"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "286:11:51"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "282:19:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "271:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:31:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "261:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:42:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:51"
                  },
                  "nodeType": "YulIf",
                  "src": "251:70:51"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "230:5:51",
                "type": ""
              }
            ],
            "src": "196:131:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "374:76:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "397:5:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:51"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:6:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "411:13:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "404:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "404:21:51"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "394:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "394:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "387:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "387:40:51"
                  },
                  "nodeType": "YulIf",
                  "src": "384:60:51"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "363:5:51",
                "type": ""
              }
            ],
            "src": "332:118:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "573:474:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "620:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "629:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "632:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "622:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "622:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "622:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "594:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "603:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "590:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "590:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "615:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "586:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:33:51"
                  },
                  "nodeType": "YulIf",
                  "src": "583:53:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "645:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "671:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "658:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "649:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "715:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "690:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "690:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "690:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "730:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "740:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "730:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "754:42:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "764:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:32:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "805:47:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "837:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "848:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "820:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:32:51"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "809:7:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "883:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "861:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "861:30:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "900:17:51",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "910:7:51"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "900:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "926:47:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "958:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "969:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "954:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "941:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:32:51"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "930:7:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1007:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "982:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:33:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:33:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1024:17:51",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1034:7:51"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1024:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "515:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "526:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "538:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "546:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "554:6:51",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "562:6:51",
                "type": ""
              }
            ],
            "src": "455:592:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:119:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1203:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1191:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1244:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:25:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:25:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1271:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1282:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1267:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1267:18:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1287:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1260:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1260:34:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1153:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1172:4:51",
                "type": ""
              }
            ],
            "src": "1052:248:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:301:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1438:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1447:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1440:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1440:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1440:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1405:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "1402:52:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1463:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1489:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1476:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1467:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1533:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1508:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1508:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1548:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1558:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1572:47:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1604:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1600:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1587:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:32:51"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1576:7:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1653:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1628:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:33:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:33:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:17:51",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1680:7:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1350:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1361:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1373:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1381:6:51",
                "type": ""
              }
            ],
            "src": "1305:388:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:162:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1877:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1907:9:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1918:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:25:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:25:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1961:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1934:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1934:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1988:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1999:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1984:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1984:18:51"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2004:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1977:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1977:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1977:34:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1808:9:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1819:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1827:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1835:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1846:4:51",
                "type": ""
              }
            ],
            "src": "1698:319:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2092:177:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2138:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2147:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2150:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2140:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2140:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2140:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2113:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2109:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2109:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2134:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:52:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2163:36:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2189:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2176:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2176:23:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2167:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2233:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2208:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2208:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2208:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2248:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2258:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2248:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2058:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2069:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2081:6:51",
                "type": ""
              }
            ],
            "src": "2022:247:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2412:456:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2459:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2468:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2471:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2461:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2461:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2461:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2433:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2442:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2454:3:51",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2425:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:33:51"
                  },
                  "nodeType": "YulIf",
                  "src": "2422:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2484:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2507:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2494:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2494:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2484:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2526:42:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2553:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2564:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2549:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2549:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2536:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2536:32:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2526:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2577:42:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2604:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2615:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2600:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2600:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2587:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2587:32:51"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2577:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2628:45:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2658:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2669:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2654:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2654:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2641:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2641:32:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2632:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2707:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2682:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2682:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2722:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2732:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2722:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2746:48:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2778:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2789:3:51",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2774:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2774:19:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2761:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:33:51"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2750:7:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2828:7:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2803:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:33:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2803:33:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2845:17:51",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2855:7:51"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2845:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2346:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2357:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2369:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2377:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2385:6:51",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2393:6:51",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2401:6:51",
                "type": ""
              }
            ],
            "src": "2274:594:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2974:102:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2984:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2996:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3007:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2992:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2992:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2984:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3026:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3041:6:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3057:3:51",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3062:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3053:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3053:11:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3066:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3049:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3049:19:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3037:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3037:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3019:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:51:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3019:51:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2943:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2954:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2965:4:51",
                "type": ""
              }
            ],
            "src": "2873:203:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3151:110:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3197:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3206:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3209:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3199:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3199:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3199:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3172:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3181:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3168:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3168:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3193:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3164:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3164:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "3161:52:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3222:33:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3245:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3232:12:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:23:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3222:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3117:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3128:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3140:6:51",
                "type": ""
              }
            ],
            "src": "3081:180:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3404:102:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3414:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3426:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3437:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3422:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3422:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3414:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3456:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3471:6:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3487:3:51",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3492:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3483:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3483:11:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3496:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3479:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3479:19:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3467:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3467:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3449:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3449:51:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3449:51:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_QuickswapDualFarmUpgradeable_$7519__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3373:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3384:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3395:4:51",
                "type": ""
              }
            ],
            "src": "3266:240:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3685:177:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3702:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3713:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3695:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3695:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3695:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3736:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3747:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3732:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3732:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3752:2:51",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3725:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3725:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3775:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3786:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3771:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3771:18:51"
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3791:29:51",
                        "type": "",
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3764:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3764:57:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3764:57:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3830:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3842:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3853:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3838:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3838:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3830:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3662:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3676:4:51",
                "type": ""
              }
            ],
            "src": "3511:351:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4046:278:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4056:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4068:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4079:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4064:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4064:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4056:4:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4092:29:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4110:3:51",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4115:1:51",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4106:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4106:11:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4119:1:51",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4102:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4102:19:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4096:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4137:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4152:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4160:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4148:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4148:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4130:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4130:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4130:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4184:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4195:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4180:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4180:18:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4200:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4173:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4173:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4173:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4227:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4238:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4223:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4223:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4257:6:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4250:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4250:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4243:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4243:22:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4216:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4216:50:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4216:50:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4286:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4297:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4282:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4282:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4306:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4314:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4302:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4302:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4275:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4275:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4275:43:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3991:9:51",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4002:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4010:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4018:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4026:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4037:4:51",
                "type": ""
              }
            ],
            "src": "3867:457:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4427:147:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4473:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4482:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4485:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4475:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4475:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4475:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4448:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4457:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4444:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4444:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4469:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4440:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4440:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "4437:52:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4498:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4514:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4508:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4508:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4498:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4533:35:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4553:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4564:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4549:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4549:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4543:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:25:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4533:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4385:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4396:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4408:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4416:6:51",
                "type": ""
              }
            ],
            "src": "4329:245:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4660:103:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4706:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4715:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4718:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4708:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4708:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4708:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4681:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4690:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4677:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4677:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4702:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4673:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4673:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "4670:52:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4731:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4747:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4741:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4741:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4731:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4626:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4637:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4649:6:51",
                "type": ""
              }
            ],
            "src": "4579:184:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4849:170:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4895:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4904:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4907:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4897:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4897:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4897:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4870:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4879:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4866:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4866:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4891:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4862:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4862:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "4859:52:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4920:29:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4939:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4933:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4933:16:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4924:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4983:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4958:24:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4958:31:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4958:31:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4998:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5008:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4998:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4815:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4826:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4838:6:51",
                "type": ""
              }
            ],
            "src": "4768:251:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5209:232:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5219:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5231:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5242:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5227:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5227:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5219:4:51"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5262:9:51"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5273:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5255:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5255:25:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5255:25:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5300:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5311:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5296:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5296:18:51"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5316:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5289:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5289:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5289:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5343:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5354:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5339:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5339:18:51"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5359:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5332:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5332:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5332:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5386:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5397:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5382:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5382:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "5406:6:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5422:3:51",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5427:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5418:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5418:11:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5431:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5414:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5414:19:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5402:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5402:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5375:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:60:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5375:60:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5154:9:51",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5165:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5173:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5181:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5189:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5200:4:51",
                "type": ""
              }
            ],
            "src": "5024:417:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5561:191:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5607:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5616:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5619:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5609:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5609:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5609:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5582:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5591:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5578:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5578:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5603:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5574:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5574:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "5571:52:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5632:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5648:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5642:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5642:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5632:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5667:35:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5687:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5698:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5683:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5683:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5677:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5677:25:51"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5667:6:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5711:35:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5731:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5742:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5727:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5727:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5721:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5721:25:51"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5711:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5511:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5522:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5534:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5542:6:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5550:6:51",
                "type": ""
              }
            ],
            "src": "5446:306:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5931:236:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5948:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5959:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5941:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5941:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5941:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5982:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5993:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5978:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5978:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5998:2:51",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5971:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5971:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5971:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6021:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6032:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6017:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6017:18:51"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6037:34:51",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6010:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6010:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6010:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6092:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6103:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6088:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6088:18:51"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6108:16:51",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6081:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6081:44:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6081:44:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6134:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6146:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6157:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6142:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6134:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5908:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5922:4:51",
                "type": ""
              }
            ],
            "src": "5757:410:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6301:175:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6311:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6323:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6334:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6319:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6319:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6311:4:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6346:29:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6364:3:51",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6369:1:51",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6360:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6360:11:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6373:1:51",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6356:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6356:19:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6350:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6391:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6406:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6414:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6402:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6402:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6384:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6384:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6384:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6438:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6449:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6434:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6434:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6458:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6466:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6454:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6454:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6427:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6427:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6427:43:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6262:9:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6273:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6281:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6292:4:51",
                "type": ""
              }
            ],
            "src": "6172:304:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6534:205:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6544:10:51",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6553:1:51",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6548:1:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6613:63:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6638:3:51"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6643:1:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6634:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6634:11:51"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6657:3:51"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6662:1:51"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6653:3:51"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6653:11:51"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6647:5:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6647:18:51"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6627:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6627:39:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6627:39:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6574:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6577:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6571:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6571:13:51"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6585:19:51",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6587:15:51",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6596:1:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6599:2:51",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6592:3:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6592:10:51"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6587:1:51"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6567:3:51",
                    "statements": []
                  },
                  "src": "6563:113:51"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6702:31:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6715:3:51"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6720:6:51"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6711:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6711:16:51"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6729:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6704:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6704:27:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6704:27:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6691:1:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6694:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6688:2:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6688:13:51"
                  },
                  "nodeType": "YulIf",
                  "src": "6685:48:51"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6512:3:51",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6517:3:51",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6522:6:51",
                "type": ""
              }
            ],
            "src": "6481:258:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6793:208:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6803:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6823:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6817:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6817:12:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6807:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6845:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6850:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6838:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6838:19:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6838:19:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6892:5:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6899:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6888:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6888:16:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6910:3:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6915:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6906:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6906:14:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6922:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6866:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6866:63:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6866:63:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6938:57:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6953:3:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6966:6:51"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6974:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6962:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6962:15:51"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6983:2:51",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6979:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6979:7:51"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6958:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6958:29:51"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6949:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6949:39:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6990:4:51",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6945:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6945:50:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6938:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6770:5:51",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6777:3:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6785:3:51",
                "type": ""
              }
            ],
            "src": "6744:257:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7153:167:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7170:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7185:6:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7201:3:51",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7206:1:51",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7197:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7197:11:51"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7210:1:51",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7193:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7193:19:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7181:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7181:32:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7163:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7163:51:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7163:51:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7234:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7245:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7230:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7230:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7250:2:51",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7223:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7223:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7223:30:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7262:52:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7287:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7299:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7310:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7295:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7295:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "7270:16:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7270:44:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7262:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7114:9:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7125:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7133:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7144:4:51",
                "type": ""
              }
            ],
            "src": "7006:314:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7482:218:51",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7492:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7504:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7515:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7500:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7500:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7492:4:51"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7527:29:51",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7545:3:51",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7550:1:51",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7541:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7541:11:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7554:1:51",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7537:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7537:19:51"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7531:2:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7572:9:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7587:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7595:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7583:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7583:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7565:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7565:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7565:34:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7619:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7630:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7615:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7615:18:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7639:6:51"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7647:2:51"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7635:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7635:15:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7608:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7608:43:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7608:43:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7671:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7682:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7667:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7667:18:51"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7687:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7660:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7660:34:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7660:34:51"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7435:9:51",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7446:6:51",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7454:6:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7462:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7473:4:51",
                "type": ""
              }
            ],
            "src": "7325:375:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7757:213:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7824:111:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7845:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7852:3:51",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7857:10:51",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7848:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7848:20:51"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7838:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7838:31:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7838:31:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7889:1:51",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7892:4:51",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7882:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7882:15:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7882:15:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7917:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7920:4:51",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7910:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7910:15:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7910:15:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7788:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7781:6:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7781:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7774:6:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7774:17:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7796:1:51"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7807:1:51",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7803:3:51"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7803:6:51"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7811:1:51"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7799:3:51"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7799:14:51"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7793:2:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7793:21:51"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7770:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7770:45:51"
                  },
                  "nodeType": "YulIf",
                  "src": "7767:168:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7944:20:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7959:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7962:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7955:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7955:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7944:7:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7736:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7739:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7745:7:51",
                "type": ""
              }
            ],
            "src": "7705:265:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8021:171:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8052:111:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8073:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8080:3:51",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8085:10:51",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8076:3:51"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8076:20:51"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8066:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8066:31:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8066:31:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8117:1:51",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8120:4:51",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8110:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8110:15:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8110:15:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8145:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8148:4:51",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8138:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8138:15:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8138:15:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8041:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8034:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8034:9:51"
                  },
                  "nodeType": "YulIf",
                  "src": "8031:132:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8172:14:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8181:1:51"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8184:1:51"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8177:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8177:9:51"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8172:1:51"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8006:1:51",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8009:1:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8015:1:51",
                "type": ""
              }
            ],
            "src": "7975:217:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8275:167:51",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8321:16:51",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8330:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8333:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8323:6:51"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8323:12:51"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8323:12:51"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8296:7:51"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8305:9:51"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8292:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8292:23:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8317:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8288:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8288:32:51"
                  },
                  "nodeType": "YulIf",
                  "src": "8285:52:51"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8346:29:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8365:9:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8359:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8359:16:51"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8350:5:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8406:5:51"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "8384:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8384:28:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8384:28:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8421:15:51",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8431:5:51"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8421:6:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8241:9:51",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8252:7:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8264:6:51",
                "type": ""
              }
            ],
            "src": "8197:245:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8621:232:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8638:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8649:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8631:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8631:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8631:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8672:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8683:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8668:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8668:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8688:2:51",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8661:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8661:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8661:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8711:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8722:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8707:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8707:18:51"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8727:34:51",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8700:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8700:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8700:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8782:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8793:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8778:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8778:18:51"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8798:12:51",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8771:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8771:40:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8771:40:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8820:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8832:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8843:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8828:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8828:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8820:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8598:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8612:4:51",
                "type": ""
              }
            ],
            "src": "8447:406:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9032:228:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9049:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9060:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9042:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9042:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9083:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9094:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9079:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9079:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9099:2:51",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9072:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9072:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9072:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9122:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9133:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9118:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9118:18:51"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9138:34:51",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9111:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9111:62:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9111:62:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9193:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9204:2:51",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9189:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9189:18:51"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9209:8:51",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9182:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9182:36:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9182:36:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9227:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9239:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9250:3:51",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9235:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9235:19:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9227:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9009:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9023:4:51",
                "type": ""
              }
            ],
            "src": "8858:402:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9439:179:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9456:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9467:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9449:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9449:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9449:21:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9490:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9501:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9486:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9486:18:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9506:2:51",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9479:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9479:30:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9479:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9529:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9540:2:51",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9525:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9525:18:51"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9545:31:51",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9518:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9518:59:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9518:59:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9586:26:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9598:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9609:2:51",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9594:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9594:18:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9586:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9416:9:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9430:4:51",
                "type": ""
              }
            ],
            "src": "9265:353:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9760:137:51",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9770:27:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9790:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9784:5:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9784:13:51"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9774:6:51",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9832:6:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9840:4:51",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9828:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9828:17:51"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9847:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9852:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9806:21:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9806:53:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9806:53:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9868:23:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9879:3:51"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9884:6:51"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9875:3:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9875:16:51"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9868:3:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9736:3:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9741:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9752:3:51",
                "type": ""
              }
            ],
            "src": "9623:274:51"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10023:98:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10040:9:51"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10051:2:51",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10033:6:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10033:21:51"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10033:21:51"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10063:52:51",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10088:6:51"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10100:9:51"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10111:2:51",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10096:3:51"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10096:18:51"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "10071:16:51"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10071:44:51"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10063:4:51"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9992:9:51",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10003:6:51",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10014:4:51",
                "type": ""
              }
            ],
            "src": "9902:219:51"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_QuickswapDualFarmUpgradeable_$7519__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"The given pool doesnt exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 51,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "420:7351:21:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "420:7351:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6170:94;6242:7;:14;6170:94;;160:25:51;;;148:2;133:18;6170:94:21;;;;;;;;3928:407;;;;;;:::i;:::-;;:::i;:::-;;;;1226:25:51;;;1282:2;1267:18;;1260:34;;;;1199:18;3928:407:21;1052:248:51;5070:346:21;;;;;;:::i;:::-;;:::i;:::-;;;;1900:25:51;;;1956:2;1941:18;;1934:34;;;;1984:18;;;1977:34;1888:2;1873:18;5070:346:21;1698:319:51;4473:236:21;;;;;;:::i;:::-;;:::i;:::-;;2203:1197;;;;;;:::i;:::-;;:::i;1254:268::-;;;;;;:::i;:::-;;:::i;827:25::-;;;;;;;;-1:-1:-1;;;;;827:25:21;;;;;;-1:-1:-1;;;;;3037:32:51;;;3019:51;;3007:2;2992:18;827:25:21;2873:203:51;5777:385:21;;;;;;:::i;:::-;;:::i;905:24::-;;;;;;:::i;:::-;;:::i;861:37::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;861:37:21;;;3928:407;-1:-1:-1;;;;;4090:20:21;;;4038:15;4090:20;;;:5;:20;;;;;;4038:15;;;;4090:20;4082:80;;;;-1:-1:-1;;;4082:80:21;;3713:2:51;4082:80:21;;;3695:21:51;3752:2;3732:18;;;3725:30;3791:29;3771:18;;;3764:57;3838:18;;4082:80:21;;;;;;;;;-1:-1:-1;;;;;4194:20:21;;;;;;;:5;:20;;;;;;;;:72;;-1:-1:-1;;;4194:72:21;;4224:10;4194:72;;;4130:34:51;4180:18;;;4173:34;;;4250:14;;4243:22;4223:18;;;4216:50;4302:15;;;4282:18;;;4275:43;4194:20:21;;;:29;;4064:19:51;;4194:72:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4283:43;;160:25:51;;;4173:93:21;;-1:-1:-1;4173:93:21;-1:-1:-1;;;;;;4283:43:21;;;4292:10;;4283:43;;148:2:51;133:18;4283:43:21;;;;;;;3928:407;;;;;;;:::o;5070:346::-;-1:-1:-1;;;;;5217:20:21;;;5153:15;5217:20;;;:5;:20;;;;;;5153:15;;;;;;5217:20;:40;5213:196;;-1:-1:-1;;;;;5284:20:21;;;;;;;:5;:20;;;;;;;;:42;;-1:-1:-1;;;5284:42:21;;3037:32:51;;;5284:42:21;;;3019:51:51;5284:20:21;;;:32;;2992:18:51;;5284:42:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5274:52;;5360:37;5374:13;5389:7;5360:13;:37::i;:::-;5341:56;;-1:-1:-1;5341:56:21;-1:-1:-1;5213:196:21;5070:346;;;;;:::o;4473:236::-;-1:-1:-1;;;;;4544:20:21;;;4581:1;4544:20;;;:5;:20;;;;;;;4536:80;;;;-1:-1:-1;;;4536:80:21;;3713:2:51;4536:80:21;;;3695:21:51;3752:2;3732:18;;;3725:30;3791:29;3771:18;;;3764:57;3838:18;;4536:80:21;3511:351:51;4536:80:21;-1:-1:-1;;;;;4627:20:21;;;;;;;:5;:20;;;;;;;:33;;-1:-1:-1;;;4627:33:21;;;;:20;;;:31;;:33;;;;;:20;;:33;;;;;;:20;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4676:25:21;;-1:-1:-1;;;;;4676:25:21;;;-1:-1:-1;4676:25:21;;-1:-1:-1;4676:25:21;;;4473:236;:::o;2203:1197::-;-1:-1:-1;;;;;2394:20:21;;;2331:13;2394:20;;;:5;:20;;;;;;2331:13;;;;;;2394:20;2391:168;;2478:25;2489:13;2478:10;:25::i;:::-;-1:-1:-1;;;;;2450:20:21;;;;;;;:5;:20;;;;;;;:54;;;;;;-1:-1:-1;;;;;;2450:54:21;;;;;;;2519:7;:27;;;;;;;;;;;;;;;;;;;;;2391:168;2574:11;;2571:207;;-1:-1:-1;;;;;2646:20:21;;;2601:24;2646:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;2646:29:21;;;;2601:24;;2646:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2735:20:21;;;;;;;:5;:20;;;;;;2601:75;;-1:-1:-1;2691:75:21;;:23;;;;2715:10;;2735:20;2758:7;2691:23;:75::i;:::-;2586:192;2571:207;2791:11;;2788:208;;-1:-1:-1;;;;;2863:20:21;;;2818:24;2863:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;2863:29:21;;;;2818:24;;2863:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2952:20:21;;;;;;;:5;:20;;;;;;2818:75;;-1:-1:-1;2908:75:21;;:23;;;;2932:10;;2952:20;2975:7;2908:23;:75::i;:::-;2803:193;2788:208;3009:12;;3006:209;;-1:-1:-1;;;;;3082:20:21;;;3037:24;3082:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;3082:29:21;;;;3037:24;;3082:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3171:20:21;;;;;;;:5;:20;;;;;;3037:75;;-1:-1:-1;3127:76:21;;:23;;;;3151:10;;3171:20;3194:8;3127:23;:76::i;:::-;3022:193;3006:209;-1:-1:-1;;;;;3263:20:21;;;;;;;:5;:20;;;;;;;;:67;;-1:-1:-1;;;3263:67:21;;;;;5255:25:51;;;5296:18;;;5289:34;;;5339:18;;;5332:34;;;5402:32;;;5382:18;;;5375:60;3263:20:21;;;:28;;5227:19:51;;3263:67:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3347:44;;160:25:51;;;3235:95:21;;-1:-1:-1;3235:95:21;;-1:-1:-1;3235:95:21;-1:-1:-1;;;;;;3347:44:21;;;;;;;;;;148:2:51;133:18;3347:44:21;;;;;;;2203:1197;;;;;;;;;:::o;1254:268::-;2030:13:1;;;;;;;;:30;;-1:-1:-1;2048:12:1;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:1;;5959:2:51;2022:89:1;;;5941:21:51;5998:2;5978:18;;;5971:30;6037:34;6017:18;;;6010:62;-1:-1:-1;;;6088:18:51;;;6081:44;6142:19;;2022:89:1;5757:410:51;2022:89:1;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:1;;;;;2168:98;1322:29:21::1;1398:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1354:66;;;;;:::i;:::-;-1:-1:-1::0;;;;;3037:32:51;;;3019:51;;3007:2;2992:18;1354:66:21::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1431:39:21::1;::::0;-1:-1:-1;;;1431:39:21;;-1:-1:-1;;;;;3037:32:51;;;1431:39:21::1;::::0;::::1;3019:51:51::0;1322:98:21;;-1:-1:-1;1431:29:21;;::::1;::::0;::::1;::::0;2992:18:51;;1431:39:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1481:10:21::1;:33:::0;;-1:-1:-1;;;;;1481:33:21;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;1481:33:21;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;2288:66:1;;;;2338:5;2322:21;;-1:-1:-1;;2322:21:1;;;2288:66;2012:348;1254:268:21;:::o;5777:385::-;-1:-1:-1;;;;;5934:20:21;;;5846:23;5934:20;;;:5;:20;;;;;;5846:23;;;;;;5934:20;:40;5930:225;;-1:-1:-1;;;;;6009:20:21;;;;;;;:5;:20;;;;;;;;;;:39;;-1:-1:-1;;;6009:39:21;;;;:20;;;:37;;:39;;;;;:20;:39;;;;;;:20;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5991:57;;6098:45;6112:13;6127:15;6098:13;:45::i;:::-;6063:80;;-1:-1:-1;6063:80:21;-1:-1:-1;5930:225:21;5777:385;;;;;:::o;905:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;905:24:21;;-1:-1:-1;905:24:21;:::o;7101:667::-;-1:-1:-1;;;;;7237:20:21;;;7188:15;7237:20;;;:5;:20;;;;;;7188:15;;;;7237:20;:40;7233:528;;-1:-1:-1;;;;;7311:20:21;;;7294:14;7311:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;7311:29:21;;;;7294:14;;7311:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7294:46;;7355:19;7384:6;-1:-1:-1;;;;;7377:26:21;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7455:20:21;;;7420:25;7455:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;7455:29:21;;;;7355:50;;-1:-1:-1;7420:25:21;;7455:20;;;;;:27;;:29;;;;;:20;:29;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7448:55;;-1:-1:-1;;;7448:55:21;;-1:-1:-1;;;;;3037:32:51;;;7448:55:21;;;3019:51:51;7448:47:21;;;;;;;2992:18:51;;7448:55:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7420:83;-1:-1:-1;7528:48:21;7564:11;7528:31;:8;7420:83;7528:12;:31::i;:::-;:35;;:48::i;:::-;-1:-1:-1;;;;;7628:20:21;;;7593:25;7628:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;7628:29:21;;;;7518:58;;-1:-1:-1;7593:25:21;;7628:20;;;;;:27;;:29;;;;;:20;:29;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7621:55;;-1:-1:-1;;;7621:55:21;;-1:-1:-1;;;;;3037:32:51;;;7621:55:21;;;3019:51:51;7621:47:21;;;;;;;2992:18:51;;7621:55:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7593:83;-1:-1:-1;7701:48:21;7737:11;7701:31;:8;7593:83;7701:12;:31::i;:48::-;7691:58;;7279:482;;;;7233:528;7101:667;;;;;:::o;6357:407::-;6418:7;6488:10;;6513:156;;;-1:-1:-1;;;;;6402:15:51;;;6513:156:21;;;6384:34:51;6649:4:21;6434:18:51;;;;6427:43;;;;6513:156:21;;;;;;;;;;6319:18:51;;;;6513:156:21;;;;;;;-1:-1:-1;;;;;6513:156:21;-1:-1:-1;;;6513:156:21;;;6458:222;;6418:7;;6488:10;;;;;;;6458:222;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6696:28:21;;6438:242;;-1:-1:-1;;;;;;6696:28:21;;;;;;;;6750:5;6357:407;-1:-1:-1;;6357:407:21:o;967:252:3:-;1143:68;;;-1:-1:-1;;;;;7583:15:51;;;1143:68:3;;;7565:34:51;7635:15;;7615:18;;;7608:43;7667:18;;;;7660:34;;;1143:68:3;;;;;;;;;;7500:18:51;;;;1143:68:3;;;;;;;;-1:-1:-1;;;;;1143:68:3;-1:-1:-1;;;1143:68:3;;;1116:96;;1136:5;;1116:19;:96::i;:::-;967:252;;;;:::o;3451:96:19:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3306:717:3:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:3;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:3;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:3;;8649:2:51;3921:85:3;;;8631:21:51;8688:2;8668:18;;;8661:30;8727:34;8707:18;;;8700:62;-1:-1:-1;;;8778:18:51;;;8771:40;8828:19;;3921:85:3;8447:406:51;3921:85:3;3387:636;3306:717;;:::o;3525:223:4:-;3658:12;3689:52;3711:6;3719:4;3725:1;3728:12;3689:21;:52::i;:::-;3682:59;3525:223;-1:-1:-1;;;;3525:223:4:o;4612:499::-;4777:12;4834:5;4809:21;:30;;4801:81;;;;-1:-1:-1;;;4801:81:4;;9060:2:51;4801:81:4;;;9042:21:51;9099:2;9079:18;;;9072:30;9138:34;9118:18;;;9111:62;-1:-1:-1;;;9189:18:51;;;9182:36;9235:19;;4801:81:4;8858:402:51;4801:81:4;1098:20;;4892:60;;;;-1:-1:-1;;;4892:60:4;;9467:2:51;4892:60:4;;;9449:21:51;9506:2;9486:18;;;9479:30;9545:31;9525:18;;;9518:59;9594:18;;4892:60:4;9265:353:51;4892:60:4;4964:12;4978:23;5005:6;-1:-1:-1;;;;;5005:11:4;5024:5;5031:4;5005:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:73;;;;5053:51;5070:7;5079:10;5091:12;5053:16;:51::i;:::-;5046:58;4612:499;-1:-1:-1;;;;;;;4612:499:4:o;6275:692::-;6421:12;6449:7;6445:516;;;-1:-1:-1;6479:10:4;6472:17;;6445:516;6590:17;;:21;6586:365;;6784:10;6778:17;6844:15;6831:10;6827:2;6823:19;6816:44;6586:365;6923:12;6916:20;;-1:-1:-1;;;6916:20:4;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:51:-;-1:-1:-1;;;;;271:31:51;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:118::-;418:5;411:13;404:21;397:5;394:32;384:60;;440:1;437;430:12;455:592;538:6;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;671:9;658:23;690:31;715:5;690:31;:::i;:::-;740:5;-1:-1:-1;792:2:51;777:18;;764:32;;-1:-1:-1;848:2:51;833:18;;820:32;861:30;820:32;861:30;:::i;:::-;910:7;-1:-1:-1;969:2:51;954:18;;941:32;982:33;941:32;982:33;:::i;:::-;455:592;;;;-1:-1:-1;455:592:51;;-1:-1:-1;;455:592:51:o;1305:388::-;1373:6;1381;1434:2;1422:9;1413:7;1409:23;1405:32;1402:52;;;1450:1;1447;1440:12;1402:52;1489:9;1476:23;1508:31;1533:5;1508:31;:::i;:::-;1558:5;-1:-1:-1;1615:2:51;1600:18;;1587:32;1628:33;1587:32;1628:33;:::i;:::-;1680:7;1670:17;;;1305:388;;;;;:::o;2022:247::-;2081:6;2134:2;2122:9;2113:7;2109:23;2105:32;2102:52;;;2150:1;2147;2140:12;2102:52;2189:9;2176:23;2208:31;2233:5;2208:31;:::i;2274:594::-;2369:6;2377;2385;2393;2401;2454:3;2442:9;2433:7;2429:23;2425:33;2422:53;;;2471:1;2468;2461:12;2422:53;2507:9;2494:23;2484:33;;2564:2;2553:9;2549:18;2536:32;2526:42;;2615:2;2604:9;2600:18;2587:32;2577:42;;2669:2;2658:9;2654:18;2641:32;2682:31;2707:5;2682:31;:::i;:::-;2732:5;-1:-1:-1;2789:3:51;2774:19;;2761:33;2803;2761;2803;:::i;:::-;2855:7;2845:17;;;2274:594;;;;;;;;:::o;3081:180::-;3140:6;3193:2;3181:9;3172:7;3168:23;3164:32;3161:52;;;3209:1;3206;3199:12;3161:52;-1:-1:-1;3232:23:51;;3081:180;-1:-1:-1;3081:180:51:o;4329:245::-;4408:6;4416;4469:2;4457:9;4448:7;4444:23;4440:32;4437:52;;;4485:1;4482;4475:12;4437:52;-1:-1:-1;;4508:16:51;;4564:2;4549:18;;;4543:25;4508:16;;4543:25;;-1:-1:-1;4329:245:51:o;4579:184::-;4649:6;4702:2;4690:9;4681:7;4677:23;4673:32;4670:52;;;4718:1;4715;4708:12;4670:52;-1:-1:-1;4741:16:51;;4579:184;-1:-1:-1;4579:184:51:o;4768:251::-;4838:6;4891:2;4879:9;4870:7;4866:23;4862:32;4859:52;;;4907:1;4904;4897:12;4859:52;4939:9;4933:16;4958:31;4983:5;4958:31;:::i;5446:306::-;5534:6;5542;5550;5603:2;5591:9;5582:7;5578:23;5574:32;5571:52;;;5619:1;5616;5609:12;5571:52;5648:9;5642:16;5632:26;;5698:2;5687:9;5683:18;5677:25;5667:35;;5742:2;5731:9;5727:18;5721:25;5711:35;;5446:306;;;;;:::o;6481:258::-;6553:1;6563:113;6577:6;6574:1;6571:13;6563:113;;;6653:11;;;6647:18;6634:11;;;6627:39;6599:2;6592:10;6563:113;;;6694:6;6691:1;6688:13;6685:48;;;-1:-1:-1;;6729:1:51;6711:16;;6704:27;6481:258::o;6744:257::-;6785:3;6823:5;6817:12;6850:6;6845:3;6838:19;6866:63;6922:6;6915:4;6910:3;6906:14;6899:4;6892:5;6888:16;6866:63;:::i;:::-;6983:2;6962:15;-1:-1:-1;;6958:29:51;6949:39;;;;6990:4;6945:50;;6744:257;-1:-1:-1;;6744:257:51:o;7006:314::-;-1:-1:-1;;;;;7181:32:51;;7163:51;;7250:2;7245;7230:18;;7223:30;;;-1:-1:-1;;7270:44:51;;7295:18;;7287:6;7270:44;:::i;7705:265::-;7745:7;7811:1;7807;7803:6;7799:14;7796:1;7793:21;7788:1;7781:9;7774:17;7770:45;7767:168;;;7857:10;7852:3;7848:20;7845:1;7838:31;7892:4;7889:1;7882:15;7920:4;7917:1;7910:15;7767:168;-1:-1:-1;7955:9:51;;7705:265::o;7975:217::-;8015:1;8041;8031:132;;8085:10;8080:3;8076:20;8073:1;8066:31;8120:4;8117:1;8110:15;8148:4;8145:1;8138:15;8031:132;-1:-1:-1;8177:9:51;;7975:217::o;8197:245::-;8264:6;8317:2;8305:9;8296:7;8292:23;8288:32;8285:52;;;8333:1;8330;8323:12;8285:52;8365:9;8359:16;8384:28;8406:5;8384:28;:::i;9623:274::-;9752:3;9790:6;9784:13;9806:53;9852:6;9847:3;9840:4;9832:6;9828:17;9806:53;:::i;:::-;9875:16;;;;;9623:274;-1:-1:-1;;9623:274:51:o;9902:219::-;10051:2;10040:9;10033:21;10014:4;10071:44;10111:2;10100:9;10096:18;10088:6;10071:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {QuickswapDualFarmUpgradeable as Farm, SafeMath, IERC20, IERC20Upgradeable, SafeERC20Upgradeable, IUniswapV2Pair, Initializable} from \"./farms/QuickswapDualFarmUpgradeable.sol\"; \r\n\r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\r\n\r\ncontract QuickswapDualFarmFactoryBeacon is Initializable{\r\n    using SafeMath for uint256; \r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    /**\r\n     * @dev Contract Variables:\r\n     * farmBeacon - Farm contract implementation.\r\n     *\r\n     * Farms - Links {lpPools} to the deployed Farm contract.\r\n     * lpPools - List of pools that have corresponding deployed Farm contract.\r\n     */\r\n    address public farmBeacon;\r\n\r\n    mapping(address => Farm) public Farms;\r\n    address[] public lpPools;\r\n\r\n    event FarmDeployed(address indexed farmAddress);\r\n    event Deposit(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Withdraw(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Distribute(address indexed lpPool);\r\n\r\n    // ============ Methods ============\r\n\r\n    function initialize(address upgrader) public initializer {\r\n        UpgradeableBeacon _farmBeacon = new UpgradeableBeacon(\r\n            address(new Farm())\r\n        );\r\n        _farmBeacon.transferOwnership(upgrader);\r\n        farmBeacon = address(_farmBeacon);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\r\n     * @param amountA  - Token A amount to deposit.\r\n     * @param amountB -  Token B amount to deposit.\r\n     * @param amountLP - LP Token amount to deposit.\r\n     * @param lpStakingPool - Address of the pool to deposit tokens in.\r\n     * @param recipient - Address which will recieve the deposit and leftover tokens.\r\n     \r\n     * @return sentA - Token A amount sent to the farm.\r\n     * @return sentB - Token B amount sent to the farm.\r\n     * @return liquidity - Total liquidity sent to the farm (in lpTokens).\r\n     */\r\n    function deposit(uint256 amountA, uint256 amountB, uint256 amountLP, address lpStakingPool, address recipient) external returns(uint256 sentA, uint256 sentB, uint256 liquidity) {\r\n        if(Farms[lpStakingPool] == Farm(address(0))){\r\n            Farms[lpStakingPool] = Farm(createFarm(lpStakingPool));\r\n            lpPools.push(lpStakingPool); \r\n        }\r\n\r\n        if(amountA > 0){\r\n            IERC20Upgradeable tokenA = IERC20Upgradeable(Farms[lpStakingPool].tokenA());\r\n            tokenA.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountA);\r\n        }\r\n        if(amountB > 0){\r\n            IERC20Upgradeable tokenB = IERC20Upgradeable(Farms[lpStakingPool].tokenB());\r\n            tokenB.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountB); \r\n        }\r\n        if(amountLP > 0){\r\n            IERC20Upgradeable lpPair = IERC20Upgradeable(Farms[lpStakingPool].lpPair());\r\n            lpPair.safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountLP);\r\n        }\r\n        \r\n        (sentA, sentB, liquidity) = Farms[lpStakingPool].deposit(amountA, amountB, amountLP, recipient); \r\n        emit Deposit(recipient, lpStakingPool, liquidity); \r\n    }\r\n\r\n    /** \r\n     * @dev Withdraws tokens from the given pool. \r\n     * @param lpStakingPool - LP pool to withdraw from.\r\n     * @param amount - LP amount to withdraw. \r\n     * @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\r\n     * @param recipient - The address which will recieve tokens.\r\n\r\n     * @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     * @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     */ \r\n    function withdraw(address lpStakingPool, uint256 amount, bool withdrawLP, address recipient) external returns(uint256 amountA, uint256 amountB){\r\n        require(Farms[lpStakingPool] != Farm(address(0)), 'The given pool doesnt exist');\r\n        (amountA, amountB) = Farms[lpStakingPool].withdraw(msg.sender, amount, withdrawLP, recipient); \r\n        emit Withdraw(msg.sender, lpStakingPool, amount); \r\n    }\r\n\r\n    /**\r\n     * @dev Distributes tokens between users.\r\n     * @param lpStakingPool - LP pool to distribute tokens in.\r\n     */ \r\n    function distribute(address lpStakingPool) external {\r\n        require(Farms[lpStakingPool] != Farm(address(0)), 'The given pool doesnt exist');\r\n        Farms[lpStakingPool].distribute();\r\n        emit Distribute(lpStakingPool);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns tokens staked by the {_address} for the given {lpPair}.\r\n     * @param _address - The address to check stakes for.\r\n     * @param lpStakingPool - LP pool to check stakes in.\r\n\r\n     * @return stakeLP - Total user stake(in LP tokens).\r\n     * @return stakeA - Token A stake.\r\n     * @return stakeB - Token B stake.\r\n     */\r\n    function userStake(address _address, address lpStakingPool) external view returns (uint256 stakeLP, uint256 stakeA, uint256 stakeB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            stakeLP = Farms[lpStakingPool].userBalance(_address);\r\n            (stakeA, stakeB) = getTokenStake(lpStakingPool, stakeLP);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n\r\n     * @return totalDepositsLP - Total deposits (in LP tokens).\r\n     * @return totalDepositsA - Token A deposits.\r\n     * @return totalDepositsB - Token B deposits.\r\n     */  \r\n    function totalDeposits(address lpStakingPool) external view returns (uint256 totalDepositsLP, uint256 totalDepositsA, uint256 totalDepositsB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            totalDepositsLP = Farms[lpStakingPool].getTotalDeposits();\r\n            (totalDepositsA, totalDepositsB) = getTokenStake(lpStakingPool, totalDepositsLP);\r\n        }\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return lpPools.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys new Farm contract and calls initialize on it.\r\n     */\r\n    function createFarm(address lpStakingPool) internal returns (address) {\r\n        BeaconProxy proxy = new BeaconProxy(\r\n            farmBeacon,\r\n            abi.encodeWithSelector(\r\n                Farm(address(0)).initialize.selector,\r\n                lpStakingPool,\r\n                address(this)\r\n            )\r\n        );\r\n        emit FarmDeployed(address(proxy));\r\n        return address(proxy);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n     * @param amountLP - Amount of LP tokens to convert.\r\n\r\n     * @return amountA - Token A amount.\r\n     * @return amountB - Token B amount.\r\n     */ \r\n    function getTokenStake(address lpStakingPool, uint256 amountLP) internal view returns (uint256 amountA, uint256 amountB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            address lpPair = Farms[lpStakingPool].lpPair();\r\n            uint256 totalSupply = IERC20(lpPair).totalSupply();\r\n            uint256 totalTokenAAmount = IERC20(Farms[lpStakingPool].tokenA()).balanceOf(lpPair);\r\n            amountA = amountLP.mul(totalTokenAAmount).div(totalSupply);\r\n\r\n            uint256 totalTokenBAmount = IERC20(Farms[lpStakingPool].tokenB()).balanceOf(lpPair);\r\n            amountB = amountLP.mul(totalTokenBAmount).div(totalSupply);\r\n        }\r\n    }\r\n} ",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-branch\\contracts\\QuickswapDualFarmFactoryBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/QuickswapDualFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        2160
      ],
      "BeaconProxy": [
        1350
      ],
      "Context": [
        2182
      ],
      "ERC1967Upgrade": [
        1216
      ],
      "Farm": [
        7519
      ],
      "IBeacon": [
        1360
      ],
      "IERC20": [
        1639
      ],
      "IERC20Upgradeable": [
        249
      ],
      "IUniswapV2Pair": [
        10654
      ],
      "Initializable": [
        171
      ],
      "Ownable": [
        867
      ],
      "Proxy": [
        1268
      ],
      "QuickswapDualFarmFactoryBeacon": [
        3635
      ],
      "SafeERC20Upgradeable": [
        473
      ],
      "SafeMath": [
        2554
      ],
      "StorageSlot": [
        2242
      ],
      "UpgradeableBeacon": [
        1435
      ]
    },
    "id": 3636,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3070,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:21"
      },
      {
        "id": 3071,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:21"
      },
      {
        "absolutePath": "project:/contracts/farms/QuickswapDualFarmUpgradeable.sol",
        "file": "./farms/QuickswapDualFarmUpgradeable.sol",
        "id": 3079,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3636,
        "sourceUnit": 7520,
        "src": "95:184:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3072,
              "name": "QuickswapDualFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:28:21",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3073,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "141:8:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3074,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "151:6:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3075,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "159:17:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3076,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "178:20:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3077,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "200:14:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3078,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "216:13:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 3080,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3636,
        "sourceUnit": 1436,
        "src": "284:68:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 3081,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3636,
        "sourceUnit": 1351,
        "src": "354:62:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3082,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 171,
              "src": "463:13:21"
            },
            "id": 3083,
            "nodeType": "InheritanceSpecifier",
            "src": "463:13:21"
          }
        ],
        "canonicalName": "QuickswapDualFarmFactoryBeacon",
        "contractDependencies": [
          1350,
          1435,
          7519
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3635,
        "linearizedBaseContracts": [
          3635,
          171
        ],
        "name": "QuickswapDualFarmFactoryBeacon",
        "nameLocation": "429:30:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3086,
            "libraryName": {
              "id": 3084,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2554,
              "src": "489:8:21"
            },
            "nodeType": "UsingForDirective",
            "src": "483:27:21",
            "typeName": {
              "id": 3085,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3090,
            "libraryName": {
              "id": 3087,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 473,
              "src": "523:20:21"
            },
            "nodeType": "UsingForDirective",
            "src": "517:49:21",
            "typeName": {
              "id": 3089,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3088,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 249,
                "src": "548:17:21"
              },
              "referencedDeclaration": 249,
              "src": "548:17:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 3091,
              "nodeType": "StructuredDocumentation",
              "src": "574:247:21",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n Farms - Links {lpPools} to the deployed Farm contract.\n lpPools - List of pools that have corresponding deployed Farm contract."
            },
            "functionSelector": "d95a4d93",
            "id": 3093,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "842:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3635,
            "src": "827:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3092,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "827:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 3098,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "893:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 3635,
            "src": "861:37:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
            },
            "typeName": {
              "id": 3097,
              "keyType": {
                "id": 3094,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "861:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
              },
              "valueType": {
                "id": 3096,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3095,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7519,
                  "src": "880:4:21"
                },
                "referencedDeclaration": 7519,
                "src": "880:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                  "typeString": "contract QuickswapDualFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 3101,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "922:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3635,
            "src": "905:24:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3099,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "905:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3100,
              "nodeType": "ArrayTypeName",
              "src": "905:9:21",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3105,
            "name": "FarmDeployed",
            "nameLocation": "944:12:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "973:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3105,
                  "src": "957:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:29:21"
            },
            "src": "938:48:21"
          },
          {
            "anonymous": false,
            "id": 3113,
            "name": "Deposit",
            "nameLocation": "998:7:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3107,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1022:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "1006:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3109,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1046:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "1030:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3111,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1062:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "1054:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:64:21"
            },
            "src": "992:78:21"
          },
          {
            "anonymous": false,
            "id": 3121,
            "name": "Withdraw",
            "nameLocation": "1082:8:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3115,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1107:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "1091:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3117,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1131:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "1115:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1147:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "1139:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1090:64:21"
            },
            "src": "1076:79:21"
          },
          {
            "anonymous": false,
            "id": 3125,
            "name": "Distribute",
            "nameLocation": "1167:10:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3123,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1194:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3125,
                  "src": "1178:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:24:21"
            },
            "src": "1161:41:21"
          },
          {
            "body": {
              "id": 3160,
              "nodeType": "Block",
              "src": "1311:211:21",
              "statements": [
                {
                  "assignments": [
                    3134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3134,
                      "mutability": "mutable",
                      "name": "_farmBeacon",
                      "nameLocation": "1340:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3160,
                      "src": "1322:29:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                        "typeString": "contract UpgradeableBeacon"
                      },
                      "typeName": {
                        "id": 3133,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3132,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1435,
                          "src": "1322:17:21"
                        },
                        "referencedDeclaration": 1435,
                        "src": "1322:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1398:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                "typeString": "function () returns (contract QuickswapDualFarmUpgradeable)"
                              },
                              "typeName": {
                                "id": 3141,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3140,
                                  "name": "Farm",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 7519,
                                  "src": "1402:4:21"
                                },
                                "referencedDeclaration": 7519,
                                "src": "1402:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              }
                            },
                            "id": 3143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1398:10:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          ],
                          "id": 3139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1390:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1390:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1390:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1354:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1435_$",
                        "typeString": "function (address) returns (contract UpgradeableBeacon)"
                      },
                      "typeName": {
                        "id": 3136,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3135,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1435,
                          "src": "1358:17:21"
                        },
                        "referencedDeclaration": 1435,
                        "src": "1358:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      }
                    },
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:66:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                      "typeString": "contract UpgradeableBeacon"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1322:98:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3150,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3127,
                        "src": "1461:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3147,
                        "name": "_farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "1431:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 3149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 846,
                      "src": "1431:29:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3152,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:39:21"
                },
                {
                  "expression": {
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3153,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3093,
                      "src": "1481:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3156,
                          "name": "_farmBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3134,
                          "src": "1502:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 3155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1494:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1494:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1494:20:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1481:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3159,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:33:21"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 3161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3130,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3129,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 170,
                  "src": "1299:11:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1299:11:21"
              }
            ],
            "name": "initialize",
            "nameLocation": "1263:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3127,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1282:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3161,
                  "src": "1274:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:18:21"
            },
            "returnParameters": {
              "id": 3131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:21"
            },
            "scope": 3635,
            "src": "1254:268:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3320,
              "nodeType": "Block",
              "src": "2380:1020:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3181,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "2394:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3183,
                      "indexExpression": {
                        "id": 3182,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3170,
                        "src": "2400:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2394:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2431:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2423:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3185,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2423:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2423:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3184,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "2418:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2418:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "2394:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3208,
                  "nodeType": "IfStatement",
                  "src": "2391:168:21",
                  "trueBody": {
                    "id": 3207,
                    "nodeType": "Block",
                    "src": "2435:124:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3191,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3098,
                              "src": "2450:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3193,
                            "indexExpression": {
                              "id": 3192,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3170,
                              "src": "2456:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2450:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3196,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2489:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3195,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3547,
                                  "src": "2478:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 3197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2478:25:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3194,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7519,
                              "src": "2473:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2473:31:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "src": "2450:54:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3200,
                        "nodeType": "ExpressionStatement",
                        "src": "2450:54:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3204,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3170,
                              "src": "2532:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3201,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3101,
                              "src": "2519:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2519:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2519:27:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3206,
                        "nodeType": "ExpressionStatement",
                        "src": "2519:27:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3209,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3164,
                      "src": "2574:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2584:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2574:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3238,
                  "nodeType": "IfStatement",
                  "src": "2571:207:21",
                  "trueBody": {
                    "id": 3237,
                    "nodeType": "Block",
                    "src": "2586:192:21",
                    "statements": [
                      {
                        "assignments": [
                          3214
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3214,
                            "mutability": "mutable",
                            "name": "tokenA",
                            "nameLocation": "2619:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3237,
                            "src": "2601:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3213,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3212,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 249,
                                "src": "2601:17:21"
                              },
                              "referencedDeclaration": 249,
                              "src": "2601:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3222,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3216,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2646:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3218,
                                  "indexExpression": {
                                    "id": 3217,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2652:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2646:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6588,
                                "src": "2646:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2646:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3215,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "2628:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2628:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2601:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3226,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2715:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2715:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3230,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2735:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3232,
                                  "indexExpression": {
                                    "id": 3231,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2741:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2735:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2727:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3228,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2727:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2727:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3234,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3164,
                              "src": "2758:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3223,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3214,
                              "src": "2691:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "2691:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$249_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2691:75:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3236,
                        "nodeType": "ExpressionStatement",
                        "src": "2691:75:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3239,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3166,
                      "src": "2791:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2801:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2791:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3268,
                  "nodeType": "IfStatement",
                  "src": "2788:208:21",
                  "trueBody": {
                    "id": 3267,
                    "nodeType": "Block",
                    "src": "2803:193:21",
                    "statements": [
                      {
                        "assignments": [
                          3244
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3244,
                            "mutability": "mutable",
                            "name": "tokenB",
                            "nameLocation": "2836:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3267,
                            "src": "2818:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3243,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3242,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 249,
                                "src": "2818:17:21"
                              },
                              "referencedDeclaration": 249,
                              "src": "2818:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3252,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3246,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2863:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3248,
                                  "indexExpression": {
                                    "id": 3247,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2869:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2863:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenB",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6590,
                                "src": "2863:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2863:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3245,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "2845:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2818:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3256,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2932:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2932:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3260,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2952:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3262,
                                  "indexExpression": {
                                    "id": 3261,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2958:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2952:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2944:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3258,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2944:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2944:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3264,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3166,
                              "src": "2975:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3253,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3244,
                              "src": "2908:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "2908:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$249_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2908:75:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3266,
                        "nodeType": "ExpressionStatement",
                        "src": "2908:75:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3269,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3168,
                      "src": "3009:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3020:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3009:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3298,
                  "nodeType": "IfStatement",
                  "src": "3006:209:21",
                  "trueBody": {
                    "id": 3297,
                    "nodeType": "Block",
                    "src": "3022:193:21",
                    "statements": [
                      {
                        "assignments": [
                          3274
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3274,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "3055:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3297,
                            "src": "3037:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3273,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3272,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 249,
                                "src": "3037:17:21"
                              },
                              "referencedDeclaration": 249,
                              "src": "3037:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3282,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3276,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "3082:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3278,
                                  "indexExpression": {
                                    "id": 3277,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "3088:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3082:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lpPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6586,
                                "src": "3082:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3082:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3275,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "3064:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3037:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3151:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3151:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3290,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "3171:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3292,
                                  "indexExpression": {
                                    "id": 3291,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "3177:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3171:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3163:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3288,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3163:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3163:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3294,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3168,
                              "src": "3194:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3283,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "3127:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "3127:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$249_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3127:76:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3296,
                        "nodeType": "ExpressionStatement",
                        "src": "3127:76:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3299,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3175,
                          "src": "3236:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3300,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3177,
                          "src": "3243:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3301,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3179,
                          "src": "3250:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3302,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3235:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3307,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3164,
                          "src": "3292:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3308,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3166,
                          "src": "3301:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3309,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3168,
                          "src": "3310:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3310,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3172,
                          "src": "3320:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3303,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "3263:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3305,
                          "indexExpression": {
                            "id": 3304,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3170,
                            "src": "3269:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3263:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7085,
                        "src": "3263:28:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 3311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3263:67:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3235:95:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3313,
                  "nodeType": "ExpressionStatement",
                  "src": "3235:95:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3315,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3172,
                        "src": "3355:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3316,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3170,
                        "src": "3366:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3317,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "3381:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3314,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3113,
                      "src": "3347:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3347:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3319,
                  "nodeType": "EmitStatement",
                  "src": "3342:49:21"
                }
              ]
            },
            "documentation": {
              "id": 3162,
              "nodeType": "StructuredDocumentation",
              "src": "1530:667:21",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpStakingPool - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 3321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2212:7:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3164,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2228:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2220:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3166,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2245:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2237:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3168,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2262:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2254:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "2280:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2272:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3172,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2303:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2295:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2219:94:21"
            },
            "returnParameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2339:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2331:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3177,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2354:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2346:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3179,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2369:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2361:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2330:49:21"
            },
            "scope": 3635,
            "src": "2203:1197:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3373,
              "nodeType": "Block",
              "src": "4071:264:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3338,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "4090:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3340,
                          "indexExpression": {
                            "id": 3339,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3324,
                            "src": "4096:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4090:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4127:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4119:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3342,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4119:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4119:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3341,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7519,
                            "src": "4114:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4114:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "4090:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 3348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4132:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 3337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4082:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4082:80:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3350,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:80:21"
                },
                {
                  "expression": {
                    "id": 3364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3351,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3333,
                          "src": "4174:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3352,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3335,
                          "src": "4183:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3353,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4173:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4224:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4224:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3360,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3326,
                          "src": "4236:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3361,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3328,
                          "src": "4244:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 3362,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3330,
                          "src": "4256:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3354,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "4194:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3356,
                          "indexExpression": {
                            "id": 3355,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3324,
                            "src": "4200:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4194:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7192,
                        "src": "4194:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 3363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4194:72:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4173:93:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3365,
                  "nodeType": "ExpressionStatement",
                  "src": "4173:93:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4292:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4292:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3369,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3324,
                        "src": "4304:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3370,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "4319:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3366,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3121,
                      "src": "4283:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4283:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3372,
                  "nodeType": "EmitStatement",
                  "src": "4278:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3322,
              "nodeType": "StructuredDocumentation",
              "src": "3408:513:21",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpStakingPool - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 3374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3937:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3324,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "3954:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "3946:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3977:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "3969:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3969:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3328,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "3990:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "3985:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3327,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3985:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3330,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4010:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "4002:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4002:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:75:21"
            },
            "returnParameters": {
              "id": 3336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3333,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4046:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "4038:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4038:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3335,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4063:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "4055:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4055:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4037:34:21"
            },
            "scope": 3635,
            "src": "3928:407:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3404,
              "nodeType": "Block",
              "src": "4525:184:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3381,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "4544:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3383,
                          "indexExpression": {
                            "id": 3382,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3377,
                            "src": "4550:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4544:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4581:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4573:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3385,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4573:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4573:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3384,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7519,
                            "src": "4568:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4568:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "4544:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4586:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 3380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4536:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:80:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "4536:80:21"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 3394,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3098,
                          "src": "4627:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                            "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                          }
                        },
                        "id": 3396,
                        "indexExpression": {
                          "id": 3395,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3377,
                          "src": "4633:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4627:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        }
                      },
                      "id": 3397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7452,
                      "src": "4627:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:33:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3399,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:33:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3401,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3377,
                        "src": "4687:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3400,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3125,
                      "src": "4676:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3403,
                  "nodeType": "EmitStatement",
                  "src": "4671:30:21"
                }
              ]
            },
            "documentation": {
              "id": 3375,
              "nodeType": "StructuredDocumentation",
              "src": "4343:123:21",
              "text": " @dev Distributes tokens between users.\n @param lpStakingPool - LP pool to distribute tokens in."
            },
            "functionSelector": "63453ae1",
            "id": 3405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distribute",
            "nameLocation": "4482:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3377,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "4501:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3405,
                  "src": "4493:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4493:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4492:23:21"
            },
            "returnParameters": {
              "id": 3379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4525:0:21"
            },
            "scope": 3635,
            "src": "4473:236:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3449,
              "nodeType": "Block",
              "src": "5202:214:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3419,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "5217:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3421,
                      "indexExpression": {
                        "id": 3420,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3410,
                        "src": "5223:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5217:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5254:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5246:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3423,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5246:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5246:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3422,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "5241:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5241:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "5217:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3448,
                  "nodeType": "IfStatement",
                  "src": "5213:196:21",
                  "trueBody": {
                    "id": 3447,
                    "nodeType": "Block",
                    "src": "5259:150:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3429,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3413,
                            "src": "5274:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3434,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3408,
                                "src": "5317:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 3430,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3098,
                                  "src": "5284:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3432,
                                "indexExpression": {
                                  "id": 3431,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3410,
                                  "src": "5290:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5284:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7488,
                              "src": "5284:32:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5284:42:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5274:52:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3437,
                        "nodeType": "ExpressionStatement",
                        "src": "5274:52:21"
                      },
                      {
                        "expression": {
                          "id": 3445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3438,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3415,
                                "src": "5342:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3439,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3417,
                                "src": "5350:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3440,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5341:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3442,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3410,
                                "src": "5374:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3443,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3413,
                                "src": "5389:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3441,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3634,
                              "src": "5360:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5360:37:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "5341:56:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3446,
                        "nodeType": "ExpressionStatement",
                        "src": "5341:56:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3406,
              "nodeType": "StructuredDocumentation",
              "src": "4717:347:21",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpStakingPool - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 3450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "5079:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3408,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "5097:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5089:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3410,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5115:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5107:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5107:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:41:21"
            },
            "returnParameters": {
              "id": 3418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3413,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "5161:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5153:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5153:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3415,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "5178:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5170:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3417,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "5194:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5186:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5152:49:21"
            },
            "scope": 3635,
            "src": "5070:346:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3491,
              "nodeType": "Block",
              "src": "5919:243:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3462,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "5934:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3464,
                      "indexExpression": {
                        "id": 3463,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3453,
                        "src": "5940:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5934:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5971:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5963:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3466,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5963:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5963:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3465,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "5958:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5958:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "5934:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3490,
                  "nodeType": "IfStatement",
                  "src": "5930:225:21",
                  "trueBody": {
                    "id": 3489,
                    "nodeType": "Block",
                    "src": "5976:179:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3472,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3456,
                            "src": "5991:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 3473,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3098,
                                  "src": "6009:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3475,
                                "indexExpression": {
                                  "id": 3474,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3453,
                                  "src": "6015:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6009:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTotalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7509,
                              "src": "6009:37:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:39:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5991:57:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3479,
                        "nodeType": "ExpressionStatement",
                        "src": "5991:57:21"
                      },
                      {
                        "expression": {
                          "id": 3487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3480,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3458,
                                "src": "6064:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3481,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3460,
                                "src": "6080:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3482,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6063:32:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3484,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3453,
                                "src": "6112:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3485,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3456,
                                "src": "6127:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3483,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3634,
                              "src": "6098:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6098:45:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6063:80:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3488,
                        "nodeType": "ExpressionStatement",
                        "src": "6063:80:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3451,
              "nodeType": "StructuredDocumentation",
              "src": "5424:345:21",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpStakingPool - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 3492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "5786:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3453,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5808:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5800:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5800:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5799:23:21"
            },
            "returnParameters": {
              "id": 3461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3456,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "5854:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5846:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5846:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3458,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "5879:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5871:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5871:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3460,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "5903:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5895:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5895:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5845:73:21"
            },
            "scope": 3635,
            "src": "5777:385:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3500,
              "nodeType": "Block",
              "src": "6224:40:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3497,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3101,
                      "src": "6242:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6242:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3496,
                  "id": 3499,
                  "nodeType": "Return",
                  "src": "6235:21:21"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 3501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "6179:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6189:2:21"
            },
            "returnParameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "6215:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6215:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6214:9:21"
            },
            "scope": 3635,
            "src": "6170:94:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3546,
              "nodeType": "Block",
              "src": "6427:337:21",
              "statements": [
                {
                  "assignments": [
                    3511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3511,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "6450:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3546,
                      "src": "6438:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 3510,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3509,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1350,
                          "src": "6438:11:21"
                        },
                        "referencedDeclaration": 1350,
                        "src": "6438:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3533,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3515,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3093,
                        "src": "6488:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 3521,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6567:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 3520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6559:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3519,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6559:7:21",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6559:10:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3518,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7519,
                                  "src": "6554:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                    "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6554:16:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6934,
                              "src": "6554:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                                "typeString": "function (address,address) external"
                              }
                            },
                            "id": 3525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6554:36:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3526,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3504,
                            "src": "6609:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3529,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "6649:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmFactoryBeacon_$3635",
                                  "typeString": "contract QuickswapDualFarmFactoryBeacon"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmFactoryBeacon_$3635",
                                  "typeString": "contract QuickswapDualFarmFactoryBeacon"
                                }
                              ],
                              "id": 3528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6641:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3527,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6641:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6641:13:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3516,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6513:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6513:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6513:156:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6458:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1350_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 3513,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3512,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1350,
                          "src": "6462:11:21"
                        },
                        "referencedDeclaration": 1350,
                        "src": "6462:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 3532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6458:222:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6438:242:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3537,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3511,
                            "src": "6717:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 3536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6709:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3535,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6709:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6709:14:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3534,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3105,
                      "src": "6696:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6696:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3540,
                  "nodeType": "EmitStatement",
                  "src": "6691:33:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3543,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3511,
                        "src": "6750:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 3542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6742:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3541,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6742:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3508,
                  "id": 3545,
                  "nodeType": "Return",
                  "src": "6735:21:21"
                }
              ]
            },
            "documentation": {
              "id": 3502,
              "nodeType": "StructuredDocumentation",
              "src": "6272:79:21",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 3547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "6366:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3504,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6385:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3547,
                  "src": "6377:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6377:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6376:23:21"
            },
            "returnParameters": {
              "id": 3508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3547,
                  "src": "6418:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6418:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6417:9:21"
            },
            "scope": 3635,
            "src": "6357:407:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3633,
              "nodeType": "Block",
              "src": "7222:546:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3559,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "7237:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3561,
                      "indexExpression": {
                        "id": 3560,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3550,
                        "src": "7243:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7237:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7274:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7266:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3563,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7266:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7266:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3562,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "7261:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7261:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "7237:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3632,
                  "nodeType": "IfStatement",
                  "src": "7233:528:21",
                  "trueBody": {
                    "id": 3631,
                    "nodeType": "Block",
                    "src": "7279:482:21",
                    "statements": [
                      {
                        "assignments": [
                          3570
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3570,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "7302:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7294:14:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3569,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7294:7:21",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3576,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 3571,
                                "name": "Farms",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3098,
                                "src": "7311:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                  "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                }
                              },
                              "id": 3573,
                              "indexExpression": {
                                "id": 3572,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3550,
                                "src": "7317:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7311:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                "typeString": "contract QuickswapDualFarmUpgradeable"
                              }
                            },
                            "id": 3574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6586,
                            "src": "7311:27:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7311:29:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7294:46:21"
                      },
                      {
                        "assignments": [
                          3578
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3578,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "7363:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7355:19:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3577,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7355:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3584,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3580,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3570,
                                  "src": "7384:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3579,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "7377:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1639_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7377:14:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1639",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1570,
                            "src": "7377:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7377:28:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7355:50:21"
                      },
                      {
                        "assignments": [
                          3586
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3586,
                            "mutability": "mutable",
                            "name": "totalTokenAAmount",
                            "nameLocation": "7428:17:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7420:25:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3585,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7420:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3597,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3595,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3570,
                              "src": "7496:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3588,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3098,
                                        "src": "7455:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3590,
                                      "indexExpression": {
                                        "id": 3589,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3550,
                                        "src": "7461:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7455:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3591,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6588,
                                    "src": "7455:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7455:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3587,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "7448:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1639_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7448:37:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1639",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1578,
                            "src": "7448:47:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7448:55:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7420:83:21"
                      },
                      {
                        "expression": {
                          "id": 3606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3598,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3555,
                            "src": "7518:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3604,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3578,
                                "src": "7564:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3601,
                                    "name": "totalTokenAAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3586,
                                    "src": "7541:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3599,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3552,
                                    "src": "7528:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2448,
                                  "src": "7528:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7528:31:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2463,
                              "src": "7528:35:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7528:48:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7518:58:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3607,
                        "nodeType": "ExpressionStatement",
                        "src": "7518:58:21"
                      },
                      {
                        "assignments": [
                          3609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3609,
                            "mutability": "mutable",
                            "name": "totalTokenBAmount",
                            "nameLocation": "7601:17:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7593:25:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3608,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7593:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3620,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3618,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3570,
                              "src": "7669:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3611,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3098,
                                        "src": "7628:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3613,
                                      "indexExpression": {
                                        "id": 3612,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3550,
                                        "src": "7634:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7628:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6590,
                                    "src": "7628:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7628:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3610,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "7621:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1639_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7621:37:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1639",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1578,
                            "src": "7621:47:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7621:55:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7593:83:21"
                      },
                      {
                        "expression": {
                          "id": 3629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3621,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3557,
                            "src": "7691:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3627,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3578,
                                "src": "7737:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3624,
                                    "name": "totalTokenBAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3609,
                                    "src": "7714:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3622,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3552,
                                    "src": "7701:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2448,
                                  "src": "7701:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7701:31:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2463,
                              "src": "7701:35:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7701:48:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7691:58:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3630,
                        "nodeType": "ExpressionStatement",
                        "src": "7691:58:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3548,
              "nodeType": "StructuredDocumentation",
              "src": "6772:322:21",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpStakingPool - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 3634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "7110:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3550,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "7132:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7124:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7124:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3552,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "7155:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7147:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7147:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7123:41:21"
            },
            "returnParameters": {
              "id": 3558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3555,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "7196:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7188:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7188:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3557,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "7213:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7205:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7205:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7187:34:21"
            },
            "scope": 3635,
            "src": "7101:667:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3636,
        "src": "420:7351:21",
        "usedErrors": []
      }
    ],
    "src": "33:7739:21"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/QuickswapDualFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        2160
      ],
      "BeaconProxy": [
        1350
      ],
      "Context": [
        2182
      ],
      "ERC1967Upgrade": [
        1216
      ],
      "Farm": [
        7519
      ],
      "IBeacon": [
        1360
      ],
      "IERC20": [
        1639
      ],
      "IERC20Upgradeable": [
        249
      ],
      "IUniswapV2Pair": [
        10654
      ],
      "Initializable": [
        171
      ],
      "Ownable": [
        867
      ],
      "Proxy": [
        1268
      ],
      "QuickswapDualFarmFactoryBeacon": [
        3635
      ],
      "SafeERC20Upgradeable": [
        473
      ],
      "SafeMath": [
        2554
      ],
      "StorageSlot": [
        2242
      ],
      "UpgradeableBeacon": [
        1435
      ]
    },
    "id": 3636,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3070,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:21"
      },
      {
        "id": 3071,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:21"
      },
      {
        "absolutePath": "project:/contracts/farms/QuickswapDualFarmUpgradeable.sol",
        "file": "./farms/QuickswapDualFarmUpgradeable.sol",
        "id": 3079,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3636,
        "sourceUnit": 7520,
        "src": "95:184:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3072,
              "name": "QuickswapDualFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:28:21",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3073,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "141:8:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3074,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "151:6:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3075,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "159:17:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3076,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "178:20:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3077,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "200:14:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3078,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "216:13:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 3080,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3636,
        "sourceUnit": 1436,
        "src": "284:68:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 3081,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3636,
        "sourceUnit": 1351,
        "src": "354:62:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3082,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 171,
              "src": "463:13:21"
            },
            "id": 3083,
            "nodeType": "InheritanceSpecifier",
            "src": "463:13:21"
          }
        ],
        "canonicalName": "QuickswapDualFarmFactoryBeacon",
        "contractDependencies": [
          1350,
          1435,
          7519
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3635,
        "linearizedBaseContracts": [
          3635,
          171
        ],
        "name": "QuickswapDualFarmFactoryBeacon",
        "nameLocation": "429:30:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3086,
            "libraryName": {
              "id": 3084,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2554,
              "src": "489:8:21"
            },
            "nodeType": "UsingForDirective",
            "src": "483:27:21",
            "typeName": {
              "id": 3085,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3090,
            "libraryName": {
              "id": 3087,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 473,
              "src": "523:20:21"
            },
            "nodeType": "UsingForDirective",
            "src": "517:49:21",
            "typeName": {
              "id": 3089,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3088,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 249,
                "src": "548:17:21"
              },
              "referencedDeclaration": 249,
              "src": "548:17:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 3091,
              "nodeType": "StructuredDocumentation",
              "src": "574:247:21",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n Farms - Links {lpPools} to the deployed Farm contract.\n lpPools - List of pools that have corresponding deployed Farm contract."
            },
            "functionSelector": "d95a4d93",
            "id": 3093,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "842:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3635,
            "src": "827:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3092,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "827:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 3098,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "893:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 3635,
            "src": "861:37:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
            },
            "typeName": {
              "id": 3097,
              "keyType": {
                "id": 3094,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "861:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
              },
              "valueType": {
                "id": 3096,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3095,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7519,
                  "src": "880:4:21"
                },
                "referencedDeclaration": 7519,
                "src": "880:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                  "typeString": "contract QuickswapDualFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 3101,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "922:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3635,
            "src": "905:24:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3099,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "905:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3100,
              "nodeType": "ArrayTypeName",
              "src": "905:9:21",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3105,
            "name": "FarmDeployed",
            "nameLocation": "944:12:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "973:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3105,
                  "src": "957:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:29:21"
            },
            "src": "938:48:21"
          },
          {
            "anonymous": false,
            "id": 3113,
            "name": "Deposit",
            "nameLocation": "998:7:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3107,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1022:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "1006:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3109,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1046:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "1030:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3111,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1062:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "1054:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:64:21"
            },
            "src": "992:78:21"
          },
          {
            "anonymous": false,
            "id": 3121,
            "name": "Withdraw",
            "nameLocation": "1082:8:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3115,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1107:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "1091:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3117,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1131:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "1115:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1147:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3121,
                  "src": "1139:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1090:64:21"
            },
            "src": "1076:79:21"
          },
          {
            "anonymous": false,
            "id": 3125,
            "name": "Distribute",
            "nameLocation": "1167:10:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3123,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1194:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3125,
                  "src": "1178:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:24:21"
            },
            "src": "1161:41:21"
          },
          {
            "body": {
              "id": 3160,
              "nodeType": "Block",
              "src": "1311:211:21",
              "statements": [
                {
                  "assignments": [
                    3134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3134,
                      "mutability": "mutable",
                      "name": "_farmBeacon",
                      "nameLocation": "1340:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3160,
                      "src": "1322:29:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                        "typeString": "contract UpgradeableBeacon"
                      },
                      "typeName": {
                        "id": 3133,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3132,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1435,
                          "src": "1322:17:21"
                        },
                        "referencedDeclaration": 1435,
                        "src": "1322:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1398:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                "typeString": "function () returns (contract QuickswapDualFarmUpgradeable)"
                              },
                              "typeName": {
                                "id": 3141,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3140,
                                  "name": "Farm",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 7519,
                                  "src": "1402:4:21"
                                },
                                "referencedDeclaration": 7519,
                                "src": "1402:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              }
                            },
                            "id": 3143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1398:10:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          ],
                          "id": 3139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1390:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1390:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1390:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1354:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1435_$",
                        "typeString": "function (address) returns (contract UpgradeableBeacon)"
                      },
                      "typeName": {
                        "id": 3136,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3135,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1435,
                          "src": "1358:17:21"
                        },
                        "referencedDeclaration": 1435,
                        "src": "1358:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      }
                    },
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:66:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                      "typeString": "contract UpgradeableBeacon"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1322:98:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3150,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3127,
                        "src": "1461:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3147,
                        "name": "_farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3134,
                        "src": "1431:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 3149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 846,
                      "src": "1431:29:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3152,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:39:21"
                },
                {
                  "expression": {
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3153,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3093,
                      "src": "1481:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3156,
                          "name": "_farmBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3134,
                          "src": "1502:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1435",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 3155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1494:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1494:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1494:20:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1481:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3159,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:33:21"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 3161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3130,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3129,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 170,
                  "src": "1299:11:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1299:11:21"
              }
            ],
            "name": "initialize",
            "nameLocation": "1263:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3127,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1282:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3161,
                  "src": "1274:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:18:21"
            },
            "returnParameters": {
              "id": 3131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:21"
            },
            "scope": 3635,
            "src": "1254:268:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3320,
              "nodeType": "Block",
              "src": "2380:1020:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3181,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "2394:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3183,
                      "indexExpression": {
                        "id": 3182,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3170,
                        "src": "2400:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2394:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2431:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2423:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3185,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2423:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2423:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3184,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "2418:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2418:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "2394:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3208,
                  "nodeType": "IfStatement",
                  "src": "2391:168:21",
                  "trueBody": {
                    "id": 3207,
                    "nodeType": "Block",
                    "src": "2435:124:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3191,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3098,
                              "src": "2450:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3193,
                            "indexExpression": {
                              "id": 3192,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3170,
                              "src": "2456:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2450:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3196,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2489:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3195,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3547,
                                  "src": "2478:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 3197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2478:25:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3194,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7519,
                              "src": "2473:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2473:31:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "src": "2450:54:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3200,
                        "nodeType": "ExpressionStatement",
                        "src": "2450:54:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3204,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3170,
                              "src": "2532:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3201,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3101,
                              "src": "2519:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2519:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2519:27:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3206,
                        "nodeType": "ExpressionStatement",
                        "src": "2519:27:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3209,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3164,
                      "src": "2574:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2584:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2574:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3238,
                  "nodeType": "IfStatement",
                  "src": "2571:207:21",
                  "trueBody": {
                    "id": 3237,
                    "nodeType": "Block",
                    "src": "2586:192:21",
                    "statements": [
                      {
                        "assignments": [
                          3214
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3214,
                            "mutability": "mutable",
                            "name": "tokenA",
                            "nameLocation": "2619:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3237,
                            "src": "2601:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3213,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3212,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 249,
                                "src": "2601:17:21"
                              },
                              "referencedDeclaration": 249,
                              "src": "2601:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3222,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3216,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2646:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3218,
                                  "indexExpression": {
                                    "id": 3217,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2652:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2646:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6588,
                                "src": "2646:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2646:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3215,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "2628:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2628:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2601:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3226,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2715:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2715:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3230,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2735:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3232,
                                  "indexExpression": {
                                    "id": 3231,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2741:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2735:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2727:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3228,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2727:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2727:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3234,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3164,
                              "src": "2758:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3223,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3214,
                              "src": "2691:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "2691:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$249_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2691:75:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3236,
                        "nodeType": "ExpressionStatement",
                        "src": "2691:75:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3239,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3166,
                      "src": "2791:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2801:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2791:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3268,
                  "nodeType": "IfStatement",
                  "src": "2788:208:21",
                  "trueBody": {
                    "id": 3267,
                    "nodeType": "Block",
                    "src": "2803:193:21",
                    "statements": [
                      {
                        "assignments": [
                          3244
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3244,
                            "mutability": "mutable",
                            "name": "tokenB",
                            "nameLocation": "2836:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3267,
                            "src": "2818:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3243,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3242,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 249,
                                "src": "2818:17:21"
                              },
                              "referencedDeclaration": 249,
                              "src": "2818:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3252,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3246,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2863:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3248,
                                  "indexExpression": {
                                    "id": 3247,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2869:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2863:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenB",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6590,
                                "src": "2863:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2863:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3245,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "2845:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2845:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2818:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3256,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2932:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2932:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3260,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "2952:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3262,
                                  "indexExpression": {
                                    "id": 3261,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "2958:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2952:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2944:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3258,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2944:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2944:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3264,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3166,
                              "src": "2975:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3253,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3244,
                              "src": "2908:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "2908:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$249_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2908:75:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3266,
                        "nodeType": "ExpressionStatement",
                        "src": "2908:75:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3269,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3168,
                      "src": "3009:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3020:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3009:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3298,
                  "nodeType": "IfStatement",
                  "src": "3006:209:21",
                  "trueBody": {
                    "id": 3297,
                    "nodeType": "Block",
                    "src": "3022:193:21",
                    "statements": [
                      {
                        "assignments": [
                          3274
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3274,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "3055:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3297,
                            "src": "3037:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 3273,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3272,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 249,
                                "src": "3037:17:21"
                              },
                              "referencedDeclaration": 249,
                              "src": "3037:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3282,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 3276,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "3082:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3278,
                                  "indexExpression": {
                                    "id": 3277,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "3088:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3082:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                },
                                "id": 3279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lpPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6586,
                                "src": "3082:27:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3082:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3275,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "3064:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 3281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:48:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3037:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3151:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3151:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3290,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3098,
                                    "src": "3171:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3292,
                                  "indexExpression": {
                                    "id": 3291,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3170,
                                    "src": "3177:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3171:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3163:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3288,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3163:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3163:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3294,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3168,
                              "src": "3194:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3283,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "3127:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$249",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 306,
                            "src": "3127:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$249_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$249_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3127:76:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3296,
                        "nodeType": "ExpressionStatement",
                        "src": "3127:76:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3299,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3175,
                          "src": "3236:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3300,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3177,
                          "src": "3243:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3301,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3179,
                          "src": "3250:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3302,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3235:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3307,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3164,
                          "src": "3292:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3308,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3166,
                          "src": "3301:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3309,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3168,
                          "src": "3310:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3310,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3172,
                          "src": "3320:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3303,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "3263:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3305,
                          "indexExpression": {
                            "id": 3304,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3170,
                            "src": "3269:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3263:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7085,
                        "src": "3263:28:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 3311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3263:67:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3235:95:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3313,
                  "nodeType": "ExpressionStatement",
                  "src": "3235:95:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3315,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3172,
                        "src": "3355:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3316,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3170,
                        "src": "3366:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3317,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "3381:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3314,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3113,
                      "src": "3347:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3347:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3319,
                  "nodeType": "EmitStatement",
                  "src": "3342:49:21"
                }
              ]
            },
            "documentation": {
              "id": 3162,
              "nodeType": "StructuredDocumentation",
              "src": "1530:667:21",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpStakingPool - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 3321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2212:7:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3164,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2228:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2220:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3166,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2245:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2237:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3168,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2262:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2254:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "2280:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2272:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3172,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2303:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2295:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2219:94:21"
            },
            "returnParameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2339:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2331:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3177,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2354:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2346:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3179,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2369:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3321,
                  "src": "2361:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2330:49:21"
            },
            "scope": 3635,
            "src": "2203:1197:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3373,
              "nodeType": "Block",
              "src": "4071:264:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3338,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "4090:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3340,
                          "indexExpression": {
                            "id": 3339,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3324,
                            "src": "4096:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4090:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4127:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4119:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3342,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4119:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4119:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3341,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7519,
                            "src": "4114:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4114:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "4090:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 3348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4132:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 3337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4082:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4082:80:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3350,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:80:21"
                },
                {
                  "expression": {
                    "id": 3364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3351,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3333,
                          "src": "4174:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3352,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3335,
                          "src": "4183:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3353,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4173:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4224:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4224:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3360,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3326,
                          "src": "4236:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3361,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3328,
                          "src": "4244:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 3362,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3330,
                          "src": "4256:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3354,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "4194:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3356,
                          "indexExpression": {
                            "id": 3355,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3324,
                            "src": "4200:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4194:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7192,
                        "src": "4194:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 3363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4194:72:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4173:93:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3365,
                  "nodeType": "ExpressionStatement",
                  "src": "4173:93:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3367,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4292:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4292:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3369,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3324,
                        "src": "4304:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3370,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "4319:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3366,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3121,
                      "src": "4283:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4283:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3372,
                  "nodeType": "EmitStatement",
                  "src": "4278:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3322,
              "nodeType": "StructuredDocumentation",
              "src": "3408:513:21",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpStakingPool - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 3374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "3937:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3324,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "3954:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "3946:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3977:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "3969:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3969:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3328,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "3990:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "3985:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3327,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3985:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3330,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4010:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "4002:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4002:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:75:21"
            },
            "returnParameters": {
              "id": 3336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3333,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4046:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "4038:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4038:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3335,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4063:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3374,
                  "src": "4055:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4055:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4037:34:21"
            },
            "scope": 3635,
            "src": "3928:407:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3404,
              "nodeType": "Block",
              "src": "4525:184:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3381,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3098,
                            "src": "4544:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3383,
                          "indexExpression": {
                            "id": 3382,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3377,
                            "src": "4550:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4544:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4581:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4573:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3385,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4573:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4573:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3384,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7519,
                            "src": "4568:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4568:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "4544:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4586:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 3380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4536:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:80:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "4536:80:21"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 3394,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3098,
                          "src": "4627:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                            "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                          }
                        },
                        "id": 3396,
                        "indexExpression": {
                          "id": 3395,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3377,
                          "src": "4633:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4627:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        }
                      },
                      "id": 3397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7452,
                      "src": "4627:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:33:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3399,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:33:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3401,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3377,
                        "src": "4687:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3400,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3125,
                      "src": "4676:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3403,
                  "nodeType": "EmitStatement",
                  "src": "4671:30:21"
                }
              ]
            },
            "documentation": {
              "id": 3375,
              "nodeType": "StructuredDocumentation",
              "src": "4343:123:21",
              "text": " @dev Distributes tokens between users.\n @param lpStakingPool - LP pool to distribute tokens in."
            },
            "functionSelector": "63453ae1",
            "id": 3405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distribute",
            "nameLocation": "4482:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3377,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "4501:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3405,
                  "src": "4493:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4493:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4492:23:21"
            },
            "returnParameters": {
              "id": 3379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4525:0:21"
            },
            "scope": 3635,
            "src": "4473:236:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3449,
              "nodeType": "Block",
              "src": "5202:214:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3419,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "5217:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3421,
                      "indexExpression": {
                        "id": 3420,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3410,
                        "src": "5223:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5217:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5254:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5246:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3423,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5246:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5246:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3422,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "5241:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5241:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "5217:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3448,
                  "nodeType": "IfStatement",
                  "src": "5213:196:21",
                  "trueBody": {
                    "id": 3447,
                    "nodeType": "Block",
                    "src": "5259:150:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3429,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3413,
                            "src": "5274:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3434,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3408,
                                "src": "5317:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 3430,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3098,
                                  "src": "5284:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3432,
                                "indexExpression": {
                                  "id": 3431,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3410,
                                  "src": "5290:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5284:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7488,
                              "src": "5284:32:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5284:42:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5274:52:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3437,
                        "nodeType": "ExpressionStatement",
                        "src": "5274:52:21"
                      },
                      {
                        "expression": {
                          "id": 3445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3438,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3415,
                                "src": "5342:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3439,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3417,
                                "src": "5350:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3440,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5341:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3442,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3410,
                                "src": "5374:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3443,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3413,
                                "src": "5389:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3441,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3634,
                              "src": "5360:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5360:37:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "5341:56:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3446,
                        "nodeType": "ExpressionStatement",
                        "src": "5341:56:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3406,
              "nodeType": "StructuredDocumentation",
              "src": "4717:347:21",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpStakingPool - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 3450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "5079:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3408,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "5097:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5089:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3410,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5115:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5107:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5107:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:41:21"
            },
            "returnParameters": {
              "id": 3418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3413,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "5161:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5153:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5153:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3415,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "5178:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5170:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3417,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "5194:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3450,
                  "src": "5186:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5152:49:21"
            },
            "scope": 3635,
            "src": "5070:346:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3491,
              "nodeType": "Block",
              "src": "5919:243:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3462,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "5934:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3464,
                      "indexExpression": {
                        "id": 3463,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3453,
                        "src": "5940:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5934:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5971:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5963:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3466,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5963:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5963:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3465,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "5958:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5958:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "5934:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3490,
                  "nodeType": "IfStatement",
                  "src": "5930:225:21",
                  "trueBody": {
                    "id": 3489,
                    "nodeType": "Block",
                    "src": "5976:179:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3472,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3456,
                            "src": "5991:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 3473,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3098,
                                  "src": "6009:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3475,
                                "indexExpression": {
                                  "id": 3474,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3453,
                                  "src": "6015:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6009:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTotalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7509,
                              "src": "6009:37:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:39:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5991:57:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3479,
                        "nodeType": "ExpressionStatement",
                        "src": "5991:57:21"
                      },
                      {
                        "expression": {
                          "id": 3487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3480,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3458,
                                "src": "6064:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3481,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3460,
                                "src": "6080:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3482,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6063:32:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3484,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3453,
                                "src": "6112:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3485,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3456,
                                "src": "6127:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3483,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3634,
                              "src": "6098:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6098:45:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6063:80:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3488,
                        "nodeType": "ExpressionStatement",
                        "src": "6063:80:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3451,
              "nodeType": "StructuredDocumentation",
              "src": "5424:345:21",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpStakingPool - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 3492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "5786:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3453,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5808:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5800:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5800:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5799:23:21"
            },
            "returnParameters": {
              "id": 3461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3456,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "5854:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5846:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5846:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3458,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "5879:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5871:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5871:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3460,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "5903:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "5895:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5895:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5845:73:21"
            },
            "scope": 3635,
            "src": "5777:385:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3500,
              "nodeType": "Block",
              "src": "6224:40:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3497,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3101,
                      "src": "6242:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6242:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3496,
                  "id": 3499,
                  "nodeType": "Return",
                  "src": "6235:21:21"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 3501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "6179:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6189:2:21"
            },
            "returnParameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "6215:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6215:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6214:9:21"
            },
            "scope": 3635,
            "src": "6170:94:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3546,
              "nodeType": "Block",
              "src": "6427:337:21",
              "statements": [
                {
                  "assignments": [
                    3511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3511,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "6450:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3546,
                      "src": "6438:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 3510,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3509,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1350,
                          "src": "6438:11:21"
                        },
                        "referencedDeclaration": 1350,
                        "src": "6438:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3533,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3515,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3093,
                        "src": "6488:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 3521,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6567:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 3520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6559:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3519,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6559:7:21",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6559:10:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3518,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7519,
                                  "src": "6554:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                    "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6554:16:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6934,
                              "src": "6554:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                                "typeString": "function (address,address) external"
                              }
                            },
                            "id": 3525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6554:36:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3526,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3504,
                            "src": "6609:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3529,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "6649:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmFactoryBeacon_$3635",
                                  "typeString": "contract QuickswapDualFarmFactoryBeacon"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmFactoryBeacon_$3635",
                                  "typeString": "contract QuickswapDualFarmFactoryBeacon"
                                }
                              ],
                              "id": 3528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6641:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3527,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6641:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6641:13:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3516,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6513:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6513:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6513:156:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6458:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1350_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 3513,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3512,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1350,
                          "src": "6462:11:21"
                        },
                        "referencedDeclaration": 1350,
                        "src": "6462:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 3532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6458:222:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6438:242:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3537,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3511,
                            "src": "6717:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 3536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6709:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3535,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6709:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6709:14:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3534,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3105,
                      "src": "6696:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6696:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3540,
                  "nodeType": "EmitStatement",
                  "src": "6691:33:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3543,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3511,
                        "src": "6750:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1350",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 3542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6742:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3541,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6742:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3508,
                  "id": 3545,
                  "nodeType": "Return",
                  "src": "6735:21:21"
                }
              ]
            },
            "documentation": {
              "id": 3502,
              "nodeType": "StructuredDocumentation",
              "src": "6272:79:21",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 3547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "6366:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3504,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6385:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3547,
                  "src": "6377:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6377:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6376:23:21"
            },
            "returnParameters": {
              "id": 3508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3547,
                  "src": "6418:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6418:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6417:9:21"
            },
            "scope": 3635,
            "src": "6357:407:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3633,
              "nodeType": "Block",
              "src": "7222:546:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3559,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "7237:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3561,
                      "indexExpression": {
                        "id": 3560,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3550,
                        "src": "7243:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7237:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7274:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7266:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3563,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7266:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7266:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3562,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "7261:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7261:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "7237:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3632,
                  "nodeType": "IfStatement",
                  "src": "7233:528:21",
                  "trueBody": {
                    "id": 3631,
                    "nodeType": "Block",
                    "src": "7279:482:21",
                    "statements": [
                      {
                        "assignments": [
                          3570
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3570,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "7302:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7294:14:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3569,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7294:7:21",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3576,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 3571,
                                "name": "Farms",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3098,
                                "src": "7311:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                  "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                }
                              },
                              "id": 3573,
                              "indexExpression": {
                                "id": 3572,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3550,
                                "src": "7317:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7311:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                "typeString": "contract QuickswapDualFarmUpgradeable"
                              }
                            },
                            "id": 3574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6586,
                            "src": "7311:27:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7311:29:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7294:46:21"
                      },
                      {
                        "assignments": [
                          3578
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3578,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "7363:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7355:19:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3577,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7355:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3584,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3580,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3570,
                                  "src": "7384:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3579,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "7377:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1639_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7377:14:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1639",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1570,
                            "src": "7377:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7377:28:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7355:50:21"
                      },
                      {
                        "assignments": [
                          3586
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3586,
                            "mutability": "mutable",
                            "name": "totalTokenAAmount",
                            "nameLocation": "7428:17:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7420:25:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3585,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7420:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3597,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3595,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3570,
                              "src": "7496:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3588,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3098,
                                        "src": "7455:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3590,
                                      "indexExpression": {
                                        "id": 3589,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3550,
                                        "src": "7461:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7455:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3591,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6588,
                                    "src": "7455:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7455:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3587,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "7448:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1639_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7448:37:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1639",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1578,
                            "src": "7448:47:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7448:55:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7420:83:21"
                      },
                      {
                        "expression": {
                          "id": 3606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3598,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3555,
                            "src": "7518:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3604,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3578,
                                "src": "7564:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3601,
                                    "name": "totalTokenAAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3586,
                                    "src": "7541:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3599,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3552,
                                    "src": "7528:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2448,
                                  "src": "7528:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7528:31:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2463,
                              "src": "7528:35:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7528:48:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7518:58:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3607,
                        "nodeType": "ExpressionStatement",
                        "src": "7518:58:21"
                      },
                      {
                        "assignments": [
                          3609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3609,
                            "mutability": "mutable",
                            "name": "totalTokenBAmount",
                            "nameLocation": "7601:17:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3631,
                            "src": "7593:25:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3608,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7593:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3620,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3618,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3570,
                              "src": "7669:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3611,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3098,
                                        "src": "7628:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7519_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3613,
                                      "indexExpression": {
                                        "id": 3612,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3550,
                                        "src": "7634:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7628:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7519",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3614,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6590,
                                    "src": "7628:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7628:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3610,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "7621:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1639_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7621:37:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1639",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1578,
                            "src": "7621:47:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7621:55:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7593:83:21"
                      },
                      {
                        "expression": {
                          "id": 3629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3621,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3557,
                            "src": "7691:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3627,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3578,
                                "src": "7737:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3624,
                                    "name": "totalTokenBAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3609,
                                    "src": "7714:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3622,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3552,
                                    "src": "7701:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2448,
                                  "src": "7701:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7701:31:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2463,
                              "src": "7701:35:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7701:48:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7691:58:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3630,
                        "nodeType": "ExpressionStatement",
                        "src": "7691:58:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3548,
              "nodeType": "StructuredDocumentation",
              "src": "6772:322:21",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpStakingPool - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 3634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "7110:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3550,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "7132:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7124:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7124:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3552,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "7155:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7147:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7147:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7123:41:21"
            },
            "returnParameters": {
              "id": 3558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3555,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "7196:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7188:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7188:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3557,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "7213:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "7205:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7205:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7187:34:21"
            },
            "scope": 3635,
            "src": "7101:667:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3636,
        "src": "420:7351:21",
        "usedErrors": []
      }
    ],
    "src": "33:7739:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d08": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "farmAddress",
              "type": "address"
            }
          ],
          "name": "FarmDeployed",
          "type": "event"
        },
        "0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            }
          ],
          "name": "Distribute",
          "type": "event"
        },
        "0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF635DB454B99057EC340A8DF5f8996662612dBD2",
      "transactionHash": "0xb5995c4be6d8b87073112b8e1b8731ac74332b2c245cf9309cdb12d3ff1c879d"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-24T07:25:25.191Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256,address,address)": {
        "details": "Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.",
        "params": {
          "amountA": "- Token A amount to deposit.",
          "amountB": "-  Token B amount to deposit.",
          "amountLP": "- LP Token amount to deposit.",
          "lpStakingPool": "- Address of the pool to deposit tokens in.",
          "recipient": "- Address which will recieve the deposit and leftover tokens."
        },
        "returns": {
          "liquidity": "- Total liquidity sent to the farm (in lpTokens).",
          "sentA": "- Token A amount sent to the farm.",
          "sentB": "- Token B amount sent to the farm."
        }
      },
      "distribute(address)": {
        "details": "Distributes tokens between users.",
        "params": {
          "lpStakingPool": "- LP pool to distribute tokens in."
        }
      },
      "totalDeposits(address)": {
        "details": "Returns total amount locked in the pool. Doesn't take pending rewards into account.",
        "params": {
          "lpStakingPool": "- LP pool to check total deposits in."
        },
        "returns": {
          "totalDepositsA": "- Token A deposits.",
          "totalDepositsB": "- Token B deposits.",
          "totalDepositsLP": "- Total deposits (in LP tokens)."
        }
      },
      "userStake(address,address)": {
        "details": "Returns tokens staked by the {_address} for the given {lpPair}.",
        "params": {
          "_address": "- The address to check stakes for.",
          "lpStakingPool": "- LP pool to check stakes in."
        },
        "returns": {
          "stakeA": "- Token A stake.",
          "stakeB": "- Token B stake.",
          "stakeLP": "- Total user stake(in LP tokens)."
        }
      },
      "withdraw(address,uint256,bool,address)": {
        "details": "Withdraws tokens from the given pool. ",
        "params": {
          "amount": "- LP amount to withdraw. ",
          "lpStakingPool": "- LP pool to withdraw from.",
          "recipient": "- The address which will recieve tokens.",
          "withdrawLP": "- True: Withdraw in LP tokens, False: Withdraw in normal tokens."
        },
        "returns": {
          "amountA": "- Token A amount sent to the {recipient}, 0 if withdrawLP == false.",
          "amountB": "- Token B amount sent to the {recipient}, 0 if withdrawLP == false."
        }
      }
    },
    "stateVariables": {
      "farmBeacon": {
        "details": "Contract Variables: farmBeacon - Farm contract implementation. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}