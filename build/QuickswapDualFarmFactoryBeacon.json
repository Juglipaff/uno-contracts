{
  "contractName": "QuickswapDualFarmFactoryBeacon",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "DistributorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmAddress",
          "type": "address"
        }
      ],
      "name": "FarmDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Farms",
      "outputs": [
        {
          "internalType": "contract QuickswapDualFarmUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "upgrader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sentA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sentB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expectedReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedRewardBlock",
          "type": "uint256"
        }
      ],
      "name": "setExpectedReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenAToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenAToTokenBRoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenBToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenBToTokenBRoute",
          "type": "address[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "userStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpStakingPool",
          "type": "address"
        }
      ],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDepositsLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "transferDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmAddress\",\"type\":\"address\"}],\"name\":\"FarmDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Farms\",\"outputs\":[{\"internalType\":\"contract QuickswapDualFarmUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sentA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenAToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenAToTokenBRoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenBToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenBToTokenBRoute\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedRewardBlock\",\"type\":\"uint256\"}],\"name\":\"setExpectedReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDepositsLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"transferDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"}],\"name\":\"userStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpStakingPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256,address,address)\":{\"details\":\"Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\",\"params\":{\"amountA\":\"- Token A amount to deposit.\",\"amountB\":\"-  Token B amount to deposit.\",\"amountLP\":\"- LP Token amount to deposit.\",\"lpStakingPool\":\"- Address of the pool to deposit tokens in.\",\"recipient\":\"- Address which will recieve the deposit and leftover tokens.\"},\"returns\":{\"liquidity\":\"- Total liquidity sent to the farm (in lpTokens).\",\"sentA\":\"- Token A amount sent to the farm.\",\"sentB\":\"- Token B amount sent to the farm.\"}},\"distribute(address,address[],address[],address[],address[])\":{\"details\":\"Distributes tokens between users.\",\"params\":{\"lpStakingPool\":\"- LP pool to distribute tokens in.\",\"rewardTokenAToTokenARoute\":\"An array of token addresses.\",\"rewardTokenAToTokenBRoute\":\"An array of token addresses.\",\"rewardTokenBToTokenARoute\":\"An array of token addresses.\",\"rewardTokenBToTokenBRoute\":\"An array of token addresses. Note: This function can only be called by the distributor.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setExpectedReward(address,uint256,uint256)\":{\"details\":\"Sets expected reward amount and block for token distribution calculations.\",\"params\":{\"expectedReward\":\"- New reward amount.\",\"expectedRewardBlock\":\"- New reward block. Note: This function can only be called by the distributor.\",\"lpStakingPool\":\"- LP pool to check total deposits in.\"}},\"totalDeposits(address)\":{\"details\":\"Returns total amount locked in the pool. Doesn't take pending rewards into account.\",\"params\":{\"lpStakingPool\":\"- LP pool to check total deposits in.\"},\"returns\":{\"totalDepositsA\":\"- Token A deposits.\",\"totalDepositsB\":\"- Token B deposits.\",\"totalDepositsLP\":\"- Total deposits (in LP tokens).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userStake(address,address)\":{\"details\":\"Returns tokens staked by the {_address} for the given {lpPair}.\",\"params\":{\"_address\":\"- The address to check stakes for.\",\"lpStakingPool\":\"- LP pool to check stakes in.\"},\"returns\":{\"stakeA\":\"- Token A stake.\",\"stakeB\":\"- Token B stake.\",\"stakeLP\":\"- Total user stake(in LP tokens).\"}},\"withdraw(address,uint256,bool,address)\":{\"details\":\"Withdraws tokens from the given pool. \",\"params\":{\"amount\":\"- LP amount to withdraw. \",\"lpStakingPool\":\"- LP pool to withdraw from.\",\"recipient\":\"- The address which will recieve tokens.\",\"withdrawLP\":\"- True: Withdraw in LP tokens, False: Withdraw in normal tokens.\"},\"returns\":{\"amountA\":\"- Token A amount sent to the {recipient}, 0 if withdrawLP == false.\",\"amountB\":\"- Token B amount sent to the {recipient}, 0 if withdrawLP == false.\"}}},\"stateVariables\":{\"farmBeacon\":{\"details\":\"Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/QuickswapDualFarmFactoryBeacon.sol\":\"QuickswapDualFarmFactoryBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xfd0d01e9036a03e50a71009749b9bfe7570a8f5b852ea409f794debfdd646dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f55720689d7006549fdaf3d565351e053a8156347955e1682c97afe907358c65\",\"dweb:/ipfs/QmXmr8DBkEP4xKqgRBi32SRg4WKPqfgy49j5aHSYkLvhGm\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xdfddefa47c1f11dde2c3b5533c76ccef27a526985c74d9c917deb699d5d46a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd15423cc0456b783054f974bc88f25b88c99319a2cfec4b5745acfedbbd1d88\",\"dweb:/ipfs/QmZVXupWzRDTXynYd2GLtB9CTGF9ehrqzcPhqXNVZPDCTc\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x48f7fc8c916a93d6045745daf350662fc9a57de82c5c4b42259064be4c11ef84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b10768f1c512d367d20a323a0b447e4674896319a8a90a59aeec7296f84b26b\",\"dweb:/ipfs/QmPQLzwEKLTP7UUnG6gVx5Y832tkP8vSpjajrrdXXDE2Ne\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x94f08740b99a0997bc8363edb752b38354f730a38c54eb7bdd38a8a22ff34aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e27babc1cc78d71ddfa1474f9b2cb04517ef4570fc4c41ecfa97ecf6aa25e7bf\",\"dweb:/ipfs/QmePWVAAJdWJtfgKAPJe1kRgYxorkNEFhGrAN2jLLGiFTX\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x08f7ba4d76d3b55d78ce381ce83f96486711defc7524a8048101888297686903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa5ee00837907842e1f7ae3e85424a0fed8e64fa9d1541736c999e39d27c2f56\",\"dweb:/ipfs/QmNyvN6Zur8mZSGhheNE9xZzyPGutEkwKwuraUz3TX1urD\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xe237a2794a6588efdbf8cf998283ad188ac0e32d5f3e1d7d8d286fdac82863bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fdb06bd9dc4fc5c059e9f2748d73ac06331e4a7efed604584e02b3e3501aaaa\",\"dweb:/ipfs/QmaZ33qA3ahXjmo8Q6M9rayAbrkDgH8eAimfpZ2Drr2txW\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d874c66c21369dce8d3fe0b6c41316b0c289e45c0b4a77090c010ac2bb80e61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c0d714529b6514f623c6d023ab0594ee0801da8afd5ee8167c323da6f0979a\",\"dweb:/ipfs/QmTmhKaXGfu5MGKaz1Pcjrh9xWbkNtzFeok4PxaKREdf9X\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/QuickswapDualFarmFactoryBeacon.sol\":{\"keccak256\":\"0xa5da8093a5ecf08552ee46786d7d36b5a6815cb59795fbdeac9b5df04d4d99dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410644340d5ef3e2bcc0002daada2e52c26bbdf6fa0fe29f62d82df09b3b601a\",\"dweb:/ipfs/QmR9VNce2fr3J1WHgQZPH1evnjKieokxLjmYmcwfttRweY\"]},\"project:/contracts/farms/QuickswapDualFarmUpgradeable.sol\":{\"keccak256\":\"0xd0e4dda7ccc410fc6ecebb4501c5c57e3fc6b94982db99693a0ed6bc08d6b404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26f03e51c9825c8a6a25b68557d7ca30c281f2e088c9aae240d123ba94ab197d\",\"dweb:/ipfs/QmVywPPWKyo8q93Ys6nxvkBh65qLdcrtB4dEFW2SLejxjW\"]},\"project:/contracts/interfaces/IStakingDualRewards.sol\":{\"keccak256\":\"0xb66973d0379a9e1fe37d2b474720d055dbdeeca2324720bfa6a09941f18cac45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2a423dc664dba5965b3a93199556251124dbe9739a67f6b155f4630b46bef56\",\"dweb:/ipfs/QmWAqsLtZPf4wLAPpcDYVLogfiWBBMx2CRpbbD7Fp4XPSJ\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x1530b00512450cd32128a92e9444a96da92399a84ab1e1a3539b4817cf91676b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e40fa52888c0351f252749cdeb252ea4cdecbfd893e31563a606cc5cf455aa2a\",\"dweb:/ipfs/QmUah3Qkt6U8WErkh6TDdZwwgcXRzMmzrFKeuoHr8KmiaN\"]},\"project:/contracts/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0xec9edfa4778dfd003d2f53807fc04f5274d28ade94226f7df74957de7c07111a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f9089e0dcf2871197521b6f84f353b9d63816bfa0c1a2ba64379492ffc77f53\",\"dweb:/ipfs/QmSnAv4R1MWmxjHh37Tp2yfHMQdnfPA9T17rTiLprixy2i\"]},\"project:/contracts/utils/OwnableUpgradeableNoTransfer.sol\":{\"keccak256\":\"0x70029c5daf701eaf30f018115a9693cdc7b7d4332e8bacd748c25796f665acfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c311a78f131f9ec4b8111f915d027252ff3ab28a9637e76b07456792f8a22f0c\",\"dweb:/ipfs/QmdxCEDNWG5bHrH4E5HXCZ7UCw18FcsR782X9FBAwH1aWm\"]},\"project:/contracts/utils/UniswapV2ERC20.sol\":{\"keccak256\":\"0xbbbdc4a6ddfda4fb96183c620b03f783f89bb30356c1516de9de2f546df7432c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fa75bf9cb3deb89b16f30305a869f0263a4aec4be646743ab8b139e3cb02e7c\",\"dweb:/ipfs/QmRAXoB5ygYxoAKNej9vmDtsfkXxbvbpSkvWza5YZp6WWh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615ef8806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620001065760003560e01c8063081e3eda146200010b5780633f4ba83a1462000121578063430004c1146200012d57806351bdca3e146200015a5780635c975abb146200018d578063613c91af14620001a4578063715018a614620001bb5780637c770aae14620001c55780638456cb5914620001dc5780638da5cb5b14620001e6578063bfe1092814620001ff578063c4d66de81462000213578063d2dd71ad146200022a578063d95a4d931462000241578063e23329081462000255578063e9403256146200026c578063ecb039431462000283578063f2fde38b146200029a578063f9d9331d14620002b1575b600080fd5b609a546040519081526020015b60405180910390f35b6200012b620002dd565b005b620001446200013e36600462001808565b62000326565b6040805192835260208301919091520162000118565b620001716200016b36600462001862565b6200045f565b6040805193845260208401929092529082015260600162000118565b60335460ff16604051901515815260200162000118565b6200012b620001b5366004620018a0565b62000526565b6200012b620005de565b62000171620001d6366004620018d8565b6200068a565b6200012b620009b1565b620001f0620009ef565b60405162000118919062001933565b609854620001f0906001600160a01b031681565b6200012b6200022436600462001947565b620009fe565b6200012b6200023b366004620019ae565b62000b67565b609754620001f0906001600160a01b031681565b6200012b6200026636600462001947565b62000c8c565b620001716200027d36600462001947565b62000d0a565b620001f06200029436600462001a95565b62000dc9565b6200012b620002ab36600462001947565b62000df4565b620001f0620002c236600462001947565b6099602052600090815260409020546001600160a01b031681565b33620002e8620009ef565b6001600160a01b0316146200031a5760405162461bcd60e51b8152600401620003119062001aaf565b60405180910390fd5b6200032462000eb0565b565b6000806200033660335460ff1690565b15620003565760405162461bcd60e51b8152600401620003119062001ae4565b6001600160a01b03868116600090815260996020526040902054166200037b57600080fd5b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af1158015620003eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000411919062001b0e565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526099602052604081205490918291829116156200051f576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b90620004c790889060040162001933565b602060405180830381865afa158015620004e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050b919062001b33565b925062000519848462000f41565b90925090505b9250925092565b6098546001600160a01b031633146200053e57600080fd5b6001600160a01b03838116600090815260996020526040902054166200056357600080fd5b6001600160a01b0383811660009081526099602052604090819020549051631d1b53a960e31b8152600481018590526024810184905291169063e8da9d4890604401600060405180830381600087803b158015620005c057600080fd5b505af1158015620005d5573d6000803e3d6000fd5b50505050505050565b33620005e9620009ef565b6001600160a01b031614620006125760405162461bcd60e51b8152600401620003119062001aaf565b6200061e60006200126e565b609760009054906101000a90046001600160a01b03166001600160a01b031663715018a66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200066f57600080fd5b505af115801562000684573d6000803e3d6000fd5b50505050565b60008060006200069c60335460ff1690565b15620006bc5760405162461bcd60e51b8152600401620003119062001ae4565b6001600160a01b03858116600090815260996020526040902054166200074f57620006e785620012c0565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b8715620007f0576001600160a01b0380861660009081526099602090815260409182902054825162fc63d160e41b81529251620007f09433949216928d928492630fc63d10926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007de919062001b4d565b6001600160a01b031692919062001397565b86156200085a576001600160a01b03808616600090815260996020908152604091829020548251635f64b55b60e01b815292516200085a9433949216928c928492635f64b55b926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b8515620008c4576001600160a01b0380861660009081526099602090815260409182902054825163452ed4f160e01b81529251620008c49433949216928b92849263452ed4f1926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af115801562000935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095b919062001b6d565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b33620009bc620009ef565b6001600160a01b031614620009e55760405162461bcd60e51b8152600401620003119062001aaf565b62000324620013f3565b6065546001600160a01b031690565b600054610100900460ff1662000a1b5760005460ff161562000a25565b62000a256200144f565b62000a8a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000311565b600054610100900460ff1615801562000aad576000805461ffff19166101011790555b62000ab762001462565b62000ac162001496565b60405162000acf90620017b6565b604051809103906000f08015801562000aec573d6000803e3d6000fd5b5060405162000afb90620017c4565b62000b07919062001933565b604051809103906000f08015801562000b24573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b039290921691909117905562000b508262000df4565b801562000b63576000805461ff00191690555b5050565b6098546001600160a01b0316331462000b7f57600080fd5b60335460ff161562000ba55760405162461bcd60e51b8152600401620003119062001ae4565b6001600160a01b038981166000908152609960205260409020541662000bca57600080fd5b6001600160a01b03808a16600090815260996020526040908190205490516373ad67d760e01b81529116906373ad67d79062000c19908b908b908b908b908b908b908b908b9060040162001be9565b600060405180830381600087803b15801562000c3457600080fd5b505af115801562000c49573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b3362000c97620009ef565b6001600160a01b03161462000cc05760405162461bcd60e51b8152600401620003119062001aaf565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000dc2576001600160a01b03808516600090815260996020908152604091829020548251637d88209760e01b81529251931692637d8820979260048082019392918290030181865afa15801562000d88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dae919062001b33565b925062000dbc848462000f41565b90925090505b9193909250565b609a818154811062000dda57600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000dff620009ef565b6001600160a01b03161462000e285760405162461bcd60e51b8152600401620003119062001aaf565b6001600160a01b03811662000e3c57600080fd5b62000e47816200126e565b60975460405163f2fde38b60e01b81526001600160a01b039091169063f2fde38b9062000e7990849060040162001933565b600060405180830381600087803b15801562000e9457600080fd5b505af115801562000ea9573d6000803e3d6000fd5b5050505050565b60335460ff1662000efb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640162000311565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000f37919062001933565b60405180910390a1565b6001600160a01b0382811660009081526099602052604081205490918291161562001267576001600160a01b03808516600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000fbe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fe4919062001b4d565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001027573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200104d919062001b33565b6001600160a01b0380881660009081526099602090815260409182902054825162fc63d160e41b815292519495508594931692630fc63d109260048082019392918290030181865afa158015620010a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ce919062001b4d565b6001600160a01b03166370a08231846040518263ffffffff1660e01b8152600401620010fb919062001933565b602060405180830381865afa15801562001119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200113f919062001b33565b6200114b908762001c51565b62001157919062001c7f565b6001600160a01b03808816600090815260996020908152604091829020548251635f64b55b60e01b815292519498508594931692635f64b55b9260048082019392918290030181865afa158015620011b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011d9919062001b4d565b6001600160a01b03166370a08231846040518263ffffffff1660e01b815260040162001206919062001933565b602060405180830381865afa15801562001224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200124a919062001b33565b62001256908762001c51565b62001262919062001c7f565b925050505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b90620012f090869060240162001933565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516200132f90620017d2565b6200133c92919062001cff565b604051809103906000f08015801562001359573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905262000684908590620014ca565b60335460ff1615620014195760405162461bcd60e51b8152600401620003119062001ae4565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000f283390565b60006200145c30620015a8565b15905090565b600054610100900460ff166200148c5760405162461bcd60e51b8152600401620003119062001d25565b62000324620015b7565b600054610100900460ff16620014c05760405162461bcd60e51b8152600401620003119062001d25565b62000324620015ed565b600062001521826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620016229092919063ffffffff16565b805190915015620015a3578080602001905181019062001542919062001d70565b620015a35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000311565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620015e15760405162461bcd60e51b8152600401620003119062001d25565b6033805460ff19169055565b600054610100900460ff16620016175760405162461bcd60e51b8152600401620003119062001d25565b62000324336200126e565b60606200163384846000856200163d565b90505b9392505050565b606082471015620016a05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000311565b620016ab85620015a8565b620016f95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000311565b600080866001600160a01b0316858760405162001717919062001d90565b60006040518083038185875af1925050503d806000811462001756576040519150601f19603f3d011682016040523d82523d6000602084013e6200175b565b606091505b50915091506200176d82828662001778565b979650505050505050565b606083156200178957508162001636565b8251156200179a5782518084602001fd5b8160405162461bcd60e51b815260040162000311919062001dae565b6132768062001dc483390190565b610523806200503a83390190565b610966806200555d83390190565b6001600160a01b0381168114620017f657600080fd5b50565b8015158114620017f657600080fd5b600080600080608085870312156200181f57600080fd5b84356200182c81620017e0565b93506020850135925060408501356200184581620017f9565b915060608501356200185781620017e0565b939692955090935050565b600080604083850312156200187657600080fd5b82356200188381620017e0565b915060208301356200189581620017e0565b809150509250929050565b600080600060608486031215620018b657600080fd5b8335620018c381620017e0565b95602085013595506040909401359392505050565b600080600080600060a08688031215620018f157600080fd5b85359450602086013593506040860135925060608601356200191381620017e0565b915060808601356200192581620017e0565b809150509295509295909350565b6001600160a01b0391909116815260200190565b6000602082840312156200195a57600080fd5b81356200163681620017e0565b60008083601f8401126200197a57600080fd5b5081356001600160401b038111156200199257600080fd5b6020830191508360208260051b85010111156200126757600080fd5b600080600080600080600080600060a08a8c031215620019cd57600080fd5b8935620019da81620017e0565b985060208a01356001600160401b0380821115620019f757600080fd5b62001a058d838e0162001967565b909a50985060408c013591508082111562001a1f57600080fd5b62001a2d8d838e0162001967565b909850965060608c013591508082111562001a4757600080fd5b62001a558d838e0162001967565b909650945060808c013591508082111562001a6f57600080fd5b5062001a7e8c828d0162001967565b915080935050809150509295985092959850929598565b60006020828403121562001aa857600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000806040838503121562001b2257600080fd5b505080516020909101519092909150565b60006020828403121562001b4657600080fd5b5051919050565b60006020828403121562001b6057600080fd5b81516200163681620017e0565b60008060006060848603121562001b8357600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b8581101562001bde57813562001bc281620017e0565b6001600160a01b03168752958201959082019060010162001bac565b509495945050505050565b60808152600062001bff608083018a8c62001b9c565b828103602084015262001c1481898b62001b9c565b9050828103604084015262001c2b81878962001b9c565b9050828103606084015262001c4281858762001b9c565b9b9a5050505050505050505050565b600081600019048311821515161562001c7a57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001c9d57634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101562001cbf57818101518382015260200162001ca5565b83811115620006845750506000910152565b6000815180845262001ceb81602086016020860162001ca2565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620016339083018462001cd1565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121562001d8357600080fd5b81516200163681620017f9565b6000825162001da481846020870162001ca2565b9190910192915050565b60208152600062001636602083018462001cd156fe60a06040523060805234801561001457600080fd5b50600160685560805161322c61004a600039600081816105f7015281816106400152818161099601526109d6015261322c6000f3fe60806040526004361061011b5760003560e01c80630103c92b1461012057806306fdde0314610153578063095ea7b3146101925780630fc63d10146101c257806318160ddd146101ef57806323b872dd14610205578063313ce567146102255780633659cfe61461024c578063430004c11461026e578063452ed4f1146102a35780634f1ef286146102c35780635f64b55b146102d65780636b8ba92c146102f657806370a082311461031657806373ad67d7146103435780637d882097146103635780638da5cb5b1461037957806395d89b411461038e578063a9059cbb146103bd578063aa7b83e3146103dd578063c4d66de8146103fd578063dd62ed3e1461041d578063e8da9d4814610455578063fad3cc4b14610475575b600080fd5b34801561012c57600080fd5b5061014061013b3660046128b4565b6104b0565b6040519081526020015b60405180910390f35b34801561015f57600080fd5b50610185604051806040016040528060068152602001650556e6f2d4c560d41b81525081565b60405161014a9190612901565b34801561019e57600080fd5b506101b26101ad366004612934565b610541565b604051901515815260200161014a565b3480156101ce57600080fd5b50606c546101e2906001600160a01b031681565b60405161014a9190612960565b3480156101fb57600080fd5b5061014060005481565b34801561021157600080fd5b506101b2610220366004612974565b610557565b34801561023157600080fd5b5061023a601281565b60405160ff909116815260200161014a565b34801561025857600080fd5b5061026c6102673660046128b4565b6105ec565b005b34801561027a57600080fd5b5061028e6102893660046129c3565b6106be565b6040805192835260208301919091520161014a565b3480156102af57600080fd5b50606b546101e2906001600160a01b031681565b61026c6102d1366004612a5c565b61098b565b3480156102e257600080fd5b50606d546101e2906001600160a01b031681565b34801561030257600080fd5b506069546101e2906001600160a01b031681565b34801561032257600080fd5b506101406103313660046128b4565b60016020526000908152604090205481565b34801561034f57600080fd5b5061026c61035e366004612b4e565b610a45565b34801561036f57600080fd5b5061014060775481565b34801561038557600080fd5b506101e261114a565b34801561039a57600080fd5b50610185604051806040016040528060038152602001620554c560ec1b81525081565b3480156103c957600080fd5b506101b26103d8366004612934565b611159565b3480156103e957600080fd5b50606a546101e2906001600160a01b031681565b34801561040957600080fd5b5061026c6104183660046128b4565b611166565b34801561042957600080fd5b50610140610438366004612c11565b600260209081526000928352604080842090915290825290205481565b34801561046157600080fd5b5061026c610470366004612c4a565b611798565b34801561048157600080fd5b50610495610490366004612c6c565b6117b4565b6040805193845260208401929092529082015260600161014a565b6001600160a01b0381166000908152607660209081526040808320607154845290915281205460ff16156104fa57506001600160a01b031660009081526073602052604090205490565b60005461050957506000919050565b600080546001600160a01b038416825260016020526040909120546077546105319190612cb8565b61053b9190612cd7565b92915050565b600061054e338484611a76565b50600192915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146105d6576001600160a01b03841660009081526002602090815260408083203384529091529020546105b19083611ad8565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6105e1848484611ae4565b5060015b9392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561063e5760405162461bcd60e51b815260040161063590612cf9565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610670611b78565b6001600160a01b0316146106965760405162461bcd60e51b815260040161063590612d33565b61069f81611b94565b604080516000808252602082019092526106bb91839190611bb0565b50565b600080336106ca61114a565b6001600160a01b0316146106dd57600080fd5b600260685414156107005760405162461bcd60e51b815260040161063590612d6d565b6002606855841580159061072b57506001600160a01b03861660009081526073602052604090205415155b61073457600080fd5b61073d86611cf7565b600043606f54111561075e5743606f546107579190612da4565b9050610770565b600260725461076d9190612cd7565b90505b6000607854826077546107839190612cb8565b61078d9190612dbb565b9050600061079b8389612cb8565b6107a59083612da4565b6001600160a01b038a16600090815260736020526040812080549293508a929091906107d2908490612da4565b9250508190555087607760008282546107eb9190612da4565b90915550506070548290610800908390612cb8565b61080a9190612cd7565b60705561081883828b611e87565b606e54604051632e1a7d4d60e01b8152600481018a90526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561085e57600080fd5b505af1158015610872573d6000803e3d6000fd5b5050505086156108a257606b54610893906001600160a01b0316878a612026565b6000809450945050505061097b565b606c54606d546000805160206131d78339815191529163baa2abde916001600160a01b0391821691168b6000808c6108dc42610258612dbb565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af115801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190612dd3565b90955093505050505b6001606855909590945092505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109d45760405162461bcd60e51b815260040161063590612cf9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a06611b78565b6001600160a01b031614610a2c5760405162461bcd60e51b815260040161063590612d33565b610a3582611b94565b610a4182826001611bb0565b5050565b33610a4e61114a565b6001600160a01b031614610a6157600080fd5b60026068541415610a845760405162461bcd60e51b815260040161063590612d6d565b6002606855607754610a9557600080fd5b606e60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ae557600080fd5b505af1158015610af9573d6000803e3d6000fd5b50506069546040516370a0823160e01b815260009350600292506001600160a01b03909116906370a0823190610b33903090600401612960565b602060405180830381865afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190612df7565b610b7e9190612cd7565b606a546040516370a0823160e01b81529192506000916002916001600160a01b0316906370a0823190610bb5903090600401612960565b602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190612df7565b610c009190612cd7565b90506000610c1042610258612dbb565b606954606c549192506001600160a01b03918216911614610cb9576000805160206131d78339815191526001600160a01b03166338ed17398460008e8e30876040518763ffffffff1660e01b8152600401610c7096959493929190612e10565b6000604051808303816000875af1158015610c8f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb79190810190612e83565b505b606954606d546001600160a01b03908116911614610d56576040516338ed173960e01b81526000805160206131d7833981519152906338ed173990610d0d9086906000908e908e9030908990600401612e10565b6000604051808303816000875af1158015610d2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d549190810190612e83565b505b606a54606c546001600160a01b03908116911614610df3576040516338ed173960e01b81526000805160206131d7833981519152906338ed173990610daa9085906000908c908c9030908990600401612e10565b6000604051808303816000875af1158015610dc9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610df19190810190612e83565b505b606a54606d546001600160a01b03908116911614610e90576040516338ed173960e01b81526000805160206131d7833981519152906338ed173990610e479085906000908a908a9030908990600401612e10565b6000604051808303816000875af1158015610e66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8e9190810190612e83565b505b606c546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610ec1903090600401612960565b602060405180830381865afa158015610ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f029190612df7565b606d546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610f38903090600401612960565b602060405180830381865afa158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f799190612df7565b606c54606d5460405162e8e33760e81b81529293506000805160206131d78339815191529263e8e3370092610fcc926001600160a01b039182169291169087908790600190819030908d90600401612f28565b6060604051808303816000875af1158015610feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100f9190612f71565b5050606b546040516370a0823160e01b8152600092506001600160a01b03909116906370a0823190611045903090600401612960565b602060405180830381865afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110869190612df7565b905080156111045780607760008282546110a09190612dbb565b9091555050606e5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156110eb57600080fd5b505af11580156110ff573d6000803e3d6000fd5b505050505b6071546111119043612da4565b60728190556111319082906111269043612dbb565b607091909155606f55565b5050436071555050600160685550505050505050505050565b6036546001600160a01b031690565b600061054e338484611ae4565b600354610100900460ff166111815760035460ff1615611189565b61118961207c565b6111a55760405162461bcd60e51b815260040161063590612f9f565b600354610100900460ff161580156111c7576003805461ffff19166101011790555b6111cf61208d565b606e80546001600160a01b0319166001600160a01b038416908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190612fed565b606b80546001600160a01b0319166001600160a01b03928316179055606e54604080516317f4408360e21b815290519190921691635fd1020c9160048083019260209291908290030181865afa1580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce9190612fed565b606980546001600160a01b0319166001600160a01b03928316179055606e5460408051634462633360e11b8152905191909216916388c4c6669160048083019260209291908290030181865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113509190612fed565b606a80546001600160a01b0319166001600160a01b03928316179055606b5460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156113ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d29190612fed565b606c80546001600160a01b0319166001600160a01b03928316179055606b546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015611430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114549190612fed565b606d80546001600160a01b0319166001600160a01b03928316179055606b5460405163095ea7b360e01b815260001992919091169063095ea7b39061149f908690859060040161300a565b6020604051808303816000875af11580156114be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e29190613023565b50606b5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611523906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af1158015611542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115669190613023565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906115a7906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af11580156115c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ea9190613023565b50606a5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b39061162b906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af115801561164a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166e9190613023565b50606c5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906116af906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af11580156116ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f29190613023565b50606d5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611733906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af1158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190613023565b50504360715562124f806072558015610a41576003805461ff00191690555050565b336117a161114a565b6001600160a01b03161461112657600080fd5b60008080336117c161114a565b6001600160a01b0316146117d457600080fd5b600260685414156117f75760405162461bcd60e51b815260040161063590612d6d565b60026068556000871580159061180d5750600087115b156118bb57606c54606d546000805160206131d78339815191529163e8e33700916001600160a01b0391821691168b8b6000803061184d42610258612dbb565b6040518963ffffffff1660e01b8152600401611870989796959493929190612f28565b6060604051808303816000875af115801561188f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b39190612f71565b919550935090505b6118c58682612dbb565b9150600082116118d457600080fd5b6118dd85611cf7565b600043606f5411156118fe5743606f546118f79190612da4565b9050611910565b600260725461190d9190612cd7565b90505b6000607854826077546119239190612cb8565b61192d9190612dbb565b905060008161193c8487612cb8565b6119469190612dbb565b6001600160a01b038916600090815260736020526040812080549293508792909190611973908490612dbb565b92505081905550846077600082825461198c9190612dbb565b909155505081156119b45781816070546119a69190612cb8565b6119b09190612cd7565b6070555b6119bf83828a612112565b606e5460405163534a7e1d60e11b8152600481018790526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611a0557600080fd5b505af1158015611a19573d6000803e3d6000fd5b50505050611a4088888d611a2d9190612da4565b606c546001600160a01b03169190612026565b611a6188611a4e888d612da4565b606d546001600160a01b03169190612026565b50506001606855509297919650945092505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105e58284612da4565b6001600160a01b038316600090815260016020526040902054611b079082611ad8565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611b369082612282565b6001600160a01b0380841660008181526001602052604090819020939093559151908516906000805160206131b783398151915290611acb9085815260200190565b600080516020613170833981519152546001600160a01b031690565b33611b9d61114a565b6001600160a01b0316146106bb57600080fd5b6000611bba611b78565b9050611bc58461228e565b600083511180611bd25750815b15611be357611be18484612321565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16611cf057805460ff19166001178155604051611c5e908690611c2f908590602401612960565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052612321565b50805460ff19168155611c6f611b78565b6001600160a01b0316826001600160a01b031614611ce75760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610635565b611cf085612346565b5050505050565b6001600160a01b0381166000908152607660209081526040808320607154845290915290205460ff1615611d91576001600160a01b038116600090815260736020908152604080832054607590925290912054611d549043612da4565b611d5e9190612cb8565b6001600160a01b03821660009081526074602052604081208054909190611d86908490612dbb565b90915550611e069050565b611d9a816104b0565b6001600160a01b0382166000908152607360205260409020819055607154611dc29043612da4565b611dcc9190612cb8565b6001600160a01b038216600090815260746020908152604080832093909355607681528282206071548352905220805460ff191660011790555b6071546079541115611e4857607754607954611e229043612da4565b611e2c9190612cb8565b60786000828254611e3d9190612dbb565b90915550611e669050565b607754607154611e589043612da4565b611e629190612cb8565b6078555b6001600160a01b031660009081526075602052604090204390819055607955565b6001600160a01b038116600090815260736020526040902054611ecd576001600160a01b038116600090815260016020526040902054611ec8908290612386565b505050565b600080546001600160a01b038316825260016020526040909120541415611ef357505050565b6001600160a01b0381166000908152607460209081526040808320546073909252822054849190611f25908790612cb8565b611f2f9190612dbb565b607054611f3c9190612cb8565b611f469190612cd7565b90506000607054607754611f5a9190612dbb565b6001600160a01b038416600090815260736020526040902054611f7e908490612dbb565b611f8a6012600a613124565b611f949190612cb8565b611f9e9190612cd7565b9050611cf08382611fb16012600a613124565b611fbb9190612da4565b611fc76012600a613124565b600054611fd49086612cb8565b611fde9190612cd7565b6001600160a01b0387166000908152600160205260409020546120019190612da4565b61200d6012600a613124565b6120179190612cb8565b6120219190612cd7565b612386565b611ec88363a9059cbb60e01b848460405160240161204592919061300a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612406565b6000612087306124d8565b15905090565b600354610100900460ff166120a85760035460ff16156120b0565b6120b061207c565b6120cc5760405162461bcd60e51b815260040161063590612f9f565b600354610100900460ff161580156120ee576003805461ffff19166101011790555b6120f66124e7565b6120fe612554565b80156106bb576003805461ff001916905550565b60005461212e57611ec8816121296012600a613124565b6125db565b600080546001600160a01b03831682526001602052604090912054141561215457505050565b6001600160a01b0381166000908152607460209081526040808320546073909252822054849190612186908790612cb8565b6121909190612dbb565b60705461219d9190612cb8565b6121a79190612cd7565b905060006070546077546121bb9190612dbb565b6001600160a01b0384166000908152607360205260409020546121df908490612dbb565b6121eb6012600a613124565b6121f59190612cb8565b6121ff9190612cd7565b9050611cf083826122126012600a613124565b61221c9190612da4565b6001600160a01b0386166000908152600160205260409020546122416012600a613124565b60005461224e9087612cb8565b6122589190612cd7565b6122629190612da4565b61226e6012600a613124565b6122789190612cb8565b6121299190612cd7565b60006105e58284612dbb565b803b6122f25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610635565b60008051602061317083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606105e583836040518060600160405280602781526020016131906027913961264c565b61234f8161228e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0382166000908152600160205260409020546123a99082611ad8565b6001600160a01b038316600090815260016020526040812091909155546123d09082611ad8565b60009081556040518281526001600160a01b038416906000805160206131b7833981519152906020015b60405180910390a35050565b600061245b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127209092919063ffffffff16565b805190915015611ec857808060200190518101906124799190613023565b611ec85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610635565b6001600160a01b03163b151590565b600354610100900460ff166125525760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610635565b565b600354610100900460ff1661256f5760035460ff1615612577565b61257761207c565b6125935760405162461bcd60e51b815260040161063590612f9f565b600354610100900460ff161580156125b5576003805461ffff19166101011790555b603680546001600160a01b0319163317905580156106bb576003805461ff001916905550565b6000546125e89082612282565b60009081556001600160a01b03831681526001602052604090205461260d9082612282565b6001600160a01b0383166000818152600160205260408082209390935591519091906000805160206131b7833981519152906123fa9085815260200190565b6060833b6126ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610635565b600080856001600160a01b0316856040516126c69190613133565b600060405180830381855af49150503d8060008114612701576040519150601f19603f3d011682016040523d82523d6000602084013e612706565b606091505b5091509150612716828286612737565b9695505050505050565b606061272f8484600085612770565b949350505050565b606083156127465750816105e5565b8251156127565782518084602001fd5b8160405162461bcd60e51b81526004016106359190612901565b6060824710156127d15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610635565b6127da856124d8565b6128265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610635565b600080866001600160a01b031685876040516128429190613133565b60006040518083038185875af1925050503d806000811461287f576040519150601f19603f3d011682016040523d82523d6000602084013e612884565b606091505b5091509150612894828286612737565b979650505050505050565b6001600160a01b03811681146106bb57600080fd5b6000602082840312156128c657600080fd5b81356105e58161289f565b60005b838110156128ec5781810151838201526020016128d4565b838111156128fb576000848401525b50505050565b60208152600082518060208401526129208160408501602087016128d1565b601f01601f19169190910160400192915050565b6000806040838503121561294757600080fd5b82356129528161289f565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60008060006060848603121561298957600080fd5b83356129948161289f565b925060208401356129a48161289f565b929592945050506040919091013590565b80151581146106bb57600080fd5b600080600080608085870312156129d957600080fd5b84356129e48161289f565b93506020850135925060408501356129fb816129b5565b91506060850135612a0b8161289f565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612a5457612a54612a16565b604052919050565b60008060408385031215612a6f57600080fd5b8235612a7a8161289f565b91506020838101356001600160401b0380821115612a9757600080fd5b818601915086601f830112612aab57600080fd5b813581811115612abd57612abd612a16565b612acf601f8201601f19168501612a2c565b91508082528784828501011115612ae557600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f840112612b1557600080fd5b5081356001600160401b03811115612b2c57600080fd5b6020830191508360208260051b8501011115612b4757600080fd5b9250929050565b6000806000806000806000806080898b031215612b6a57600080fd5b88356001600160401b0380821115612b8157600080fd5b612b8d8c838d01612b03565b909a50985060208b0135915080821115612ba657600080fd5b612bb28c838d01612b03565b909850965060408b0135915080821115612bcb57600080fd5b612bd78c838d01612b03565b909650945060608b0135915080821115612bf057600080fd5b50612bfd8b828c01612b03565b999c989b5096995094979396929594505050565b60008060408385031215612c2457600080fd5b8235612c2f8161289f565b91506020830135612c3f8161289f565b809150509250929050565b60008060408385031215612c5d57600080fd5b50508035926020909101359150565b60008060008060808587031215612c8257600080fd5b8435935060208501359250604085013591506060850135612a0b8161289f565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612cd257612cd2612ca2565b500290565b600082612cf457634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602c9082015260008051602061315083398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061315083398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082821015612db657612db6612ca2565b500390565b60008219821115612dce57612dce612ca2565b500190565b60008060408385031215612de657600080fd5b505080516020909101519092909150565b600060208284031215612e0957600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015612e62578335612e478161289f565b6001600160a01b031682529282019290820190600101612e34565b506001600160a01b0396909616606085015250505060800152949350505050565b60006020808385031215612e9657600080fd5b82516001600160401b0380821115612ead57600080fd5b818501915085601f830112612ec157600080fd5b815181811115612ed357612ed3612a16565b8060051b9150612ee4848301612a2c565b8181529183018401918481019088841115612efe57600080fd5b938501935b83851015612f1c57845182529385019390850190612f03565b98975050505050505050565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612f8657600080fd5b8351925060208401519150604084015190509250925092565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215612fff57600080fd5b81516105e58161289f565b6001600160a01b03929092168252602082015260400190565b60006020828403121561303557600080fd5b81516105e5816129b5565b600181815b8085111561307b57816000190482111561306157613061612ca2565b8085161561306e57918102915b93841c9390800290613045565b509250929050565b6000826130925750600161053b565b8161309f5750600061053b565b81600181146130b557600281146130bf576130db565b600191505061053b565b60ff8411156130d0576130d0612ca2565b50506001821b61053b565b5060208310610133831016604e8410600b84101617156130fe575081810a61053b565b6131088383613040565b806000190482111561311c5761311c612ca2565b029392505050565b60006105e560ff841683613083565b600082516131458184602087016128d1565b919091019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ffa264697066735822122038e5bd2bab34b773553182b20653049b1cc1921ce0b02dc9412903e88451d7bd64736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209ffba0d4fc9203d79110f5b2c6c39c98f2dbdc43f599fb4e774f98346dcb444a64736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001065760003560e01c8063081e3eda146200010b5780633f4ba83a1462000121578063430004c1146200012d57806351bdca3e146200015a5780635c975abb146200018d578063613c91af14620001a4578063715018a614620001bb5780637c770aae14620001c55780638456cb5914620001dc5780638da5cb5b14620001e6578063bfe1092814620001ff578063c4d66de81462000213578063d2dd71ad146200022a578063d95a4d931462000241578063e23329081462000255578063e9403256146200026c578063ecb039431462000283578063f2fde38b146200029a578063f9d9331d14620002b1575b600080fd5b609a546040519081526020015b60405180910390f35b6200012b620002dd565b005b620001446200013e36600462001808565b62000326565b6040805192835260208301919091520162000118565b620001716200016b36600462001862565b6200045f565b6040805193845260208401929092529082015260600162000118565b60335460ff16604051901515815260200162000118565b6200012b620001b5366004620018a0565b62000526565b6200012b620005de565b62000171620001d6366004620018d8565b6200068a565b6200012b620009b1565b620001f0620009ef565b60405162000118919062001933565b609854620001f0906001600160a01b031681565b6200012b6200022436600462001947565b620009fe565b6200012b6200023b366004620019ae565b62000b67565b609754620001f0906001600160a01b031681565b6200012b6200026636600462001947565b62000c8c565b620001716200027d36600462001947565b62000d0a565b620001f06200029436600462001a95565b62000dc9565b6200012b620002ab36600462001947565b62000df4565b620001f0620002c236600462001947565b6099602052600090815260409020546001600160a01b031681565b33620002e8620009ef565b6001600160a01b0316146200031a5760405162461bcd60e51b8152600401620003119062001aaf565b60405180910390fd5b6200032462000eb0565b565b6000806200033660335460ff1690565b15620003565760405162461bcd60e51b8152600401620003119062001ae4565b6001600160a01b03868116600090815260996020526040902054166200037b57600080fd5b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af1158015620003eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000411919062001b0e565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526099602052604081205490918291829116156200051f576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b90620004c790889060040162001933565b602060405180830381865afa158015620004e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050b919062001b33565b925062000519848462000f41565b90925090505b9250925092565b6098546001600160a01b031633146200053e57600080fd5b6001600160a01b03838116600090815260996020526040902054166200056357600080fd5b6001600160a01b0383811660009081526099602052604090819020549051631d1b53a960e31b8152600481018590526024810184905291169063e8da9d4890604401600060405180830381600087803b158015620005c057600080fd5b505af1158015620005d5573d6000803e3d6000fd5b50505050505050565b33620005e9620009ef565b6001600160a01b031614620006125760405162461bcd60e51b8152600401620003119062001aaf565b6200061e60006200126e565b609760009054906101000a90046001600160a01b03166001600160a01b031663715018a66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200066f57600080fd5b505af115801562000684573d6000803e3d6000fd5b50505050565b60008060006200069c60335460ff1690565b15620006bc5760405162461bcd60e51b8152600401620003119062001ae4565b6001600160a01b03858116600090815260996020526040902054166200074f57620006e785620012c0565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b8715620007f0576001600160a01b0380861660009081526099602090815260409182902054825162fc63d160e41b81529251620007f09433949216928d928492630fc63d10926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007de919062001b4d565b6001600160a01b031692919062001397565b86156200085a576001600160a01b03808616600090815260996020908152604091829020548251635f64b55b60e01b815292516200085a9433949216928c928492635f64b55b926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b8515620008c4576001600160a01b0380861660009081526099602090815260409182902054825163452ed4f160e01b81529251620008c49433949216928b92849263452ed4f1926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af115801562000935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095b919062001b6d565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b33620009bc620009ef565b6001600160a01b031614620009e55760405162461bcd60e51b8152600401620003119062001aaf565b62000324620013f3565b6065546001600160a01b031690565b600054610100900460ff1662000a1b5760005460ff161562000a25565b62000a256200144f565b62000a8a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000311565b600054610100900460ff1615801562000aad576000805461ffff19166101011790555b62000ab762001462565b62000ac162001496565b60405162000acf90620017b6565b604051809103906000f08015801562000aec573d6000803e3d6000fd5b5060405162000afb90620017c4565b62000b07919062001933565b604051809103906000f08015801562000b24573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b039290921691909117905562000b508262000df4565b801562000b63576000805461ff00191690555b5050565b6098546001600160a01b0316331462000b7f57600080fd5b60335460ff161562000ba55760405162461bcd60e51b8152600401620003119062001ae4565b6001600160a01b038981166000908152609960205260409020541662000bca57600080fd5b6001600160a01b03808a16600090815260996020526040908190205490516373ad67d760e01b81529116906373ad67d79062000c19908b908b908b908b908b908b908b908b9060040162001be9565b600060405180830381600087803b15801562000c3457600080fd5b505af115801562000c49573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b3362000c97620009ef565b6001600160a01b03161462000cc05760405162461bcd60e51b8152600401620003119062001aaf565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000dc2576001600160a01b03808516600090815260996020908152604091829020548251637d88209760e01b81529251931692637d8820979260048082019392918290030181865afa15801562000d88573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dae919062001b33565b925062000dbc848462000f41565b90925090505b9193909250565b609a818154811062000dda57600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000dff620009ef565b6001600160a01b03161462000e285760405162461bcd60e51b8152600401620003119062001aaf565b6001600160a01b03811662000e3c57600080fd5b62000e47816200126e565b60975460405163f2fde38b60e01b81526001600160a01b039091169063f2fde38b9062000e7990849060040162001933565b600060405180830381600087803b15801562000e9457600080fd5b505af115801562000ea9573d6000803e3d6000fd5b5050505050565b60335460ff1662000efb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640162000311565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000f37919062001933565b60405180910390a1565b6001600160a01b0382811660009081526099602052604081205490918291161562001267576001600160a01b03808516600090815260996020908152604080832054815163452ed4f160e01b815291519394169263452ed4f1926004808401939192918290030181865afa15801562000fbe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fe4919062001b4d565b90506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001027573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200104d919062001b33565b6001600160a01b0380881660009081526099602090815260409182902054825162fc63d160e41b815292519495508594931692630fc63d109260048082019392918290030181865afa158015620010a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ce919062001b4d565b6001600160a01b03166370a08231846040518263ffffffff1660e01b8152600401620010fb919062001933565b602060405180830381865afa15801562001119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200113f919062001b33565b6200114b908762001c51565b62001157919062001c7f565b6001600160a01b03808816600090815260996020908152604091829020548251635f64b55b60e01b815292519498508594931692635f64b55b9260048082019392918290030181865afa158015620011b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011d9919062001b4d565b6001600160a01b03166370a08231846040518263ffffffff1660e01b815260040162001206919062001933565b602060405180830381865afa15801562001224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200124a919062001b33565b62001256908762001c51565b62001262919062001c7f565b925050505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b90620012f090869060240162001933565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516200132f90620017d2565b6200133c92919062001cff565b604051809103906000f08015801562001359573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905262000684908590620014ca565b60335460ff1615620014195760405162461bcd60e51b8152600401620003119062001ae4565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000f283390565b60006200145c30620015a8565b15905090565b600054610100900460ff166200148c5760405162461bcd60e51b8152600401620003119062001d25565b62000324620015b7565b600054610100900460ff16620014c05760405162461bcd60e51b8152600401620003119062001d25565b62000324620015ed565b600062001521826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620016229092919063ffffffff16565b805190915015620015a3578080602001905181019062001542919062001d70565b620015a35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000311565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620015e15760405162461bcd60e51b8152600401620003119062001d25565b6033805460ff19169055565b600054610100900460ff16620016175760405162461bcd60e51b8152600401620003119062001d25565b62000324336200126e565b60606200163384846000856200163d565b90505b9392505050565b606082471015620016a05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000311565b620016ab85620015a8565b620016f95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000311565b600080866001600160a01b0316858760405162001717919062001d90565b60006040518083038185875af1925050503d806000811462001756576040519150601f19603f3d011682016040523d82523d6000602084013e6200175b565b606091505b50915091506200176d82828662001778565b979650505050505050565b606083156200178957508162001636565b8251156200179a5782518084602001fd5b8160405162461bcd60e51b815260040162000311919062001dae565b6132768062001dc483390190565b610523806200503a83390190565b610966806200555d83390190565b6001600160a01b0381168114620017f657600080fd5b50565b8015158114620017f657600080fd5b600080600080608085870312156200181f57600080fd5b84356200182c81620017e0565b93506020850135925060408501356200184581620017f9565b915060608501356200185781620017e0565b939692955090935050565b600080604083850312156200187657600080fd5b82356200188381620017e0565b915060208301356200189581620017e0565b809150509250929050565b600080600060608486031215620018b657600080fd5b8335620018c381620017e0565b95602085013595506040909401359392505050565b600080600080600060a08688031215620018f157600080fd5b85359450602086013593506040860135925060608601356200191381620017e0565b915060808601356200192581620017e0565b809150509295509295909350565b6001600160a01b0391909116815260200190565b6000602082840312156200195a57600080fd5b81356200163681620017e0565b60008083601f8401126200197a57600080fd5b5081356001600160401b038111156200199257600080fd5b6020830191508360208260051b85010111156200126757600080fd5b600080600080600080600080600060a08a8c031215620019cd57600080fd5b8935620019da81620017e0565b985060208a01356001600160401b0380821115620019f757600080fd5b62001a058d838e0162001967565b909a50985060408c013591508082111562001a1f57600080fd5b62001a2d8d838e0162001967565b909850965060608c013591508082111562001a4757600080fd5b62001a558d838e0162001967565b909650945060808c013591508082111562001a6f57600080fd5b5062001a7e8c828d0162001967565b915080935050809150509295985092959850929598565b60006020828403121562001aa857600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000806040838503121562001b2257600080fd5b505080516020909101519092909150565b60006020828403121562001b4657600080fd5b5051919050565b60006020828403121562001b6057600080fd5b81516200163681620017e0565b60008060006060848603121562001b8357600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b8581101562001bde57813562001bc281620017e0565b6001600160a01b03168752958201959082019060010162001bac565b509495945050505050565b60808152600062001bff608083018a8c62001b9c565b828103602084015262001c1481898b62001b9c565b9050828103604084015262001c2b81878962001b9c565b9050828103606084015262001c4281858762001b9c565b9b9a5050505050505050505050565b600081600019048311821515161562001c7a57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001c9d57634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101562001cbf57818101518382015260200162001ca5565b83811115620006845750506000910152565b6000815180845262001ceb81602086016020860162001ca2565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620016339083018462001cd1565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121562001d8357600080fd5b81516200163681620017f9565b6000825162001da481846020870162001ca2565b9190910192915050565b60208152600062001636602083018462001cd156fe60a06040523060805234801561001457600080fd5b50600160685560805161322c61004a600039600081816105f7015281816106400152818161099601526109d6015261322c6000f3fe60806040526004361061011b5760003560e01c80630103c92b1461012057806306fdde0314610153578063095ea7b3146101925780630fc63d10146101c257806318160ddd146101ef57806323b872dd14610205578063313ce567146102255780633659cfe61461024c578063430004c11461026e578063452ed4f1146102a35780634f1ef286146102c35780635f64b55b146102d65780636b8ba92c146102f657806370a082311461031657806373ad67d7146103435780637d882097146103635780638da5cb5b1461037957806395d89b411461038e578063a9059cbb146103bd578063aa7b83e3146103dd578063c4d66de8146103fd578063dd62ed3e1461041d578063e8da9d4814610455578063fad3cc4b14610475575b600080fd5b34801561012c57600080fd5b5061014061013b3660046128b4565b6104b0565b6040519081526020015b60405180910390f35b34801561015f57600080fd5b50610185604051806040016040528060068152602001650556e6f2d4c560d41b81525081565b60405161014a9190612901565b34801561019e57600080fd5b506101b26101ad366004612934565b610541565b604051901515815260200161014a565b3480156101ce57600080fd5b50606c546101e2906001600160a01b031681565b60405161014a9190612960565b3480156101fb57600080fd5b5061014060005481565b34801561021157600080fd5b506101b2610220366004612974565b610557565b34801561023157600080fd5b5061023a601281565b60405160ff909116815260200161014a565b34801561025857600080fd5b5061026c6102673660046128b4565b6105ec565b005b34801561027a57600080fd5b5061028e6102893660046129c3565b6106be565b6040805192835260208301919091520161014a565b3480156102af57600080fd5b50606b546101e2906001600160a01b031681565b61026c6102d1366004612a5c565b61098b565b3480156102e257600080fd5b50606d546101e2906001600160a01b031681565b34801561030257600080fd5b506069546101e2906001600160a01b031681565b34801561032257600080fd5b506101406103313660046128b4565b60016020526000908152604090205481565b34801561034f57600080fd5b5061026c61035e366004612b4e565b610a45565b34801561036f57600080fd5b5061014060775481565b34801561038557600080fd5b506101e261114a565b34801561039a57600080fd5b50610185604051806040016040528060038152602001620554c560ec1b81525081565b3480156103c957600080fd5b506101b26103d8366004612934565b611159565b3480156103e957600080fd5b50606a546101e2906001600160a01b031681565b34801561040957600080fd5b5061026c6104183660046128b4565b611166565b34801561042957600080fd5b50610140610438366004612c11565b600260209081526000928352604080842090915290825290205481565b34801561046157600080fd5b5061026c610470366004612c4a565b611798565b34801561048157600080fd5b50610495610490366004612c6c565b6117b4565b6040805193845260208401929092529082015260600161014a565b6001600160a01b0381166000908152607660209081526040808320607154845290915281205460ff16156104fa57506001600160a01b031660009081526073602052604090205490565b60005461050957506000919050565b600080546001600160a01b038416825260016020526040909120546077546105319190612cb8565b61053b9190612cd7565b92915050565b600061054e338484611a76565b50600192915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146105d6576001600160a01b03841660009081526002602090815260408083203384529091529020546105b19083611ad8565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6105e1848484611ae4565b5060015b9392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561063e5760405162461bcd60e51b815260040161063590612cf9565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610670611b78565b6001600160a01b0316146106965760405162461bcd60e51b815260040161063590612d33565b61069f81611b94565b604080516000808252602082019092526106bb91839190611bb0565b50565b600080336106ca61114a565b6001600160a01b0316146106dd57600080fd5b600260685414156107005760405162461bcd60e51b815260040161063590612d6d565b6002606855841580159061072b57506001600160a01b03861660009081526073602052604090205415155b61073457600080fd5b61073d86611cf7565b600043606f54111561075e5743606f546107579190612da4565b9050610770565b600260725461076d9190612cd7565b90505b6000607854826077546107839190612cb8565b61078d9190612dbb565b9050600061079b8389612cb8565b6107a59083612da4565b6001600160a01b038a16600090815260736020526040812080549293508a929091906107d2908490612da4565b9250508190555087607760008282546107eb9190612da4565b90915550506070548290610800908390612cb8565b61080a9190612cd7565b60705561081883828b611e87565b606e54604051632e1a7d4d60e01b8152600481018a90526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561085e57600080fd5b505af1158015610872573d6000803e3d6000fd5b5050505086156108a257606b54610893906001600160a01b0316878a612026565b6000809450945050505061097b565b606c54606d546000805160206131d78339815191529163baa2abde916001600160a01b0391821691168b6000808c6108dc42610258612dbb565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af115801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190612dd3565b90955093505050505b6001606855909590945092505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109d45760405162461bcd60e51b815260040161063590612cf9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a06611b78565b6001600160a01b031614610a2c5760405162461bcd60e51b815260040161063590612d33565b610a3582611b94565b610a4182826001611bb0565b5050565b33610a4e61114a565b6001600160a01b031614610a6157600080fd5b60026068541415610a845760405162461bcd60e51b815260040161063590612d6d565b6002606855607754610a9557600080fd5b606e60009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ae557600080fd5b505af1158015610af9573d6000803e3d6000fd5b50506069546040516370a0823160e01b815260009350600292506001600160a01b03909116906370a0823190610b33903090600401612960565b602060405180830381865afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190612df7565b610b7e9190612cd7565b606a546040516370a0823160e01b81529192506000916002916001600160a01b0316906370a0823190610bb5903090600401612960565b602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190612df7565b610c009190612cd7565b90506000610c1042610258612dbb565b606954606c549192506001600160a01b03918216911614610cb9576000805160206131d78339815191526001600160a01b03166338ed17398460008e8e30876040518763ffffffff1660e01b8152600401610c7096959493929190612e10565b6000604051808303816000875af1158015610c8f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cb79190810190612e83565b505b606954606d546001600160a01b03908116911614610d56576040516338ed173960e01b81526000805160206131d7833981519152906338ed173990610d0d9086906000908e908e9030908990600401612e10565b6000604051808303816000875af1158015610d2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d549190810190612e83565b505b606a54606c546001600160a01b03908116911614610df3576040516338ed173960e01b81526000805160206131d7833981519152906338ed173990610daa9085906000908c908c9030908990600401612e10565b6000604051808303816000875af1158015610dc9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610df19190810190612e83565b505b606a54606d546001600160a01b03908116911614610e90576040516338ed173960e01b81526000805160206131d7833981519152906338ed173990610e479085906000908a908a9030908990600401612e10565b6000604051808303816000875af1158015610e66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8e9190810190612e83565b505b606c546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610ec1903090600401612960565b602060405180830381865afa158015610ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f029190612df7565b606d546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610f38903090600401612960565b602060405180830381865afa158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f799190612df7565b606c54606d5460405162e8e33760e81b81529293506000805160206131d78339815191529263e8e3370092610fcc926001600160a01b039182169291169087908790600190819030908d90600401612f28565b6060604051808303816000875af1158015610feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100f9190612f71565b5050606b546040516370a0823160e01b8152600092506001600160a01b03909116906370a0823190611045903090600401612960565b602060405180830381865afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110869190612df7565b905080156111045780607760008282546110a09190612dbb565b9091555050606e5460405163534a7e1d60e11b8152600481018390526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b1580156110eb57600080fd5b505af11580156110ff573d6000803e3d6000fd5b505050505b6071546111119043612da4565b60728190556111319082906111269043612dbb565b607091909155606f55565b5050436071555050600160685550505050505050505050565b6036546001600160a01b031690565b600061054e338484611ae4565b600354610100900460ff166111815760035460ff1615611189565b61118961207c565b6111a55760405162461bcd60e51b815260040161063590612f9f565b600354610100900460ff161580156111c7576003805461ffff19166101011790555b6111cf61208d565b606e80546001600160a01b0319166001600160a01b038416908117909155604080516372f702f360e01b815290516372f702f3916004808201926020929091908290030181865afa158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190612fed565b606b80546001600160a01b0319166001600160a01b03928316179055606e54604080516317f4408360e21b815290519190921691635fd1020c9160048083019260209291908290030181865afa1580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce9190612fed565b606980546001600160a01b0319166001600160a01b03928316179055606e5460408051634462633360e11b8152905191909216916388c4c6669160048083019260209291908290030181865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113509190612fed565b606a80546001600160a01b0319166001600160a01b03928316179055606b5460408051630dfe168160e01b815290519190921691630dfe16819160048083019260209291908290030181865afa1580156113ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d29190612fed565b606c80546001600160a01b0319166001600160a01b03928316179055606b546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015611430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114549190612fed565b606d80546001600160a01b0319166001600160a01b03928316179055606b5460405163095ea7b360e01b815260001992919091169063095ea7b39061149f908690859060040161300a565b6020604051808303816000875af11580156114be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e29190613023565b50606b5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611523906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af1158015611542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115669190613023565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906115a7906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af11580156115c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ea9190613023565b50606a5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b39061162b906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af115801561164a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166e9190613023565b50606c5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906116af906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af11580156116ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f29190613023565b50606d5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611733906000805160206131d783398151915290859060040161300a565b6020604051808303816000875af1158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190613023565b50504360715562124f806072558015610a41576003805461ff00191690555050565b336117a161114a565b6001600160a01b03161461112657600080fd5b60008080336117c161114a565b6001600160a01b0316146117d457600080fd5b600260685414156117f75760405162461bcd60e51b815260040161063590612d6d565b60026068556000871580159061180d5750600087115b156118bb57606c54606d546000805160206131d78339815191529163e8e33700916001600160a01b0391821691168b8b6000803061184d42610258612dbb565b6040518963ffffffff1660e01b8152600401611870989796959493929190612f28565b6060604051808303816000875af115801561188f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b39190612f71565b919550935090505b6118c58682612dbb565b9150600082116118d457600080fd5b6118dd85611cf7565b600043606f5411156118fe5743606f546118f79190612da4565b9050611910565b600260725461190d9190612cd7565b90505b6000607854826077546119239190612cb8565b61192d9190612dbb565b905060008161193c8487612cb8565b6119469190612dbb565b6001600160a01b038916600090815260736020526040812080549293508792909190611973908490612dbb565b92505081905550846077600082825461198c9190612dbb565b909155505081156119b45781816070546119a69190612cb8565b6119b09190612cd7565b6070555b6119bf83828a612112565b606e5460405163534a7e1d60e11b8152600481018790526001600160a01b039091169063a694fc3a90602401600060405180830381600087803b158015611a0557600080fd5b505af1158015611a19573d6000803e3d6000fd5b50505050611a4088888d611a2d9190612da4565b606c546001600160a01b03169190612026565b611a6188611a4e888d612da4565b606d546001600160a01b03169190612026565b50506001606855509297919650945092505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105e58284612da4565b6001600160a01b038316600090815260016020526040902054611b079082611ad8565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611b369082612282565b6001600160a01b0380841660008181526001602052604090819020939093559151908516906000805160206131b783398151915290611acb9085815260200190565b600080516020613170833981519152546001600160a01b031690565b33611b9d61114a565b6001600160a01b0316146106bb57600080fd5b6000611bba611b78565b9050611bc58461228e565b600083511180611bd25750815b15611be357611be18484612321565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16611cf057805460ff19166001178155604051611c5e908690611c2f908590602401612960565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052612321565b50805460ff19168155611c6f611b78565b6001600160a01b0316826001600160a01b031614611ce75760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610635565b611cf085612346565b5050505050565b6001600160a01b0381166000908152607660209081526040808320607154845290915290205460ff1615611d91576001600160a01b038116600090815260736020908152604080832054607590925290912054611d549043612da4565b611d5e9190612cb8565b6001600160a01b03821660009081526074602052604081208054909190611d86908490612dbb565b90915550611e069050565b611d9a816104b0565b6001600160a01b0382166000908152607360205260409020819055607154611dc29043612da4565b611dcc9190612cb8565b6001600160a01b038216600090815260746020908152604080832093909355607681528282206071548352905220805460ff191660011790555b6071546079541115611e4857607754607954611e229043612da4565b611e2c9190612cb8565b60786000828254611e3d9190612dbb565b90915550611e669050565b607754607154611e589043612da4565b611e629190612cb8565b6078555b6001600160a01b031660009081526075602052604090204390819055607955565b6001600160a01b038116600090815260736020526040902054611ecd576001600160a01b038116600090815260016020526040902054611ec8908290612386565b505050565b600080546001600160a01b038316825260016020526040909120541415611ef357505050565b6001600160a01b0381166000908152607460209081526040808320546073909252822054849190611f25908790612cb8565b611f2f9190612dbb565b607054611f3c9190612cb8565b611f469190612cd7565b90506000607054607754611f5a9190612dbb565b6001600160a01b038416600090815260736020526040902054611f7e908490612dbb565b611f8a6012600a613124565b611f949190612cb8565b611f9e9190612cd7565b9050611cf08382611fb16012600a613124565b611fbb9190612da4565b611fc76012600a613124565b600054611fd49086612cb8565b611fde9190612cd7565b6001600160a01b0387166000908152600160205260409020546120019190612da4565b61200d6012600a613124565b6120179190612cb8565b6120219190612cd7565b612386565b611ec88363a9059cbb60e01b848460405160240161204592919061300a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612406565b6000612087306124d8565b15905090565b600354610100900460ff166120a85760035460ff16156120b0565b6120b061207c565b6120cc5760405162461bcd60e51b815260040161063590612f9f565b600354610100900460ff161580156120ee576003805461ffff19166101011790555b6120f66124e7565b6120fe612554565b80156106bb576003805461ff001916905550565b60005461212e57611ec8816121296012600a613124565b6125db565b600080546001600160a01b03831682526001602052604090912054141561215457505050565b6001600160a01b0381166000908152607460209081526040808320546073909252822054849190612186908790612cb8565b6121909190612dbb565b60705461219d9190612cb8565b6121a79190612cd7565b905060006070546077546121bb9190612dbb565b6001600160a01b0384166000908152607360205260409020546121df908490612dbb565b6121eb6012600a613124565b6121f59190612cb8565b6121ff9190612cd7565b9050611cf083826122126012600a613124565b61221c9190612da4565b6001600160a01b0386166000908152600160205260409020546122416012600a613124565b60005461224e9087612cb8565b6122589190612cd7565b6122629190612da4565b61226e6012600a613124565b6122789190612cb8565b6121299190612cd7565b60006105e58284612dbb565b803b6122f25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610635565b60008051602061317083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606105e583836040518060600160405280602781526020016131906027913961264c565b61234f8161228e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0382166000908152600160205260409020546123a99082611ad8565b6001600160a01b038316600090815260016020526040812091909155546123d09082611ad8565b60009081556040518281526001600160a01b038416906000805160206131b7833981519152906020015b60405180910390a35050565b600061245b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127209092919063ffffffff16565b805190915015611ec857808060200190518101906124799190613023565b611ec85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610635565b6001600160a01b03163b151590565b600354610100900460ff166125525760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610635565b565b600354610100900460ff1661256f5760035460ff1615612577565b61257761207c565b6125935760405162461bcd60e51b815260040161063590612f9f565b600354610100900460ff161580156125b5576003805461ffff19166101011790555b603680546001600160a01b0319163317905580156106bb576003805461ff001916905550565b6000546125e89082612282565b60009081556001600160a01b03831681526001602052604090205461260d9082612282565b6001600160a01b0383166000818152600160205260408082209390935591519091906000805160206131b7833981519152906123fa9085815260200190565b6060833b6126ab5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610635565b600080856001600160a01b0316856040516126c69190613133565b600060405180830381855af49150503d8060008114612701576040519150601f19603f3d011682016040523d82523d6000602084013e612706565b606091505b5091509150612716828286612737565b9695505050505050565b606061272f8484600085612770565b949350505050565b606083156127465750816105e5565b8251156127565782518084602001fd5b8160405162461bcd60e51b81526004016106359190612901565b6060824710156127d15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610635565b6127da856124d8565b6128265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610635565b600080866001600160a01b031685876040516128429190613133565b60006040518083038185875af1925050503d806000811461287f576040519150601f19603f3d011682016040523d82523d6000602084013e612884565b606091505b5091509150612894828286612737565b979650505050505050565b6001600160a01b03811681146106bb57600080fd5b6000602082840312156128c657600080fd5b81356105e58161289f565b60005b838110156128ec5781810151838201526020016128d4565b838111156128fb576000848401525b50505050565b60208152600082518060208401526129208160408501602087016128d1565b601f01601f19169190910160400192915050565b6000806040838503121561294757600080fd5b82356129528161289f565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60008060006060848603121561298957600080fd5b83356129948161289f565b925060208401356129a48161289f565b929592945050506040919091013590565b80151581146106bb57600080fd5b600080600080608085870312156129d957600080fd5b84356129e48161289f565b93506020850135925060408501356129fb816129b5565b91506060850135612a0b8161289f565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612a5457612a54612a16565b604052919050565b60008060408385031215612a6f57600080fd5b8235612a7a8161289f565b91506020838101356001600160401b0380821115612a9757600080fd5b818601915086601f830112612aab57600080fd5b813581811115612abd57612abd612a16565b612acf601f8201601f19168501612a2c565b91508082528784828501011115612ae557600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f840112612b1557600080fd5b5081356001600160401b03811115612b2c57600080fd5b6020830191508360208260051b8501011115612b4757600080fd5b9250929050565b6000806000806000806000806080898b031215612b6a57600080fd5b88356001600160401b0380821115612b8157600080fd5b612b8d8c838d01612b03565b909a50985060208b0135915080821115612ba657600080fd5b612bb28c838d01612b03565b909850965060408b0135915080821115612bcb57600080fd5b612bd78c838d01612b03565b909650945060608b0135915080821115612bf057600080fd5b50612bfd8b828c01612b03565b999c989b5096995094979396929594505050565b60008060408385031215612c2457600080fd5b8235612c2f8161289f565b91506020830135612c3f8161289f565b809150509250929050565b60008060408385031215612c5d57600080fd5b50508035926020909101359150565b60008060008060808587031215612c8257600080fd5b8435935060208501359250604085013591506060850135612a0b8161289f565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612cd257612cd2612ca2565b500290565b600082612cf457634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602c9082015260008051602061315083398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061315083398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082821015612db657612db6612ca2565b500390565b60008219821115612dce57612dce612ca2565b500190565b60008060408385031215612de657600080fd5b505080516020909101519092909150565b600060208284031215612e0957600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015612e62578335612e478161289f565b6001600160a01b031682529282019290820190600101612e34565b506001600160a01b0396909616606085015250505060800152949350505050565b60006020808385031215612e9657600080fd5b82516001600160401b0380821115612ead57600080fd5b818501915085601f830112612ec157600080fd5b815181811115612ed357612ed3612a16565b8060051b9150612ee4848301612a2c565b8181529183018401918481019088841115612efe57600080fd5b938501935b83851015612f1c57845182529385019390850190612f03565b98975050505050505050565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612f8657600080fd5b8351925060208401519150604084015190509250925092565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215612fff57600080fd5b81516105e58161289f565b6001600160a01b03929092168252602082015260400190565b60006020828403121561303557600080fd5b81516105e5816129b5565b600181815b8085111561307b57816000190482111561306157613061612ca2565b8085161561306e57918102915b93841c9390800290613045565b509250929050565b6000826130925750600161053b565b8161309f5750600061053b565b81600181146130b557600281146130bf576130db565b600191505061053b565b60ff8411156130d0576130d0612ca2565b50506001821b61053b565b5060208310610133831016604e8410600b84101617156130fe575081810a61053b565b6131088383613040565b806000190482111561311c5761311c612ca2565b029392505050565b60006105e560ff841683613083565b600082516131458184602087016128d1565b919091019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef000000000000000000000000a5e0829caced8ffdd4de3c43696c57f7d7a678ffa264697066735822122038e5bd2bab34b773553182b20653049b1cc1921ce0b02dc9412903e88451d7bd64736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209ffba0d4fc9203d79110f5b2c6c39c98f2dbdc43f599fb4e774f98346dcb444a64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14937:42",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:42",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:42",
                "type": ""
              }
            ],
            "src": "14:177:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:86:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "264:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "275:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "295:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "286:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "286:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "282:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "271:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:31:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "261:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:42:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:42"
                  },
                  "nodeType": "YulIf",
                  "src": "251:70:42"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "230:5:42",
                "type": ""
              }
            ],
            "src": "196:131:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "374:76:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "397:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "411:13:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "404:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "404:21:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "394:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "394:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "387:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "387:40:42"
                  },
                  "nodeType": "YulIf",
                  "src": "384:60:42"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "363:5:42",
                "type": ""
              }
            ],
            "src": "332:118:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "573:474:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "620:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "629:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "632:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "622:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "622:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "622:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "594:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "603:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "590:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "590:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "615:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "586:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "583:53:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "645:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "671:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "658:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "649:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "715:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "690:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "690:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "690:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "730:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "740:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "730:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "754:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "764:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "805:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "837:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "848:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "820:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "809:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "883:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "861:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "861:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "900:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "910:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "900:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "926:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "958:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "969:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "954:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "941:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "930:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1007:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "982:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1024:17:42",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1034:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1024:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "515:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "526:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "538:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "546:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "554:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "562:6:42",
                "type": ""
              }
            ],
            "src": "455:592:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:119:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1203:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1191:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1244:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1271:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1282:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1267:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1267:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1287:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1260:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1260:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1153:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1172:4:42",
                "type": ""
              }
            ],
            "src": "1052:248:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:301:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1438:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1447:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1440:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1440:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1440:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1405:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1402:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1463:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1489:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1476:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1467:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1533:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1508:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1508:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1548:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1558:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1572:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1604:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1600:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1587:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1576:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1653:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1628:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1680:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1350:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1361:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1373:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1381:6:42",
                "type": ""
              }
            ],
            "src": "1305:388:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:162:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1877:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1907:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1918:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1961:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1934:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1934:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1988:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1999:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1984:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1984:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2004:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1977:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1977:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1977:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1808:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1819:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1827:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1835:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1846:4:42",
                "type": ""
              }
            ],
            "src": "1698:319:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2117:92:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2127:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2150:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2135:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2127:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2169:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2194:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2187:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2187:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2180:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2180:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2162:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2162:41:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2086:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2097:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2108:4:42",
                "type": ""
              }
            ],
            "src": "2022:187:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2318:279:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2364:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2373:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2376:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2366:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2366:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2366:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2339:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2348:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2360:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2331:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2331:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "2328:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2389:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2415:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2402:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2402:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2393:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2459:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2434:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2434:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2434:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2474:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2484:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2474:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2498:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2525:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2536:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2521:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2521:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2508:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2508:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2498:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2549:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2576:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2587:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2572:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2572:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2559:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2559:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2549:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2268:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2279:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2291:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2299:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2307:6:42",
                "type": ""
              }
            ],
            "src": "2214:383:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2740:456:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2787:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2796:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2799:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2789:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2789:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2789:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2761:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2770:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2757:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2757:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2782:3:42",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2753:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2753:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "2750:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2812:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2835:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2822:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2812:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2854:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2881:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2892:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2877:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2877:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2864:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2864:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2854:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2905:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2932:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2943:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2928:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2915:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2915:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2905:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2956:45:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2986:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2997:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2982:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2982:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2969:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2969:32:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2960:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3035:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3010:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3010:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3050:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3060:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3074:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3106:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3117:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3102:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3102:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3089:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:33:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3078:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3156:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3131:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3131:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3131:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3173:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3183:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3173:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2674:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2685:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2697:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2705:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2713:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2721:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2729:6:42",
                "type": ""
              }
            ],
            "src": "2602:594:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3302:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3312:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3324:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3335:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3320:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3320:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3312:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3354:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3369:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3385:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3390:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3381:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3381:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3394:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3377:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3377:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3365:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3365:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3347:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3347:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3347:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3271:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3282:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3293:4:42",
                "type": ""
              }
            ],
            "src": "3201:203:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3479:177:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3525:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3534:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3537:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3527:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3527:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3527:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3500:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3509:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3496:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3496:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3521:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3492:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3489:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3550:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3576:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3563:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3563:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3554:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3620:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3595:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3595:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3595:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3635:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3645:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3635:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3445:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3456:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3468:6:42",
                "type": ""
              }
            ],
            "src": "3409:247:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3745:283:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3794:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3803:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3806:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3796:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3796:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3796:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3773:6:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3781:4:42",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3769:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3769:17:42"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3788:3:42"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3765:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3765:27:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3758:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3758:35:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3755:55:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3819:30:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3842:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3829:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3829:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3819:6:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3892:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3901:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3904:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3894:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3894:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3894:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3864:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3880:2:42",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3884:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3876:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3876:10:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3888:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3872:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3872:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3861:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3861:30:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3858:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3917:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3933:6:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3941:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3929:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3929:17:42"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "3917:8:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4006:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4015:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4018:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4008:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4008:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4008:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3969:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3981:1:42",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3984:6:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3977:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3977:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3965:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3965:27:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3994:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3961:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3961:38:42"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4001:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3958:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:47:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3955:67:42"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3708:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3716:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "3724:8:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3734:6:42",
                "type": ""
              }
            ],
            "src": "3661:367:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4311:1262:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4358:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4367:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4370:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4360:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4360:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4360:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4332:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4341:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4328:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4328:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4353:3:42",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4324:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4324:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4321:53:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4383:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4409:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4396:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4396:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4387:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4453:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4428:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4428:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4428:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4468:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4478:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4468:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4492:46:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4523:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4534:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4519:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4519:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4506:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4506:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4496:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4547:28:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4565:2:42",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4569:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4561:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4561:10:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4573:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4557:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4557:18:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4551:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4602:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4611:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4614:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4604:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4604:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4604:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4590:6:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4598:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4587:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4587:14:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4584:34:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4627:96:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4695:9:42"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4706:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4691:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4691:22:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4715:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4653:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:70:42"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "4631:8:42",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "4641:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4732:18:42",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "4742:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4732:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4759:18:42",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "4769:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4759:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4786:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4819:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4830:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4815:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4815:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4802:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4802:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4790:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4863:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4872:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4875:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4865:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4865:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4865:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4849:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4859:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4846:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4846:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4843:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4888:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4956:9:42"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4967:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4952:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4952:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4978:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4914:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4914:72:42"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "4892:8:42",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "4902:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4995:18:42",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "5005:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4995:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5022:18:42",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "5032:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5022:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5049:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5082:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5093:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5078:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5078:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5065:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5065:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "5053:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5126:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5135:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5138:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5128:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5128:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5128:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "5112:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5122:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5109:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5109:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5106:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5151:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5219:9:42"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "5230:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5215:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5215:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5241:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5177:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5177:72:42"
                  },
                  "variables": [
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "5155:8:42",
                      "type": ""
                    },
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "5165:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5258:18:42",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "5268:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5258:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5285:18:42",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "5295:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "5285:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5312:49:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5345:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5356:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5341:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5341:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5328:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5328:33:42"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "5316:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5390:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5399:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5402:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5392:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5392:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5392:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "5376:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5386:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5373:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5373:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5370:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5415:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5483:9:42"
                          },
                          {
                            "name": "offset_3",
                            "nodeType": "YulIdentifier",
                            "src": "5494:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5479:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5479:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5505:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5441:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5441:72:42"
                  },
                  "variables": [
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "5419:8:42",
                      "type": ""
                    },
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "5429:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5522:18:42",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "5532:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "5522:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5549:18:42",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "5559:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "5549:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4213:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4224:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4236:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4244:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4252:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4260:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4268:6:42",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4276:6:42",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4284:6:42",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "4292:6:42",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "4300:6:42",
                "type": ""
              }
            ],
            "src": "4033:1540:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5648:110:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5694:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5703:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5706:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5696:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5696:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5696:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5669:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5678:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5665:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5665:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5690:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5661:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5661:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5658:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5719:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5742:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5729:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5729:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5719:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5614:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5625:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5637:6:42",
                "type": ""
              }
            ],
            "src": "5578:180:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5901:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5911:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5923:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5934:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5919:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5919:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5911:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5953:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5968:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5984:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5989:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5980:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5980:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5993:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5976:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5976:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5964:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5964:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5946:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5946:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5946:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_QuickswapDualFarmUpgradeable_$7024__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5870:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5881:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5892:4:42",
                "type": ""
              }
            ],
            "src": "5763:240:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6182:182:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6199:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6210:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6192:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6192:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6233:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6244:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6229:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6249:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6222:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6222:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6222:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6272:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6283:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6268:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6268:18:42"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6288:34:42",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6261:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6261:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6261:62:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6332:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6344:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6355:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6340:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6340:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6332:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6159:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6173:4:42",
                "type": ""
              }
            ],
            "src": "6008:356:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6543:166:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6560:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6571:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6553:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6553:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6553:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6594:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6605:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6590:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6590:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6610:2:42",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6583:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6583:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6583:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6633:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6644:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6629:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6629:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6649:18:42",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6622:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6622:46:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6622:46:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6677:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6689:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6700:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6685:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6685:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6677:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6520:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6534:4:42",
                "type": ""
              }
            ],
            "src": "6369:340:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6893:278:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6903:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6915:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6926:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6911:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6911:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6903:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6939:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6957:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6962:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6953:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6953:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6966:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6949:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6949:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6943:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6984:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6999:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7007:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6995:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6995:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6977:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6977:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7031:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7042:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7027:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7027:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7047:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7020:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7020:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7020:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7074:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7085:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7070:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7070:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7104:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7097:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7097:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7090:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7090:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7063:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7063:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7063:50:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7133:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7144:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7129:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7129:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7153:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7161:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7149:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7149:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7122:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7122:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7122:43:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6838:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6849:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6857:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6865:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6873:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6884:4:42",
                "type": ""
              }
            ],
            "src": "6714:457:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7274:147:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7320:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7329:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7332:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7322:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7322:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7322:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7295:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7304:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7291:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7291:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7316:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7287:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7287:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7284:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7345:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7361:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7355:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7355:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7345:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7380:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7400:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7411:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7396:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7396:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7390:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7390:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7380:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7232:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7243:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7255:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7263:6:42",
                "type": ""
              }
            ],
            "src": "7176:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7507:103:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7553:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7562:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7565:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7555:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7555:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7555:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7528:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7537:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7524:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7524:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7549:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7520:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7517:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7578:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7594:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7588:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7588:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7578:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7473:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7484:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7496:6:42",
                "type": ""
              }
            ],
            "src": "7426:184:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7696:170:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7742:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7751:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7754:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7744:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7744:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7744:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7717:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7726:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7713:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7713:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7738:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7709:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7706:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7767:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7786:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7780:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7780:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7771:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7830:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7805:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7805:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7805:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7845:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7855:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7845:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7662:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7673:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7685:6:42",
                "type": ""
              }
            ],
            "src": "7615:251:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8056:232:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8066:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8078:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8089:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8074:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8074:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8066:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8109:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8120:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8102:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8102:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8102:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8147:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8158:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8143:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8143:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8163:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8136:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8136:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8136:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8190:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8201:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8186:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8186:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8206:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8179:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8179:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8179:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8233:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8244:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8229:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8229:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "8253:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8269:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8274:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8265:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8265:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8278:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8261:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8261:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8249:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8249:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8222:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8222:60:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8222:60:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8001:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8012:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8020:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8028:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8036:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8047:4:42",
                "type": ""
              }
            ],
            "src": "7871:417:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8408:191:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8454:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8463:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8466:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8456:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8456:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8456:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8429:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8438:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8425:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8425:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8450:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8421:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8421:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8418:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8479:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8495:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8489:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8489:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8479:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8514:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8534:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8545:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8530:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8530:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8524:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8524:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8514:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8558:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8578:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8589:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8574:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8574:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8568:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8568:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8558:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8358:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8369:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8381:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8389:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8397:6:42",
                "type": ""
              }
            ],
            "src": "8293:306:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8778:236:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8795:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8806:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8788:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8788:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8788:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8829:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8840:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8825:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8825:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8845:2:42",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8818:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8818:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8818:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8868:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8879:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8864:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8864:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8884:34:42",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8857:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8857:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8939:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8950:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8935:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8935:18:42"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8955:16:42",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8928:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8928:44:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8928:44:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8981:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8993:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9004:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8989:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8989:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8981:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8755:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8769:4:42",
                "type": ""
              }
            ],
            "src": "8604:410:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9097:444:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9114:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9119:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9107:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9107:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9107:19:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9135:14:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9145:4:42",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9139:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9158:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9169:3:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9174:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9165:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9165:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9158:3:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9186:19:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9200:5:42"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "9190:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9214:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9223:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9218:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9282:234:42",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9296:35:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9324:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "9311:12:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9311:20:42"
                        },
                        "variables": [
                          {
                            "name": "value_1",
                            "nodeType": "YulTypedName",
                            "src": "9300:7:42",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "9369:7:42"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "9344:24:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9344:33:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9344:33:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9397:3:42"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9406:7:42"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9423:3:42",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9428:1:42",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "9419:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9419:11:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9432:1:42",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "9415:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9415:19:42"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "9402:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9402:33:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9390:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9390:46:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9390:46:42"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9449:19:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9460:3:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9465:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9456:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9456:12:42"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9449:3:42"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9481:25:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9495:6:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9503:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9491:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9491:15:42"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9481:6:42"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9244:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9247:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9241:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9241:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9255:18:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9257:14:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9266:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9269:1:42",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9262:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9262:9:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9257:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9237:3:42",
                    "statements": []
                  },
                  "src": "9233:283:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9525:10:42",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "9532:3:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9525:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9066:5:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9073:6:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9081:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9089:3:42",
                "type": ""
              }
            ],
            "src": "9019:522:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9971:558:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9988:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9999:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9981:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9981:22:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9981:22:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10012:88:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10064:6:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10072:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10084:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10095:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10080:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10080:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10026:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10026:74:42"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "10016:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10120:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10131:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10116:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10116:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "10140:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10148:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10136:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10136:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10109:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10109:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10109:50:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10168:75:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10220:6:42"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "10228:6:42"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "10236:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10182:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10182:61:42"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "10172:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10263:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10274:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10259:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10259:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "10283:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10291:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10279:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10279:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10252:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10252:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10252:50:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10311:75:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10363:6:42"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "10371:6:42"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "10379:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10325:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10325:61:42"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "10315:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10406:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10417:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10402:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10402:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulIdentifier",
                            "src": "10426:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10434:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10422:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10422:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10395:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10395:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10395:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10454:69:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "10500:6:42"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "10508:6:42"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "10516:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10462:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10462:61:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10454:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9884:9:42",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "9895:6:42",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9903:6:42",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9911:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9919:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9927:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9935:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9943:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9951:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9962:4:42",
                "type": ""
              }
            ],
            "src": "9546:983:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10708:170:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10725:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10736:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10718:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10718:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10718:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10759:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10770:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10755:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10755:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10775:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10748:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10748:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10748:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10798:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10809:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10794:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10794:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10814:22:42",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10787:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10787:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10787:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10846:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10858:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10869:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10854:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10854:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10846:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10685:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10699:4:42",
                "type": ""
              }
            ],
            "src": "10534:344:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10935:213:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11002:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11023:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11030:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11035:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11026:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11026:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11016:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11016:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11016:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11067:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11070:4:42",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11060:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11060:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11060:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11095:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11098:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11088:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11088:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11088:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10966:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10959:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10959:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10952:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10952:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10974:1:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10985:1:42",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10981:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10981:6:42"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10989:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10977:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10977:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10971:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10971:21:42"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10948:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10948:45:42"
                  },
                  "nodeType": "YulIf",
                  "src": "10945:168:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11122:20:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11137:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11140:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11133:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11133:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11122:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10914:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10917:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10923:7:42",
                "type": ""
              }
            ],
            "src": "10883:265:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11199:171:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11230:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11251:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11258:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11263:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11254:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11254:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11244:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11244:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11244:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11295:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11298:4:42",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11288:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11288:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11288:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11323:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11326:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11316:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11316:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11316:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11219:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11212:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11212:9:42"
                  },
                  "nodeType": "YulIf",
                  "src": "11209:132:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11350:14:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11359:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11362:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11355:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11355:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11350:1:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11184:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11187:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11193:1:42",
                "type": ""
              }
            ],
            "src": "11153:217:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11428:205:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11438:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11447:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11442:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11507:63:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11532:3:42"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11537:1:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11528:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11528:11:42"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11551:3:42"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11556:1:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11547:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11547:11:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11541:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11541:18:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11521:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11521:39:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11521:39:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11468:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11471:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11465:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11465:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11479:19:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11481:15:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11490:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11493:2:42",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11486:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11486:10:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11481:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11461:3:42",
                    "statements": []
                  },
                  "src": "11457:113:42"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11596:31:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11609:3:42"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11614:6:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11605:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11605:16:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11623:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11598:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11598:27:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11598:27:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11585:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11588:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11582:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11582:13:42"
                  },
                  "nodeType": "YulIf",
                  "src": "11579:48:42"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11406:3:42",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11411:3:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11416:6:42",
                "type": ""
              }
            ],
            "src": "11375:258:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11687:208:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11697:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11717:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11711:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11711:12:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11701:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11739:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11744:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11732:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11732:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11732:19:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11786:5:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11793:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11782:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11782:16:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11804:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11809:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11800:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11800:14:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11816:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "11760:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11760:63:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11760:63:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11832:57:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11847:3:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11860:6:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11868:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11856:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11856:15:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11877:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11873:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11873:7:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11852:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11852:29:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11843:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11843:39:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11884:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11839:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11839:50:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11832:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11664:5:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11671:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11679:3:42",
                "type": ""
              }
            ],
            "src": "11638:257:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12047:167:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12064:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12079:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12095:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12100:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "12091:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12091:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12104:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "12087:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12087:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12075:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12075:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12057:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12057:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12057:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12128:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12139:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12124:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12124:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12144:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12117:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12117:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12117:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12156:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12181:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12193:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12204:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12189:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12189:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "12164:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12164:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12156:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12008:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12019:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12027:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12038:4:42",
                "type": ""
              }
            ],
            "src": "11900:314:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12376:218:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12386:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12398:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12409:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12394:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12394:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12386:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12421:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12439:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12444:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12435:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12435:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12448:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12431:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12431:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12425:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12466:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12481:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12489:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12477:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12477:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12459:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12459:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12459:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12513:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12524:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12509:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12509:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12533:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12541:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12529:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12529:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12502:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12502:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12502:43:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12565:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12576:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12561:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12561:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12581:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12554:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12554:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12554:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12329:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12340:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12348:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12356:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12367:4:42",
                "type": ""
              }
            ],
            "src": "12219:375:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12773:233:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12790:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12801:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12783:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12783:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12783:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12824:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12835:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12820:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12820:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12840:2:42",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12813:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12813:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12813:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12863:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12874:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12859:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12859:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12879:34:42",
                        "type": "",
                        "value": "Initializable: contract is not i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12852:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12852:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12852:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12934:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12945:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12930:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12930:18:42"
                      },
                      {
                        "hexValue": "6e697469616c697a696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12950:13:42",
                        "type": "",
                        "value": "nitializing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12923:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12923:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12923:41:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12973:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12985:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12996:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12981:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12981:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12973:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12750:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12764:4:42",
                "type": ""
              }
            ],
            "src": "12599:407:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13089:167:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13135:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13144:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13147:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13137:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13137:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13137:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13110:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13119:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13106:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13106:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13131:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13102:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13102:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "13099:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13160:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13179:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13173:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13173:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13164:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13220:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "13198:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13198:28:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13198:28:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13235:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13245:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13235:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13055:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13066:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13078:6:42",
                "type": ""
              }
            ],
            "src": "13011:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13435:232:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13452:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13463:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13445:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13445:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13445:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13486:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13497:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13482:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13482:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13502:2:42",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13475:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13475:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13475:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13525:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13536:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13521:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13521:18:42"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13541:34:42",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13514:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13514:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13514:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13596:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13607:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13592:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13592:18:42"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13612:12:42",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13585:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13585:40:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13585:40:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13634:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13646:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13657:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13642:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13642:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13634:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13412:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13426:4:42",
                "type": ""
              }
            ],
            "src": "13261:406:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13846:228:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13863:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13874:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13856:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13856:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13856:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13897:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13908:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13893:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13893:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13913:2:42",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13886:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13886:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13886:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13936:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13947:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13932:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13932:18:42"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13952:34:42",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13925:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13925:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13925:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14007:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14018:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14003:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14003:18:42"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14023:8:42",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13996:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13996:36:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13996:36:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14041:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14053:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14064:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14049:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14049:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14041:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13823:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13837:4:42",
                "type": ""
              }
            ],
            "src": "13672:402:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14253:179:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14270:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14281:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14263:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14263:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14263:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14304:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14315:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14300:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14300:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14320:2:42",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14293:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14293:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14293:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14343:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14354:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14339:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14339:18:42"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14359:31:42",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14332:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14332:59:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14332:59:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14400:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14412:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14423:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14408:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14408:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14400:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14230:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14244:4:42",
                "type": ""
              }
            ],
            "src": "14079:353:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14574:137:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14584:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14604:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14598:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14598:13:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14588:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14646:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14654:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14642:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14642:17:42"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14661:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14666:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14620:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14620:53:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14620:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14682:23:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14693:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14698:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14689:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14689:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14682:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14550:3:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14555:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14566:3:42",
                "type": ""
              }
            ],
            "src": "14437:274:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14837:98:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14854:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14865:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14847:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14847:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14847:21:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14877:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14902:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14914:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14925:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14910:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14910:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "14885:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14885:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14877:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14806:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14817:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14828:4:42",
                "type": ""
              }
            ],
            "src": "14716:219:42"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_3), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_QuickswapDualFarmUpgradeable_$7024__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_address_dyn_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_address_dyn_calldata(value4, value5, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        tail := abi_encode_array_address_dyn_calldata(value6, value7, tail_3)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "567:9367:21:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "567:9367:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7768:94;7840:7;:14;7768:94;;160:25:42;;;148:2;133:18;7768:94:21;;;;;;;;8526:67;;;:::i;:::-;;4202:390;;;;;;:::i;:::-;;:::i;:::-;;;;1226:25:42;;;1282:2;1267:18;;1260:34;;;;1199:18;4202:390:21;1052:248:42;6670:346:21;;;;;;:::i;:::-;;:::i;:::-;;;;1900:25:42;;;1956:2;1941:18;;1934:34;;;;1984:18;;;1977:34;1888:2;1873:18;6670:346:21;1698:319:42;1341:84:2;1411:7;;;;1341:84;;2187:14:42;;2180:22;2162:41;;2150:2;2135:18;1341:84:2;2022:187:42;4956:283:21;;;;;;:::i;:::-;;:::i;8283:164::-;;;:::i;2607:1067::-;;;;;;:::i;:::-;;:::i;8455:63::-;;;:::i;1276:85:0:-;;;:::i;:::-;;;;;;;:::i;1079:26:21:-;;;;;-1:-1:-1;;;;;1079:26:21;;;1667:259;;;;;;:::i;:::-;;:::i;5732:577::-;;;;;;:::i;:::-;;:::i;1045:25::-;;;;;-1:-1:-1;;;;;1045:25:21;;;7870:169;;;;;;:::i;:::-;;:::i;7377:383::-;;;;;;:::i;:::-;;:::i;1156:24::-;;;;;;:::i;:::-;;:::i;8047:228::-;;;;;;:::i;:::-;;:::i;1112:37::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1112:37:21;;;8526:67;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;;;;;;;;;8575:10:21::1;:8;:10::i;:::-;8526:67::o:0;4202:390::-;4326:15;4343;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4378:20:21;;::::1;4415:1;4378:20:::0;;;:5:::1;:20;::::0;;;;;::::1;4370:49;;;::::0;::::1;;-1:-1:-1::0;;;;;4451:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:72;;-1:-1:-1;;;4451:72:21;;4481:10:::1;4451:72;::::0;::::1;6977:34:42::0;7027:18;;;7020:34;;;7097:14;;7090:22;7070:18;;;7063:50;7149:15;;;7129:18;;;7122:43;4451:20:21;::::1;::::0;:29:::1;::::0;6911:19:42;;4451:72:21::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4540:43;::::0;160:25:42;;;4430:93:21;;-1:-1:-1;4430:93:21;-1:-1:-1;;;;;;4540:43:21;::::1;::::0;4549:10:::1;::::0;4540:43:::1;::::0;148:2:42;133:18;4540:43:21::1;;;;;;;4202:390:::0;;;;;;;:::o;6670:346::-;-1:-1:-1;;;;;6817:20:21;;;6753:15;6817:20;;;:5;:20;;;;;;6753:15;;;;;;6817:20;:40;6813:196;;-1:-1:-1;;;;;6884:20:21;;;;;;;:5;:20;;;;;;;;:42;;-1:-1:-1;;;6884:42:21;;:20;;;:32;;:42;;6917:8;;6884:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6874:52;;6960:37;6974:13;6989:7;6960:13;:37::i;:::-;6941:56;;-1:-1:-1;6941:56:21;-1:-1:-1;6813:196:21;6670:346;;;;;:::o;4956:283::-;1583:11;;-1:-1:-1;;;;;1583:11:21;1569:10;:25;1561:34;;;;;;-1:-1:-1;;;;;5103:20:21;;::::1;5140:1;5103:20:::0;;;:5:::1;:20;::::0;;;;;::::1;5095:49;;;::::0;::::1;;-1:-1:-1::0;;;;;5155:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:75;;-1:-1:-1;;;5155:75:21;;::::1;::::0;::::1;1226:25:42::0;;;1267:18;;;1260:34;;;5155:20:21;::::1;::::0;:38:::1;::::0;1199:18:42;;5155:75:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4956:283:::0;;;:::o;8283:164::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;8349:30:21::1;8376:1;8349:18;:30::i;:::-;8408:10;;;;;;;;;-1:-1:-1::0;;;;;8408:10:21::1;-1:-1:-1::0;;;;;8390:47:21::1;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8283:164::o:0;2607:1067::-;2749:13;2764;2779:17;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2812:20:21;;::::1;2849:1;2812:20:::0;;;:5:::1;:20;::::0;;;;;::::1;2809:168;;2896:25;2907:13;2896:10;:25::i;:::-;-1:-1:-1::0;;;;;2868:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;:54;;;;;::::1;-1:-1:-1::0;;;;;;2868:54:21;;::::1;;::::0;;;2937:7:::1;:27:::0;;2868:54;2937:27;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;;::::0;;2809:168:::1;2992:11:::0;;2989:159:::1;;-1:-1:-1::0;;;;;3105:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;;;3037:29;;-1:-1:-1;;;3037:29:21;;;;3019:117:::1;::::0;3085:10:::1;::::0;3105:20;::::1;::::0;3128:7;;3105:20;;3037:27:::1;::::0;:29:::1;::::0;;::::1;::::0;3105:20;;3037:29;;;;;;3105:20;3037:29:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3019:65:21::1;::::0;:117;;:65:::1;:117::i;:::-;3161:11:::0;;3158:160:::1;;-1:-1:-1::0;;;;;3274:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;;;3206:29;;-1:-1:-1;;;3206:29:21;;;;3188:117:::1;::::0;3254:10:::1;::::0;3274:20;::::1;::::0;3297:7;;3274:20;;3206:27:::1;::::0;:29:::1;::::0;;::::1;::::0;3274:20;;3206:29;;;;;;3274:20;3206:29:::1;;;;;;;;;::::0;::::1;;;;3188:117;3331:12:::0;;3328:161:::1;;-1:-1:-1::0;;;;;3445:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;;;3377:29;;-1:-1:-1;;;3377:29:21;;;;3359:118:::1;::::0;3425:10:::1;::::0;3445:20;::::1;::::0;3468:8;;3445:20;;3377:27:::1;::::0;:29:::1;::::0;;::::1;::::0;3445:20;;3377:29;;;;;;3445:20;3377:29:::1;;;;;;;;;::::0;::::1;;;;3359:118;-1:-1:-1::0;;;;;3537:20:21;;::::1;;::::0;;;:5:::1;:20;::::0;;;;;;;:67;;-1:-1:-1;;;3537:67:21;;::::1;::::0;::::1;8102:25:42::0;;;8143:18;;;8136:34;;;8186:18;;;8179:34;;;8249:32;;;8229:18;;;8222:60;3537:20:21;::::1;::::0;:28:::1;::::0;8074:19:42;;3537:67:21::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3621:44;::::0;160:25:42;;;3509:95:21;;-1:-1:-1;3509:95:21;;-1:-1:-1;3509:95:21;-1:-1:-1;;;;;;3621:44:21;;::::1;::::0;;;::::1;::::0;::::1;::::0;148:2:42;133:18;3621:44:21::1;;;;;;;2607:1067:::0;;;;;;;;;:::o;8455:63::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;8502:8:21::1;:6;:8::i;1276:85:0:-:0;1348:6;;-1:-1:-1;;;;;1348:6:0;;1276:85::o;1667:259:21:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;2385:16;:14;:16::i;:::-;2361:107;;;;-1:-1:-1;;;2361:107:1;;8806:2:42;2361:107:1;;;8788:21:42;8845:2;8825:18;;;8818:30;8884:34;8864:18;;;8857:62;-1:-1:-1;;;8935:18:42;;;8928:44;8989:19;;2361:107:1;8604:410:42;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;1737:17:21::1;:15;:17::i;:::-;1765:16;:14;:16::i;:::-;1857:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1813:66;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1792:10:21::1;:88:::0;;-1:-1:-1;;;;;;1792:88:21::1;-1:-1:-1::0;;;;;1792:88:21;;;::::1;::::0;;;::::1;::::0;;1891:27:::1;1909:8:::0;1891:17:::1;:27::i;:::-;2649:14:1::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;1667:259:21;:::o;5732:577::-;1583:11;;-1:-1:-1;;;;;1583:11:21;1569:10;:25;1561:34;;;;;;1411:7:2;;;;1654:9:::1;1646:38;;;;-1:-1:-1::0;;;1646:38:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6069:20:21;;::::2;6106:1;6069:20:::0;;;:5:::2;:20;::::0;;;;;::::2;6061:49;;;::::0;::::2;;-1:-1:-1::0;;;;;6121:20:21;;::::2;;::::0;;;:5:::2;:20;::::0;;;;;;;:139;;-1:-1:-1;;;6121:139:21;;:20;::::2;::::0;:31:::2;::::0;:139:::2;::::0;6153:25;;;;6180;;;;6207;;;;6234;;;;6121:139:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;6276:25:21::2;::::0;-1:-1:-1;;;;;6276:25:21;::::2;::::0;-1:-1:-1;6276:25:21::2;::::0;-1:-1:-1;6276:25:21;;::::2;5732:577:::0;;;;;;;;;:::o;7870:169::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7953:11:21::1;:28:::0;;-1:-1:-1;;;;;;7953:28:21::1;-1:-1:-1::0;;;;;7953:28:21;::::1;::::0;;::::1;::::0;;;7997:34:::1;::::0;::::1;::::0;-1:-1:-1;;7997:34:21::1;7870:169:::0;:::o;7377:383::-;-1:-1:-1;;;;;7534:20:21;;;7446:23;7534:20;;;:5;:20;;;;;;7446:23;;;;;;7534:20;:40;7530:223;;-1:-1:-1;;;;;7609:20:21;;;;;;;:5;:20;;;;;;;;;;:36;;-1:-1:-1;;;7609:36:21;;;;:20;;;:34;;:36;;;;;:20;:36;;;;;;:20;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7591:54;;7696:45;7710:13;7725:15;7696:13;:45::i;:::-;7661:80;;-1:-1:-1;7661:80:21;-1:-1:-1;7530:223:21;7377:383;;;;;:::o;1156:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1156:24:21;;-1:-1:-1;1156:24:21;:::o;8047:228::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;8137:22:21;::::1;8129:31;;;::::0;::::1;;8171:28;8190:8;8171:18;:28::i;:::-;8228:10;::::0;8210:57:::1;::::0;-1:-1:-1;;;8210:57:21;;-1:-1:-1;;;;;8228:10:21;;::::1;::::0;8210:47:::1;::::0;:57:::1;::::0;8258:8;;8210:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8047:228:::0;:::o;2353:117:2:-;1411:7;;;;1912:41;;;;-1:-1:-1;;;1912:41:2;;10736:2:42;1912:41:2;;;10718:21:42;10775:2;10755:18;;;10748:30;-1:-1:-1;;;10794:18:42;;;10787:50;10854:18;;1912:41:2;10534:344:42;1912:41:2;2411:7:::1;:15:::0;;-1:-1:-1;;2411:15:2::1;::::0;;2441:22:::1;929:10:6::0;2450:12:2::1;2441:22;;;;;;:::i;:::-;;;;;;;;2353:117::o:0;8930:533:21:-;-1:-1:-1;;;;;9066:20:21;;;9017:15;9066:20;;;:5;:20;;;;;;9017:15;;;;9066:20;:40;9062:394;;-1:-1:-1;;;;;9140:20:21;;;9123:14;9140:20;;;:5;:20;;;;;;;;;:29;;-1:-1:-1;;;9140:29:21;;;;9123:14;;9140:20;;:27;;:29;;;;;:20;;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9123:46;;9184:19;9213:6;-1:-1:-1;;;;;9206:26:21;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9277:20:21;;;;;;;:5;:20;;;;;;;;;;:29;;-1:-1:-1;;;9277:29:21;;;;9184:50;;-1:-1:-1;9184:50:21;;9277:20;;;:27;;:29;;;;;:20;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9270:47:21;;9318:6;9270:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9259:66;;:8;:66;:::i;:::-;:80;;;;:::i;:::-;-1:-1:-1;;;;;9382:20:21;;;;;;;:5;:20;;;;;;;;;;:29;;-1:-1:-1;;;9382:29:21;;;;9249:90;;-1:-1:-1;9433:11:21;;9382:20;;;:27;;:29;;;;;:20;:29;;;;;;:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9375:47:21;;9423:6;9375:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9364:66;;:8;:66;:::i;:::-;:80;;;;:::i;:::-;9354:90;;9108:348;;9062:394;8930:533;;;;;:::o;2510:187:0:-;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;9556:375:21:-;9687:10;;9712:124;;9617:7;;;;-1:-1:-1;;;;;9687:10:21;;;;-1:-1:-1;;;9753:36:21;9712:124;;9808:13;;9712:124;;;:::i;:::-;;;;-1:-1:-1;;9712:124:21;;;;;;;;;;;;;;-1:-1:-1;;;;;9712:124:21;-1:-1:-1;;;;;;9712:124:21;;;;;;;;;;9657:190;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9863:28:21;;9637:210;;-1:-1:-1;;;;;;9863:28:21;;;;;;;;9917:5;9556:375;-1:-1:-1;;9556:375:21:o;967:252:4:-;1143:68;;;-1:-1:-1;;;;;12477:15:42;;;1143:68:4;;;12459:34:42;12529:15;;12509:18;;;12502:43;12561:18;;;;12554:34;;;1143:68:4;;;;;;;;;;12394:18:42;;;;1143:68:4;;;;;;;;-1:-1:-1;;;;;1143:68:4;-1:-1:-1;;;1143:68:4;;;1116:96;;1136:5;;1116:19;:96::i;2106:115:2:-;1411:7;;;;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;2165:7:::1;:14:::0;;-1:-1:-1;;2165:14:2::1;2175:4;2165:14;::::0;;2194:20:::1;2201:12;929:10:6::0;;850:96;3037:123:1;3085:4;3109:44;3147:4;3109:29;:44::i;:::-;3108:45;3101:52;;3037:123;:::o;1048:97:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1111:27:2::1;:25;:27::i;988:95:0:-:0;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;3306:717:4:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:4;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:4;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:4;;13463:2:42;3921:85:4;;;13445:21:42;13502:2;13482:18;;;13475:30;13541:34;13521:18;;;13514:62;-1:-1:-1;;;13592:18:42;;;13585:40;13642:19;;3921:85:4;13261:406:42;3921:85:4;3387:636;3306:717;;:::o;1186:320:5:-;-1:-1:-1;;;;;1476:19:5;;:23;;;1186:320::o;1151:95:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1224:7:2::1;:15:::0;;-1:-1:-1;;1224:15:2::1;::::0;;1151:95::o;1089:111:0:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:6::0;1161:18:0::1;:32::i;3872:223:5:-:0;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:5;;13874:2:42;5148:81:5;;;13856:21:42;13913:2;13893:18;;;13886:30;13952:34;13932:18;;;13925:62;-1:-1:-1;;;14003:18:42;;;13996:36;14049:19;;5148:81:5;13672:402:42;5148:81:5;5247:18;5258:6;5247:10;:18::i;:::-;5239:60;;;;-1:-1:-1;;;5239:60:5;;14281:2:42;5239:60:5;;;14263:21:42;14320:2;14300:18;;;14293:30;14359:31;14339:18;;;14332:59;14408:18;;5239:60:5;14079:353:42;5239:60:5;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:5;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:5:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:5;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:42:-;-1:-1:-1;;;;;271:31:42;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:118::-;418:5;411:13;404:21;397:5;394:32;384:60;;440:1;437;430:12;455:592;538:6;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;671:9;658:23;690:31;715:5;690:31;:::i;:::-;740:5;-1:-1:-1;792:2:42;777:18;;764:32;;-1:-1:-1;848:2:42;833:18;;820:32;861:30;820:32;861:30;:::i;:::-;910:7;-1:-1:-1;969:2:42;954:18;;941:32;982:33;941:32;982:33;:::i;:::-;455:592;;;;-1:-1:-1;455:592:42;;-1:-1:-1;;455:592:42:o;1305:388::-;1373:6;1381;1434:2;1422:9;1413:7;1409:23;1405:32;1402:52;;;1450:1;1447;1440:12;1402:52;1489:9;1476:23;1508:31;1533:5;1508:31;:::i;:::-;1558:5;-1:-1:-1;1615:2:42;1600:18;;1587:32;1628:33;1587:32;1628:33;:::i;:::-;1680:7;1670:17;;;1305:388;;;;;:::o;2214:383::-;2291:6;2299;2307;2360:2;2348:9;2339:7;2335:23;2331:32;2328:52;;;2376:1;2373;2366:12;2328:52;2415:9;2402:23;2434:31;2459:5;2434:31;:::i;:::-;2484:5;2536:2;2521:18;;2508:32;;-1:-1:-1;2587:2:42;2572:18;;;2559:32;;2214:383;-1:-1:-1;;;2214:383:42:o;2602:594::-;2697:6;2705;2713;2721;2729;2782:3;2770:9;2761:7;2757:23;2753:33;2750:53;;;2799:1;2796;2789:12;2750:53;2835:9;2822:23;2812:33;;2892:2;2881:9;2877:18;2864:32;2854:42;;2943:2;2932:9;2928:18;2915:32;2905:42;;2997:2;2986:9;2982:18;2969:32;3010:31;3035:5;3010:31;:::i;:::-;3060:5;-1:-1:-1;3117:3:42;3102:19;;3089:33;3131;3089;3131;:::i;:::-;3183:7;3173:17;;;2602:594;;;;;;;;:::o;3201:203::-;-1:-1:-1;;;;;3365:32:42;;;;3347:51;;3335:2;3320:18;;3201:203::o;3409:247::-;3468:6;3521:2;3509:9;3500:7;3496:23;3492:32;3489:52;;;3537:1;3534;3527:12;3489:52;3576:9;3563:23;3595:31;3620:5;3595:31;:::i;3661:367::-;3724:8;3734:6;3788:3;3781:4;3773:6;3769:17;3765:27;3755:55;;3806:1;3803;3796:12;3755:55;-1:-1:-1;3829:20:42;;-1:-1:-1;;;;;3861:30:42;;3858:50;;;3904:1;3901;3894:12;3858:50;3941:4;3933:6;3929:17;3917:29;;4001:3;3994:4;3984:6;3981:1;3977:14;3969:6;3965:27;3961:38;3958:47;3955:67;;;4018:1;4015;4008:12;4033:1540;4236:6;4244;4252;4260;4268;4276;4284;4292;4300;4353:3;4341:9;4332:7;4328:23;4324:33;4321:53;;;4370:1;4367;4360:12;4321:53;4409:9;4396:23;4428:31;4453:5;4428:31;:::i;:::-;4478:5;-1:-1:-1;4534:2:42;4519:18;;4506:32;-1:-1:-1;;;;;4587:14:42;;;4584:34;;;4614:1;4611;4604:12;4584:34;4653:70;4715:7;4706:6;4695:9;4691:22;4653:70;:::i;:::-;4742:8;;-1:-1:-1;4627:96:42;-1:-1:-1;4830:2:42;4815:18;;4802:32;;-1:-1:-1;4846:16:42;;;4843:36;;;4875:1;4872;4865:12;4843:36;4914:72;4978:7;4967:8;4956:9;4952:24;4914:72;:::i;:::-;5005:8;;-1:-1:-1;4888:98:42;-1:-1:-1;5093:2:42;5078:18;;5065:32;;-1:-1:-1;5109:16:42;;;5106:36;;;5138:1;5135;5128:12;5106:36;5177:72;5241:7;5230:8;5219:9;5215:24;5177:72;:::i;:::-;5268:8;;-1:-1:-1;5151:98:42;-1:-1:-1;5356:3:42;5341:19;;5328:33;;-1:-1:-1;5373:16:42;;;5370:36;;;5402:1;5399;5392:12;5370:36;;5441:72;5505:7;5494:8;5483:9;5479:24;5441:72;:::i;:::-;5415:98;;5532:8;5522:18;;;5559:8;5549:18;;;4033:1540;;;;;;;;;;;:::o;5578:180::-;5637:6;5690:2;5678:9;5669:7;5665:23;5661:32;5658:52;;;5706:1;5703;5696:12;5658:52;-1:-1:-1;5729:23:42;;5578:180;-1:-1:-1;5578:180:42:o;6008:356::-;6210:2;6192:21;;;6229:18;;;6222:30;6288:34;6283:2;6268:18;;6261:62;6355:2;6340:18;;6008:356::o;6369:340::-;6571:2;6553:21;;;6610:2;6590:18;;;6583:30;-1:-1:-1;;;6644:2:42;6629:18;;6622:46;6700:2;6685:18;;6369:340::o;7176:245::-;7255:6;7263;7316:2;7304:9;7295:7;7291:23;7287:32;7284:52;;;7332:1;7329;7322:12;7284:52;-1:-1:-1;;7355:16:42;;7411:2;7396:18;;;7390:25;7355:16;;7390:25;;-1:-1:-1;7176:245:42:o;7426:184::-;7496:6;7549:2;7537:9;7528:7;7524:23;7520:32;7517:52;;;7565:1;7562;7555:12;7517:52;-1:-1:-1;7588:16:42;;7426:184;-1:-1:-1;7426:184:42:o;7615:251::-;7685:6;7738:2;7726:9;7717:7;7713:23;7709:32;7706:52;;;7754:1;7751;7744:12;7706:52;7786:9;7780:16;7805:31;7830:5;7805:31;:::i;8293:306::-;8381:6;8389;8397;8450:2;8438:9;8429:7;8425:23;8421:32;8418:52;;;8466:1;8463;8456:12;8418:52;8495:9;8489:16;8479:26;;8545:2;8534:9;8530:18;8524:25;8514:35;;8589:2;8578:9;8574:18;8568:25;8558:35;;8293:306;;;;;:::o;9019:522::-;9119:6;9114:3;9107:19;9089:3;9145:4;9174:2;9169:3;9165:12;9158:19;;9200:5;9223:1;9233:283;9247:6;9244:1;9241:13;9233:283;;;9324:6;9311:20;9344:33;9369:7;9344:33;:::i;:::-;-1:-1:-1;;;;;9402:33:42;9390:46;;9456:12;;;;9491:15;;;;9432:1;9262:9;9233:283;;;-1:-1:-1;9532:3:42;;9019:522;-1:-1:-1;;;;;9019:522:42:o;9546:983::-;9999:3;9988:9;9981:22;9962:4;10026:74;10095:3;10084:9;10080:19;10072:6;10064;10026:74;:::i;:::-;10148:9;10140:6;10136:22;10131:2;10120:9;10116:18;10109:50;10182:61;10236:6;10228;10220;10182:61;:::i;:::-;10168:75;;10291:9;10283:6;10279:22;10274:2;10263:9;10259:18;10252:50;10325:61;10379:6;10371;10363;10325:61;:::i;:::-;10311:75;;10434:9;10426:6;10422:22;10417:2;10406:9;10402:18;10395:50;10462:61;10516:6;10508;10500;10462:61;:::i;:::-;10454:69;9546:983;-1:-1:-1;;;;;;;;;;;9546:983:42:o;10883:265::-;10923:7;10989:1;10985;10981:6;10977:14;10974:1;10971:21;10966:1;10959:9;10952:17;10948:45;10945:168;;;11035:10;11030:3;11026:20;11023:1;11016:31;11070:4;11067:1;11060:15;11098:4;11095:1;11088:15;10945:168;-1:-1:-1;11133:9:42;;10883:265::o;11153:217::-;11193:1;11219;11209:132;;11263:10;11258:3;11254:20;11251:1;11244:31;11298:4;11295:1;11288:15;11326:4;11323:1;11316:15;11209:132;-1:-1:-1;11355:9:42;;11153:217::o;11375:258::-;11447:1;11457:113;11471:6;11468:1;11465:13;11457:113;;;11547:11;;;11541:18;11528:11;;;11521:39;11493:2;11486:10;11457:113;;;11588:6;11585:1;11582:13;11579:48;;;-1:-1:-1;;11623:1:42;11605:16;;11598:27;11375:258::o;11638:257::-;11679:3;11717:5;11711:12;11744:6;11739:3;11732:19;11760:63;11816:6;11809:4;11804:3;11800:14;11793:4;11786:5;11782:16;11760:63;:::i;:::-;11877:2;11856:15;-1:-1:-1;;11852:29:42;11843:39;;;;11884:4;11839:50;;11638:257;-1:-1:-1;;11638:257:42:o;11900:314::-;-1:-1:-1;;;;;12075:32:42;;12057:51;;12144:2;12139;12124:18;;12117:30;;;-1:-1:-1;;12164:44:42;;12189:18;;12181:6;12164:44;:::i;12599:407::-;12801:2;12783:21;;;12840:2;12820:18;;;12813:30;12879:34;12874:2;12859:18;;12852:62;-1:-1:-1;;;12945:2:42;12930:18;;12923:41;12996:3;12981:19;;12599:407::o;13011:245::-;13078:6;13131:2;13119:9;13110:7;13106:23;13102:32;13099:52;;;13147:1;13144;13137:12;13099:52;13179:9;13173:16;13198:28;13220:5;13198:28;:::i;14437:274::-;14566:3;14604:6;14598:13;14620:53;14666:6;14661:3;14654:4;14646:6;14642:17;14620:53;:::i;:::-;14689:16;;;;;14437:274;-1:-1:-1;;14437:274:42:o;14716:219::-;14865:2;14854:9;14847:21;14828:4;14885:44;14925:2;14914:9;14910:18;14902:6;14885:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {QuickswapDualFarmUpgradeable as Farm, IERC20, IERC20Upgradeable, SafeERC20Upgradeable, IUniswapV2Pair, Initializable} from \"./farms/QuickswapDualFarmUpgradeable.sol\"; \r\n\r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract QuickswapDualFarmFactoryBeacon is Initializable, PausableUpgradeable, OwnableUpgradeable{\r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    /**\r\n     * @dev Contract Variables:\r\n     * farmBeacon - Farm contract implementation.\r\n     *\r\n     * distributor - Address authorized to make distributions.\r\n     * Farms - Links {lpPools} to the deployed Farm contract.\r\n     * lpPools - List of pools that have corresponding deployed Farm contract.\r\n     */\r\n    address public farmBeacon;\r\n\r\n    address public distributor;\r\n    mapping(address => Farm) public Farms;\r\n    address[] public lpPools;\r\n\r\n    event FarmDeployed(address indexed farmAddress);\r\n    event Deposit(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Withdraw(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Distribute(address indexed lpPool);\r\n    event DistributorChanged(address indexed newDistributor);\r\n\r\n    modifier distributorOnly(){\r\n        require(msg.sender == distributor);\r\n        _;\r\n    }\r\n\r\n    // ============ Methods ============\r\n\r\n    function initialize(address upgrader) external initializer {\r\n        __Pausable_init();\r\n        __Ownable_init();\r\n        farmBeacon = address(new UpgradeableBeacon(\r\n            address(new Farm())\r\n        ));\r\n        transferOwnership(upgrader);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\r\n     * @param amountA  - Token A amount to deposit.\r\n     * @param amountB -  Token B amount to deposit.\r\n     * @param amountLP - LP Token amount to deposit.\r\n     * @param lpStakingPool - Address of the pool to deposit tokens in.\r\n     * @param recipient - Address which will recieve the deposit and leftover tokens.\r\n     \r\n     * @return sentA - Token A amount sent to the farm.\r\n     * @return sentB - Token B amount sent to the farm.\r\n     * @return liquidity - Total liquidity sent to the farm (in lpTokens).\r\n     */\r\n    function deposit(uint256 amountA, uint256 amountB, uint256 amountLP, address lpStakingPool, address recipient) external whenNotPaused returns(uint256 sentA, uint256 sentB, uint256 liquidity) {\r\n        if(Farms[lpStakingPool] == Farm(address(0))){\r\n            Farms[lpStakingPool] = Farm(createFarm(lpStakingPool));\r\n            lpPools.push(lpStakingPool); \r\n        }\r\n\r\n        if(amountA > 0){\r\n            IERC20Upgradeable(Farms[lpStakingPool].tokenA()).safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountA);\r\n        }\r\n        if(amountB > 0){\r\n            IERC20Upgradeable(Farms[lpStakingPool].tokenB()).safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountB); \r\n        }\r\n        if(amountLP > 0){\r\n            IERC20Upgradeable(Farms[lpStakingPool].lpPair()).safeTransferFrom(msg.sender, address(Farms[lpStakingPool]), amountLP);\r\n        }\r\n        \r\n        (sentA, sentB, liquidity) = Farms[lpStakingPool].deposit(amountA, amountB, amountLP, recipient); \r\n        emit Deposit(recipient, lpStakingPool, liquidity); \r\n    }\r\n\r\n    /** \r\n     * @dev Withdraws tokens from the given pool. \r\n     * @param lpStakingPool - LP pool to withdraw from.\r\n     * @param amount - LP amount to withdraw. \r\n     * @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\r\n     * @param recipient - The address which will recieve tokens.\r\n\r\n     * @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     * @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     */ \r\n    function withdraw(address lpStakingPool, uint256 amount, bool withdrawLP, address recipient) external whenNotPaused returns(uint256 amountA, uint256 amountB){\r\n        require(Farms[lpStakingPool] != Farm(address(0)));\r\n        (amountA, amountB) = Farms[lpStakingPool].withdraw(msg.sender, amount, withdrawLP, recipient); \r\n        emit Withdraw(msg.sender, lpStakingPool, amount); \r\n    }\r\n\r\n    /**\r\n     * @dev Sets expected reward amount and block for token distribution calculations.\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n     * @param expectedReward - New reward amount.\r\n     * @param expectedRewardBlock - New reward block.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */  \r\n    function setExpectedReward(address lpStakingPool, uint256 expectedReward, uint256 expectedRewardBlock) external distributorOnly {\r\n        require(Farms[lpStakingPool] != Farm(address(0)));\r\n        Farms[lpStakingPool].setExpectedReward(expectedReward, expectedRewardBlock); \r\n    }\r\n\r\n    /**\r\n     * @dev Distributes tokens between users.\r\n     * @param lpStakingPool - LP pool to distribute tokens in.\r\n     * @param rewardTokenAToTokenARoute An array of token addresses.\r\n     * @param rewardTokenAToTokenBRoute An array of token addresses.\r\n     * @param rewardTokenBToTokenARoute An array of token addresses.\r\n     * @param rewardTokenBToTokenBRoute An array of token addresses.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */ \r\n    function distribute(\r\n        address lpStakingPool,\r\n        address[] calldata rewardTokenAToTokenARoute,\r\n        address[] calldata rewardTokenAToTokenBRoute,\r\n        address[] calldata rewardTokenBToTokenARoute,\r\n        address[] calldata rewardTokenBToTokenBRoute\r\n    ) external distributorOnly whenNotPaused {\r\n        require(Farms[lpStakingPool] != Farm(address(0)));\r\n        Farms[lpStakingPool].distribute(rewardTokenAToTokenARoute, rewardTokenAToTokenBRoute, rewardTokenBToTokenARoute, rewardTokenBToTokenBRoute);\r\n        emit Distribute(lpStakingPool);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns tokens staked by the {_address} for the given {lpPair}.\r\n     * @param _address - The address to check stakes for.\r\n     * @param lpStakingPool - LP pool to check stakes in.\r\n\r\n     * @return stakeLP - Total user stake(in LP tokens).\r\n     * @return stakeA - Token A stake.\r\n     * @return stakeB - Token B stake.\r\n     */\r\n    function userStake(address _address, address lpStakingPool) external view returns (uint256 stakeLP, uint256 stakeA, uint256 stakeB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            stakeLP = Farms[lpStakingPool].userBalance(_address);\r\n            (stakeA, stakeB) = getTokenStake(lpStakingPool, stakeLP);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n\r\n     * @return totalDepositsLP - Total deposits (in LP tokens).\r\n     * @return totalDepositsA - Token A deposits.\r\n     * @return totalDepositsB - Token B deposits.\r\n     */  \r\n    function totalDeposits(address lpStakingPool) external view returns (uint256 totalDepositsLP, uint256 totalDepositsA, uint256 totalDepositsB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            totalDepositsLP = Farms[lpStakingPool].totalDeposits(); \r\n            (totalDepositsA, totalDepositsB) = getTokenStake(lpStakingPool, totalDepositsLP);\r\n        }\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return lpPools.length;\r\n    }\r\n\r\n    function transferDistributor(address newDistributor) external onlyOwner {\r\n        distributor = newDistributor;\r\n        emit DistributorChanged(newDistributor);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public override onlyOwner {\r\n        require(newOwner != address(0));\r\n        _transferOwnership(newOwner);\r\n        UpgradeableBeacon(farmBeacon).transferOwnership(newOwner);\r\n    }\r\n\r\n    function renounceOwnership() public override onlyOwner {\r\n        _transferOwnership(address(0));\r\n        UpgradeableBeacon(farmBeacon).renounceOwnership();\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\r\n     * @param lpStakingPool - LP pool to check total deposits in.\r\n     * @param amountLP - Amount of LP tokens to convert.\r\n\r\n     * @return amountA - Token A amount.\r\n     * @return amountB - Token B amount.\r\n     */ \r\n    function getTokenStake(address lpStakingPool, uint256 amountLP) internal view returns (uint256 amountA, uint256 amountB) {\r\n        if (Farms[lpStakingPool] != Farm(address(0))) {\r\n            address lpPair = Farms[lpStakingPool].lpPair();\r\n            uint256 totalSupply = IERC20(lpPair).totalSupply();\r\n            amountA = amountLP * IERC20(Farms[lpStakingPool].tokenA()).balanceOf(lpPair) / totalSupply;\r\n            amountB = amountLP * IERC20(Farms[lpStakingPool].tokenB()).balanceOf(lpPair) / totalSupply;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys new Farm contract and calls initialize on it.\r\n     */\r\n    function createFarm(address lpStakingPool) internal returns (address) {\r\n        BeaconProxy proxy = new BeaconProxy(\r\n            farmBeacon,\r\n            abi.encodeWithSelector(\r\n                Farm(address(0)).initialize.selector,\r\n                lpStakingPool\r\n            )\r\n        );\r\n        emit FarmDeployed(address(proxy));\r\n        return address(proxy);\r\n    }\r\n} ",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-branch\\contracts\\QuickswapDualFarmFactoryBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/QuickswapDualFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        2069
      ],
      "AddressUpgradeable": [
        853
      ],
      "BeaconProxy": [
        1483
      ],
      "Context": [
        2091
      ],
      "ContextUpgradeable": [
        895
      ],
      "ERC1967Upgrade": [
        1349
      ],
      "Farm": [
        7024
      ],
      "IBeacon": [
        1493
      ],
      "IERC20": [
        1772
      ],
      "IERC20Upgradeable": [
        386
      ],
      "IUniswapV2Pair": [
        9919
      ],
      "Initializable": [
        197
      ],
      "Ownable": [
        1000
      ],
      "OwnableUpgradeable": [
        123
      ],
      "PausableUpgradeable": [
        308
      ],
      "Proxy": [
        1401
      ],
      "QuickswapDualFarmFactoryBeacon": [
        3741
      ],
      "SafeERC20Upgradeable": [
        610
      ],
      "StorageSlot": [
        2151
      ],
      "UpgradeableBeacon": [
        1568
      ]
    },
    "id": 3742,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3053,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:21"
      },
      {
        "id": 3054,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:21"
      },
      {
        "absolutePath": "project:/contracts/farms/QuickswapDualFarmUpgradeable.sol",
        "file": "./farms/QuickswapDualFarmUpgradeable.sol",
        "id": 3061,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3742,
        "sourceUnit": 7025,
        "src": "95:174:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3055,
              "name": "QuickswapDualFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:28:21",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3056,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "141:6:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3057,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "149:17:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3058,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "168:20:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3059,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "190:14:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3060,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "206:13:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 3062,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3742,
        "sourceUnit": 1569,
        "src": "274:68:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 3063,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3742,
        "sourceUnit": 1484,
        "src": "344:62:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 3064,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3742,
        "sourceUnit": 309,
        "src": "408:78:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 3065,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3742,
        "sourceUnit": 124,
        "src": "488:75:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3066,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 197,
              "src": "610:13:21"
            },
            "id": 3067,
            "nodeType": "InheritanceSpecifier",
            "src": "610:13:21"
          },
          {
            "baseName": {
              "id": 3068,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 308,
              "src": "625:19:21"
            },
            "id": 3069,
            "nodeType": "InheritanceSpecifier",
            "src": "625:19:21"
          },
          {
            "baseName": {
              "id": 3070,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 123,
              "src": "646:18:21"
            },
            "id": 3071,
            "nodeType": "InheritanceSpecifier",
            "src": "646:18:21"
          }
        ],
        "canonicalName": "QuickswapDualFarmFactoryBeacon",
        "contractDependencies": [
          1483,
          1568,
          7024
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3741,
        "linearizedBaseContracts": [
          3741,
          123,
          308,
          895,
          197
        ],
        "name": "QuickswapDualFarmFactoryBeacon",
        "nameLocation": "576:30:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3075,
            "libraryName": {
              "id": 3072,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 610,
              "src": "677:20:21"
            },
            "nodeType": "UsingForDirective",
            "src": "671:49:21",
            "typeName": {
              "id": 3074,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3073,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 386,
                "src": "702:17:21"
              },
              "referencedDeclaration": 386,
              "src": "702:17:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 3076,
              "nodeType": "StructuredDocumentation",
              "src": "728:311:21",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n distributor - Address authorized to make distributions.\n Farms - Links {lpPools} to the deployed Farm contract.\n lpPools - List of pools that have corresponding deployed Farm contract."
            },
            "functionSelector": "d95a4d93",
            "id": 3078,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "1060:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3741,
            "src": "1045:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3077,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1045:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 3080,
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1094:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 3741,
            "src": "1079:26:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3079,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1079:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 3085,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "1144:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 3741,
            "src": "1112:37:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
            },
            "typeName": {
              "id": 3084,
              "keyType": {
                "id": 3081,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1120:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1112:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
              },
              "valueType": {
                "id": 3083,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3082,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7024,
                  "src": "1131:4:21"
                },
                "referencedDeclaration": 7024,
                "src": "1131:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                  "typeString": "contract QuickswapDualFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 3088,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "1173:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3741,
            "src": "1156:24:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3086,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1156:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3087,
              "nodeType": "ArrayTypeName",
              "src": "1156:9:21",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3092,
            "name": "FarmDeployed",
            "nameLocation": "1195:12:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3090,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "1224:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3092,
                  "src": "1208:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1207:29:21"
            },
            "src": "1189:48:21"
          },
          {
            "anonymous": false,
            "id": 3100,
            "name": "Deposit",
            "nameLocation": "1249:7:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3094,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1273:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3100,
                  "src": "1257:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3096,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1297:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3100,
                  "src": "1281:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3098,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1313:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3100,
                  "src": "1305:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1256:64:21"
            },
            "src": "1243:78:21"
          },
          {
            "anonymous": false,
            "id": 3108,
            "name": "Withdraw",
            "nameLocation": "1333:8:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3102,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1358:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3108,
                  "src": "1342:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3104,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1382:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3108,
                  "src": "1366:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3106,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1398:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3108,
                  "src": "1390:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1341:64:21"
            },
            "src": "1327:79:21"
          },
          {
            "anonymous": false,
            "id": 3112,
            "name": "Distribute",
            "nameLocation": "1418:10:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3110,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1445:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3112,
                  "src": "1429:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1428:24:21"
            },
            "src": "1412:41:21"
          },
          {
            "anonymous": false,
            "id": 3116,
            "name": "DistributorChanged",
            "nameLocation": "1465:18:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3114,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "1500:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3116,
                  "src": "1484:30:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:32:21"
            },
            "src": "1459:57:21"
          },
          {
            "body": {
              "id": 3126,
              "nodeType": "Block",
              "src": "1550:65:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3119,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1569:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1569:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3121,
                          "name": "distributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3080,
                          "src": "1583:11:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1569:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1561:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:34:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3124,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:34:21"
                },
                {
                  "id": 3125,
                  "nodeType": "PlaceholderStatement",
                  "src": "1606:1:21"
                }
              ]
            },
            "id": 3127,
            "name": "distributorOnly",
            "nameLocation": "1533:15:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:2:21"
            },
            "src": "1524:91:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3161,
              "nodeType": "Block",
              "src": "1726:200:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3134,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "1737:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1737:17:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:17:21"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3137,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1765:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3139,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:16:21"
                },
                {
                  "expression": {
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3140,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3078,
                      "src": "1792:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1857:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                      "typeString": "function () returns (contract QuickswapDualFarmUpgradeable)"
                                    },
                                    "typeName": {
                                      "id": 3149,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 3148,
                                        "name": "Farm",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 7024,
                                        "src": "1861:4:21"
                                      },
                                      "referencedDeclaration": 7024,
                                      "src": "1861:4:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    }
                                  },
                                  "id": 3151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1857:10:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1849:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3146,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1849:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1849:19:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1813:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1568_$",
                              "typeString": "function (address) returns (contract UpgradeableBeacon)"
                            },
                            "typeName": {
                              "id": 3144,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3143,
                                "name": "UpgradeableBeacon",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1568,
                                "src": "1817:17:21"
                              },
                              "referencedDeclaration": 1568,
                              "src": "1817:17:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                                "typeString": "contract UpgradeableBeacon"
                              }
                            }
                          },
                          "id": 3153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1813:66:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 3142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1805:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1805:75:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1792:88:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3156,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:88:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3158,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3129,
                        "src": "1909:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3157,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3585
                      ],
                      "referencedDeclaration": 3585,
                      "src": "1891:17:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:27:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3160,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:27:21"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 3162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3131,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "1714:11:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1714:11:21"
              }
            ],
            "name": "initialize",
            "nameLocation": "1676:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3129,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1695:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "1687:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1686:18:21"
            },
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:21"
            },
            "scope": 3741,
            "src": "1667:259:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3305,
              "nodeType": "Block",
              "src": "2798:876:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3184,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "2812:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3186,
                      "indexExpression": {
                        "id": 3185,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3171,
                        "src": "2818:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2812:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2849:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2841:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3188,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2841:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2841:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3187,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7024,
                        "src": "2836:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2836:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "2812:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3211,
                  "nodeType": "IfStatement",
                  "src": "2809:168:21",
                  "trueBody": {
                    "id": 3210,
                    "nodeType": "Block",
                    "src": "2853:124:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3194,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3085,
                              "src": "2868:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3196,
                            "indexExpression": {
                              "id": 3195,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3171,
                              "src": "2874:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2868:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3199,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3171,
                                    "src": "2907:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3198,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3740,
                                  "src": "2896:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 3200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2896:25:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3197,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7024,
                              "src": "2891:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                              }
                            },
                            "id": 3201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2891:31:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                              "typeString": "contract QuickswapDualFarmUpgradeable"
                            }
                          },
                          "src": "2868:54:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3203,
                        "nodeType": "ExpressionStatement",
                        "src": "2868:54:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3207,
                              "name": "lpStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3171,
                              "src": "2950:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3204,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3088,
                              "src": "2937:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2937:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2937:27:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3209,
                        "nodeType": "ExpressionStatement",
                        "src": "2937:27:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3212,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "2992:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3002:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2992:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3235,
                  "nodeType": "IfStatement",
                  "src": "2989:159:21",
                  "trueBody": {
                    "id": 3234,
                    "nodeType": "Block",
                    "src": "3004:144:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3223,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3085:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3085:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3227,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3085,
                                    "src": "3105:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3229,
                                  "indexExpression": {
                                    "id": 3228,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3171,
                                    "src": "3111:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3105:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3097:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3225,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3097:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3097:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3231,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3165,
                              "src": "3128:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3216,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3085,
                                        "src": "3037:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3218,
                                      "indexExpression": {
                                        "id": 3217,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3171,
                                        "src": "3043:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3037:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5957,
                                    "src": "3037:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3037:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3215,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3019:17:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 3221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3019:48:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3019:65:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:117:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3233,
                        "nodeType": "ExpressionStatement",
                        "src": "3019:117:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3236,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3167,
                      "src": "3161:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3171:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3161:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3259,
                  "nodeType": "IfStatement",
                  "src": "3158:160:21",
                  "trueBody": {
                    "id": 3258,
                    "nodeType": "Block",
                    "src": "3173:145:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3247,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3254:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3254:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3251,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3085,
                                    "src": "3274:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3253,
                                  "indexExpression": {
                                    "id": 3252,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3171,
                                    "src": "3280:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3274:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3266:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3249,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3266:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3266:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3255,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3167,
                              "src": "3297:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3240,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3085,
                                        "src": "3206:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3242,
                                      "indexExpression": {
                                        "id": 3241,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3171,
                                        "src": "3212:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3206:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3243,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5959,
                                    "src": "3206:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3206:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3239,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3188:17:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 3245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3188:48:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3188:65:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3188:117:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3257,
                        "nodeType": "ExpressionStatement",
                        "src": "3188:117:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3260,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3169,
                      "src": "3331:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3342:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3331:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3283,
                  "nodeType": "IfStatement",
                  "src": "3328:161:21",
                  "trueBody": {
                    "id": 3282,
                    "nodeType": "Block",
                    "src": "3344:145:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3425:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3425:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 3275,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3085,
                                    "src": "3445:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                      "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                    }
                                  },
                                  "id": 3277,
                                  "indexExpression": {
                                    "id": 3276,
                                    "name": "lpStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3171,
                                    "src": "3451:13:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3445:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                    "typeString": "contract QuickswapDualFarmUpgradeable"
                                  }
                                ],
                                "id": 3274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3437:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3273,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3437:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3437:29:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3279,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3169,
                              "src": "3468:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 3264,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3085,
                                        "src": "3377:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                        }
                                      },
                                      "id": 3266,
                                      "indexExpression": {
                                        "id": 3265,
                                        "name": "lpStakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3171,
                                        "src": "3383:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3377:20:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                        "typeString": "contract QuickswapDualFarmUpgradeable"
                                      }
                                    },
                                    "id": 3267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lpPair",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5955,
                                    "src": "3377:27:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 3268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3377:29:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3263,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3359:17:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 3269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3359:48:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 3270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3359:65:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 3280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3359:118:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3281,
                        "nodeType": "ExpressionStatement",
                        "src": "3359:118:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3284,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3178,
                          "src": "3510:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3285,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3180,
                          "src": "3517:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3286,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3182,
                          "src": "3524:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3287,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3509:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3292,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3165,
                          "src": "3566:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3293,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3167,
                          "src": "3575:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3294,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3169,
                          "src": "3584:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3295,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3173,
                          "src": "3594:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3288,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3085,
                            "src": "3537:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3290,
                          "indexExpression": {
                            "id": 3289,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3171,
                            "src": "3543:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3537:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6312,
                        "src": "3537:28:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 3296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3537:67:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3509:95:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3298,
                  "nodeType": "ExpressionStatement",
                  "src": "3509:95:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3300,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3173,
                        "src": "3629:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3301,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3171,
                        "src": "3640:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3302,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3182,
                        "src": "3655:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3299,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3100,
                      "src": "3621:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3621:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3304,
                  "nodeType": "EmitStatement",
                  "src": "3616:49:21"
                }
              ]
            },
            "documentation": {
              "id": 3163,
              "nodeType": "StructuredDocumentation",
              "src": "1934:667:21",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpStakingPool - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 3306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3176,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3175,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "2727:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2727:13:21"
              }
            ],
            "name": "deposit",
            "nameLocation": "2616:7:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3165,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2632:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2624:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2649:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2641:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3169,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2666:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2658:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3171,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "2684:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2676:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3173,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2707:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2699:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2699:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2623:94:21"
            },
            "returnParameters": {
              "id": 3183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3178,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2757:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2749:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3180,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2772:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2764:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3182,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2787:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "2779:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2748:49:21"
            },
            "scope": 3741,
            "src": "2607:1067:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3359,
              "nodeType": "Block",
              "src": "4359:233:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3325,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3085,
                            "src": "4378:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3327,
                          "indexExpression": {
                            "id": 3326,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3309,
                            "src": "4384:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4378:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3331,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4415:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4407:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3329,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4407:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4407:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3328,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7024,
                            "src": "4402:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4402:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "4378:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4370:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4370:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3336,
                  "nodeType": "ExpressionStatement",
                  "src": "4370:49:21"
                },
                {
                  "expression": {
                    "id": 3350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 3337,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3320,
                          "src": "4431:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3338,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3322,
                          "src": "4440:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 3339,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4430:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3344,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4481:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4481:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3346,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3311,
                          "src": "4493:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3347,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3313,
                          "src": "4501:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 3348,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3315,
                          "src": "4513:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3340,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3085,
                            "src": "4451:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3342,
                          "indexExpression": {
                            "id": 3341,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3309,
                            "src": "4457:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4451:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "id": 3343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6451,
                        "src": "4451:29:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 3349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4451:72:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4430:93:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3351,
                  "nodeType": "ExpressionStatement",
                  "src": "4430:93:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3353,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4549:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4549:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3355,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3309,
                        "src": "4561:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3356,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "4576:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3352,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3108,
                      "src": "4540:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4540:43:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3358,
                  "nodeType": "EmitStatement",
                  "src": "4535:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3307,
              "nodeType": "StructuredDocumentation",
              "src": "3682:513:21",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpStakingPool - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 3360,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3318,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3317,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "4304:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "4304:13:21"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4211:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "4228:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3360,
                  "src": "4220:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4220:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3311,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4251:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3360,
                  "src": "4243:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4243:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3313,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "4264:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3360,
                  "src": "4259:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3312,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3315,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4284:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3360,
                  "src": "4276:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4276:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4219:75:21"
            },
            "returnParameters": {
              "id": 3323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3320,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4334:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3360,
                  "src": "4326:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4326:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3322,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4351:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3360,
                  "src": "4343:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4343:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4325:34:21"
            },
            "scope": 3741,
            "src": "4202:390:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3393,
              "nodeType": "Block",
              "src": "5084:155:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3373,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3085,
                            "src": "5103:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3375,
                          "indexExpression": {
                            "id": 3374,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3363,
                            "src": "5109:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5103:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5140:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5132:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3377,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5132:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5132:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3376,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7024,
                            "src": "5127:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5127:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "5103:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5095:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5095:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "5095:49:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3389,
                        "name": "expectedReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3365,
                        "src": "5194:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3390,
                        "name": "expectedRewardBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3367,
                        "src": "5210:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3385,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3085,
                          "src": "5155:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                            "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                          }
                        },
                        "id": 3387,
                        "indexExpression": {
                          "id": 3386,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3363,
                          "src": "5161:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5155:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        }
                      },
                      "id": 3388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setExpectedReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6962,
                      "src": "5155:38:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 3391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5155:75:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3392,
                  "nodeType": "ExpressionStatement",
                  "src": "5155:75:21"
                }
              ]
            },
            "documentation": {
              "id": 3361,
              "nodeType": "StructuredDocumentation",
              "src": "4600:348:21",
              "text": " @dev Sets expected reward amount and block for token distribution calculations.\n @param lpStakingPool - LP pool to check total deposits in.\n @param expectedReward - New reward amount.\n @param expectedRewardBlock - New reward block.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "613c91af",
            "id": 3394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3369,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3127,
                  "src": "5068:15:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "5068:15:21"
              }
            ],
            "name": "setExpectedReward",
            "nameLocation": "4965:17:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3363,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "4991:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "4983:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4983:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3365,
                  "mutability": "mutable",
                  "name": "expectedReward",
                  "nameLocation": "5014:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "5006:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5006:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3367,
                  "mutability": "mutable",
                  "name": "expectedRewardBlock",
                  "nameLocation": "5038:19:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3394,
                  "src": "5030:27:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5030:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4982:76:21"
            },
            "returnParameters": {
              "id": 3371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5084:0:21"
            },
            "scope": 3741,
            "src": "4956:283:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3443,
              "nodeType": "Block",
              "src": "6050:259:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        },
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3417,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3085,
                            "src": "6069:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3419,
                          "indexExpression": {
                            "id": 3418,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3397,
                            "src": "6075:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6069:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 3423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6106:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 3422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6098:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3421,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6098:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6098:10:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3420,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7024,
                            "src": "6093:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                              "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                            }
                          },
                          "id": 3425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6093:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                            "typeString": "contract QuickswapDualFarmUpgradeable"
                          }
                        },
                        "src": "6069:40:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6061:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6061:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3428,
                  "nodeType": "ExpressionStatement",
                  "src": "6061:49:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3433,
                        "name": "rewardTokenAToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3400,
                        "src": "6153:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 3434,
                        "name": "rewardTokenAToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3403,
                        "src": "6180:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 3435,
                        "name": "rewardTokenBToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3406,
                        "src": "6207:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 3436,
                        "name": "rewardTokenBToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3409,
                        "src": "6234:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 3429,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3085,
                          "src": "6121:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                            "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                          }
                        },
                        "id": 3431,
                        "indexExpression": {
                          "id": 3430,
                          "name": "lpStakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3397,
                          "src": "6127:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6121:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                          "typeString": "contract QuickswapDualFarmUpgradeable"
                        }
                      },
                      "id": 3432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6947,
                      "src": "6121:31:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,address[] memory,address[] memory,address[] memory) external"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:139:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3438,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:139:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3440,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "6287:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3439,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3112,
                      "src": "6276:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6276:25:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3442,
                  "nodeType": "EmitStatement",
                  "src": "6271:30:21"
                }
              ]
            },
            "documentation": {
              "id": 3395,
              "nodeType": "StructuredDocumentation",
              "src": "5247:478:21",
              "text": " @dev Distributes tokens between users.\n @param lpStakingPool - LP pool to distribute tokens in.\n @param rewardTokenAToTokenARoute An array of token addresses.\n @param rewardTokenAToTokenBRoute An array of token addresses.\n @param rewardTokenBToTokenARoute An array of token addresses.\n @param rewardTokenBToTokenBRoute An array of token addresses.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "d2dd71ad",
            "id": 3444,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3412,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3411,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3127,
                  "src": "6020:15:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "6020:15:21"
              },
              {
                "id": 3414,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3413,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "6036:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "6036:13:21"
              }
            ],
            "name": "distribute",
            "nameLocation": "5741:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3397,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "5770:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3444,
                  "src": "5762:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5762:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3400,
                  "mutability": "mutable",
                  "name": "rewardTokenAToTokenARoute",
                  "nameLocation": "5813:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3444,
                  "src": "5794:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3398,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5794:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3399,
                    "nodeType": "ArrayTypeName",
                    "src": "5794:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3403,
                  "mutability": "mutable",
                  "name": "rewardTokenAToTokenBRoute",
                  "nameLocation": "5868:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3444,
                  "src": "5849:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3401,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5849:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3402,
                    "nodeType": "ArrayTypeName",
                    "src": "5849:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3406,
                  "mutability": "mutable",
                  "name": "rewardTokenBToTokenARoute",
                  "nameLocation": "5923:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3444,
                  "src": "5904:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3404,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5904:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3405,
                    "nodeType": "ArrayTypeName",
                    "src": "5904:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3409,
                  "mutability": "mutable",
                  "name": "rewardTokenBToTokenBRoute",
                  "nameLocation": "5978:25:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3444,
                  "src": "5959:44:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3407,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5959:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3408,
                    "nodeType": "ArrayTypeName",
                    "src": "5959:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5751:259:21"
            },
            "returnParameters": {
              "id": 3415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6050:0:21"
            },
            "scope": 3741,
            "src": "5732:577:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3488,
              "nodeType": "Block",
              "src": "6802:214:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3458,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "6817:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3460,
                      "indexExpression": {
                        "id": 3459,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3449,
                        "src": "6823:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6817:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6854:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6846:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6846:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6846:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3461,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7024,
                        "src": "6841:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6841:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "6817:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3487,
                  "nodeType": "IfStatement",
                  "src": "6813:196:21",
                  "trueBody": {
                    "id": 3486,
                    "nodeType": "Block",
                    "src": "6859:150:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3468,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3452,
                            "src": "6874:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3473,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3447,
                                "src": "6917:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 3469,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3085,
                                  "src": "6884:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3471,
                                "indexExpression": {
                                  "id": 3470,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3449,
                                  "src": "6890:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6884:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7014,
                              "src": "6884:32:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6884:42:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6874:52:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3476,
                        "nodeType": "ExpressionStatement",
                        "src": "6874:52:21"
                      },
                      {
                        "expression": {
                          "id": 3484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3477,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3454,
                                "src": "6942:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3478,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3456,
                                "src": "6950:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3479,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6941:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3481,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3449,
                                "src": "6974:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3482,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3452,
                                "src": "6989:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3480,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "6960:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6960:37:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6941:56:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3485,
                        "nodeType": "ExpressionStatement",
                        "src": "6941:56:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3445,
              "nodeType": "StructuredDocumentation",
              "src": "6317:347:21",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpStakingPool - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 3489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "6679:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3447,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6697:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "6689:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6689:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3449,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "6715:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "6707:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6688:41:21"
            },
            "returnParameters": {
              "id": 3457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3452,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "6761:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "6753:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6753:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3454,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "6778:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "6770:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6770:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3456,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "6794:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3489,
                  "src": "6786:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6786:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6752:49:21"
            },
            "scope": 3741,
            "src": "6670:346:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3530,
              "nodeType": "Block",
              "src": "7519:241:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3501,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "7534:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3503,
                      "indexExpression": {
                        "id": 3502,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3492,
                        "src": "7540:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7534:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7571:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7563:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3505,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7563:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7563:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3504,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7024,
                        "src": "7558:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7558:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "7534:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3529,
                  "nodeType": "IfStatement",
                  "src": "7530:223:21",
                  "trueBody": {
                    "id": 3528,
                    "nodeType": "Block",
                    "src": "7576:177:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3511,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3495,
                            "src": "7591:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 3512,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3085,
                                  "src": "7609:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                    "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3514,
                                "indexExpression": {
                                  "id": 3513,
                                  "name": "lpStakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3492,
                                  "src": "7615:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7609:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5998,
                              "src": "7609:34:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7609:36:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7591:54:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3518,
                        "nodeType": "ExpressionStatement",
                        "src": "7591:54:21"
                      },
                      {
                        "expression": {
                          "id": 3526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3519,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3497,
                                "src": "7662:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3520,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3499,
                                "src": "7678:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3521,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7661:32:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3523,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3492,
                                "src": "7710:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3524,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3495,
                                "src": "7725:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3522,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "7696:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7696:45:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "7661:80:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3527,
                        "nodeType": "ExpressionStatement",
                        "src": "7661:80:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3490,
              "nodeType": "StructuredDocumentation",
              "src": "7024:345:21",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpStakingPool - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 3531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "7386:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3492,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "7408:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3531,
                  "src": "7400:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7400:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7399:23:21"
            },
            "returnParameters": {
              "id": 3500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "7454:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3531,
                  "src": "7446:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7446:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3497,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "7479:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3531,
                  "src": "7471:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7471:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3499,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "7503:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3531,
                  "src": "7495:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7495:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7445:73:21"
            },
            "scope": 3741,
            "src": "7377:383:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3539,
              "nodeType": "Block",
              "src": "7822:40:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3536,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3088,
                      "src": "7840:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7840:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3535,
                  "id": 3538,
                  "nodeType": "Return",
                  "src": "7833:21:21"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 3540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "7777:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7787:2:21"
            },
            "returnParameters": {
              "id": 3535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3540,
                  "src": "7813:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7813:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7812:9:21"
            },
            "scope": 3741,
            "src": "7768:94:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3555,
              "nodeType": "Block",
              "src": "7942:97:21",
              "statements": [
                {
                  "expression": {
                    "id": 3549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3547,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3080,
                      "src": "7953:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3548,
                      "name": "newDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3542,
                      "src": "7967:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7953:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3550,
                  "nodeType": "ExpressionStatement",
                  "src": "7953:28:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3552,
                        "name": "newDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3542,
                        "src": "8016:14:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3551,
                      "name": "DistributorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3116,
                      "src": "7997:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7997:34:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3554,
                  "nodeType": "EmitStatement",
                  "src": "7992:39:21"
                }
              ]
            },
            "functionSelector": "e2332908",
            "id": 3556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3544,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7932:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "7932:9:21"
              }
            ],
            "name": "transferDistributor",
            "nameLocation": "7879:19:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3542,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "7907:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3556,
                  "src": "7899:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7899:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7898:24:21"
            },
            "returnParameters": {
              "id": 3546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7942:0:21"
            },
            "scope": 3741,
            "src": "7870:169:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              97
            ],
            "body": {
              "id": 3584,
              "nodeType": "Block",
              "src": "8118:157:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3565,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3558,
                          "src": "8137:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8157:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8149:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3566,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8149:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8149:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8137:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8129:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8129:31:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3572,
                  "nodeType": "ExpressionStatement",
                  "src": "8129:31:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3574,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "8190:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3573,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "8171:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8171:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "8171:28:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3581,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "8258:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3578,
                            "name": "farmBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3078,
                            "src": "8228:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3577,
                          "name": "UpgradeableBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "8210:17:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UpgradeableBeacon_$1568_$",
                            "typeString": "type(contract UpgradeableBeacon)"
                          }
                        },
                        "id": 3579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8210:29:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 3580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 979,
                      "src": "8210:47:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:57:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3583,
                  "nodeType": "ExpressionStatement",
                  "src": "8210:57:21"
                }
              ]
            },
            "functionSelector": "f2fde38b",
            "id": 3585,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3562,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3561,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "8108:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "8108:9:21"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "8056:17:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3560,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8099:8:21"
            },
            "parameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3558,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "8082:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3585,
                  "src": "8074:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8074:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8073:18:21"
            },
            "returnParameters": {
              "id": 3563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8118:0:21"
            },
            "scope": 3741,
            "src": "8047:228:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              74
            ],
            "body": {
              "id": 3604,
              "nodeType": "Block",
              "src": "8338:109:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8376:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8368:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3592,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8368:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8368:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3591,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "8349:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8349:30:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3597,
                  "nodeType": "ExpressionStatement",
                  "src": "8349:30:21"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3599,
                            "name": "farmBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3078,
                            "src": "8408:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3598,
                          "name": "UpgradeableBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "8390:17:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UpgradeableBeacon_$1568_$",
                            "typeString": "type(contract UpgradeableBeacon)"
                          }
                        },
                        "id": 3600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8390:29:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 3601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 956,
                      "src": "8390:47:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8390:49:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3603,
                  "nodeType": "ExpressionStatement",
                  "src": "8390:49:21"
                }
              ]
            },
            "functionSelector": "715018a6",
            "id": 3605,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3589,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3588,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "8328:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "8328:9:21"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "8292:17:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3587,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8319:8:21"
            },
            "parameters": {
              "id": 3586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8309:2:21"
            },
            "returnParameters": {
              "id": 3590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8338:0:21"
            },
            "scope": 3741,
            "src": "8283:164:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3613,
              "nodeType": "Block",
              "src": "8491:27:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3610,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "8502:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8502:8:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3612,
                  "nodeType": "ExpressionStatement",
                  "src": "8502:8:21"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 3614,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3608,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3607,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "8481:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "8481:9:21"
              }
            ],
            "name": "pause",
            "nameLocation": "8464:5:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8469:2:21"
            },
            "returnParameters": {
              "id": 3609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8491:0:21"
            },
            "scope": 3741,
            "src": "8455:63:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3622,
              "nodeType": "Block",
              "src": "8564:29:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3619,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "8575:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8575:10:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3621,
                  "nodeType": "ExpressionStatement",
                  "src": "8575:10:21"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 3623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3617,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3616,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "8554:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "8554:9:21"
              }
            ],
            "name": "unpause",
            "nameLocation": "8535:7:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8542:2:21"
            },
            "returnParameters": {
              "id": 3618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8564:0:21"
            },
            "scope": 3741,
            "src": "8526:67:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3697,
              "nodeType": "Block",
              "src": "9051:412:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                      "typeString": "contract QuickswapDualFarmUpgradeable"
                    },
                    "id": 3644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3635,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "9066:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3637,
                      "indexExpression": {
                        "id": 3636,
                        "name": "lpStakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3626,
                        "src": "9072:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9066:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9103:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9095:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3639,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9095:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9095:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3638,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7024,
                        "src": "9090:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                          "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                        }
                      },
                      "id": 3643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9090:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                        "typeString": "contract QuickswapDualFarmUpgradeable"
                      }
                    },
                    "src": "9066:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3696,
                  "nodeType": "IfStatement",
                  "src": "9062:394:21",
                  "trueBody": {
                    "id": 3695,
                    "nodeType": "Block",
                    "src": "9108:348:21",
                    "statements": [
                      {
                        "assignments": [
                          3646
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3646,
                            "mutability": "mutable",
                            "name": "lpPair",
                            "nameLocation": "9131:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3695,
                            "src": "9123:14:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3645,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9123:7:21",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3652,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 3647,
                                "name": "Farms",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3085,
                                "src": "9140:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                  "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                }
                              },
                              "id": 3649,
                              "indexExpression": {
                                "id": 3648,
                                "name": "lpStakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3626,
                                "src": "9146:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9140:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                "typeString": "contract QuickswapDualFarmUpgradeable"
                              }
                            },
                            "id": 3650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5955,
                            "src": "9140:27:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9140:29:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9123:46:21"
                      },
                      {
                        "assignments": [
                          3654
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3654,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "9192:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3695,
                            "src": "9184:19:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3653,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9184:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3660,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3656,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3646,
                                  "src": "9213:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3655,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1772,
                                "src": "9206:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9206:14:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1772",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1703,
                            "src": "9206:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9206:28:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9184:50:21"
                      },
                      {
                        "expression": {
                          "id": 3676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3661,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3631,
                            "src": "9249:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3662,
                                "name": "amountLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3628,
                                "src": "9259:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 3671,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3646,
                                    "src": "9318:6:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 3664,
                                              "name": "Farms",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3085,
                                              "src": "9277:5:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                              }
                                            },
                                            "id": 3666,
                                            "indexExpression": {
                                              "id": 3665,
                                              "name": "lpStakingPool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3626,
                                              "src": "9283:13:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9277:20:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                              "typeString": "contract QuickswapDualFarmUpgradeable"
                                            }
                                          },
                                          "id": 3667,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenA",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5957,
                                          "src": "9277:27:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 3668,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9277:29:21",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3663,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1772,
                                      "src": "9270:6:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9270:37:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1772",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1711,
                                  "src": "9270:47:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9270:55:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9259:66:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3674,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3654,
                              "src": "9328:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9259:80:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9249:90:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3677,
                        "nodeType": "ExpressionStatement",
                        "src": "9249:90:21"
                      },
                      {
                        "expression": {
                          "id": 3693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3678,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3633,
                            "src": "9354:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3679,
                                "name": "amountLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3628,
                                "src": "9364:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 3688,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3646,
                                    "src": "9423:6:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 3681,
                                              "name": "Farms",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3085,
                                              "src": "9382:5:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                                "typeString": "mapping(address => contract QuickswapDualFarmUpgradeable)"
                                              }
                                            },
                                            "id": 3683,
                                            "indexExpression": {
                                              "id": 3682,
                                              "name": "lpStakingPool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3626,
                                              "src": "9388:13:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9382:20:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                              "typeString": "contract QuickswapDualFarmUpgradeable"
                                            }
                                          },
                                          "id": 3684,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenB",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5959,
                                          "src": "9382:27:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 3685,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9382:29:21",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3680,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1772,
                                      "src": "9375:6:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3686,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9375:37:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1772",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1711,
                                  "src": "9375:47:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9375:55:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9364:66:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 3691,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3654,
                              "src": "9433:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9364:80:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9354:90:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3694,
                        "nodeType": "ExpressionStatement",
                        "src": "9354:90:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3624,
              "nodeType": "StructuredDocumentation",
              "src": "8601:322:21",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpStakingPool - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 3698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "8939:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3626,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "8961:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3698,
                  "src": "8953:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8953:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3628,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "8984:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3698,
                  "src": "8976:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8976:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8952:41:21"
            },
            "returnParameters": {
              "id": 3634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3631,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "9025:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3698,
                  "src": "9017:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9017:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3633,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "9042:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3698,
                  "src": "9034:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9034:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9016:34:21"
            },
            "scope": 3741,
            "src": "8930:533:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3739,
              "nodeType": "Block",
              "src": "9626:305:21",
              "statements": [
                {
                  "assignments": [
                    3708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3708,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "9649:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3739,
                      "src": "9637:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 3707,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3706,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "9637:11:21"
                        },
                        "referencedDeclaration": 1483,
                        "src": "9637:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3726,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3712,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "9687:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 3718,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9766:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 3717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9758:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3716,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9758:7:21",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9758:10:21",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3715,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7024,
                                  "src": "9753:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_QuickswapDualFarmUpgradeable_$7024_$",
                                    "typeString": "type(contract QuickswapDualFarmUpgradeable)"
                                  }
                                },
                                "id": 3720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9753:16:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_QuickswapDualFarmUpgradeable_$7024",
                                  "typeString": "contract QuickswapDualFarmUpgradeable"
                                }
                              },
                              "id": 3721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6144,
                              "src": "9753:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 3722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9753:36:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 3723,
                            "name": "lpStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3701,
                            "src": "9808:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3713,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "9712:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9712:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 3724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9712:124:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9657:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1483_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 3710,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3709,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "9661:11:21"
                        },
                        "referencedDeclaration": 1483,
                        "src": "9661:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9657:190:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9637:210:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3730,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3708,
                            "src": "9884:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 3729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9876:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3728,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9876:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9876:14:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3727,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3092,
                      "src": "9863:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9863:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3733,
                  "nodeType": "EmitStatement",
                  "src": "9858:33:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3736,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3708,
                        "src": "9917:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 3735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9909:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3734,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9909:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9909:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3705,
                  "id": 3738,
                  "nodeType": "Return",
                  "src": "9902:21:21"
                }
              ]
            },
            "documentation": {
              "id": 3699,
              "nodeType": "StructuredDocumentation",
              "src": "9471:79:21",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 3740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "9565:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3701,
                  "mutability": "mutable",
                  "name": "lpStakingPool",
                  "nameLocation": "9584:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9576:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9576:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9575:23:21"
            },
            "returnParameters": {
              "id": 3705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3740,
                  "src": "9617:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9617:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9616:9:21"
            },
            "scope": 3741,
            "src": "9556:375:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3742,
        "src": "567:9367:21",
        "usedErrors": []
      }
    ],
    "src": "33:9902:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            }
          ],
          "name": "Distribute",
          "type": "event"
        },
        "0xe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f52": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newDistributor",
              "type": "address"
            }
          ],
          "name": "DistributorChanged",
          "type": "event"
        },
        "0x7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d08": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "farmAddress",
              "type": "address"
            }
          ],
          "name": "FarmDeployed",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC1BA9059A98098c61dBB4852134A4D403B32E483",
      "transactionHash": "0x7f80982838c0c87b77a6f5c2aecfdc89670c327aa99fe73944e9597a82b87187"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-05T16:26:14.340Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256,address,address)": {
        "details": "Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.",
        "params": {
          "amountA": "- Token A amount to deposit.",
          "amountB": "-  Token B amount to deposit.",
          "amountLP": "- LP Token amount to deposit.",
          "lpStakingPool": "- Address of the pool to deposit tokens in.",
          "recipient": "- Address which will recieve the deposit and leftover tokens."
        },
        "returns": {
          "liquidity": "- Total liquidity sent to the farm (in lpTokens).",
          "sentA": "- Token A amount sent to the farm.",
          "sentB": "- Token B amount sent to the farm."
        }
      },
      "distribute(address,address[],address[],address[],address[])": {
        "details": "Distributes tokens between users.",
        "params": {
          "lpStakingPool": "- LP pool to distribute tokens in.",
          "rewardTokenAToTokenARoute": "An array of token addresses.",
          "rewardTokenAToTokenBRoute": "An array of token addresses.",
          "rewardTokenBToTokenARoute": "An array of token addresses.",
          "rewardTokenBToTokenBRoute": "An array of token addresses. Note: This function can only be called by the distributor."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setExpectedReward(address,uint256,uint256)": {
        "details": "Sets expected reward amount and block for token distribution calculations.",
        "params": {
          "expectedReward": "- New reward amount.",
          "expectedRewardBlock": "- New reward block. Note: This function can only be called by the distributor.",
          "lpStakingPool": "- LP pool to check total deposits in."
        }
      },
      "totalDeposits(address)": {
        "details": "Returns total amount locked in the pool. Doesn't take pending rewards into account.",
        "params": {
          "lpStakingPool": "- LP pool to check total deposits in."
        },
        "returns": {
          "totalDepositsA": "- Token A deposits.",
          "totalDepositsB": "- Token B deposits.",
          "totalDepositsLP": "- Total deposits (in LP tokens)."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "userStake(address,address)": {
        "details": "Returns tokens staked by the {_address} for the given {lpPair}.",
        "params": {
          "_address": "- The address to check stakes for.",
          "lpStakingPool": "- LP pool to check stakes in."
        },
        "returns": {
          "stakeA": "- Token A stake.",
          "stakeB": "- Token B stake.",
          "stakeLP": "- Total user stake(in LP tokens)."
        }
      },
      "withdraw(address,uint256,bool,address)": {
        "details": "Withdraws tokens from the given pool. ",
        "params": {
          "amount": "- LP amount to withdraw. ",
          "lpStakingPool": "- LP pool to withdraw from.",
          "recipient": "- The address which will recieve tokens.",
          "withdrawLP": "- True: Withdraw in LP tokens, False: Withdraw in normal tokens."
        },
        "returns": {
          "amountA": "- Token A amount sent to the {recipient}, 0 if withdrawLP == false.",
          "amountB": "- Token B amount sent to the {recipient}, 0 if withdrawLP == false."
        }
      }
    },
    "stateVariables": {
      "farmBeacon": {
        "details": "Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}