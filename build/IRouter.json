{
  "contractName": "IRouter",
  "abi": [
    {
      "inputs": [],
      "name": "ConversionFromV2ToV1VeloProhibited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ETHTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountADesired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountAOptimal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountB",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountBDesired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientOutputAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmountInForETHDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPath",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRouteA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRouteB",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTokenInForETHDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyWETH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolFactoryDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameAddresses",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "sortTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "poolFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "pairFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reserveA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        }
      ],
      "name": "quoteAddLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "quoteRemoveLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETH",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "UNSAFE_swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountInA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInB",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRouter.Zap",
          "name": "zapInPool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stake",
          "type": "bool"
        }
      ],
      "name": "zapIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRouter.Zap",
          "name": "zapOutPool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "zapOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountInA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInB",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "generateZapInParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMinA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMinB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "generateZapOutParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMinA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMinB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "quoteStableLiquidityRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ConversionFromV2ToV1VeloProhibited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountADesired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountAOptimal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountB\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountBDesired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountInForETHDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRouteA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRouteB\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenInForETHDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyWETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolFactoryDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"UNSAFE_swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInB\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"generateZapInParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"generateZapOutParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"pairFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"poolFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"}],\"name\":\"quoteAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"quoteRemoveLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"quoteStableLiquidityRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"sortTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInB\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"internalType\":\"struct IRouter.Zap\",\"name\":\"zapInPool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stake\",\"type\":\"bool\"}],\"name\":\"zapIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"internalType\":\"struct IRouter.Zap\",\"name\":\"zapOutPool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"zapOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)\":{\"params\":{\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"_0\":\"amounts     Array of amounts to swap  per route\"}},\"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Amount of tokenA desired to deposit\",\"amountAMin\":\"Minimum amount of tokenA to deposit\",\"amountBDesired\":\"Amount of tokenB desired to deposit\",\"amountBMin\":\"Minimum amount of tokenB to deposit\",\"deadline\":\"Deadline to receive liquidity\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"        Amount of tokenA to actually deposit\",\"amountB\":\"        Amount of tokenB to actually deposit\",\"liquidity\":\"      Amount of liquidity token returned from deposit\"}},\"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to deposit\",\"amountTokenDesired\":\"Amount of token desired to deposit\",\"amountTokenMin\":\"Minimum amount of token to deposit\",\"deadline\":\"Deadline to add liquidity\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"          Amount of tokenETH to actually deposit\",\"amountToken\":\"        Amount of token to actually deposit\",\"liquidity\":\"          Amount of liquidity token returned from deposit\"}},\"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"details\":\"Output token refers to the token you want to zap in from.\",\"params\":{\"_factory\":\".\",\"amountInA\":\"Amount of input token you wish to send down routesA\",\"amountInB\":\"Amount of input token you wish to send down routesB\",\"routesA\":\"Route used to convert input token to tokenA\",\"routesB\":\"Route used to convert input token to tokenB\",\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountAMin\":\"     Minimum amount of tokenA expected from depositing liquidity.\",\"amountBMin\":\"     Minimum amount of tokenB expected from depositing liquidity.\",\"amountOutMinA\":\"  Minimum output expected from swapping input token to tokenA.\",\"amountOutMinB\":\"  Minimum output expected from swapping input token to tokenB.\"}},\"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"details\":\"Output token refers to the token you want to zap out of.\",\"params\":{\"_factory\":\".\",\"liquidity\":\"Amount of liquidity being zapped out of into a given output token.\",\"routesA\":\"Route used to convert tokenA into output token.\",\"routesB\":\"Route used to convert tokenB into output token.\",\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountAMin\":\"     Minimum amount of tokenA expected from withdrawing liquidity.\",\"amountBMin\":\"     Minimum amount of tokenB expected from withdrawing liquidity.\",\"amountOutMinA\":\"  Minimum output expected from swapping tokenA into output token.\",\"amountOutMinB\":\"  Minimum output expected from swapping tokenB into output token.\"}},\"getReserves(address,address,bool,address)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"reserveA\":\"   Amount of reserves of the sorted token A\",\"reserveB\":\"   Amount of reserves of the sorted token B\"}},\"poolFor(address,address,bool,address)\":{\"details\":\"Returns a randomly generated address for a nonexistent pool\",\"params\":{\"_factory\":\"Address of factory which created the pool\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\"Address of token to query\",\"tokenB\":\"Address of token to query\"}},\"quoteAddLiquidity(address,address,bool,address,uint256,uint256)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"amountADesired\":\"Amount of tokenA desired to deposit\",\"amountBDesired\":\"Amount of tokenB desired to deposit\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"        Amount of tokenA to actually deposit\",\"amountB\":\"        Amount of tokenB to actually deposit\",\"liquidity\":\"      Amount of liquidity token returned from deposit\"}},\"quoteRemoveLiquidity(address,address,bool,address,uint256)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"    Amount of tokenA received\",\"amountB\":\"    Amount of tokenB received\"}},\"quoteStableLiquidityRatio(address,address,address)\":{\"details\":\"Returns stable liquidity ratio of B to (A + B).      E.g. if ratio is 0.4, it means there is more of A than there is of B.      Therefore you should deposit more of token A than B.\",\"params\":{\"factory\":\"Factory that created stable pool.\",\"tokenA\":\"tokenA of stable pool you are zapping into.\",\"tokenB\":\"tokenB of stable pool you are zapping into.\"},\"returns\":{\"ratio\":\"  Ratio of token0 to token1 required to deposit into zap.\"}},\"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum amount of tokenA to receive\",\"amountBMin\":\"Minimum amount of tokenB to receive\",\"deadline\":\"Deadline to remove liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of tokens received\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"    Amount of tokenA received\",\"amountB\":\"    Amount of tokenB received\"}},\"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to receive\",\"amountTokenMin\":\"Minimum amount of token to receive\",\"deadline\":\"Deadline to receive liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"      Amount of ETH received\",\"amountToken\":\"    Amount of token received\"}},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to receive\",\"amountTokenMin\":\"Minimum amount of token to receive\",\"deadline\":\"Deadline to receive liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"      Amount of ETH received\"}},\"sortTokens(address,address)\":{\"params\":{\"tokenA\":\"Address of token to sort\",\"tokenB\":\"Address of token to sort\"},\"returns\":{\"token0\":\" Lower address value between tokenA and tokenB\",\"token1\":\" Higher address value between tokenA and tokenB\"}},\"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired ETH\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired ETH\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)\":{\"params\":{\"amountInA\":\"Amount of input token you wish to send down routesA\",\"amountInB\":\"Amount of input token you wish to send down routesB\",\"routesA\":\"Route used to convert input token to tokenA\",\"routesB\":\"Route used to convert input token to tokenB\",\"stake\":\"Auto-stake liquidity in corresponding gauge.\",\"to\":\"Address you wish to mint liquidity to.\",\"tokenIn\":\"Token you are zapping in from (i.e. input token).\",\"zapInPool\":\"Contains zap struct information. See Zap struct.\"},\"returns\":{\"liquidity\":\"  Amount of LP tokens created from zapping in.\"}},\"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])\":{\"params\":{\"liquidity\":\"Amount of liquidity you wish to remove.\",\"routesA\":\"Route used to convert tokenA into output token.\",\"routesB\":\"Route used to convert tokenB into output token.\",\"tokenOut\":\"Token you are zapping out to (i.e. output token).\",\"zapOutPool\":\"Contains zap struct information. See Zap struct.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another without slippage protection\"},\"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Add liquidity of two tokens to a Pool\"},\"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Add liquidity of a token and WETH (transferred as ETH) to a Pool\"},\"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Used to generate params required for zapping in.         Zap in => remove liquidity then swap.         Apply slippage to expected swap values to account for changes in reserves in between.\"},\"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Used to generate params required for zapping out.         Zap out => swap then add liquidity.         Apply slippage to expected liquidity values to account for changes in reserves in between.\"},\"getAmountsOut(uint256,(address,address,bool,address)[])\":{\"notice\":\"Perform chained getAmountOut calculations on any number of pools\"},\"getReserves(address,address,bool,address)\":{\"notice\":\"Fetch and sort the reserves for a pool\"},\"pairFor(address,address,bool,address)\":{\"notice\":\"Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1\"},\"poolFor(address,address,bool,address)\":{\"notice\":\"Calculate the address of a pool by its' factory.         Used by all Router functions containing a `Route[]` or `_factory` argument.         Reverts if _factory is not approved by the FactoryRegistry\"},\"quoteAddLiquidity(address,address,bool,address,uint256,uint256)\":{\"notice\":\"Quote the amount deposited into a Pool\"},\"quoteRemoveLiquidity(address,address,bool,address,uint256)\":{\"notice\":\"Quote the amount of liquidity removed from a Pool\"},\"quoteStableLiquidityRatio(address,address,address)\":{\"notice\":\"Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\"},\"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of two tokens from a Pool\"},\"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of a token and WETH (returned as ETH) from a Pool\"},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\"},\"sortTokens(address,address)\":{\"notice\":\"Sort two tokens by which address value is less than the other\"},\"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap ETH for a token\"},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap ETH for a token supporting fee-on-transfer tokens\"},\"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap a token for WETH (returned as ETH)\"},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\"},\"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another\"},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another supporting fee-on-transfer tokens\"},\"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)\":{\"notice\":\"Zap a token A into a pool (B, C). (A can be equal to B or C).         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the initial swap.         Additional slippage may be required when adding liquidity as the         price of the token may have changed.\"},\"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Zap out a pool (B, C) into A.         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the removal of liquidity.         Additional slippage may be required on the swap as the         price of the token may have changed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IRouter.sol\":\"IRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":8000},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0x54d3268d0ed055904940dd4c24800638fb067e0e1a707700746f62cd444f583a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8d71e847c6295d39f58182e00dad4f9f1e5ec84f9edaab861c504020a6fe075\",\"dweb:/ipfs/QmS8cof962Hq1bK1ALw8Ry9VMKS3PwXRvdtNBxE6yqKwpd\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\ninterface IRouter {\r\n    struct Route {\r\n        address from;\r\n        address to;\r\n        bool stable;\r\n        address factory;\r\n    }\r\n\r\n    error ConversionFromV2ToV1VeloProhibited();\r\n    error ETHTransferFailed();\r\n    error Expired();\r\n    error InsufficientAmount();\r\n    error InsufficientAmountA();\r\n    error InsufficientAmountB();\r\n    error InsufficientAmountADesired();\r\n    error InsufficientAmountBDesired();\r\n    error InsufficientAmountAOptimal();\r\n    error InsufficientLiquidity();\r\n    error InsufficientOutputAmount();\r\n    error InvalidAmountInForETHDeposit();\r\n    error InvalidTokenInForETHDeposit();\r\n    error InvalidPath();\r\n    error InvalidRouteA();\r\n    error InvalidRouteB();\r\n    error OnlyWETH();\r\n    error PoolDoesNotExist();\r\n    error PoolFactoryDoesNotExist();\r\n    error SameAddresses();\r\n    error ZeroAddress();\r\n\r\n    /// @dev Struct containing information necessary to zap in and out of pools\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           Stable or volatile pool\r\n    /// @param factory          factory of pool\r\n    /// @param amountOutMinA    Minimum amount expected from swap leg of zap via routesA\r\n    /// @param amountOutMinB    Minimum amount expected from swap leg of zap via routesB\r\n    /// @param amountAMin       Minimum amount of tokenA expected from liquidity leg of zap\r\n    /// @param amountBMin       Minimum amount of tokenB expected from liquidity leg of zap\r\n    struct Zap {\r\n        address tokenA;\r\n        address tokenB;\r\n        bool stable;\r\n        address factory;\r\n        uint256 amountOutMinA;\r\n        uint256 amountOutMinB;\r\n        uint256 amountAMin;\r\n        uint256 amountBMin;\r\n    }\r\n\r\n    /// @notice Sort two tokens by which address value is less than the other\r\n    /// @param tokenA   Address of token to sort\r\n    /// @param tokenB   Address of token to sort\r\n    /// @return token0  Lower address value between tokenA and tokenB\r\n    /// @return token1  Higher address value between tokenA and tokenB\r\n    function sortTokens(address tokenA, address tokenB) external pure returns (address token0, address token1);\r\n\r\n    /// @notice Calculate the address of a pool by its' factory.\r\n    ///         Used by all Router functions containing a `Route[]` or `_factory` argument.\r\n    ///         Reverts if _factory is not approved by the FactoryRegistry\r\n    /// @dev Returns a randomly generated address for a nonexistent pool\r\n    /// @param tokenA   Address of token to query\r\n    /// @param tokenB   Address of token to query\r\n    /// @param stable   True if pool is stable, false if volatile\r\n    /// @param _factory Address of factory which created the pool\r\n    function poolFor(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory\r\n    ) external view returns (address pool);\r\n\r\n    /// @notice Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1\r\n    function pairFor(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory\r\n    ) external view returns (address pool);\r\n\r\n    /// @notice Fetch and sort the reserves for a pool\r\n    /// @param tokenA       .\r\n    /// @param tokenB       .\r\n    /// @param stable       True if pool is stable, false if volatile\r\n    /// @param _factory     Address of PoolFactory for tokenA and tokenB\r\n    /// @return reserveA    Amount of reserves of the sorted token A\r\n    /// @return reserveB    Amount of reserves of the sorted token B\r\n    function getReserves(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory\r\n    ) external view returns (uint256 reserveA, uint256 reserveB);\r\n\r\n    /// @notice Perform chained getAmountOut calculations on any number of pools\r\n    function getAmountsOut(uint256 amountIn, Route[] memory routes) external view returns (uint256[] memory amounts);\r\n\r\n    // **** ADD LIQUIDITY ****\r\n\r\n    /// @notice Quote the amount deposited into a Pool\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param _factory         Address of PoolFactory for tokenA and tokenB\r\n    /// @param amountADesired   Amount of tokenA desired to deposit\r\n    /// @param amountBDesired   Amount of tokenB desired to deposit\r\n    /// @return amountA         Amount of tokenA to actually deposit\r\n    /// @return amountB         Amount of tokenB to actually deposit\r\n    /// @return liquidity       Amount of liquidity token returned from deposit\r\n    function quoteAddLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired\r\n    ) external view returns (uint256 amountA, uint256 amountB, uint256 liquidity);\r\n\r\n    /// @notice Quote the amount of liquidity removed from a Pool\r\n    /// @param tokenA       .\r\n    /// @param tokenB       .\r\n    /// @param stable       True if pool is stable, false if volatile\r\n    /// @param _factory     Address of PoolFactory for tokenA and tokenB\r\n    /// @param liquidity    Amount of liquidity to remove\r\n    /// @return amountA     Amount of tokenA received\r\n    /// @return amountB     Amount of tokenB received\r\n    function quoteRemoveLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 liquidity\r\n    ) external view returns (uint256 amountA, uint256 amountB);\r\n\r\n    /// @notice Add liquidity of two tokens to a Pool\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param amountADesired   Amount of tokenA desired to deposit\r\n    /// @param amountBDesired   Amount of tokenB desired to deposit\r\n    /// @param amountAMin       Minimum amount of tokenA to deposit\r\n    /// @param amountBMin       Minimum amount of tokenB to deposit\r\n    /// @param to               Recipient of liquidity token\r\n    /// @param deadline         Deadline to receive liquidity\r\n    /// @return amountA         Amount of tokenA to actually deposit\r\n    /// @return amountB         Amount of tokenB to actually deposit\r\n    /// @return liquidity       Amount of liquidity token returned from deposit\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\r\n\r\n    /// @notice Add liquidity of a token and WETH (transferred as ETH) to a Pool\r\n    /// @param token                .\r\n    /// @param stable               True if pool is stable, false if volatile\r\n    /// @param amountTokenDesired   Amount of token desired to deposit\r\n    /// @param amountTokenMin       Minimum amount of token to deposit\r\n    /// @param amountETHMin         Minimum amount of ETH to deposit\r\n    /// @param to                   Recipient of liquidity token\r\n    /// @param deadline             Deadline to add liquidity\r\n    /// @return amountToken         Amount of token to actually deposit\r\n    /// @return amountETH           Amount of tokenETH to actually deposit\r\n    /// @return liquidity           Amount of liquidity token returned from deposit\r\n    function addLiquidityETH(\r\n        address token,\r\n        bool stable,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\r\n\r\n    // **** REMOVE LIQUIDITY ****\r\n\r\n    /// @notice Remove liquidity of two tokens from a Pool\r\n    /// @param tokenA       .\r\n    /// @param tokenB       .\r\n    /// @param stable       True if pool is stable, false if volatile\r\n    /// @param liquidity    Amount of liquidity to remove\r\n    /// @param amountAMin   Minimum amount of tokenA to receive\r\n    /// @param amountBMin   Minimum amount of tokenB to receive\r\n    /// @param to           Recipient of tokens received\r\n    /// @param deadline     Deadline to remove liquidity\r\n    /// @return amountA     Amount of tokenA received\r\n    /// @return amountB     Amount of tokenB received\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        uint256 liquidity,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountA, uint256 amountB);\r\n\r\n    /// @notice Remove liquidity of a token and WETH (returned as ETH) from a Pool\r\n    /// @param token            .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param liquidity        Amount of liquidity to remove\r\n    /// @param amountTokenMin   Minimum amount of token to receive\r\n    /// @param amountETHMin     Minimum amount of ETH to receive\r\n    /// @param to               Recipient of liquidity token\r\n    /// @param deadline         Deadline to receive liquidity\r\n    /// @return amountToken     Amount of token received\r\n    /// @return amountETH       Amount of ETH received\r\n    function removeLiquidityETH(\r\n        address token,\r\n        bool stable,\r\n        uint256 liquidity,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountToken, uint256 amountETH);\r\n\r\n    /// @notice Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\r\n    /// @param token            .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param liquidity        Amount of liquidity to remove\r\n    /// @param amountTokenMin   Minimum amount of token to receive\r\n    /// @param amountETHMin     Minimum amount of ETH to receive\r\n    /// @param to               Recipient of liquidity token\r\n    /// @param deadline         Deadline to receive liquidity\r\n    /// @return amountETH       Amount of ETH received\r\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        bool stable,\r\n        uint256 liquidity,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountETH);\r\n\r\n    // **** SWAP ****\r\n\r\n    /// @notice Swap one token for another\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    /// @return amounts     Array of amounts returned per route\r\n    function swapExactTokensForTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256[] memory amounts);\r\n\r\n    /// @notice Swap ETH for a token\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    /// @return amounts     Array of amounts returned per route\r\n    function swapExactETHForTokens(\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable returns (uint256[] memory amounts);\r\n\r\n    /// @notice Swap a token for WETH (returned as ETH)\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired ETH\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    /// @return amounts     Array of amounts returned per route\r\n    function swapExactTokensForETH(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256[] memory amounts);\r\n\r\n    /// @notice Swap one token for another without slippage protection\r\n    /// @return amounts     Array of amounts to swap  per route\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function UNSAFE_swapExactTokensForTokens(\r\n        uint256[] memory amounts,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256[] memory);\r\n\r\n    // **** SWAP (supporting fee-on-transfer tokens) ****\r\n\r\n    /// @notice Swap one token for another supporting fee-on-transfer tokens\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    /// @notice Swap ETH for a token supporting fee-on-transfer tokens\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    /// @notice Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired ETH\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    /// @notice Zap a token A into a pool (B, C). (A can be equal to B or C).\r\n    ///         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\r\n    ///         Slippage is required for the initial swap.\r\n    ///         Additional slippage may be required when adding liquidity as the\r\n    ///         price of the token may have changed.\r\n    /// @param tokenIn      Token you are zapping in from (i.e. input token).\r\n    /// @param amountInA    Amount of input token you wish to send down routesA\r\n    /// @param amountInB    Amount of input token you wish to send down routesB\r\n    /// @param zapInPool    Contains zap struct information. See Zap struct.\r\n    /// @param routesA      Route used to convert input token to tokenA\r\n    /// @param routesB      Route used to convert input token to tokenB\r\n    /// @param to           Address you wish to mint liquidity to.\r\n    /// @param stake        Auto-stake liquidity in corresponding gauge.\r\n    /// @return liquidity   Amount of LP tokens created from zapping in.\r\n    function zapIn(\r\n        address tokenIn,\r\n        uint256 amountInA,\r\n        uint256 amountInB,\r\n        Zap calldata zapInPool,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB,\r\n        address to,\r\n        bool stake\r\n    ) external payable returns (uint256 liquidity);\r\n\r\n    /// @notice Zap out a pool (B, C) into A.\r\n    ///         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\r\n    ///         Slippage is required for the removal of liquidity.\r\n    ///         Additional slippage may be required on the swap as the\r\n    ///         price of the token may have changed.\r\n    /// @param tokenOut     Token you are zapping out to (i.e. output token).\r\n    /// @param liquidity    Amount of liquidity you wish to remove.\r\n    /// @param zapOutPool   Contains zap struct information. See Zap struct.\r\n    /// @param routesA      Route used to convert tokenA into output token.\r\n    /// @param routesB      Route used to convert tokenB into output token.\r\n    function zapOut(\r\n        address tokenOut,\r\n        uint256 liquidity,\r\n        Zap calldata zapOutPool,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB\r\n    ) external;\r\n\r\n    /// @notice Used to generate params required for zapping in.\r\n    ///         Zap in => remove liquidity then swap.\r\n    ///         Apply slippage to expected swap values to account for changes in reserves in between.\r\n    /// @dev Output token refers to the token you want to zap in from.\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           .\r\n    /// @param _factory         .\r\n    /// @param amountInA        Amount of input token you wish to send down routesA\r\n    /// @param amountInB        Amount of input token you wish to send down routesB\r\n    /// @param routesA          Route used to convert input token to tokenA\r\n    /// @param routesB          Route used to convert input token to tokenB\r\n    /// @return amountOutMinA   Minimum output expected from swapping input token to tokenA.\r\n    /// @return amountOutMinB   Minimum output expected from swapping input token to tokenB.\r\n    /// @return amountAMin      Minimum amount of tokenA expected from depositing liquidity.\r\n    /// @return amountBMin      Minimum amount of tokenB expected from depositing liquidity.\r\n    function generateZapInParams(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 amountInA,\r\n        uint256 amountInB,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB\r\n    ) external view returns (uint256 amountOutMinA, uint256 amountOutMinB, uint256 amountAMin, uint256 amountBMin);\r\n\r\n    /// @notice Used to generate params required for zapping out.\r\n    ///         Zap out => swap then add liquidity.\r\n    ///         Apply slippage to expected liquidity values to account for changes in reserves in between.\r\n    /// @dev Output token refers to the token you want to zap out of.\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           .\r\n    /// @param _factory         .\r\n    /// @param liquidity        Amount of liquidity being zapped out of into a given output token.\r\n    /// @param routesA          Route used to convert tokenA into output token.\r\n    /// @param routesB          Route used to convert tokenB into output token.\r\n    /// @return amountOutMinA   Minimum output expected from swapping tokenA into output token.\r\n    /// @return amountOutMinB   Minimum output expected from swapping tokenB into output token.\r\n    /// @return amountAMin      Minimum amount of tokenA expected from withdrawing liquidity.\r\n    /// @return amountBMin      Minimum amount of tokenB expected from withdrawing liquidity.\r\n    function generateZapOutParams(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 liquidity,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB\r\n    ) external view returns (uint256 amountOutMinA, uint256 amountOutMinB, uint256 amountAMin, uint256 amountBMin);\r\n\r\n    /// @notice Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\r\n    /// @dev Returns stable liquidity ratio of B to (A + B).\r\n    ///      E.g. if ratio is 0.4, it means there is more of A than there is of B.\r\n    ///      Therefore you should deposit more of token A than B.\r\n    /// @param tokenA   tokenA of stable pool you are zapping into.\r\n    /// @param tokenB   tokenB of stable pool you are zapping into.\r\n    /// @param factory  Factory that created stable pool.\r\n    /// @return ratio   Ratio of token0 to token1 required to deposit into zap.\r\n    function quoteStableLiquidityRatio(\r\n        address tokenA,\r\n        address tokenB,\r\n        address factory\r\n    ) external view returns (uint256 ratio);\r\n}",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-optimism\\contracts\\interfaces\\IRouter.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IRouter.sol",
    "exportedSymbols": {
      "IRouter": [
        11795
      ]
    },
    "id": 11796,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11260,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:42"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRouter",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11795,
        "linearizedBaseContracts": [
          11795
        ],
        "name": "IRouter",
        "nameLocation": "70:7:42",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IRouter.Route",
            "id": 11269,
            "members": [
              {
                "constant": false,
                "id": 11262,
                "mutability": "mutable",
                "name": "from",
                "nameLocation": "117:4:42",
                "nodeType": "VariableDeclaration",
                "scope": 11269,
                "src": "109:12:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11261,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "109:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11264,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "140:2:42",
                "nodeType": "VariableDeclaration",
                "scope": 11269,
                "src": "132:10:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11263,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "132:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11266,
                "mutability": "mutable",
                "name": "stable",
                "nameLocation": "158:6:42",
                "nodeType": "VariableDeclaration",
                "scope": 11269,
                "src": "153:11:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11265,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "153:4:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11268,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "183:7:42",
                "nodeType": "VariableDeclaration",
                "scope": 11269,
                "src": "175:15:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11267,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Route",
            "nameLocation": "92:5:42",
            "nodeType": "StructDefinition",
            "scope": 11795,
            "src": "85:113:42",
            "visibility": "public"
          },
          {
            "errorSelector": "9cda8599",
            "id": 11271,
            "name": "ConversionFromV2ToV1VeloProhibited",
            "nameLocation": "212:34:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "246:2:42"
            },
            "src": "206:43:42"
          },
          {
            "errorSelector": "b12d13eb",
            "id": 11273,
            "name": "ETHTransferFailed",
            "nameLocation": "261:17:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:42"
            },
            "src": "255:26:42"
          },
          {
            "errorSelector": "203d82d8",
            "id": 11275,
            "name": "Expired",
            "nameLocation": "293:7:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:2:42"
            },
            "src": "287:16:42"
          },
          {
            "errorSelector": "5945ea56",
            "id": 11277,
            "name": "InsufficientAmount",
            "nameLocation": "315:18:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:2:42"
            },
            "src": "309:27:42"
          },
          {
            "errorSelector": "8f66ec14",
            "id": 11279,
            "name": "InsufficientAmountA",
            "nameLocation": "348:19:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:42"
            },
            "src": "342:28:42"
          },
          {
            "errorSelector": "34c90624",
            "id": 11281,
            "name": "InsufficientAmountB",
            "nameLocation": "382:19:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:42"
            },
            "src": "376:28:42"
          },
          {
            "errorSelector": "dc6b2ef2",
            "id": 11283,
            "name": "InsufficientAmountADesired",
            "nameLocation": "416:26:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:2:42"
            },
            "src": "410:35:42"
          },
          {
            "errorSelector": "acee0513",
            "id": 11285,
            "name": "InsufficientAmountBDesired",
            "nameLocation": "457:26:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:42"
            },
            "src": "451:35:42"
          },
          {
            "errorSelector": "fe496df6",
            "id": 11287,
            "name": "InsufficientAmountAOptimal",
            "nameLocation": "498:26:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:2:42"
            },
            "src": "492:35:42"
          },
          {
            "errorSelector": "bb55fd27",
            "id": 11289,
            "name": "InsufficientLiquidity",
            "nameLocation": "539:21:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:2:42"
            },
            "src": "533:30:42"
          },
          {
            "errorSelector": "42301c23",
            "id": 11291,
            "name": "InsufficientOutputAmount",
            "nameLocation": "575:24:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:2:42"
            },
            "src": "569:33:42"
          },
          {
            "errorSelector": "70a3fb92",
            "id": 11293,
            "name": "InvalidAmountInForETHDeposit",
            "nameLocation": "614:28:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:2:42"
            },
            "src": "608:37:42"
          },
          {
            "errorSelector": "ae6d566f",
            "id": 11295,
            "name": "InvalidTokenInForETHDeposit",
            "nameLocation": "657:27:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:2:42"
            },
            "src": "651:36:42"
          },
          {
            "errorSelector": "20db8267",
            "id": 11297,
            "name": "InvalidPath",
            "nameLocation": "699:11:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:42"
            },
            "src": "693:20:42"
          },
          {
            "errorSelector": "4ea0e338",
            "id": 11299,
            "name": "InvalidRouteA",
            "nameLocation": "725:13:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:42"
            },
            "src": "719:22:42"
          },
          {
            "errorSelector": "cac9040c",
            "id": 11301,
            "name": "InvalidRouteB",
            "nameLocation": "753:13:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:2:42"
            },
            "src": "747:22:42"
          },
          {
            "errorSelector": "01f180c9",
            "id": 11303,
            "name": "OnlyWETH",
            "nameLocation": "781:8:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:2:42"
            },
            "src": "775:17:42"
          },
          {
            "errorSelector": "9c8787c0",
            "id": 11305,
            "name": "PoolDoesNotExist",
            "nameLocation": "804:16:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:2:42"
            },
            "src": "798:25:42"
          },
          {
            "errorSelector": "9a73ab46",
            "id": 11307,
            "name": "PoolFactoryDoesNotExist",
            "nameLocation": "835:23:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:2:42"
            },
            "src": "829:32:42"
          },
          {
            "errorSelector": "ca57cff4",
            "id": 11309,
            "name": "SameAddresses",
            "nameLocation": "873:13:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:42"
            },
            "src": "867:22:42"
          },
          {
            "errorSelector": "d92e233d",
            "id": 11311,
            "name": "ZeroAddress",
            "nameLocation": "901:11:42",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:2:42"
            },
            "src": "895:20:42"
          },
          {
            "canonicalName": "IRouter.Zap",
            "id": 11328,
            "members": [
              {
                "constant": false,
                "id": 11313,
                "mutability": "mutable",
                "name": "tokenA",
                "nameLocation": "1576:6:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1568:14:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11312,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1568:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11315,
                "mutability": "mutable",
                "name": "tokenB",
                "nameLocation": "1601:6:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1593:14:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11314,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1593:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11317,
                "mutability": "mutable",
                "name": "stable",
                "nameLocation": "1623:6:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1618:11:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11316,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1618:4:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11319,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "1648:7:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1640:15:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11318,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1640:7:42",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11321,
                "mutability": "mutable",
                "name": "amountOutMinA",
                "nameLocation": "1674:13:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1666:21:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11320,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1666:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11323,
                "mutability": "mutable",
                "name": "amountOutMinB",
                "nameLocation": "1706:13:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1698:21:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11322,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1698:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11325,
                "mutability": "mutable",
                "name": "amountAMin",
                "nameLocation": "1738:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1730:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11324,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1730:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11327,
                "mutability": "mutable",
                "name": "amountBMin",
                "nameLocation": "1767:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 11328,
                "src": "1759:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11326,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1759:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Zap",
            "nameLocation": "1553:3:42",
            "nodeType": "StructDefinition",
            "scope": 11795,
            "src": "1546:239:42",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 11329,
              "nodeType": "StructuredDocumentation",
              "src": "1793:316:42",
              "text": "@notice Sort two tokens by which address value is less than the other\n @param tokenA   Address of token to sort\n @param tokenB   Address of token to sort\n @return token0  Lower address value between tokenA and tokenB\n @return token1  Higher address value between tokenA and tokenB"
            },
            "functionSelector": "544caa56",
            "id": 11340,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sortTokens",
            "nameLocation": "2124:10:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11331,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2143:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11340,
                  "src": "2135:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2135:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11333,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2159:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11340,
                  "src": "2151:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2134:32:42"
            },
            "returnParameters": {
              "id": 11339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11336,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "2198:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11340,
                  "src": "2190:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11338,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "2214:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11340,
                  "src": "2206:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2189:32:42"
            },
            "scope": 11795,
            "src": "2115:107:42",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11341,
              "nodeType": "StructuredDocumentation",
              "src": "2230:539:42",
              "text": "@notice Calculate the address of a pool by its' factory.\n         Used by all Router functions containing a `Route[]` or `_factory` argument.\n         Reverts if _factory is not approved by the FactoryRegistry\n @dev Returns a randomly generated address for a nonexistent pool\n @param tokenA   Address of token to query\n @param tokenB   Address of token to query\n @param stable   True if pool is stable, false if volatile\n @param _factory Address of factory which created the pool"
            },
            "functionSelector": "874029d9",
            "id": 11354,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolFor",
            "nameLocation": "2784:7:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11343,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2810:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "2802:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11345,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2835:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "2827:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11347,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "2857:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "2852:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11346,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11349,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "2882:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "2874:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:106:42"
            },
            "returnParameters": {
              "id": 11353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11352,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "2929:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "2921:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2920:14:42"
            },
            "scope": 11795,
            "src": "2775:160:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11355,
              "nodeType": "StructuredDocumentation",
              "src": "2943:107:42",
              "text": "@notice Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1"
            },
            "functionSelector": "e4ea9d74",
            "id": 11368,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pairFor",
            "nameLocation": "3065:7:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11357,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3091:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11368,
                  "src": "3083:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3083:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11359,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3116:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11368,
                  "src": "3108:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11361,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "3138:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11368,
                  "src": "3133:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11363,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "3163:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11368,
                  "src": "3155:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3072:106:42"
            },
            "returnParameters": {
              "id": 11367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11366,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "3210:4:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11368,
                  "src": "3202:12:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:14:42"
            },
            "scope": 11795,
            "src": "3056:160:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11369,
              "nodeType": "StructuredDocumentation",
              "src": "3224:397:42",
              "text": "@notice Fetch and sort the reserves for a pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param _factory     Address of PoolFactory for tokenA and tokenB\n @return reserveA    Amount of reserves of the sorted token A\n @return reserveB    Amount of reserves of the sorted token B"
            },
            "functionSelector": "8c0037dc",
            "id": 11384,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "3636:11:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11371,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3666:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11384,
                  "src": "3658:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3658:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11373,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3691:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11384,
                  "src": "3683:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11375,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "3713:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11384,
                  "src": "3708:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11374,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3708:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11377,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "3738:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11384,
                  "src": "3730:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3730:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3647:106:42"
            },
            "returnParameters": {
              "id": 11383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11380,
                  "mutability": "mutable",
                  "name": "reserveA",
                  "nameLocation": "3785:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11384,
                  "src": "3777:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3777:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11382,
                  "mutability": "mutable",
                  "name": "reserveB",
                  "nameLocation": "3803:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11384,
                  "src": "3795:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3795:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3776:36:42"
            },
            "scope": 11795,
            "src": "3627:186:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11385,
              "nodeType": "StructuredDocumentation",
              "src": "3821:76:42",
              "text": "@notice Perform chained getAmountOut calculations on any number of pools"
            },
            "functionSelector": "5509a1ac",
            "id": 11397,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountsOut",
            "nameLocation": "3912:13:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11387,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3934:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11397,
                  "src": "3926:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3926:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11391,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "3959:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11397,
                  "src": "3944:21:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11389,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11388,
                        "name": "Route",
                        "nameLocations": [
                          "3944:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "3944:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "3944:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11390,
                    "nodeType": "ArrayTypeName",
                    "src": "3944:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3925:41:42"
            },
            "returnParameters": {
              "id": 11396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11395,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4007:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11397,
                  "src": "3990:24:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11393,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3990:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11394,
                    "nodeType": "ArrayTypeName",
                    "src": "3990:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3989:26:42"
            },
            "scope": 11795,
            "src": "3903:113:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11398,
              "nodeType": "StructuredDocumentation",
              "src": "4058:632:42",
              "text": "@notice Quote the amount deposited into a Pool\n @param tokenA           .\n @param tokenB           .\n @param stable           True if pool is stable, false if volatile\n @param _factory         Address of PoolFactory for tokenA and tokenB\n @param amountADesired   Amount of tokenA desired to deposit\n @param amountBDesired   Amount of tokenB desired to deposit\n @return amountA         Amount of tokenA to actually deposit\n @return amountB         Amount of tokenB to actually deposit\n @return liquidity       Amount of liquidity token returned from deposit"
            },
            "functionSelector": "ce700c29",
            "id": 11419,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteAddLiquidity",
            "nameLocation": "4705:17:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11400,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "4741:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4733:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4733:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11402,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "4766:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4758:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11404,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "4788:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4783:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11406,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "4813:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4805:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11408,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "4840:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4832:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4832:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11410,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "4873:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4865:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4865:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4722:172:42"
            },
            "returnParameters": {
              "id": 11418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11413,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4926:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4918:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4918:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11415,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4943:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4935:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4935:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11417,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "4960:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11419,
                  "src": "4952:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4917:53:42"
            },
            "scope": 11795,
            "src": "4696:275:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11420,
              "nodeType": "StructuredDocumentation",
              "src": "4979:437:42",
              "text": "@notice Quote the amount of liquidity removed from a Pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param _factory     Address of PoolFactory for tokenA and tokenB\n @param liquidity    Amount of liquidity to remove\n @return amountA     Amount of tokenA received\n @return amountB     Amount of tokenB received"
            },
            "functionSelector": "c92de3ec",
            "id": 11437,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteRemoveLiquidity",
            "nameLocation": "5431:20:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11422,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5470:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11437,
                  "src": "5462:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11424,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5495:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11437,
                  "src": "5487:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11426,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "5517:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11437,
                  "src": "5512:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11425,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5512:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11428,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "5542:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11437,
                  "src": "5534:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11430,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "5569:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11437,
                  "src": "5561:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5561:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5451:134:42"
            },
            "returnParameters": {
              "id": 11436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11433,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "5617:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11437,
                  "src": "5609:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5609:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11435,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "5634:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11437,
                  "src": "5626:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5626:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5608:34:42"
            },
            "scope": 11795,
            "src": "5422:221:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11438,
              "nodeType": "StructuredDocumentation",
              "src": "5651:816:42",
              "text": "@notice Add liquidity of two tokens to a Pool\n @param tokenA           .\n @param tokenB           .\n @param stable           True if pool is stable, false if volatile\n @param amountADesired   Amount of tokenA desired to deposit\n @param amountBDesired   Amount of tokenB desired to deposit\n @param amountAMin       Minimum amount of tokenA to deposit\n @param amountBMin       Minimum amount of tokenB to deposit\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountA         Amount of tokenA to actually deposit\n @return amountB         Amount of tokenB to actually deposit\n @return liquidity       Amount of liquidity token returned from deposit"
            },
            "functionSelector": "5a47ddc3",
            "id": 11465,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "6482:12:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11440,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "6513:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6505:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6505:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11442,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "6538:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6530:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6530:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11444,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "6560:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6555:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11443,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6555:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11446,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "6585:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6577:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11448,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "6618:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6610:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6610:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11450,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "6651:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6643:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6643:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11452,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "6680:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6672:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6672:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11454,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6709:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6701:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11456,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "6730:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6722:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6722:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6494:251:42"
            },
            "returnParameters": {
              "id": 11464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11459,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "6772:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6764:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6764:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11461,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "6789:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6781:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6781:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11463,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "6806:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11465,
                  "src": "6798:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6798:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6763:53:42"
            },
            "scope": 11795,
            "src": "6473:344:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11466,
              "nodeType": "StructuredDocumentation",
              "src": "6825:771:42",
              "text": "@notice Add liquidity of a token and WETH (transferred as ETH) to a Pool\n @param token                .\n @param stable               True if pool is stable, false if volatile\n @param amountTokenDesired   Amount of token desired to deposit\n @param amountTokenMin       Minimum amount of token to deposit\n @param amountETHMin         Minimum amount of ETH to deposit\n @param to                   Recipient of liquidity token\n @param deadline             Deadline to add liquidity\n @return amountToken         Amount of token to actually deposit\n @return amountETH           Amount of tokenETH to actually deposit\n @return liquidity           Amount of liquidity token returned from deposit"
            },
            "functionSelector": "b7e0d4c0",
            "id": 11489,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityETH",
            "nameLocation": "7611:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11468,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7645:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7637:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7637:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11470,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "7666:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7661:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7661:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11472,
                  "mutability": "mutable",
                  "name": "amountTokenDesired",
                  "nameLocation": "7691:18:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7683:26:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7683:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11474,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "7728:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7720:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7720:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11476,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "7761:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7753:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7753:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11478,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7792:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7784:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7784:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11480,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7813:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7805:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7805:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7626:202:42"
            },
            "returnParameters": {
              "id": 11488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11483,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "7863:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7855:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7855:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11485,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "7884:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7876:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7876:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11487,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "7903:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11489,
                  "src": "7895:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7895:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7854:59:42"
            },
            "scope": 11795,
            "src": "7602:312:42",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11490,
              "nodeType": "StructuredDocumentation",
              "src": "7959:602:42",
              "text": "@notice Remove liquidity of two tokens from a Pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param liquidity    Amount of liquidity to remove\n @param amountAMin   Minimum amount of tokenA to receive\n @param amountBMin   Minimum amount of tokenB to receive\n @param to           Recipient of tokens received\n @param deadline     Deadline to remove liquidity\n @return amountA     Amount of tokenA received\n @return amountB     Amount of tokenB received"
            },
            "functionSelector": "0dede6c4",
            "id": 11513,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "8576:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11492,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "8610:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8602:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8602:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11494,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "8635:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8627:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8627:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11496,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "8657:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8652:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11495,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8652:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11498,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "8682:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8674:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8674:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11500,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "8710:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8702:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8702:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11502,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "8739:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8731:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8731:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11504,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8768:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8760:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8760:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11506,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "8789:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8781:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8781:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8591:213:42"
            },
            "returnParameters": {
              "id": 11512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11509,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "8831:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8823:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8823:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11511,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "8848:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8840:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8840:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8822:34:42"
            },
            "scope": 11795,
            "src": "8567:290:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11514,
              "nodeType": "StructuredDocumentation",
              "src": "8865:624:42",
              "text": "@notice Remove liquidity of a token and WETH (returned as ETH) from a Pool\n @param token            .\n @param stable           True if pool is stable, false if volatile\n @param liquidity        Amount of liquidity to remove\n @param amountTokenMin   Minimum amount of token to receive\n @param amountETHMin     Minimum amount of ETH to receive\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountToken     Amount of token received\n @return amountETH       Amount of ETH received"
            },
            "functionSelector": "d7b0e0a5",
            "id": 11535,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETH",
            "nameLocation": "9504:18:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11516,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9541:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9533:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9533:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11518,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "9562:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9557:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11517,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9557:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11520,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "9587:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9579:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9579:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11522,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "9615:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9607:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9607:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11524,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "9648:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9640:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9640:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11526,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9679:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9671:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9671:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11528,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "9700:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9692:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9692:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9522:193:42"
            },
            "returnParameters": {
              "id": 11534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11531,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "9742:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9734:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9734:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11533,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "9763:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11535,
                  "src": "9755:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9755:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9733:40:42"
            },
            "scope": 11795,
            "src": "9495:279:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11536,
              "nodeType": "StructuredDocumentation",
              "src": "9782:582:42",
              "text": "@notice Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\n @param token            .\n @param stable           True if pool is stable, false if volatile\n @param liquidity        Amount of liquidity to remove\n @param amountTokenMin   Minimum amount of token to receive\n @param amountETHMin     Minimum amount of ETH to receive\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountETH       Amount of ETH received"
            },
            "functionSelector": "fe411f14",
            "id": 11555,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
            "nameLocation": "10379:47:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11538,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10445:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10437:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10437:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11540,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "10466:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10461:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10461:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11542,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "10491:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10483:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10483:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11544,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "10519:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10511:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10511:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11546,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "10552:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10544:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10544:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11548,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10583:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10575:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10575:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11550,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "10604:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10596:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10596:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10426:193:42"
            },
            "returnParameters": {
              "id": 11554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11553,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "10646:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11555,
                  "src": "10638:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10638:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10637:19:42"
            },
            "scope": 11795,
            "src": "10370:287:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11556,
              "nodeType": "StructuredDocumentation",
              "src": "10690:407:42",
              "text": "@notice Swap one token for another\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "cac88ea9",
            "id": 11574,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nameLocation": "11112:24:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11558,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "11155:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11574,
                  "src": "11147:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11147:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11560,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "11182:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11574,
                  "src": "11174:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11174:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11564,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "11222:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11574,
                  "src": "11205:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11562,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11561,
                        "name": "Route",
                        "nameLocations": [
                          "11205:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "11205:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "11205:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11563,
                    "nodeType": "ArrayTypeName",
                    "src": "11205:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11566,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11247:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11574,
                  "src": "11239:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11239:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11568,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "11268:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11574,
                  "src": "11260:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11260:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11136:147:42"
            },
            "returnParameters": {
              "id": 11573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11572,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11319:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11574,
                  "src": "11302:24:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11570,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11302:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11571,
                    "nodeType": "ArrayTypeName",
                    "src": "11302:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11301:26:42"
            },
            "scope": 11795,
            "src": "11103:225:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11575,
              "nodeType": "StructuredDocumentation",
              "src": "11336:353:42",
              "text": "@notice Swap ETH for a token\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "903638a4",
            "id": 11591,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokens",
            "nameLocation": "11704:21:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11577,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "11744:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11591,
                  "src": "11736:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11736:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11581,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "11784:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11591,
                  "src": "11767:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11579,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11578,
                        "name": "Route",
                        "nameLocations": [
                          "11767:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "11767:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "11767:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11580,
                    "nodeType": "ArrayTypeName",
                    "src": "11767:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11583,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11809:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11591,
                  "src": "11801:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11801:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11585,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "11830:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11591,
                  "src": "11822:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11822:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11725:120:42"
            },
            "returnParameters": {
              "id": 11590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11589,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11889:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11591,
                  "src": "11872:24:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11587,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11872:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11588,
                    "nodeType": "ArrayTypeName",
                    "src": "11872:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11871:26:42"
            },
            "scope": 11795,
            "src": "11695:203:42",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11592,
              "nodeType": "StructuredDocumentation",
              "src": "11906:409:42",
              "text": "@notice Swap a token for WETH (returned as ETH)\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired ETH\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "c6b7f1b6",
            "id": 11610,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETH",
            "nameLocation": "12330:21:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11594,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "12370:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "12362:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12362:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11596,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "12397:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "12389:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12389:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11600,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "12437:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "12420:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11598,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11597,
                        "name": "Route",
                        "nameLocations": [
                          "12420:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "12420:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "12420:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11599,
                    "nodeType": "ArrayTypeName",
                    "src": "12420:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11602,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12462:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "12454:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12454:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11604,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "12483:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "12475:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12475:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12351:147:42"
            },
            "returnParameters": {
              "id": 11609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11608,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12534:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "12517:24:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11606,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12517:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11607,
                    "nodeType": "ArrayTypeName",
                    "src": "12517:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12516:26:42"
            },
            "scope": 11795,
            "src": "12321:222:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11611,
              "nodeType": "StructuredDocumentation",
              "src": "12551:317:42",
              "text": "@notice Swap one token for another without slippage protection\n @return amounts     Array of amounts to swap  per route\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "4111d597",
            "id": 11628,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "UNSAFE_swapExactTokensForTokens",
            "nameLocation": "12883:31:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11614,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12942:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11628,
                  "src": "12925:24:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11612,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12925:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11613,
                    "nodeType": "ArrayTypeName",
                    "src": "12925:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11618,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "12977:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11628,
                  "src": "12960:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11616,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11615,
                        "name": "Route",
                        "nameLocations": [
                          "12960:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "12960:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "12960:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11617,
                    "nodeType": "ArrayTypeName",
                    "src": "12960:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11620,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13002:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11628,
                  "src": "12994:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12994:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11622,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "13023:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11628,
                  "src": "13015:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13015:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12914:124:42"
            },
            "returnParameters": {
              "id": 11627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11626,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11628,
                  "src": "13057:16:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11624,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13057:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11625,
                    "nodeType": "ArrayTypeName",
                    "src": "13057:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13056:18:42"
            },
            "scope": 11795,
            "src": "12874:201:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11629,
              "nodeType": "StructuredDocumentation",
              "src": "13144:376:42",
              "text": "@notice Swap one token for another supporting fee-on-transfer tokens\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "88cd821e",
            "id": 11644,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "13535:53:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11631,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "13607:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11644,
                  "src": "13599:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13599:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11633,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "13634:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11644,
                  "src": "13626:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13626:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11637,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "13674:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11644,
                  "src": "13657:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11635,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11634,
                        "name": "Route",
                        "nameLocations": [
                          "13657:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "13657:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "13657:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11636,
                    "nodeType": "ArrayTypeName",
                    "src": "13657:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11639,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13699:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11644,
                  "src": "13691:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13691:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11641,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "13720:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11644,
                  "src": "13712:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13712:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13588:147:42"
            },
            "returnParameters": {
              "id": 11643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13744:0:42"
            },
            "scope": 11795,
            "src": "13526:219:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11645,
              "nodeType": "StructuredDocumentation",
              "src": "13753:322:42",
              "text": "@notice Swap ETH for a token supporting fee-on-transfer tokens\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "3da5acba",
            "id": 11658,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "14090:50:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11647,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "14159:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11658,
                  "src": "14151:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14151:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11651,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "14199:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11658,
                  "src": "14182:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11649,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11648,
                        "name": "Route",
                        "nameLocations": [
                          "14182:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "14182:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "14182:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11650,
                    "nodeType": "ArrayTypeName",
                    "src": "14182:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11653,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14224:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11658,
                  "src": "14216:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14216:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11655,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14245:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11658,
                  "src": "14237:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14237:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14140:120:42"
            },
            "returnParameters": {
              "id": 11657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14277:0:42"
            },
            "scope": 11795,
            "src": "14081:197:42",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11659,
              "nodeType": "StructuredDocumentation",
              "src": "14286:378:42",
              "text": "@notice Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired ETH\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "12bc3aca",
            "id": 11674,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
            "nameLocation": "14679:50:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11661,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "14748:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11674,
                  "src": "14740:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14740:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11663,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "14775:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11674,
                  "src": "14767:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14767:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11667,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "14815:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11674,
                  "src": "14798:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11665,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11664,
                        "name": "Route",
                        "nameLocations": [
                          "14798:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "14798:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "14798:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11666,
                    "nodeType": "ArrayTypeName",
                    "src": "14798:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11669,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14840:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11674,
                  "src": "14832:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14832:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11671,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14861:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11674,
                  "src": "14853:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14853:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14729:147:42"
            },
            "returnParameters": {
              "id": 11673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14885:0:42"
            },
            "scope": 11795,
            "src": "14670:216:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11675,
              "nodeType": "StructuredDocumentation",
              "src": "14894:1042:42",
              "text": "@notice Zap a token A into a pool (B, C). (A can be equal to B or C).\n         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n         Slippage is required for the initial swap.\n         Additional slippage may be required when adding liquidity as the\n         price of the token may have changed.\n @param tokenIn      Token you are zapping in from (i.e. input token).\n @param amountInA    Amount of input token you wish to send down routesA\n @param amountInB    Amount of input token you wish to send down routesB\n @param zapInPool    Contains zap struct information. See Zap struct.\n @param routesA      Route used to convert input token to tokenA\n @param routesB      Route used to convert input token to tokenB\n @param to           Address you wish to mint liquidity to.\n @param stake        Auto-stake liquidity in corresponding gauge.\n @return liquidity   Amount of LP tokens created from zapping in."
            },
            "functionSelector": "fb49bafd",
            "id": 11701,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "zapIn",
            "nameLocation": "15951:5:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11677,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "15975:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "15967:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15967:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11679,
                  "mutability": "mutable",
                  "name": "amountInA",
                  "nameLocation": "16001:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "15993:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15993:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11681,
                  "mutability": "mutable",
                  "name": "amountInB",
                  "nameLocation": "16029:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "16021:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16021:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11684,
                  "mutability": "mutable",
                  "name": "zapInPool",
                  "nameLocation": "16062:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "16049:22:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zap_$11328_calldata_ptr",
                    "typeString": "struct IRouter.Zap"
                  },
                  "typeName": {
                    "id": 11683,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11682,
                      "name": "Zap",
                      "nameLocations": [
                        "16049:3:42"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11328,
                      "src": "16049:3:42"
                    },
                    "referencedDeclaration": 11328,
                    "src": "16049:3:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zap_$11328_storage_ptr",
                      "typeString": "struct IRouter.Zap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11688,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "16099:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "16082:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11686,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11685,
                        "name": "Route",
                        "nameLocations": [
                          "16082:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "16082:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "16082:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11687,
                    "nodeType": "ArrayTypeName",
                    "src": "16082:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11692,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "16134:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "16117:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11690,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11689,
                        "name": "Route",
                        "nameLocations": [
                          "16117:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "16117:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "16117:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11691,
                    "nodeType": "ArrayTypeName",
                    "src": "16117:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11694,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16160:2:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "16152:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16152:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11696,
                  "mutability": "mutable",
                  "name": "stake",
                  "nameLocation": "16178:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "16173:10:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11695,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16173:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15956:234:42"
            },
            "returnParameters": {
              "id": 11700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11699,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "16225:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11701,
                  "src": "16217:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16217:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16216:19:42"
            },
            "scope": 11795,
            "src": "15942:294:42",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11702,
              "nodeType": "StructuredDocumentation",
              "src": "16244:707:42",
              "text": "@notice Zap out a pool (B, C) into A.\n         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n         Slippage is required for the removal of liquidity.\n         Additional slippage may be required on the swap as the\n         price of the token may have changed.\n @param tokenOut     Token you are zapping out to (i.e. output token).\n @param liquidity    Amount of liquidity you wish to remove.\n @param zapOutPool   Contains zap struct information. See Zap struct.\n @param routesA      Route used to convert tokenA into output token.\n @param routesB      Route used to convert tokenB into output token."
            },
            "functionSelector": "a81b9159",
            "id": 11720,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "zapOut",
            "nameLocation": "16966:6:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11704,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "16991:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11720,
                  "src": "16983:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16983:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11706,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "17018:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11720,
                  "src": "17010:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17010:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11709,
                  "mutability": "mutable",
                  "name": "zapOutPool",
                  "nameLocation": "17051:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11720,
                  "src": "17038:23:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zap_$11328_calldata_ptr",
                    "typeString": "struct IRouter.Zap"
                  },
                  "typeName": {
                    "id": 11708,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11707,
                      "name": "Zap",
                      "nameLocations": [
                        "17038:3:42"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11328,
                      "src": "17038:3:42"
                    },
                    "referencedDeclaration": 11328,
                    "src": "17038:3:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zap_$11328_storage_ptr",
                      "typeString": "struct IRouter.Zap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11713,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "17089:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11720,
                  "src": "17072:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11711,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11710,
                        "name": "Route",
                        "nameLocations": [
                          "17072:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "17072:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "17072:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11712,
                    "nodeType": "ArrayTypeName",
                    "src": "17072:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11717,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "17124:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11720,
                  "src": "17107:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11715,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11714,
                        "name": "Route",
                        "nameLocations": [
                          "17107:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "17107:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "17107:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11716,
                    "nodeType": "ArrayTypeName",
                    "src": "17107:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16972:166:42"
            },
            "returnParameters": {
              "id": 11719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17147:0:42"
            },
            "scope": 11795,
            "src": "16957:191:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11721,
              "nodeType": "StructuredDocumentation",
              "src": "17156:1130:42",
              "text": "@notice Used to generate params required for zapping in.\n         Zap in => remove liquidity then swap.\n         Apply slippage to expected swap values to account for changes in reserves in between.\n @dev Output token refers to the token you want to zap in from.\n @param tokenA           .\n @param tokenB           .\n @param stable           .\n @param _factory         .\n @param amountInA        Amount of input token you wish to send down routesA\n @param amountInB        Amount of input token you wish to send down routesB\n @param routesA          Route used to convert input token to tokenA\n @param routesB          Route used to convert input token to tokenB\n @return amountOutMinA   Minimum output expected from swapping input token to tokenA.\n @return amountOutMinB   Minimum output expected from swapping input token to tokenB.\n @return amountAMin      Minimum amount of tokenA expected from depositing liquidity.\n @return amountBMin      Minimum amount of tokenB expected from depositing liquidity."
            },
            "functionSelector": "07db50fa",
            "id": 11752,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "generateZapInParams",
            "nameLocation": "18301:19:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11723,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "18339:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18331:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18331:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11725,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "18364:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18356:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18356:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11727,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "18386:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18381:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11726,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18381:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11729,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "18411:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18403:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18403:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11731,
                  "mutability": "mutable",
                  "name": "amountInA",
                  "nameLocation": "18438:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18430:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18430:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11733,
                  "mutability": "mutable",
                  "name": "amountInB",
                  "nameLocation": "18466:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18458:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18458:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11737,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "18503:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18486:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11735,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11734,
                        "name": "Route",
                        "nameLocations": [
                          "18486:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "18486:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "18486:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11736,
                    "nodeType": "ArrayTypeName",
                    "src": "18486:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11741,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "18538:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18521:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11739,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11738,
                        "name": "Route",
                        "nameLocations": [
                          "18521:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "18521:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "18521:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11740,
                    "nodeType": "ArrayTypeName",
                    "src": "18521:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18320:232:42"
            },
            "returnParameters": {
              "id": 11751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11744,
                  "mutability": "mutable",
                  "name": "amountOutMinA",
                  "nameLocation": "18584:13:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18576:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18576:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11746,
                  "mutability": "mutable",
                  "name": "amountOutMinB",
                  "nameLocation": "18607:13:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18599:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18599:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11748,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "18630:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18622:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18622:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11750,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "18650:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11752,
                  "src": "18642:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18642:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18575:86:42"
            },
            "scope": 11795,
            "src": "18292:370:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11753,
              "nodeType": "StructuredDocumentation",
              "src": "18670:1079:42",
              "text": "@notice Used to generate params required for zapping out.\n         Zap out => swap then add liquidity.\n         Apply slippage to expected liquidity values to account for changes in reserves in between.\n @dev Output token refers to the token you want to zap out of.\n @param tokenA           .\n @param tokenB           .\n @param stable           .\n @param _factory         .\n @param liquidity        Amount of liquidity being zapped out of into a given output token.\n @param routesA          Route used to convert tokenA into output token.\n @param routesB          Route used to convert tokenB into output token.\n @return amountOutMinA   Minimum output expected from swapping tokenA into output token.\n @return amountOutMinB   Minimum output expected from swapping tokenB into output token.\n @return amountAMin      Minimum amount of tokenA expected from withdrawing liquidity.\n @return amountBMin      Minimum amount of tokenB expected from withdrawing liquidity."
            },
            "functionSelector": "7539d413",
            "id": 11782,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "generateZapOutParams",
            "nameLocation": "19764:20:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11755,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "19803:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "19795:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19795:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11757,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "19828:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "19820:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19820:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11759,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "19850:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "19845:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11758,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19845:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11761,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "19875:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "19867:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19867:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11763,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "19902:9:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "19894:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19894:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11767,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "19939:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "19922:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11765,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11764,
                        "name": "Route",
                        "nameLocations": [
                          "19922:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "19922:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "19922:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11766,
                    "nodeType": "ArrayTypeName",
                    "src": "19922:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11771,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "19974:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "19957:24:42",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$11269_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11769,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11768,
                        "name": "Route",
                        "nameLocations": [
                          "19957:5:42"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11269,
                        "src": "19957:5:42"
                      },
                      "referencedDeclaration": 11269,
                      "src": "19957:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$11269_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 11770,
                    "nodeType": "ArrayTypeName",
                    "src": "19957:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$11269_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19784:204:42"
            },
            "returnParameters": {
              "id": 11781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11774,
                  "mutability": "mutable",
                  "name": "amountOutMinA",
                  "nameLocation": "20020:13:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "20012:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20012:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11776,
                  "mutability": "mutable",
                  "name": "amountOutMinB",
                  "nameLocation": "20043:13:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "20035:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20035:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11778,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "20066:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "20058:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20058:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11780,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "20086:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11782,
                  "src": "20078:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20078:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20011:86:42"
            },
            "scope": 11795,
            "src": "19755:343:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 11783,
              "nodeType": "StructuredDocumentation",
              "src": "20106:601:42",
              "text": "@notice Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\n @dev Returns stable liquidity ratio of B to (A + B).\n      E.g. if ratio is 0.4, it means there is more of A than there is of B.\n      Therefore you should deposit more of token A than B.\n @param tokenA   tokenA of stable pool you are zapping into.\n @param tokenB   tokenB of stable pool you are zapping into.\n @param factory  Factory that created stable pool.\n @return ratio   Ratio of token0 to token1 required to deposit into zap."
            },
            "functionSelector": "f5ba53c7",
            "id": 11794,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteStableLiquidityRatio",
            "nameLocation": "20722:25:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11785,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "20766:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "20758:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20758:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11787,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "20791:6:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "20783:14:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20783:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11789,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "20816:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "20808:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20808:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20747:83:42"
            },
            "returnParameters": {
              "id": 11793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11792,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "20862:5:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 11794,
                  "src": "20854:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20854:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20853:15:42"
            },
            "scope": 11795,
            "src": "20713:156:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11796,
        "src": "60:20812:42",
        "usedErrors": [
          11271,
          11273,
          11275,
          11277,
          11279,
          11281,
          11283,
          11285,
          11287,
          11289,
          11291,
          11293,
          11295,
          11297,
          11299,
          11301,
          11303,
          11305,
          11307,
          11309,
          11311
        ]
      }
    ],
    "src": "33:20839:42"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-09-29T15:40:25.552Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)": {
        "params": {
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "_0": "amounts     Array of amounts to swap  per route"
        }
      },
      "addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountADesired": "Amount of tokenA desired to deposit",
          "amountAMin": "Minimum amount of tokenA to deposit",
          "amountBDesired": "Amount of tokenB desired to deposit",
          "amountBMin": "Minimum amount of tokenB to deposit",
          "deadline": "Deadline to receive liquidity",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "        Amount of tokenA to actually deposit",
          "amountB": "        Amount of tokenB to actually deposit",
          "liquidity": "      Amount of liquidity token returned from deposit"
        }
      },
      "addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountETHMin": "Minimum amount of ETH to deposit",
          "amountTokenDesired": "Amount of token desired to deposit",
          "amountTokenMin": "Minimum amount of token to deposit",
          "deadline": "Deadline to add liquidity",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "          Amount of tokenETH to actually deposit",
          "amountToken": "        Amount of token to actually deposit",
          "liquidity": "          Amount of liquidity token returned from deposit"
        }
      },
      "generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "details": "Output token refers to the token you want to zap in from.",
        "params": {
          "_factory": ".",
          "amountInA": "Amount of input token you wish to send down routesA",
          "amountInB": "Amount of input token you wish to send down routesB",
          "routesA": "Route used to convert input token to tokenA",
          "routesB": "Route used to convert input token to tokenB",
          "stable": ".",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountAMin": "     Minimum amount of tokenA expected from depositing liquidity.",
          "amountBMin": "     Minimum amount of tokenB expected from depositing liquidity.",
          "amountOutMinA": "  Minimum output expected from swapping input token to tokenA.",
          "amountOutMinB": "  Minimum output expected from swapping input token to tokenB."
        }
      },
      "generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "details": "Output token refers to the token you want to zap out of.",
        "params": {
          "_factory": ".",
          "liquidity": "Amount of liquidity being zapped out of into a given output token.",
          "routesA": "Route used to convert tokenA into output token.",
          "routesB": "Route used to convert tokenB into output token.",
          "stable": ".",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountAMin": "     Minimum amount of tokenA expected from withdrawing liquidity.",
          "amountBMin": "     Minimum amount of tokenB expected from withdrawing liquidity.",
          "amountOutMinA": "  Minimum output expected from swapping tokenA into output token.",
          "amountOutMinB": "  Minimum output expected from swapping tokenB into output token."
        }
      },
      "getReserves(address,address,bool,address)": {
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "reserveA": "   Amount of reserves of the sorted token A",
          "reserveB": "   Amount of reserves of the sorted token B"
        }
      },
      "poolFor(address,address,bool,address)": {
        "details": "Returns a randomly generated address for a nonexistent pool",
        "params": {
          "_factory": "Address of factory which created the pool",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": "Address of token to query",
          "tokenB": "Address of token to query"
        }
      },
      "quoteAddLiquidity(address,address,bool,address,uint256,uint256)": {
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "amountADesired": "Amount of tokenA desired to deposit",
          "amountBDesired": "Amount of tokenB desired to deposit",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "        Amount of tokenA to actually deposit",
          "amountB": "        Amount of tokenB to actually deposit",
          "liquidity": "      Amount of liquidity token returned from deposit"
        }
      },
      "quoteRemoveLiquidity(address,address,bool,address,uint256)": {
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "    Amount of tokenA received",
          "amountB": "    Amount of tokenB received"
        }
      },
      "quoteStableLiquidityRatio(address,address,address)": {
        "details": "Returns stable liquidity ratio of B to (A + B).      E.g. if ratio is 0.4, it means there is more of A than there is of B.      Therefore you should deposit more of token A than B.",
        "params": {
          "factory": "Factory that created stable pool.",
          "tokenA": "tokenA of stable pool you are zapping into.",
          "tokenB": "tokenB of stable pool you are zapping into."
        },
        "returns": {
          "ratio": "  Ratio of token0 to token1 required to deposit into zap."
        }
      },
      "removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountAMin": "Minimum amount of tokenA to receive",
          "amountBMin": "Minimum amount of tokenB to receive",
          "deadline": "Deadline to remove liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of tokens received",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "    Amount of tokenA received",
          "amountB": "    Amount of tokenB received"
        }
      },
      "removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountETHMin": "Minimum amount of ETH to receive",
          "amountTokenMin": "Minimum amount of token to receive",
          "deadline": "Deadline to receive liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "      Amount of ETH received",
          "amountToken": "    Amount of token received"
        }
      },
      "removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountETHMin": "Minimum amount of ETH to receive",
          "amountTokenMin": "Minimum amount of token to receive",
          "deadline": "Deadline to receive liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "      Amount of ETH received"
        }
      },
      "sortTokens(address,address)": {
        "params": {
          "tokenA": "Address of token to sort",
          "tokenB": "Address of token to sort"
        },
        "returns": {
          "token0": " Lower address value between tokenA and tokenB",
          "token1": " Higher address value between tokenA and tokenB"
        }
      },
      "swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired ETH",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired ETH",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)": {
        "params": {
          "amountInA": "Amount of input token you wish to send down routesA",
          "amountInB": "Amount of input token you wish to send down routesB",
          "routesA": "Route used to convert input token to tokenA",
          "routesB": "Route used to convert input token to tokenB",
          "stake": "Auto-stake liquidity in corresponding gauge.",
          "to": "Address you wish to mint liquidity to.",
          "tokenIn": "Token you are zapping in from (i.e. input token).",
          "zapInPool": "Contains zap struct information. See Zap struct."
        },
        "returns": {
          "liquidity": "  Amount of LP tokens created from zapping in."
        }
      },
      "zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])": {
        "params": {
          "liquidity": "Amount of liquidity you wish to remove.",
          "routesA": "Route used to convert tokenA into output token.",
          "routesB": "Route used to convert tokenB into output token.",
          "tokenOut": "Token you are zapping out to (i.e. output token).",
          "zapOutPool": "Contains zap struct information. See Zap struct."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another without slippage protection"
      },
      "addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)": {
        "notice": "Add liquidity of two tokens to a Pool"
      },
      "addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Add liquidity of a token and WETH (transferred as ETH) to a Pool"
      },
      "generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "notice": "Used to generate params required for zapping in.         Zap in => remove liquidity then swap.         Apply slippage to expected swap values to account for changes in reserves in between."
      },
      "generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "notice": "Used to generate params required for zapping out.         Zap out => swap then add liquidity.         Apply slippage to expected liquidity values to account for changes in reserves in between."
      },
      "getAmountsOut(uint256,(address,address,bool,address)[])": {
        "notice": "Perform chained getAmountOut calculations on any number of pools"
      },
      "getReserves(address,address,bool,address)": {
        "notice": "Fetch and sort the reserves for a pool"
      },
      "pairFor(address,address,bool,address)": {
        "notice": "Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1"
      },
      "poolFor(address,address,bool,address)": {
        "notice": "Calculate the address of a pool by its' factory.         Used by all Router functions containing a `Route[]` or `_factory` argument.         Reverts if _factory is not approved by the FactoryRegistry"
      },
      "quoteAddLiquidity(address,address,bool,address,uint256,uint256)": {
        "notice": "Quote the amount deposited into a Pool"
      },
      "quoteRemoveLiquidity(address,address,bool,address,uint256)": {
        "notice": "Quote the amount of liquidity removed from a Pool"
      },
      "quoteStableLiquidityRatio(address,address,address)": {
        "notice": "Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool."
      },
      "removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of two tokens from a Pool"
      },
      "removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of a token and WETH (returned as ETH) from a Pool"
      },
      "removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool"
      },
      "sortTokens(address,address)": {
        "notice": "Sort two tokens by which address value is less than the other"
      },
      "swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap ETH for a token"
      },
      "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap ETH for a token supporting fee-on-transfer tokens"
      },
      "swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap a token for WETH (returned as ETH)"
      },
      "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens"
      },
      "swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another"
      },
      "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another supporting fee-on-transfer tokens"
      },
      "zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)": {
        "notice": "Zap a token A into a pool (B, C). (A can be equal to B or C).         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the initial swap.         Additional slippage may be required when adding liquidity as the         price of the token may have changed."
      },
      "zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])": {
        "notice": "Zap out a pool (B, C) into A.         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the removal of liquidity.         Additional slippage may be required on the swap as the         price of the token may have changed."
      }
    },
    "version": 1
  }
}