{
  "contractName": "IRouter",
  "abi": [
    {
      "inputs": [],
      "name": "ConversionFromV2ToV1VeloProhibited",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ETHTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountADesired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountAOptimal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountB",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmountBDesired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientOutputAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmountInForETHDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPath",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRouteA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRouteB",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTokenInForETHDeposit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyWETH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolFactoryDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SameAddresses",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "sortTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "poolFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "pairFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reserveA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        }
      ],
      "name": "quoteAddLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "quoteRemoveLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETH",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "UNSAFE_swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routes",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountInA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInB",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRouter.Zap",
          "name": "zapInPool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stake",
          "type": "bool"
        }
      ],
      "name": "zapIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountAMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountBMin",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRouter.Zap",
          "name": "zapOutPool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "zapOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountInA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInB",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "generateZapInParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMinA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMinB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "stable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesA",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "stable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "internalType": "struct IRouter.Route[]",
          "name": "routesB",
          "type": "tuple[]"
        }
      ],
      "name": "generateZapOutParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMinA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMinB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "quoteStableLiquidityRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ConversionFromV2ToV1VeloProhibited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountADesired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountAOptimal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountB\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountBDesired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountInForETHDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRouteA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRouteB\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenInForETHDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyWETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolFactoryDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"UNSAFE_swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInB\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"generateZapInParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"generateZapOutParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"pairFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"poolFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"}],\"name\":\"quoteAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"quoteRemoveLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"quoteStableLiquidityRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"sortTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInB\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"internalType\":\"struct IRouter.Zap\",\"name\":\"zapInPool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stake\",\"type\":\"bool\"}],\"name\":\"zapIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"internalType\":\"struct IRouter.Zap\",\"name\":\"zapOutPool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"zapOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)\":{\"params\":{\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"_0\":\"amounts     Array of amounts to swap  per route\"}},\"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Amount of tokenA desired to deposit\",\"amountAMin\":\"Minimum amount of tokenA to deposit\",\"amountBDesired\":\"Amount of tokenB desired to deposit\",\"amountBMin\":\"Minimum amount of tokenB to deposit\",\"deadline\":\"Deadline to receive liquidity\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"        Amount of tokenA to actually deposit\",\"amountB\":\"        Amount of tokenB to actually deposit\",\"liquidity\":\"      Amount of liquidity token returned from deposit\"}},\"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to deposit\",\"amountTokenDesired\":\"Amount of token desired to deposit\",\"amountTokenMin\":\"Minimum amount of token to deposit\",\"deadline\":\"Deadline to add liquidity\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"          Amount of tokenETH to actually deposit\",\"amountToken\":\"        Amount of token to actually deposit\",\"liquidity\":\"          Amount of liquidity token returned from deposit\"}},\"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"details\":\"Output token refers to the token you want to zap in from.\",\"params\":{\"_factory\":\".\",\"amountInA\":\"Amount of input token you wish to send down routesA\",\"amountInB\":\"Amount of input token you wish to send down routesB\",\"routesA\":\"Route used to convert input token to tokenA\",\"routesB\":\"Route used to convert input token to tokenB\",\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountAMin\":\"     Minimum amount of tokenA expected from depositing liquidity.\",\"amountBMin\":\"     Minimum amount of tokenB expected from depositing liquidity.\",\"amountOutMinA\":\"  Minimum output expected from swapping input token to tokenA.\",\"amountOutMinB\":\"  Minimum output expected from swapping input token to tokenB.\"}},\"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"details\":\"Output token refers to the token you want to zap out of.\",\"params\":{\"_factory\":\".\",\"liquidity\":\"Amount of liquidity being zapped out of into a given output token.\",\"routesA\":\"Route used to convert tokenA into output token.\",\"routesB\":\"Route used to convert tokenB into output token.\",\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountAMin\":\"     Minimum amount of tokenA expected from withdrawing liquidity.\",\"amountBMin\":\"     Minimum amount of tokenB expected from withdrawing liquidity.\",\"amountOutMinA\":\"  Minimum output expected from swapping tokenA into output token.\",\"amountOutMinB\":\"  Minimum output expected from swapping tokenB into output token.\"}},\"getReserves(address,address,bool,address)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"reserveA\":\"   Amount of reserves of the sorted token A\",\"reserveB\":\"   Amount of reserves of the sorted token B\"}},\"poolFor(address,address,bool,address)\":{\"details\":\"Returns a randomly generated address for a nonexistent pool\",\"params\":{\"_factory\":\"Address of factory which created the pool\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\"Address of token to query\",\"tokenB\":\"Address of token to query\"}},\"quoteAddLiquidity(address,address,bool,address,uint256,uint256)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"amountADesired\":\"Amount of tokenA desired to deposit\",\"amountBDesired\":\"Amount of tokenB desired to deposit\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"        Amount of tokenA to actually deposit\",\"amountB\":\"        Amount of tokenB to actually deposit\",\"liquidity\":\"      Amount of liquidity token returned from deposit\"}},\"quoteRemoveLiquidity(address,address,bool,address,uint256)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"    Amount of tokenA received\",\"amountB\":\"    Amount of tokenB received\"}},\"quoteStableLiquidityRatio(address,address,address)\":{\"details\":\"Returns stable liquidity ratio of B to (A + B).      E.g. if ratio is 0.4, it means there is more of A than there is of B.      Therefore you should deposit more of token A than B.\",\"params\":{\"factory\":\"Factory that created stable pool.\",\"tokenA\":\"tokenA of stable pool you are zapping into.\",\"tokenB\":\"tokenB of stable pool you are zapping into.\"},\"returns\":{\"ratio\":\"  Ratio of token0 to token1 required to deposit into zap.\"}},\"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum amount of tokenA to receive\",\"amountBMin\":\"Minimum amount of tokenB to receive\",\"deadline\":\"Deadline to remove liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of tokens received\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"    Amount of tokenA received\",\"amountB\":\"    Amount of tokenB received\"}},\"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to receive\",\"amountTokenMin\":\"Minimum amount of token to receive\",\"deadline\":\"Deadline to receive liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"      Amount of ETH received\",\"amountToken\":\"    Amount of token received\"}},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to receive\",\"amountTokenMin\":\"Minimum amount of token to receive\",\"deadline\":\"Deadline to receive liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"      Amount of ETH received\"}},\"sortTokens(address,address)\":{\"params\":{\"tokenA\":\"Address of token to sort\",\"tokenB\":\"Address of token to sort\"},\"returns\":{\"token0\":\" Lower address value between tokenA and tokenB\",\"token1\":\" Higher address value between tokenA and tokenB\"}},\"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired ETH\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired ETH\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)\":{\"params\":{\"amountInA\":\"Amount of input token you wish to send down routesA\",\"amountInB\":\"Amount of input token you wish to send down routesB\",\"routesA\":\"Route used to convert input token to tokenA\",\"routesB\":\"Route used to convert input token to tokenB\",\"stake\":\"Auto-stake liquidity in corresponding gauge.\",\"to\":\"Address you wish to mint liquidity to.\",\"tokenIn\":\"Token you are zapping in from (i.e. input token).\",\"zapInPool\":\"Contains zap struct information. See Zap struct.\"},\"returns\":{\"liquidity\":\"  Amount of LP tokens created from zapping in.\"}},\"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])\":{\"params\":{\"liquidity\":\"Amount of liquidity you wish to remove.\",\"routesA\":\"Route used to convert tokenA into output token.\",\"routesB\":\"Route used to convert tokenB into output token.\",\"tokenOut\":\"Token you are zapping out to (i.e. output token).\",\"zapOutPool\":\"Contains zap struct information. See Zap struct.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another without slippage protection\"},\"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Add liquidity of two tokens to a Pool\"},\"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Add liquidity of a token and WETH (transferred as ETH) to a Pool\"},\"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Used to generate params required for zapping in.         Zap in => remove liquidity then swap.         Apply slippage to expected swap values to account for changes in reserves in between.\"},\"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Used to generate params required for zapping out.         Zap out => swap then add liquidity.         Apply slippage to expected liquidity values to account for changes in reserves in between.\"},\"getAmountsOut(uint256,(address,address,bool,address)[])\":{\"notice\":\"Perform chained getAmountOut calculations on any number of pools\"},\"getReserves(address,address,bool,address)\":{\"notice\":\"Fetch and sort the reserves for a pool\"},\"pairFor(address,address,bool,address)\":{\"notice\":\"Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1\"},\"poolFor(address,address,bool,address)\":{\"notice\":\"Calculate the address of a pool by its' factory.         Used by all Router functions containing a `Route[]` or `_factory` argument.         Reverts if _factory is not approved by the FactoryRegistry\"},\"quoteAddLiquidity(address,address,bool,address,uint256,uint256)\":{\"notice\":\"Quote the amount deposited into a Pool\"},\"quoteRemoveLiquidity(address,address,bool,address,uint256)\":{\"notice\":\"Quote the amount of liquidity removed from a Pool\"},\"quoteStableLiquidityRatio(address,address,address)\":{\"notice\":\"Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\"},\"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of two tokens from a Pool\"},\"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of a token and WETH (returned as ETH) from a Pool\"},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\"},\"sortTokens(address,address)\":{\"notice\":\"Sort two tokens by which address value is less than the other\"},\"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap ETH for a token\"},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap ETH for a token supporting fee-on-transfer tokens\"},\"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap a token for WETH (returned as ETH)\"},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\"},\"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another\"},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another supporting fee-on-transfer tokens\"},\"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)\":{\"notice\":\"Zap a token A into a pool (B, C). (A can be equal to B or C).         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the initial swap.         Additional slippage may be required when adding liquidity as the         price of the token may have changed.\"},\"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Zap out a pool (B, C) into A.         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the removal of liquidity.         Additional slippage may be required on the swap as the         price of the token may have changed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IRouter.sol\":\"IRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0x3c48f83694984559f75c4963cc6ca6c6e93260799be51affc1387fc09760e487\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119e7e8af7e400f13398e3262c23604bf9fad092dc806b75675be7a8f8ed5337\",\"dweb:/ipfs/Qma1kimRpHp2Pb5eADXEmkxJvKwRQftv2X6Rt81cJpou5k\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IRouter {\r\n    struct Route {\r\n        address from;\r\n        address to;\r\n        bool stable;\r\n        address factory;\r\n    }\r\n\r\n    error ConversionFromV2ToV1VeloProhibited();\r\n    error ETHTransferFailed();\r\n    error Expired();\r\n    error InsufficientAmount();\r\n    error InsufficientAmountA();\r\n    error InsufficientAmountB();\r\n    error InsufficientAmountADesired();\r\n    error InsufficientAmountBDesired();\r\n    error InsufficientAmountAOptimal();\r\n    error InsufficientLiquidity();\r\n    error InsufficientOutputAmount();\r\n    error InvalidAmountInForETHDeposit();\r\n    error InvalidTokenInForETHDeposit();\r\n    error InvalidPath();\r\n    error InvalidRouteA();\r\n    error InvalidRouteB();\r\n    error OnlyWETH();\r\n    error PoolDoesNotExist();\r\n    error PoolFactoryDoesNotExist();\r\n    error SameAddresses();\r\n    error ZeroAddress();\r\n\r\n    /// @dev Struct containing information necessary to zap in and out of pools\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           Stable or volatile pool\r\n    /// @param factory          factory of pool\r\n    /// @param amountOutMinA    Minimum amount expected from swap leg of zap via routesA\r\n    /// @param amountOutMinB    Minimum amount expected from swap leg of zap via routesB\r\n    /// @param amountAMin       Minimum amount of tokenA expected from liquidity leg of zap\r\n    /// @param amountBMin       Minimum amount of tokenB expected from liquidity leg of zap\r\n    struct Zap {\r\n        address tokenA;\r\n        address tokenB;\r\n        bool stable;\r\n        address factory;\r\n        uint256 amountOutMinA;\r\n        uint256 amountOutMinB;\r\n        uint256 amountAMin;\r\n        uint256 amountBMin;\r\n    }\r\n\r\n    /// @notice Sort two tokens by which address value is less than the other\r\n    /// @param tokenA   Address of token to sort\r\n    /// @param tokenB   Address of token to sort\r\n    /// @return token0  Lower address value between tokenA and tokenB\r\n    /// @return token1  Higher address value between tokenA and tokenB\r\n    function sortTokens(address tokenA, address tokenB) external pure returns (address token0, address token1);\r\n\r\n    /// @notice Calculate the address of a pool by its' factory.\r\n    ///         Used by all Router functions containing a `Route[]` or `_factory` argument.\r\n    ///         Reverts if _factory is not approved by the FactoryRegistry\r\n    /// @dev Returns a randomly generated address for a nonexistent pool\r\n    /// @param tokenA   Address of token to query\r\n    /// @param tokenB   Address of token to query\r\n    /// @param stable   True if pool is stable, false if volatile\r\n    /// @param _factory Address of factory which created the pool\r\n    function poolFor(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory\r\n    ) external view returns (address pool);\r\n\r\n    /// @notice Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1\r\n    function pairFor(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory\r\n    ) external view returns (address pool);\r\n\r\n    /// @notice Fetch and sort the reserves for a pool\r\n    /// @param tokenA       .\r\n    /// @param tokenB       .\r\n    /// @param stable       True if pool is stable, false if volatile\r\n    /// @param _factory     Address of PoolFactory for tokenA and tokenB\r\n    /// @return reserveA    Amount of reserves of the sorted token A\r\n    /// @return reserveB    Amount of reserves of the sorted token B\r\n    function getReserves(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory\r\n    ) external view returns (uint256 reserveA, uint256 reserveB);\r\n\r\n    /// @notice Perform chained getAmountOut calculations on any number of pools\r\n    function getAmountsOut(uint256 amountIn, Route[] memory routes) external view returns (uint256[] memory amounts);\r\n\r\n    // **** ADD LIQUIDITY ****\r\n\r\n    /// @notice Quote the amount deposited into a Pool\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param _factory         Address of PoolFactory for tokenA and tokenB\r\n    /// @param amountADesired   Amount of tokenA desired to deposit\r\n    /// @param amountBDesired   Amount of tokenB desired to deposit\r\n    /// @return amountA         Amount of tokenA to actually deposit\r\n    /// @return amountB         Amount of tokenB to actually deposit\r\n    /// @return liquidity       Amount of liquidity token returned from deposit\r\n    function quoteAddLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired\r\n    ) external view returns (uint256 amountA, uint256 amountB, uint256 liquidity);\r\n\r\n    /// @notice Quote the amount of liquidity removed from a Pool\r\n    /// @param tokenA       .\r\n    /// @param tokenB       .\r\n    /// @param stable       True if pool is stable, false if volatile\r\n    /// @param _factory     Address of PoolFactory for tokenA and tokenB\r\n    /// @param liquidity    Amount of liquidity to remove\r\n    /// @return amountA     Amount of tokenA received\r\n    /// @return amountB     Amount of tokenB received\r\n    function quoteRemoveLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 liquidity\r\n    ) external view returns (uint256 amountA, uint256 amountB);\r\n\r\n    /// @notice Add liquidity of two tokens to a Pool\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param amountADesired   Amount of tokenA desired to deposit\r\n    /// @param amountBDesired   Amount of tokenB desired to deposit\r\n    /// @param amountAMin       Minimum amount of tokenA to deposit\r\n    /// @param amountBMin       Minimum amount of tokenB to deposit\r\n    /// @param to               Recipient of liquidity token\r\n    /// @param deadline         Deadline to receive liquidity\r\n    /// @return amountA         Amount of tokenA to actually deposit\r\n    /// @return amountB         Amount of tokenB to actually deposit\r\n    /// @return liquidity       Amount of liquidity token returned from deposit\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\r\n\r\n    /// @notice Add liquidity of a token and WETH (transferred as ETH) to a Pool\r\n    /// @param token                .\r\n    /// @param stable               True if pool is stable, false if volatile\r\n    /// @param amountTokenDesired   Amount of token desired to deposit\r\n    /// @param amountTokenMin       Minimum amount of token to deposit\r\n    /// @param amountETHMin         Minimum amount of ETH to deposit\r\n    /// @param to                   Recipient of liquidity token\r\n    /// @param deadline             Deadline to add liquidity\r\n    /// @return amountToken         Amount of token to actually deposit\r\n    /// @return amountETH           Amount of tokenETH to actually deposit\r\n    /// @return liquidity           Amount of liquidity token returned from deposit\r\n    function addLiquidityETH(\r\n        address token,\r\n        bool stable,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\r\n\r\n    // **** REMOVE LIQUIDITY ****\r\n\r\n    /// @notice Remove liquidity of two tokens from a Pool\r\n    /// @param tokenA       .\r\n    /// @param tokenB       .\r\n    /// @param stable       True if pool is stable, false if volatile\r\n    /// @param liquidity    Amount of liquidity to remove\r\n    /// @param amountAMin   Minimum amount of tokenA to receive\r\n    /// @param amountBMin   Minimum amount of tokenB to receive\r\n    /// @param to           Recipient of tokens received\r\n    /// @param deadline     Deadline to remove liquidity\r\n    /// @return amountA     Amount of tokenA received\r\n    /// @return amountB     Amount of tokenB received\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        uint256 liquidity,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountA, uint256 amountB);\r\n\r\n    /// @notice Remove liquidity of a token and WETH (returned as ETH) from a Pool\r\n    /// @param token            .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param liquidity        Amount of liquidity to remove\r\n    /// @param amountTokenMin   Minimum amount of token to receive\r\n    /// @param amountETHMin     Minimum amount of ETH to receive\r\n    /// @param to               Recipient of liquidity token\r\n    /// @param deadline         Deadline to receive liquidity\r\n    /// @return amountToken     Amount of token received\r\n    /// @return amountETH       Amount of ETH received\r\n    function removeLiquidityETH(\r\n        address token,\r\n        bool stable,\r\n        uint256 liquidity,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountToken, uint256 amountETH);\r\n\r\n    /// @notice Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\r\n    /// @param token            .\r\n    /// @param stable           True if pool is stable, false if volatile\r\n    /// @param liquidity        Amount of liquidity to remove\r\n    /// @param amountTokenMin   Minimum amount of token to receive\r\n    /// @param amountETHMin     Minimum amount of ETH to receive\r\n    /// @param to               Recipient of liquidity token\r\n    /// @param deadline         Deadline to receive liquidity\r\n    /// @return amountETH       Amount of ETH received\r\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        bool stable,\r\n        uint256 liquidity,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256 amountETH);\r\n\r\n    // **** SWAP ****\r\n\r\n    /// @notice Swap one token for another\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    /// @return amounts     Array of amounts returned per route\r\n    function swapExactTokensForTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256[] memory amounts);\r\n\r\n    /// @notice Swap ETH for a token\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    /// @return amounts     Array of amounts returned per route\r\n    function swapExactETHForTokens(\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable returns (uint256[] memory amounts);\r\n\r\n    /// @notice Swap a token for WETH (returned as ETH)\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired ETH\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    /// @return amounts     Array of amounts returned per route\r\n    function swapExactTokensForETH(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256[] memory amounts);\r\n\r\n    /// @notice Swap one token for another without slippage protection\r\n    /// @return amounts     Array of amounts to swap  per route\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function UNSAFE_swapExactTokensForTokens(\r\n        uint256[] memory amounts,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external returns (uint256[] memory);\r\n\r\n    // **** SWAP (supporting fee-on-transfer tokens) ****\r\n\r\n    /// @notice Swap one token for another supporting fee-on-transfer tokens\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    /// @notice Swap ETH for a token supporting fee-on-transfer tokens\r\n    /// @param amountOutMin Minimum amount of desired token received\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    /// @notice Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\r\n    /// @param amountIn     Amount of token in\r\n    /// @param amountOutMin Minimum amount of desired ETH\r\n    /// @param routes       Array of trade routes used in the swap\r\n    /// @param to           Recipient of the tokens received\r\n    /// @param deadline     Deadline to receive tokens\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        Route[] calldata routes,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    /// @notice Zap a token A into a pool (B, C). (A can be equal to B or C).\r\n    ///         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\r\n    ///         Slippage is required for the initial swap.\r\n    ///         Additional slippage may be required when adding liquidity as the\r\n    ///         price of the token may have changed.\r\n    /// @param tokenIn      Token you are zapping in from (i.e. input token).\r\n    /// @param amountInA    Amount of input token you wish to send down routesA\r\n    /// @param amountInB    Amount of input token you wish to send down routesB\r\n    /// @param zapInPool    Contains zap struct information. See Zap struct.\r\n    /// @param routesA      Route used to convert input token to tokenA\r\n    /// @param routesB      Route used to convert input token to tokenB\r\n    /// @param to           Address you wish to mint liquidity to.\r\n    /// @param stake        Auto-stake liquidity in corresponding gauge.\r\n    /// @return liquidity   Amount of LP tokens created from zapping in.\r\n    function zapIn(\r\n        address tokenIn,\r\n        uint256 amountInA,\r\n        uint256 amountInB,\r\n        Zap calldata zapInPool,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB,\r\n        address to,\r\n        bool stake\r\n    ) external payable returns (uint256 liquidity);\r\n\r\n    /// @notice Zap out a pool (B, C) into A.\r\n    ///         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\r\n    ///         Slippage is required for the removal of liquidity.\r\n    ///         Additional slippage may be required on the swap as the\r\n    ///         price of the token may have changed.\r\n    /// @param tokenOut     Token you are zapping out to (i.e. output token).\r\n    /// @param liquidity    Amount of liquidity you wish to remove.\r\n    /// @param zapOutPool   Contains zap struct information. See Zap struct.\r\n    /// @param routesA      Route used to convert tokenA into output token.\r\n    /// @param routesB      Route used to convert tokenB into output token.\r\n    function zapOut(\r\n        address tokenOut,\r\n        uint256 liquidity,\r\n        Zap calldata zapOutPool,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB\r\n    ) external;\r\n\r\n    /// @notice Used to generate params required for zapping in.\r\n    ///         Zap in => remove liquidity then swap.\r\n    ///         Apply slippage to expected swap values to account for changes in reserves in between.\r\n    /// @dev Output token refers to the token you want to zap in from.\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           .\r\n    /// @param _factory         .\r\n    /// @param amountInA        Amount of input token you wish to send down routesA\r\n    /// @param amountInB        Amount of input token you wish to send down routesB\r\n    /// @param routesA          Route used to convert input token to tokenA\r\n    /// @param routesB          Route used to convert input token to tokenB\r\n    /// @return amountOutMinA   Minimum output expected from swapping input token to tokenA.\r\n    /// @return amountOutMinB   Minimum output expected from swapping input token to tokenB.\r\n    /// @return amountAMin      Minimum amount of tokenA expected from depositing liquidity.\r\n    /// @return amountBMin      Minimum amount of tokenB expected from depositing liquidity.\r\n    function generateZapInParams(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 amountInA,\r\n        uint256 amountInB,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB\r\n    ) external view returns (uint256 amountOutMinA, uint256 amountOutMinB, uint256 amountAMin, uint256 amountBMin);\r\n\r\n    /// @notice Used to generate params required for zapping out.\r\n    ///         Zap out => swap then add liquidity.\r\n    ///         Apply slippage to expected liquidity values to account for changes in reserves in between.\r\n    /// @dev Output token refers to the token you want to zap out of.\r\n    /// @param tokenA           .\r\n    /// @param tokenB           .\r\n    /// @param stable           .\r\n    /// @param _factory         .\r\n    /// @param liquidity        Amount of liquidity being zapped out of into a given output token.\r\n    /// @param routesA          Route used to convert tokenA into output token.\r\n    /// @param routesB          Route used to convert tokenB into output token.\r\n    /// @return amountOutMinA   Minimum output expected from swapping tokenA into output token.\r\n    /// @return amountOutMinB   Minimum output expected from swapping tokenB into output token.\r\n    /// @return amountAMin      Minimum amount of tokenA expected from withdrawing liquidity.\r\n    /// @return amountBMin      Minimum amount of tokenB expected from withdrawing liquidity.\r\n    function generateZapOutParams(\r\n        address tokenA,\r\n        address tokenB,\r\n        bool stable,\r\n        address _factory,\r\n        uint256 liquidity,\r\n        Route[] calldata routesA,\r\n        Route[] calldata routesB\r\n    ) external view returns (uint256 amountOutMinA, uint256 amountOutMinB, uint256 amountAMin, uint256 amountBMin);\r\n\r\n    /// @notice Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\r\n    /// @dev Returns stable liquidity ratio of B to (A + B).\r\n    ///      E.g. if ratio is 0.4, it means there is more of A than there is of B.\r\n    ///      Therefore you should deposit more of token A than B.\r\n    /// @param tokenA   tokenA of stable pool you are zapping into.\r\n    /// @param tokenB   tokenB of stable pool you are zapping into.\r\n    /// @param factory  Factory that created stable pool.\r\n    /// @return ratio   Ratio of token0 to token1 required to deposit into zap.\r\n    function quoteStableLiquidityRatio(\r\n        address tokenA,\r\n        address tokenB,\r\n        address factory\r\n    ) external view returns (uint256 ratio);\r\n}",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-optimism\\contracts\\interfaces\\IRouter.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IRouter.sol",
    "exportedSymbols": {
      "IRouter": [
        6996
      ]
    },
    "id": 6997,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6461,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:31"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRouter",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 6996,
        "linearizedBaseContracts": [
          6996
        ],
        "name": "IRouter",
        "nameLocation": "70:7:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IRouter.Route",
            "id": 6470,
            "members": [
              {
                "constant": false,
                "id": 6463,
                "mutability": "mutable",
                "name": "from",
                "nameLocation": "117:4:31",
                "nodeType": "VariableDeclaration",
                "scope": 6470,
                "src": "109:12:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6462,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "109:7:31",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6465,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "140:2:31",
                "nodeType": "VariableDeclaration",
                "scope": 6470,
                "src": "132:10:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6464,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "132:7:31",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6467,
                "mutability": "mutable",
                "name": "stable",
                "nameLocation": "158:6:31",
                "nodeType": "VariableDeclaration",
                "scope": 6470,
                "src": "153:11:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6466,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "153:4:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6469,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "183:7:31",
                "nodeType": "VariableDeclaration",
                "scope": 6470,
                "src": "175:15:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6468,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "175:7:31",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Route",
            "nameLocation": "92:5:31",
            "nodeType": "StructDefinition",
            "scope": 6996,
            "src": "85:113:31",
            "visibility": "public"
          },
          {
            "id": 6472,
            "name": "ConversionFromV2ToV1VeloProhibited",
            "nameLocation": "212:34:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "246:2:31"
            },
            "src": "206:43:31"
          },
          {
            "id": 6474,
            "name": "ETHTransferFailed",
            "nameLocation": "261:17:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:31"
            },
            "src": "255:26:31"
          },
          {
            "id": 6476,
            "name": "Expired",
            "nameLocation": "293:7:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:2:31"
            },
            "src": "287:16:31"
          },
          {
            "id": 6478,
            "name": "InsufficientAmount",
            "nameLocation": "315:18:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:2:31"
            },
            "src": "309:27:31"
          },
          {
            "id": 6480,
            "name": "InsufficientAmountA",
            "nameLocation": "348:19:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:31"
            },
            "src": "342:28:31"
          },
          {
            "id": 6482,
            "name": "InsufficientAmountB",
            "nameLocation": "382:19:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:31"
            },
            "src": "376:28:31"
          },
          {
            "id": 6484,
            "name": "InsufficientAmountADesired",
            "nameLocation": "416:26:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:2:31"
            },
            "src": "410:35:31"
          },
          {
            "id": 6486,
            "name": "InsufficientAmountBDesired",
            "nameLocation": "457:26:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:31"
            },
            "src": "451:35:31"
          },
          {
            "id": 6488,
            "name": "InsufficientAmountAOptimal",
            "nameLocation": "498:26:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:2:31"
            },
            "src": "492:35:31"
          },
          {
            "id": 6490,
            "name": "InsufficientLiquidity",
            "nameLocation": "539:21:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:2:31"
            },
            "src": "533:30:31"
          },
          {
            "id": 6492,
            "name": "InsufficientOutputAmount",
            "nameLocation": "575:24:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:2:31"
            },
            "src": "569:33:31"
          },
          {
            "id": 6494,
            "name": "InvalidAmountInForETHDeposit",
            "nameLocation": "614:28:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:2:31"
            },
            "src": "608:37:31"
          },
          {
            "id": 6496,
            "name": "InvalidTokenInForETHDeposit",
            "nameLocation": "657:27:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:2:31"
            },
            "src": "651:36:31"
          },
          {
            "id": 6498,
            "name": "InvalidPath",
            "nameLocation": "699:11:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:31"
            },
            "src": "693:20:31"
          },
          {
            "id": 6500,
            "name": "InvalidRouteA",
            "nameLocation": "725:13:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:2:31"
            },
            "src": "719:22:31"
          },
          {
            "id": 6502,
            "name": "InvalidRouteB",
            "nameLocation": "753:13:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:2:31"
            },
            "src": "747:22:31"
          },
          {
            "id": 6504,
            "name": "OnlyWETH",
            "nameLocation": "781:8:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:2:31"
            },
            "src": "775:17:31"
          },
          {
            "id": 6506,
            "name": "PoolDoesNotExist",
            "nameLocation": "804:16:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:2:31"
            },
            "src": "798:25:31"
          },
          {
            "id": 6508,
            "name": "PoolFactoryDoesNotExist",
            "nameLocation": "835:23:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:2:31"
            },
            "src": "829:32:31"
          },
          {
            "id": 6510,
            "name": "SameAddresses",
            "nameLocation": "873:13:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:31"
            },
            "src": "867:22:31"
          },
          {
            "id": 6512,
            "name": "ZeroAddress",
            "nameLocation": "901:11:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 6511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:2:31"
            },
            "src": "895:20:31"
          },
          {
            "canonicalName": "IRouter.Zap",
            "id": 6529,
            "members": [
              {
                "constant": false,
                "id": 6514,
                "mutability": "mutable",
                "name": "tokenA",
                "nameLocation": "1576:6:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1568:14:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6513,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1568:7:31",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6516,
                "mutability": "mutable",
                "name": "tokenB",
                "nameLocation": "1601:6:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1593:14:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6515,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1593:7:31",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6518,
                "mutability": "mutable",
                "name": "stable",
                "nameLocation": "1623:6:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1618:11:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6517,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1618:4:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6520,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "1648:7:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1640:15:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6519,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1640:7:31",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6522,
                "mutability": "mutable",
                "name": "amountOutMinA",
                "nameLocation": "1674:13:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1666:21:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6521,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1666:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6524,
                "mutability": "mutable",
                "name": "amountOutMinB",
                "nameLocation": "1706:13:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1698:21:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6523,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1698:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6526,
                "mutability": "mutable",
                "name": "amountAMin",
                "nameLocation": "1738:10:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1730:18:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6525,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1730:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6528,
                "mutability": "mutable",
                "name": "amountBMin",
                "nameLocation": "1767:10:31",
                "nodeType": "VariableDeclaration",
                "scope": 6529,
                "src": "1759:18:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6527,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1759:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Zap",
            "nameLocation": "1553:3:31",
            "nodeType": "StructDefinition",
            "scope": 6996,
            "src": "1546:239:31",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 6530,
              "nodeType": "StructuredDocumentation",
              "src": "1793:316:31",
              "text": "@notice Sort two tokens by which address value is less than the other\n @param tokenA   Address of token to sort\n @param tokenB   Address of token to sort\n @return token0  Lower address value between tokenA and tokenB\n @return token1  Higher address value between tokenA and tokenB"
            },
            "functionSelector": "544caa56",
            "id": 6541,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sortTokens",
            "nameLocation": "2124:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6532,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2143:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6541,
                  "src": "2135:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2135:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6534,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2159:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6541,
                  "src": "2151:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2134:32:31"
            },
            "returnParameters": {
              "id": 6540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6537,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "2198:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6541,
                  "src": "2190:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6539,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "2214:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6541,
                  "src": "2206:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2189:32:31"
            },
            "scope": 6996,
            "src": "2115:107:31",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6542,
              "nodeType": "StructuredDocumentation",
              "src": "2230:539:31",
              "text": "@notice Calculate the address of a pool by its' factory.\n         Used by all Router functions containing a `Route[]` or `_factory` argument.\n         Reverts if _factory is not approved by the FactoryRegistry\n @dev Returns a randomly generated address for a nonexistent pool\n @param tokenA   Address of token to query\n @param tokenB   Address of token to query\n @param stable   True if pool is stable, false if volatile\n @param _factory Address of factory which created the pool"
            },
            "functionSelector": "874029d9",
            "id": 6555,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolFor",
            "nameLocation": "2784:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6544,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2810:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6555,
                  "src": "2802:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6546,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2835:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6555,
                  "src": "2827:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6548,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "2857:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6555,
                  "src": "2852:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6547,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6550,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "2882:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6555,
                  "src": "2874:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:106:31"
            },
            "returnParameters": {
              "id": 6554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6553,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "2929:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6555,
                  "src": "2921:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2920:14:31"
            },
            "scope": 6996,
            "src": "2775:160:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6556,
              "nodeType": "StructuredDocumentation",
              "src": "2943:107:31",
              "text": "@notice Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1"
            },
            "functionSelector": "e4ea9d74",
            "id": 6569,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pairFor",
            "nameLocation": "3065:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6558,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3091:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6569,
                  "src": "3083:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3083:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6560,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3116:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6569,
                  "src": "3108:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6562,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "3138:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6569,
                  "src": "3133:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3133:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6564,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "3163:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6569,
                  "src": "3155:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3072:106:31"
            },
            "returnParameters": {
              "id": 6568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6567,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "3210:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6569,
                  "src": "3202:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:14:31"
            },
            "scope": 6996,
            "src": "3056:160:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6570,
              "nodeType": "StructuredDocumentation",
              "src": "3224:397:31",
              "text": "@notice Fetch and sort the reserves for a pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param _factory     Address of PoolFactory for tokenA and tokenB\n @return reserveA    Amount of reserves of the sorted token A\n @return reserveB    Amount of reserves of the sorted token B"
            },
            "functionSelector": "8c0037dc",
            "id": 6585,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "3636:11:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6572,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3666:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "3658:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3658:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6574,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3691:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "3683:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6576,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "3713:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "3708:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3708:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6578,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "3738:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "3730:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3730:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3647:106:31"
            },
            "returnParameters": {
              "id": 6584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6581,
                  "mutability": "mutable",
                  "name": "reserveA",
                  "nameLocation": "3785:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "3777:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3777:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6583,
                  "mutability": "mutable",
                  "name": "reserveB",
                  "nameLocation": "3803:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "3795:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3795:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3776:36:31"
            },
            "scope": 6996,
            "src": "3627:186:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6586,
              "nodeType": "StructuredDocumentation",
              "src": "3821:76:31",
              "text": "@notice Perform chained getAmountOut calculations on any number of pools"
            },
            "functionSelector": "5509a1ac",
            "id": 6598,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountsOut",
            "nameLocation": "3912:13:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6588,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3934:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6598,
                  "src": "3926:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3926:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6592,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "3959:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6598,
                  "src": "3944:21:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6590,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6589,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "3944:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "3944:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6591,
                    "nodeType": "ArrayTypeName",
                    "src": "3944:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3925:41:31"
            },
            "returnParameters": {
              "id": 6597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6596,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4007:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6598,
                  "src": "3990:24:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6594,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3990:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6595,
                    "nodeType": "ArrayTypeName",
                    "src": "3990:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3989:26:31"
            },
            "scope": 6996,
            "src": "3903:113:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6599,
              "nodeType": "StructuredDocumentation",
              "src": "4058:632:31",
              "text": "@notice Quote the amount deposited into a Pool\n @param tokenA           .\n @param tokenB           .\n @param stable           True if pool is stable, false if volatile\n @param _factory         Address of PoolFactory for tokenA and tokenB\n @param amountADesired   Amount of tokenA desired to deposit\n @param amountBDesired   Amount of tokenB desired to deposit\n @return amountA         Amount of tokenA to actually deposit\n @return amountB         Amount of tokenB to actually deposit\n @return liquidity       Amount of liquidity token returned from deposit"
            },
            "functionSelector": "ce700c29",
            "id": 6620,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteAddLiquidity",
            "nameLocation": "4705:17:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6601,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "4741:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4733:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4733:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6603,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "4766:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4758:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6605,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "4788:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4783:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6604,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6607,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "4813:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4805:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6609,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "4840:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4832:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4832:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6611,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "4873:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4865:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4865:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4722:172:31"
            },
            "returnParameters": {
              "id": 6619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6614,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4926:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4918:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4918:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6616,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4943:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4935:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4935:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6618,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "4960:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6620,
                  "src": "4952:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4917:53:31"
            },
            "scope": 6996,
            "src": "4696:275:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6621,
              "nodeType": "StructuredDocumentation",
              "src": "4979:437:31",
              "text": "@notice Quote the amount of liquidity removed from a Pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param _factory     Address of PoolFactory for tokenA and tokenB\n @param liquidity    Amount of liquidity to remove\n @return amountA     Amount of tokenA received\n @return amountB     Amount of tokenB received"
            },
            "functionSelector": "c92de3ec",
            "id": 6638,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteRemoveLiquidity",
            "nameLocation": "5431:20:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6623,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5470:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "5462:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6625,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5495:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "5487:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6627,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "5517:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "5512:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6626,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5512:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6629,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "5542:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "5534:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6631,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "5569:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "5561:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5561:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5451:134:31"
            },
            "returnParameters": {
              "id": 6637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6634,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "5617:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "5609:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5609:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6636,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "5634:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6638,
                  "src": "5626:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5626:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5608:34:31"
            },
            "scope": 6996,
            "src": "5422:221:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6639,
              "nodeType": "StructuredDocumentation",
              "src": "5651:816:31",
              "text": "@notice Add liquidity of two tokens to a Pool\n @param tokenA           .\n @param tokenB           .\n @param stable           True if pool is stable, false if volatile\n @param amountADesired   Amount of tokenA desired to deposit\n @param amountBDesired   Amount of tokenB desired to deposit\n @param amountAMin       Minimum amount of tokenA to deposit\n @param amountBMin       Minimum amount of tokenB to deposit\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountA         Amount of tokenA to actually deposit\n @return amountB         Amount of tokenB to actually deposit\n @return liquidity       Amount of liquidity token returned from deposit"
            },
            "functionSelector": "5a47ddc3",
            "id": 6666,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "6482:12:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6641,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "6513:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6505:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6505:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6643,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "6538:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6530:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6530:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6645,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "6560:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6555:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6644,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6555:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6647,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "6585:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6577:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6649,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "6618:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6610:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6610:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6651,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "6651:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6643:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6643:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6653,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "6680:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6672:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6672:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6655,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6709:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6701:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6657,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "6730:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6722:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6722:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6494:251:31"
            },
            "returnParameters": {
              "id": 6665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6660,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "6772:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6764:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6764:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6662,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "6789:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6781:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6781:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6664,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "6806:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6666,
                  "src": "6798:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6798:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6763:53:31"
            },
            "scope": 6996,
            "src": "6473:344:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6667,
              "nodeType": "StructuredDocumentation",
              "src": "6825:771:31",
              "text": "@notice Add liquidity of a token and WETH (transferred as ETH) to a Pool\n @param token                .\n @param stable               True if pool is stable, false if volatile\n @param amountTokenDesired   Amount of token desired to deposit\n @param amountTokenMin       Minimum amount of token to deposit\n @param amountETHMin         Minimum amount of ETH to deposit\n @param to                   Recipient of liquidity token\n @param deadline             Deadline to add liquidity\n @return amountToken         Amount of token to actually deposit\n @return amountETH           Amount of tokenETH to actually deposit\n @return liquidity           Amount of liquidity token returned from deposit"
            },
            "functionSelector": "b7e0d4c0",
            "id": 6690,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityETH",
            "nameLocation": "7611:15:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6669,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7645:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7637:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7637:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6671,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "7666:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7661:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6670,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7661:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6673,
                  "mutability": "mutable",
                  "name": "amountTokenDesired",
                  "nameLocation": "7691:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7683:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7683:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6675,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "7728:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7720:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7720:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6677,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "7761:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7753:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7753:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6679,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7792:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7784:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7784:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6681,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7813:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7805:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7805:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7626:202:31"
            },
            "returnParameters": {
              "id": 6689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6684,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "7863:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7855:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7855:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6686,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "7884:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7876:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7876:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6688,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "7903:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "7895:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7895:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7854:59:31"
            },
            "scope": 6996,
            "src": "7602:312:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6691,
              "nodeType": "StructuredDocumentation",
              "src": "7959:602:31",
              "text": "@notice Remove liquidity of two tokens from a Pool\n @param tokenA       .\n @param tokenB       .\n @param stable       True if pool is stable, false if volatile\n @param liquidity    Amount of liquidity to remove\n @param amountAMin   Minimum amount of tokenA to receive\n @param amountBMin   Minimum amount of tokenB to receive\n @param to           Recipient of tokens received\n @param deadline     Deadline to remove liquidity\n @return amountA     Amount of tokenA received\n @return amountB     Amount of tokenB received"
            },
            "functionSelector": "0dede6c4",
            "id": 6714,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "8576:15:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6693,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "8610:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8602:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8602:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6695,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "8635:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8627:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8627:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6697,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "8657:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8652:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6696,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8652:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6699,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "8682:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8674:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8674:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6701,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "8710:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8702:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8702:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6703,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "8739:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8731:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8731:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6705,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8768:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8760:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8760:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6707,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "8789:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8781:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8781:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8591:213:31"
            },
            "returnParameters": {
              "id": 6713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6710,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "8831:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8823:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8823:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6712,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "8848:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6714,
                  "src": "8840:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8840:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8822:34:31"
            },
            "scope": 6996,
            "src": "8567:290:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6715,
              "nodeType": "StructuredDocumentation",
              "src": "8865:624:31",
              "text": "@notice Remove liquidity of a token and WETH (returned as ETH) from a Pool\n @param token            .\n @param stable           True if pool is stable, false if volatile\n @param liquidity        Amount of liquidity to remove\n @param amountTokenMin   Minimum amount of token to receive\n @param amountETHMin     Minimum amount of ETH to receive\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountToken     Amount of token received\n @return amountETH       Amount of ETH received"
            },
            "functionSelector": "d7b0e0a5",
            "id": 6736,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETH",
            "nameLocation": "9504:18:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6717,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9541:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9533:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9533:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6719,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "9562:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9557:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9557:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6721,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "9587:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9579:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9579:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6723,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "9615:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9607:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9607:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6725,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "9648:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9640:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9640:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6727,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9679:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9671:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9671:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6729,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "9700:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9692:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9692:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9522:193:31"
            },
            "returnParameters": {
              "id": 6735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6732,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "9742:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9734:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9734:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6734,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "9763:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6736,
                  "src": "9755:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9755:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9733:40:31"
            },
            "scope": 6996,
            "src": "9495:279:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6737,
              "nodeType": "StructuredDocumentation",
              "src": "9782:582:31",
              "text": "@notice Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\n @param token            .\n @param stable           True if pool is stable, false if volatile\n @param liquidity        Amount of liquidity to remove\n @param amountTokenMin   Minimum amount of token to receive\n @param amountETHMin     Minimum amount of ETH to receive\n @param to               Recipient of liquidity token\n @param deadline         Deadline to receive liquidity\n @return amountETH       Amount of ETH received"
            },
            "functionSelector": "fe411f14",
            "id": 6756,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
            "nameLocation": "10379:47:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6739,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10445:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10437:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10437:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6741,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "10466:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10461:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10461:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6743,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "10491:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10483:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10483:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6745,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "10519:14:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10511:22:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10511:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6747,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "10552:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10544:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10544:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6749,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10583:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10575:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10575:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6751,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "10604:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10596:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10596:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10426:193:31"
            },
            "returnParameters": {
              "id": 6755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6754,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "10646:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6756,
                  "src": "10638:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10638:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10637:19:31"
            },
            "scope": 6996,
            "src": "10370:287:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6757,
              "nodeType": "StructuredDocumentation",
              "src": "10690:407:31",
              "text": "@notice Swap one token for another\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "cac88ea9",
            "id": 6775,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nameLocation": "11112:24:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6759,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "11155:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6775,
                  "src": "11147:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11147:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6761,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "11182:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6775,
                  "src": "11174:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11174:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6765,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "11222:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6775,
                  "src": "11205:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6763,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6762,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "11205:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "11205:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6764,
                    "nodeType": "ArrayTypeName",
                    "src": "11205:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6767,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11247:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6775,
                  "src": "11239:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11239:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6769,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "11268:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6775,
                  "src": "11260:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11260:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11136:147:31"
            },
            "returnParameters": {
              "id": 6774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6773,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11319:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6775,
                  "src": "11302:24:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6771,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11302:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6772,
                    "nodeType": "ArrayTypeName",
                    "src": "11302:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11301:26:31"
            },
            "scope": 6996,
            "src": "11103:225:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6776,
              "nodeType": "StructuredDocumentation",
              "src": "11336:353:31",
              "text": "@notice Swap ETH for a token\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "903638a4",
            "id": 6792,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokens",
            "nameLocation": "11704:21:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6778,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "11744:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6792,
                  "src": "11736:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11736:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6782,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "11784:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6792,
                  "src": "11767:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6780,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6779,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "11767:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "11767:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6781,
                    "nodeType": "ArrayTypeName",
                    "src": "11767:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6784,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11809:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6792,
                  "src": "11801:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11801:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6786,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "11830:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6792,
                  "src": "11822:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11822:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11725:120:31"
            },
            "returnParameters": {
              "id": 6791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6790,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11889:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6792,
                  "src": "11872:24:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6788,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11872:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6789,
                    "nodeType": "ArrayTypeName",
                    "src": "11872:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11871:26:31"
            },
            "scope": 6996,
            "src": "11695:203:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6793,
              "nodeType": "StructuredDocumentation",
              "src": "11906:409:31",
              "text": "@notice Swap a token for WETH (returned as ETH)\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired ETH\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens\n @return amounts     Array of amounts returned per route"
            },
            "functionSelector": "c6b7f1b6",
            "id": 6811,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETH",
            "nameLocation": "12330:21:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6795,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "12370:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6811,
                  "src": "12362:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12362:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6797,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "12397:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6811,
                  "src": "12389:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12389:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6801,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "12437:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6811,
                  "src": "12420:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6799,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6798,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "12420:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "12420:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6800,
                    "nodeType": "ArrayTypeName",
                    "src": "12420:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6803,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12462:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6811,
                  "src": "12454:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12454:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6805,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "12483:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6811,
                  "src": "12475:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12475:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12351:147:31"
            },
            "returnParameters": {
              "id": 6810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6809,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12534:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6811,
                  "src": "12517:24:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6807,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12517:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6808,
                    "nodeType": "ArrayTypeName",
                    "src": "12517:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12516:26:31"
            },
            "scope": 6996,
            "src": "12321:222:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6812,
              "nodeType": "StructuredDocumentation",
              "src": "12551:317:31",
              "text": "@notice Swap one token for another without slippage protection\n @return amounts     Array of amounts to swap  per route\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "4111d597",
            "id": 6829,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "UNSAFE_swapExactTokensForTokens",
            "nameLocation": "12883:31:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6815,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "12942:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6829,
                  "src": "12925:24:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6813,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12925:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6814,
                    "nodeType": "ArrayTypeName",
                    "src": "12925:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6819,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "12977:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6829,
                  "src": "12960:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6817,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6816,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "12960:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "12960:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6818,
                    "nodeType": "ArrayTypeName",
                    "src": "12960:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6821,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13002:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6829,
                  "src": "12994:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12994:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6823,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "13023:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6829,
                  "src": "13015:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13015:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12914:124:31"
            },
            "returnParameters": {
              "id": 6828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6827,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6829,
                  "src": "13057:16:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6825,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13057:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6826,
                    "nodeType": "ArrayTypeName",
                    "src": "13057:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13056:18:31"
            },
            "scope": 6996,
            "src": "12874:201:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6830,
              "nodeType": "StructuredDocumentation",
              "src": "13144:376:31",
              "text": "@notice Swap one token for another supporting fee-on-transfer tokens\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "88cd821e",
            "id": 6845,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "13535:53:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6832,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "13607:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6845,
                  "src": "13599:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13599:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6834,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "13634:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6845,
                  "src": "13626:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13626:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6838,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "13674:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6845,
                  "src": "13657:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6836,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6835,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "13657:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "13657:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6837,
                    "nodeType": "ArrayTypeName",
                    "src": "13657:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6840,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13699:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6845,
                  "src": "13691:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13691:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6842,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "13720:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6845,
                  "src": "13712:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13712:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13588:147:31"
            },
            "returnParameters": {
              "id": 6844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13744:0:31"
            },
            "scope": 6996,
            "src": "13526:219:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6846,
              "nodeType": "StructuredDocumentation",
              "src": "13753:322:31",
              "text": "@notice Swap ETH for a token supporting fee-on-transfer tokens\n @param amountOutMin Minimum amount of desired token received\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "3da5acba",
            "id": 6859,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "14090:50:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6848,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "14159:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6859,
                  "src": "14151:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14151:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6852,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "14199:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6859,
                  "src": "14182:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6850,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6849,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "14182:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "14182:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6851,
                    "nodeType": "ArrayTypeName",
                    "src": "14182:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6854,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14224:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6859,
                  "src": "14216:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14216:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6856,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14245:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6859,
                  "src": "14237:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14237:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14140:120:31"
            },
            "returnParameters": {
              "id": 6858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14277:0:31"
            },
            "scope": 6996,
            "src": "14081:197:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6860,
              "nodeType": "StructuredDocumentation",
              "src": "14286:378:31",
              "text": "@notice Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\n @param amountIn     Amount of token in\n @param amountOutMin Minimum amount of desired ETH\n @param routes       Array of trade routes used in the swap\n @param to           Recipient of the tokens received\n @param deadline     Deadline to receive tokens"
            },
            "functionSelector": "12bc3aca",
            "id": 6875,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
            "nameLocation": "14679:50:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6862,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "14748:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6875,
                  "src": "14740:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14740:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6864,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "14775:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6875,
                  "src": "14767:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14767:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6868,
                  "mutability": "mutable",
                  "name": "routes",
                  "nameLocation": "14815:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6875,
                  "src": "14798:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6866,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6865,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "14798:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "14798:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6867,
                    "nodeType": "ArrayTypeName",
                    "src": "14798:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6870,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14840:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6875,
                  "src": "14832:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14832:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6872,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14861:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6875,
                  "src": "14853:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14853:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14729:147:31"
            },
            "returnParameters": {
              "id": 6874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14885:0:31"
            },
            "scope": 6996,
            "src": "14670:216:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6876,
              "nodeType": "StructuredDocumentation",
              "src": "14894:1042:31",
              "text": "@notice Zap a token A into a pool (B, C). (A can be equal to B or C).\n         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n         Slippage is required for the initial swap.\n         Additional slippage may be required when adding liquidity as the\n         price of the token may have changed.\n @param tokenIn      Token you are zapping in from (i.e. input token).\n @param amountInA    Amount of input token you wish to send down routesA\n @param amountInB    Amount of input token you wish to send down routesB\n @param zapInPool    Contains zap struct information. See Zap struct.\n @param routesA      Route used to convert input token to tokenA\n @param routesB      Route used to convert input token to tokenB\n @param to           Address you wish to mint liquidity to.\n @param stake        Auto-stake liquidity in corresponding gauge.\n @return liquidity   Amount of LP tokens created from zapping in."
            },
            "functionSelector": "fb49bafd",
            "id": 6902,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "zapIn",
            "nameLocation": "15951:5:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6878,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "15975:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "15967:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15967:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6880,
                  "mutability": "mutable",
                  "name": "amountInA",
                  "nameLocation": "16001:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "15993:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15993:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6882,
                  "mutability": "mutable",
                  "name": "amountInB",
                  "nameLocation": "16029:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "16021:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16021:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6885,
                  "mutability": "mutable",
                  "name": "zapInPool",
                  "nameLocation": "16062:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "16049:22:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zap_$6529_calldata_ptr",
                    "typeString": "struct IRouter.Zap"
                  },
                  "typeName": {
                    "id": 6884,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6883,
                      "name": "Zap",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6529,
                      "src": "16049:3:31"
                    },
                    "referencedDeclaration": 6529,
                    "src": "16049:3:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zap_$6529_storage_ptr",
                      "typeString": "struct IRouter.Zap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6889,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "16099:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "16082:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6887,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6886,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "16082:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "16082:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6888,
                    "nodeType": "ArrayTypeName",
                    "src": "16082:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6893,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "16134:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "16117:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6891,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6890,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "16117:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "16117:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6892,
                    "nodeType": "ArrayTypeName",
                    "src": "16117:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6895,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16160:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "16152:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16152:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6897,
                  "mutability": "mutable",
                  "name": "stake",
                  "nameLocation": "16178:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "16173:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6896,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16173:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15956:234:31"
            },
            "returnParameters": {
              "id": 6901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6900,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "16225:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6902,
                  "src": "16217:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16217:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16216:19:31"
            },
            "scope": 6996,
            "src": "15942:294:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6903,
              "nodeType": "StructuredDocumentation",
              "src": "16244:707:31",
              "text": "@notice Zap out a pool (B, C) into A.\n         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).\n         Slippage is required for the removal of liquidity.\n         Additional slippage may be required on the swap as the\n         price of the token may have changed.\n @param tokenOut     Token you are zapping out to (i.e. output token).\n @param liquidity    Amount of liquidity you wish to remove.\n @param zapOutPool   Contains zap struct information. See Zap struct.\n @param routesA      Route used to convert tokenA into output token.\n @param routesB      Route used to convert tokenB into output token."
            },
            "functionSelector": "a81b9159",
            "id": 6921,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "zapOut",
            "nameLocation": "16966:6:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6905,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "16991:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "16983:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16983:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6907,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "17018:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "17010:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17010:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6910,
                  "mutability": "mutable",
                  "name": "zapOutPool",
                  "nameLocation": "17051:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "17038:23:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Zap_$6529_calldata_ptr",
                    "typeString": "struct IRouter.Zap"
                  },
                  "typeName": {
                    "id": 6909,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6908,
                      "name": "Zap",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6529,
                      "src": "17038:3:31"
                    },
                    "referencedDeclaration": 6529,
                    "src": "17038:3:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zap_$6529_storage_ptr",
                      "typeString": "struct IRouter.Zap"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6914,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "17089:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "17072:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6912,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6911,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "17072:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "17072:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6913,
                    "nodeType": "ArrayTypeName",
                    "src": "17072:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6918,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "17124:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "17107:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6916,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6915,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "17107:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "17107:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6917,
                    "nodeType": "ArrayTypeName",
                    "src": "17107:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16972:166:31"
            },
            "returnParameters": {
              "id": 6920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17147:0:31"
            },
            "scope": 6996,
            "src": "16957:191:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6922,
              "nodeType": "StructuredDocumentation",
              "src": "17156:1130:31",
              "text": "@notice Used to generate params required for zapping in.\n         Zap in => remove liquidity then swap.\n         Apply slippage to expected swap values to account for changes in reserves in between.\n @dev Output token refers to the token you want to zap in from.\n @param tokenA           .\n @param tokenB           .\n @param stable           .\n @param _factory         .\n @param amountInA        Amount of input token you wish to send down routesA\n @param amountInB        Amount of input token you wish to send down routesB\n @param routesA          Route used to convert input token to tokenA\n @param routesB          Route used to convert input token to tokenB\n @return amountOutMinA   Minimum output expected from swapping input token to tokenA.\n @return amountOutMinB   Minimum output expected from swapping input token to tokenB.\n @return amountAMin      Minimum amount of tokenA expected from depositing liquidity.\n @return amountBMin      Minimum amount of tokenB expected from depositing liquidity."
            },
            "functionSelector": "07db50fa",
            "id": 6953,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "generateZapInParams",
            "nameLocation": "18301:19:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6924,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "18339:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18331:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18331:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6926,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "18364:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18356:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18356:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6928,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "18386:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18381:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6927,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18381:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6930,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "18411:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18403:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18403:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6932,
                  "mutability": "mutable",
                  "name": "amountInA",
                  "nameLocation": "18438:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18430:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18430:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6934,
                  "mutability": "mutable",
                  "name": "amountInB",
                  "nameLocation": "18466:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18458:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18458:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6938,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "18503:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18486:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6936,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6935,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "18486:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "18486:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6937,
                    "nodeType": "ArrayTypeName",
                    "src": "18486:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6942,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "18538:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18521:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6940,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6939,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "18521:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "18521:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6941,
                    "nodeType": "ArrayTypeName",
                    "src": "18521:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18320:232:31"
            },
            "returnParameters": {
              "id": 6952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6945,
                  "mutability": "mutable",
                  "name": "amountOutMinA",
                  "nameLocation": "18584:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18576:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18576:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6947,
                  "mutability": "mutable",
                  "name": "amountOutMinB",
                  "nameLocation": "18607:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18599:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18599:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6949,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "18630:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18622:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18622:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6951,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "18650:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6953,
                  "src": "18642:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18642:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18575:86:31"
            },
            "scope": 6996,
            "src": "18292:370:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6954,
              "nodeType": "StructuredDocumentation",
              "src": "18670:1079:31",
              "text": "@notice Used to generate params required for zapping out.\n         Zap out => swap then add liquidity.\n         Apply slippage to expected liquidity values to account for changes in reserves in between.\n @dev Output token refers to the token you want to zap out of.\n @param tokenA           .\n @param tokenB           .\n @param stable           .\n @param _factory         .\n @param liquidity        Amount of liquidity being zapped out of into a given output token.\n @param routesA          Route used to convert tokenA into output token.\n @param routesB          Route used to convert tokenB into output token.\n @return amountOutMinA   Minimum output expected from swapping tokenA into output token.\n @return amountOutMinB   Minimum output expected from swapping tokenB into output token.\n @return amountAMin      Minimum amount of tokenA expected from withdrawing liquidity.\n @return amountBMin      Minimum amount of tokenB expected from withdrawing liquidity."
            },
            "functionSelector": "7539d413",
            "id": 6983,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "generateZapOutParams",
            "nameLocation": "19764:20:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6956,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "19803:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "19795:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19795:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6958,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "19828:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "19820:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19820:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6960,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "19850:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "19845:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19845:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6962,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "19875:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "19867:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19867:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6964,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "19902:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "19894:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19894:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6968,
                  "mutability": "mutable",
                  "name": "routesA",
                  "nameLocation": "19939:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "19922:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6966,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6965,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "19922:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "19922:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6967,
                    "nodeType": "ArrayTypeName",
                    "src": "19922:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6972,
                  "mutability": "mutable",
                  "name": "routesB",
                  "nameLocation": "19974:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "19957:24:31",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Route_$6470_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IRouter.Route[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6970,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 6969,
                        "name": "Route",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 6470,
                        "src": "19957:5:31"
                      },
                      "referencedDeclaration": 6470,
                      "src": "19957:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Route_$6470_storage_ptr",
                        "typeString": "struct IRouter.Route"
                      }
                    },
                    "id": 6971,
                    "nodeType": "ArrayTypeName",
                    "src": "19957:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Route_$6470_storage_$dyn_storage_ptr",
                      "typeString": "struct IRouter.Route[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19784:204:31"
            },
            "returnParameters": {
              "id": 6982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6975,
                  "mutability": "mutable",
                  "name": "amountOutMinA",
                  "nameLocation": "20020:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "20012:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20012:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6977,
                  "mutability": "mutable",
                  "name": "amountOutMinB",
                  "nameLocation": "20043:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "20035:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20035:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6979,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "20066:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "20058:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20058:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6981,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "20086:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6983,
                  "src": "20078:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20078:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20011:86:31"
            },
            "scope": 6996,
            "src": "19755:343:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6984,
              "nodeType": "StructuredDocumentation",
              "src": "20106:601:31",
              "text": "@notice Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\n @dev Returns stable liquidity ratio of B to (A + B).\n      E.g. if ratio is 0.4, it means there is more of A than there is of B.\n      Therefore you should deposit more of token A than B.\n @param tokenA   tokenA of stable pool you are zapping into.\n @param tokenB   tokenB of stable pool you are zapping into.\n @param factory  Factory that created stable pool.\n @return ratio   Ratio of token0 to token1 required to deposit into zap."
            },
            "functionSelector": "f5ba53c7",
            "id": 6995,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteStableLiquidityRatio",
            "nameLocation": "20722:25:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6986,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "20766:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6995,
                  "src": "20758:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20758:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6988,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "20791:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6995,
                  "src": "20783:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20783:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6990,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "20816:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6995,
                  "src": "20808:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20808:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20747:83:31"
            },
            "returnParameters": {
              "id": 6994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6993,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "20862:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 6995,
                  "src": "20854:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20854:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20853:15:31"
            },
            "scope": 6996,
            "src": "20713:156:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6997,
        "src": "60:20812:31",
        "usedErrors": [
          6472,
          6474,
          6476,
          6478,
          6480,
          6482,
          6484,
          6486,
          6488,
          6490,
          6492,
          6494,
          6496,
          6498,
          6500,
          6502,
          6504,
          6506,
          6508,
          6510,
          6512
        ]
      }
    ],
    "src": "33:20839:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-07-07T11:55:01.220Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)": {
        "params": {
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "_0": "amounts     Array of amounts to swap  per route"
        }
      },
      "addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountADesired": "Amount of tokenA desired to deposit",
          "amountAMin": "Minimum amount of tokenA to deposit",
          "amountBDesired": "Amount of tokenB desired to deposit",
          "amountBMin": "Minimum amount of tokenB to deposit",
          "deadline": "Deadline to receive liquidity",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "        Amount of tokenA to actually deposit",
          "amountB": "        Amount of tokenB to actually deposit",
          "liquidity": "      Amount of liquidity token returned from deposit"
        }
      },
      "addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountETHMin": "Minimum amount of ETH to deposit",
          "amountTokenDesired": "Amount of token desired to deposit",
          "amountTokenMin": "Minimum amount of token to deposit",
          "deadline": "Deadline to add liquidity",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "          Amount of tokenETH to actually deposit",
          "amountToken": "        Amount of token to actually deposit",
          "liquidity": "          Amount of liquidity token returned from deposit"
        }
      },
      "generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "details": "Output token refers to the token you want to zap in from.",
        "params": {
          "_factory": ".",
          "amountInA": "Amount of input token you wish to send down routesA",
          "amountInB": "Amount of input token you wish to send down routesB",
          "routesA": "Route used to convert input token to tokenA",
          "routesB": "Route used to convert input token to tokenB",
          "stable": ".",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountAMin": "     Minimum amount of tokenA expected from depositing liquidity.",
          "amountBMin": "     Minimum amount of tokenB expected from depositing liquidity.",
          "amountOutMinA": "  Minimum output expected from swapping input token to tokenA.",
          "amountOutMinB": "  Minimum output expected from swapping input token to tokenB."
        }
      },
      "generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "details": "Output token refers to the token you want to zap out of.",
        "params": {
          "_factory": ".",
          "liquidity": "Amount of liquidity being zapped out of into a given output token.",
          "routesA": "Route used to convert tokenA into output token.",
          "routesB": "Route used to convert tokenB into output token.",
          "stable": ".",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountAMin": "     Minimum amount of tokenA expected from withdrawing liquidity.",
          "amountBMin": "     Minimum amount of tokenB expected from withdrawing liquidity.",
          "amountOutMinA": "  Minimum output expected from swapping tokenA into output token.",
          "amountOutMinB": "  Minimum output expected from swapping tokenB into output token."
        }
      },
      "getReserves(address,address,bool,address)": {
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "reserveA": "   Amount of reserves of the sorted token A",
          "reserveB": "   Amount of reserves of the sorted token B"
        }
      },
      "poolFor(address,address,bool,address)": {
        "details": "Returns a randomly generated address for a nonexistent pool",
        "params": {
          "_factory": "Address of factory which created the pool",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": "Address of token to query",
          "tokenB": "Address of token to query"
        }
      },
      "quoteAddLiquidity(address,address,bool,address,uint256,uint256)": {
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "amountADesired": "Amount of tokenA desired to deposit",
          "amountBDesired": "Amount of tokenB desired to deposit",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "        Amount of tokenA to actually deposit",
          "amountB": "        Amount of tokenB to actually deposit",
          "liquidity": "      Amount of liquidity token returned from deposit"
        }
      },
      "quoteRemoveLiquidity(address,address,bool,address,uint256)": {
        "params": {
          "_factory": "Address of PoolFactory for tokenA and tokenB",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "    Amount of tokenA received",
          "amountB": "    Amount of tokenB received"
        }
      },
      "quoteStableLiquidityRatio(address,address,address)": {
        "details": "Returns stable liquidity ratio of B to (A + B).      E.g. if ratio is 0.4, it means there is more of A than there is of B.      Therefore you should deposit more of token A than B.",
        "params": {
          "factory": "Factory that created stable pool.",
          "tokenA": "tokenA of stable pool you are zapping into.",
          "tokenB": "tokenB of stable pool you are zapping into."
        },
        "returns": {
          "ratio": "  Ratio of token0 to token1 required to deposit into zap."
        }
      },
      "removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountAMin": "Minimum amount of tokenA to receive",
          "amountBMin": "Minimum amount of tokenB to receive",
          "deadline": "Deadline to remove liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of tokens received",
          "tokenA": ".",
          "tokenB": "."
        },
        "returns": {
          "amountA": "    Amount of tokenA received",
          "amountB": "    Amount of tokenB received"
        }
      },
      "removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountETHMin": "Minimum amount of ETH to receive",
          "amountTokenMin": "Minimum amount of token to receive",
          "deadline": "Deadline to receive liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "      Amount of ETH received",
          "amountToken": "    Amount of token received"
        }
      },
      "removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountETHMin": "Minimum amount of ETH to receive",
          "amountTokenMin": "Minimum amount of token to receive",
          "deadline": "Deadline to receive liquidity",
          "liquidity": "Amount of liquidity to remove",
          "stable": "True if pool is stable, false if volatile",
          "to": "Recipient of liquidity token",
          "token": "."
        },
        "returns": {
          "amountETH": "      Amount of ETH received"
        }
      },
      "sortTokens(address,address)": {
        "params": {
          "tokenA": "Address of token to sort",
          "tokenB": "Address of token to sort"
        },
        "returns": {
          "token0": " Lower address value between tokenA and tokenB",
          "token1": " Higher address value between tokenA and tokenB"
        }
      },
      "swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired ETH",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired ETH",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        },
        "returns": {
          "amounts": "    Array of amounts returned per route"
        }
      },
      "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "params": {
          "amountIn": "Amount of token in",
          "amountOutMin": "Minimum amount of desired token received",
          "deadline": "Deadline to receive tokens",
          "routes": "Array of trade routes used in the swap",
          "to": "Recipient of the tokens received"
        }
      },
      "zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)": {
        "params": {
          "amountInA": "Amount of input token you wish to send down routesA",
          "amountInB": "Amount of input token you wish to send down routesB",
          "routesA": "Route used to convert input token to tokenA",
          "routesB": "Route used to convert input token to tokenB",
          "stake": "Auto-stake liquidity in corresponding gauge.",
          "to": "Address you wish to mint liquidity to.",
          "tokenIn": "Token you are zapping in from (i.e. input token).",
          "zapInPool": "Contains zap struct information. See Zap struct."
        },
        "returns": {
          "liquidity": "  Amount of LP tokens created from zapping in."
        }
      },
      "zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])": {
        "params": {
          "liquidity": "Amount of liquidity you wish to remove.",
          "routesA": "Route used to convert tokenA into output token.",
          "routesB": "Route used to convert tokenB into output token.",
          "tokenOut": "Token you are zapping out to (i.e. output token).",
          "zapOutPool": "Contains zap struct information. See Zap struct."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another without slippage protection"
      },
      "addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)": {
        "notice": "Add liquidity of two tokens to a Pool"
      },
      "addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Add liquidity of a token and WETH (transferred as ETH) to a Pool"
      },
      "generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "notice": "Used to generate params required for zapping in.         Zap in => remove liquidity then swap.         Apply slippage to expected swap values to account for changes in reserves in between."
      },
      "generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])": {
        "notice": "Used to generate params required for zapping out.         Zap out => swap then add liquidity.         Apply slippage to expected liquidity values to account for changes in reserves in between."
      },
      "getAmountsOut(uint256,(address,address,bool,address)[])": {
        "notice": "Perform chained getAmountOut calculations on any number of pools"
      },
      "getReserves(address,address,bool,address)": {
        "notice": "Fetch and sort the reserves for a pool"
      },
      "pairFor(address,address,bool,address)": {
        "notice": "Wraps around poolFor(tokenA,tokenB,stable,_factory) for backwards compatibility to Velodrome v1"
      },
      "poolFor(address,address,bool,address)": {
        "notice": "Calculate the address of a pool by its' factory.         Used by all Router functions containing a `Route[]` or `_factory` argument.         Reverts if _factory is not approved by the FactoryRegistry"
      },
      "quoteAddLiquidity(address,address,bool,address,uint256,uint256)": {
        "notice": "Quote the amount deposited into a Pool"
      },
      "quoteRemoveLiquidity(address,address,bool,address,uint256)": {
        "notice": "Quote the amount of liquidity removed from a Pool"
      },
      "quoteStableLiquidityRatio(address,address,address)": {
        "notice": "Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool."
      },
      "removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of two tokens from a Pool"
      },
      "removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of a token and WETH (returned as ETH) from a Pool"
      },
      "removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)": {
        "notice": "Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool"
      },
      "sortTokens(address,address)": {
        "notice": "Sort two tokens by which address value is less than the other"
      },
      "swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap ETH for a token"
      },
      "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap ETH for a token supporting fee-on-transfer tokens"
      },
      "swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap a token for WETH (returned as ETH)"
      },
      "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens"
      },
      "swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another"
      },
      "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)": {
        "notice": "Swap one token for another supporting fee-on-transfer tokens"
      },
      "zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)": {
        "notice": "Zap a token A into a pool (B, C). (A can be equal to B or C).         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the initial swap.         Additional slippage may be required when adding liquidity as the         price of the token may have changed."
      },
      "zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])": {
        "notice": "Zap out a pool (B, C) into A.         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the removal of liquidity.         Additional slippage may be required on the swap as the         price of the token may have changed."
      }
    },
    "version": 1
  }
}