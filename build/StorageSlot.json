{
  "contractName": "StorageSlot",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9\",\"dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe\"]}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc4e3a78b288cc9287d874161af64b75051bc129aa95a2abfb86ea2cba9527ce64736f6c634300080a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc4e3a78b288cc9287d874161af64b75051bc129aa95a2abfb86ea2cba9527ce64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "1264:1219:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1264:1219:25;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1264:1219:25:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n",
  "sourcePath": "@openzeppelin\\contracts\\utils\\StorageSlot.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
    "exportedSymbols": {
      "StorageSlot": [
        3552
      ]
    },
    "id": 3553,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3494,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:23:25"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "StorageSlot",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 3495,
          "nodeType": "StructuredDocumentation",
          "src": "115:1148:25",
          "text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
        },
        "fullyImplemented": true,
        "id": 3552,
        "linearizedBaseContracts": [
          3552
        ],
        "name": "StorageSlot",
        "nameLocation": "1272:11:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "StorageSlot.AddressSlot",
            "id": 3498,
            "members": [
              {
                "constant": false,
                "id": 3497,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1327:5:25",
                "nodeType": "VariableDeclaration",
                "scope": 3498,
                "src": "1319:13:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3496,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1319:7:25",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AddressSlot",
            "nameLocation": "1297:11:25",
            "nodeType": "StructDefinition",
            "scope": 3552,
            "src": "1290:49:25",
            "visibility": "public"
          },
          {
            "canonicalName": "StorageSlot.BooleanSlot",
            "id": 3501,
            "members": [
              {
                "constant": false,
                "id": 3500,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1379:5:25",
                "nodeType": "VariableDeclaration",
                "scope": 3501,
                "src": "1374:10:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3499,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1374:4:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BooleanSlot",
            "nameLocation": "1352:11:25",
            "nodeType": "StructDefinition",
            "scope": 3552,
            "src": "1345:46:25",
            "visibility": "public"
          },
          {
            "canonicalName": "StorageSlot.Bytes32Slot",
            "id": 3504,
            "members": [
              {
                "constant": false,
                "id": 3503,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1434:5:25",
                "nodeType": "VariableDeclaration",
                "scope": 3504,
                "src": "1426:13:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 3502,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1426:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Bytes32Slot",
            "nameLocation": "1404:11:25",
            "nodeType": "StructDefinition",
            "scope": 3552,
            "src": "1397:49:25",
            "visibility": "public"
          },
          {
            "canonicalName": "StorageSlot.Uint256Slot",
            "id": 3507,
            "members": [
              {
                "constant": false,
                "id": 3506,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1489:5:25",
                "nodeType": "VariableDeclaration",
                "scope": 3507,
                "src": "1481:13:25",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3505,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1481:7:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Uint256Slot",
            "nameLocation": "1459:11:25",
            "nodeType": "StructDefinition",
            "scope": 3552,
            "src": "1452:49:25",
            "visibility": "public"
          },
          {
            "body": {
              "id": 3517,
              "nodeType": "Block",
              "src": "1683:63:25",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1702:38:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1716:14:25",
                        "value": {
                          "name": "slot",
                          "nodeType": "YulIdentifier",
                          "src": "1726:4:25"
                        },
                        "variableNames": [
                          {
                            "name": "r.slot",
                            "nodeType": "YulIdentifier",
                            "src": "1716:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 3514,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1716:6:25",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3510,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1726:4:25",
                      "valueSize": 1
                    }
                  ],
                  "id": 3516,
                  "nodeType": "InlineAssembly",
                  "src": "1693:47:25"
                }
              ]
            },
            "documentation": {
              "id": 3508,
              "nodeType": "StructuredDocumentation",
              "src": "1507:87:25",
              "text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
            },
            "id": 3518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddressSlot",
            "nameLocation": "1608:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "1631:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3518,
                  "src": "1623:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3509,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1622:14:25"
            },
            "returnParameters": {
              "id": 3515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3514,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1680:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3518,
                  "src": "1660:21:25",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AddressSlot_$3498_storage_ptr",
                    "typeString": "struct StorageSlot.AddressSlot"
                  },
                  "typeName": {
                    "id": 3513,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3512,
                      "name": "AddressSlot",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3498,
                      "src": "1660:11:25"
                    },
                    "referencedDeclaration": 3498,
                    "src": "1660:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddressSlot_$3498_storage_ptr",
                      "typeString": "struct StorageSlot.AddressSlot"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1659:23:25"
            },
            "scope": 3552,
            "src": "1599:147:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3528,
              "nodeType": "Block",
              "src": "1928:63:25",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1947:38:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1961:14:25",
                        "value": {
                          "name": "slot",
                          "nodeType": "YulIdentifier",
                          "src": "1971:4:25"
                        },
                        "variableNames": [
                          {
                            "name": "r.slot",
                            "nodeType": "YulIdentifier",
                            "src": "1961:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 3525,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1961:6:25",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3521,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1971:4:25",
                      "valueSize": 1
                    }
                  ],
                  "id": 3527,
                  "nodeType": "InlineAssembly",
                  "src": "1938:47:25"
                }
              ]
            },
            "documentation": {
              "id": 3519,
              "nodeType": "StructuredDocumentation",
              "src": "1752:87:25",
              "text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
            },
            "id": 3529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBooleanSlot",
            "nameLocation": "1853:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3521,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "1876:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3529,
                  "src": "1868:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3520,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1867:14:25"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1925:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3529,
                  "src": "1905:21:25",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BooleanSlot_$3501_storage_ptr",
                    "typeString": "struct StorageSlot.BooleanSlot"
                  },
                  "typeName": {
                    "id": 3524,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3523,
                      "name": "BooleanSlot",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3501,
                      "src": "1905:11:25"
                    },
                    "referencedDeclaration": 3501,
                    "src": "1905:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BooleanSlot_$3501_storage_ptr",
                      "typeString": "struct StorageSlot.BooleanSlot"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:23:25"
            },
            "scope": 3552,
            "src": "1844:147:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3539,
              "nodeType": "Block",
              "src": "2173:63:25",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2192:38:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2206:14:25",
                        "value": {
                          "name": "slot",
                          "nodeType": "YulIdentifier",
                          "src": "2216:4:25"
                        },
                        "variableNames": [
                          {
                            "name": "r.slot",
                            "nodeType": "YulIdentifier",
                            "src": "2206:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 3536,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "2206:6:25",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3532,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2216:4:25",
                      "valueSize": 1
                    }
                  ],
                  "id": 3538,
                  "nodeType": "InlineAssembly",
                  "src": "2183:47:25"
                }
              ]
            },
            "documentation": {
              "id": 3530,
              "nodeType": "StructuredDocumentation",
              "src": "1997:87:25",
              "text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
            },
            "id": 3540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBytes32Slot",
            "nameLocation": "2098:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3532,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "2121:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3540,
                  "src": "2113:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3531,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2112:14:25"
            },
            "returnParameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3536,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2170:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3540,
                  "src": "2150:21:25",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bytes32Slot_$3504_storage_ptr",
                    "typeString": "struct StorageSlot.Bytes32Slot"
                  },
                  "typeName": {
                    "id": 3535,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3534,
                      "name": "Bytes32Slot",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3504,
                      "src": "2150:11:25"
                    },
                    "referencedDeclaration": 3504,
                    "src": "2150:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bytes32Slot_$3504_storage_ptr",
                      "typeString": "struct StorageSlot.Bytes32Slot"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2149:23:25"
            },
            "scope": 3552,
            "src": "2089:147:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3550,
              "nodeType": "Block",
              "src": "2418:63:25",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2437:38:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2451:14:25",
                        "value": {
                          "name": "slot",
                          "nodeType": "YulIdentifier",
                          "src": "2461:4:25"
                        },
                        "variableNames": [
                          {
                            "name": "r.slot",
                            "nodeType": "YulIdentifier",
                            "src": "2451:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 3547,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "2451:6:25",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3543,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2461:4:25",
                      "valueSize": 1
                    }
                  ],
                  "id": 3549,
                  "nodeType": "InlineAssembly",
                  "src": "2428:47:25"
                }
              ]
            },
            "documentation": {
              "id": 3541,
              "nodeType": "StructuredDocumentation",
              "src": "2242:87:25",
              "text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
            },
            "id": 3551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUint256Slot",
            "nameLocation": "2343:14:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3543,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "2366:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "2358:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3542,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2357:14:25"
            },
            "returnParameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2415:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "2395:21:25",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Uint256Slot_$3507_storage_ptr",
                    "typeString": "struct StorageSlot.Uint256Slot"
                  },
                  "typeName": {
                    "id": 3546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3545,
                      "name": "Uint256Slot",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3507,
                      "src": "2395:11:25"
                    },
                    "referencedDeclaration": 3507,
                    "src": "2395:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Uint256Slot_$3507_storage_ptr",
                      "typeString": "struct StorageSlot.Uint256Slot"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2394:23:25"
            },
            "scope": 3552,
            "src": "2334:147:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3553,
        "src": "1264:1219:25",
        "usedErrors": []
      }
    ],
    "src": "90:2394:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-08T23:23:43.572Z",
  "devdoc": {
    "details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}