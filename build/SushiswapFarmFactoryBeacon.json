{
  "contractName": "SushiswapFarmFactoryBeacon",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "DistributorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmAddress",
          "type": "address"
        }
      ],
      "name": "FarmDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Farms",
      "outputs": [
        {
          "internalType": "contract SushiswapFarmUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "upgrader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sentA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sentB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expectedReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedRewardBlock",
          "type": "uint256"
        }
      ],
      "name": "setExpectedReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "rewarderTokenToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewarderTokenToTokenBRoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenBRoute",
          "type": "address[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        }
      ],
      "name": "userStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        }
      ],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDepositsLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "transferDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmAddress\",\"type\":\"address\"}],\"name\":\"FarmDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Farms\",\"outputs\":[{\"internalType\":\"contract SushiswapFarmUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sentA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewarderTokenToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewarderTokenToTokenBRoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenBRoute\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedRewardBlock\",\"type\":\"uint256\"}],\"name\":\"setExpectedReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"}],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDepositsLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"transferDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"}],\"name\":\"userStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256,address,address)\":{\"details\":\"Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\",\"params\":{\"amountA\":\"- Token A amount to deposit.\",\"amountB\":\"-  Token B amount to deposit.\",\"amountLP\":\"- LP Token amount to deposit.\",\"lpPair\":\"- Address of the pool to deposit tokens in.\",\"recipient\":\"- Address which will recieve the deposit and leftover tokens.\"},\"returns\":{\"liquidity\":\"- Total liquidity sent to the farm (in lpTokens).\",\"sentA\":\"- Token A amount sent to the farm.\",\"sentB\":\"- Token B amount sent to the farm.\"}},\"distribute(address,address[],address[],address[],address[])\":{\"details\":\"Distributes tokens between users.\",\"params\":{\"lpPair\":\"- LP pool to distribute tokens in.\",\"rewardTokenToTokenARoute\":\"An array of token addresses.\",\"rewardTokenToTokenBRoute\":\"An array of token addresses. Note: This function can only be called by the distributor.\",\"rewarderTokenToTokenARoute\":\"An array of token addresses.\",\"rewarderTokenToTokenBRoute\":\"An array of token addresses.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setExpectedReward(address,uint256,uint256)\":{\"details\":\"Sets expected reward amount and block for token distribution calculations.\",\"params\":{\"expectedReward\":\"- New reward amount.\",\"expectedRewardBlock\":\"- New reward block. Note: This function can only be called by the distributor.\",\"lpPair\":\"- LP pool to check total deposits in.\"}},\"totalDeposits(address)\":{\"details\":\"Returns total amount locked in the pool. Doesn't take pending rewards into account.\",\"params\":{\"lpPair\":\"- LP pool to check total deposits in.\"},\"returns\":{\"totalDepositsA\":\"- Token A deposits.\",\"totalDepositsB\":\"- Token B deposits.\",\"totalDepositsLP\":\"- Total deposits (in LP tokens).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userStake(address,address)\":{\"details\":\"Returns tokens staked by the {_address} for the given {lpPair}.\",\"params\":{\"_address\":\"- The address to check stakes for.\",\"lpPair\":\"- LP pool to check stakes in.\"},\"returns\":{\"stakeA\":\"- Token A stake.\",\"stakeB\":\"- Token B stake.\",\"stakeLP\":\"- Total user stake(in LP tokens).\"}},\"withdraw(address,uint256,bool,address)\":{\"details\":\"Withdraws tokens from the given pool. \",\"params\":{\"amount\":\"- LP amount to withdraw. \",\"lpPair\":\"- LP pool to withdraw from.\",\"recipient\":\"- The address which will recieve tokens.\",\"withdrawLP\":\"- True: Withdraw in LP tokens, False: Withdraw in normal tokens.\"},\"returns\":{\"amountA\":\"- Token A amount sent to the {recipient}, 0 if withdrawLP == false.\",\"amountB\":\"- Token B amount sent to the {recipient}, 0 if withdrawLP == false.\"}}},\"stateVariables\":{\"farmBeacon\":{\"details\":\"Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SushiswapFarmFactoryBeacon.sol\":\"SushiswapFarmFactoryBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8e235e33979e564ee560e5e7c42f3d4c309698eae7b7035aaf65b0ce6253f9\",\"dweb:/ipfs/QmQKdNPLcgR6LLtS9vDRXy8jeD7gCZDTfctXiTwu6HN7M1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xfd0d01e9036a03e50a71009749b9bfe7570a8f5b852ea409f794debfdd646dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f55720689d7006549fdaf3d565351e053a8156347955e1682c97afe907358c65\",\"dweb:/ipfs/QmXmr8DBkEP4xKqgRBi32SRg4WKPqfgy49j5aHSYkLvhGm\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xdfddefa47c1f11dde2c3b5533c76ccef27a526985c74d9c917deb699d5d46a56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd15423cc0456b783054f974bc88f25b88c99319a2cfec4b5745acfedbbd1d88\",\"dweb:/ipfs/QmZVXupWzRDTXynYd2GLtB9CTGF9ehrqzcPhqXNVZPDCTc\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x48f7fc8c916a93d6045745daf350662fc9a57de82c5c4b42259064be4c11ef84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b10768f1c512d367d20a323a0b447e4674896319a8a90a59aeec7296f84b26b\",\"dweb:/ipfs/QmPQLzwEKLTP7UUnG6gVx5Y832tkP8vSpjajrrdXXDE2Ne\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x94f08740b99a0997bc8363edb752b38354f730a38c54eb7bdd38a8a22ff34aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e27babc1cc78d71ddfa1474f9b2cb04517ef4570fc4c41ecfa97ecf6aa25e7bf\",\"dweb:/ipfs/QmePWVAAJdWJtfgKAPJe1kRgYxorkNEFhGrAN2jLLGiFTX\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x08f7ba4d76d3b55d78ce381ce83f96486711defc7524a8048101888297686903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa5ee00837907842e1f7ae3e85424a0fed8e64fa9d1541736c999e39d27c2f56\",\"dweb:/ipfs/QmNyvN6Zur8mZSGhheNE9xZzyPGutEkwKwuraUz3TX1urD\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xe237a2794a6588efdbf8cf998283ad188ac0e32d5f3e1d7d8d286fdac82863bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fdb06bd9dc4fc5c059e9f2748d73ac06331e4a7efed604584e02b3e3501aaaa\",\"dweb:/ipfs/QmaZ33qA3ahXjmo8Q6M9rayAbrkDgH8eAimfpZ2Drr2txW\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4\",\"dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d874c66c21369dce8d3fe0b6c41316b0c289e45c0b4a77090c010ac2bb80e61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c0d714529b6514f623c6d023ab0594ee0801da8afd5ee8167c323da6f0979a\",\"dweb:/ipfs/QmTmhKaXGfu5MGKaz1Pcjrh9xWbkNtzFeok4PxaKREdf9X\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/SushiswapFarmFactoryBeacon.sol\":{\"keccak256\":\"0x7fae3a4f993dcb32652656bf2f02000ecd98b4d6babd89c2fd9d3e304d47dc85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc90c7413adfef20cb10b7c845fcbd456970cbaed141011df380897b725b27d1\",\"dweb:/ipfs/QmPyVUTxjRNhUw5Y3iVoHUd5cp1nxnAqMqZYiRbAnmXhis\"]},\"project:/contracts/farms/SushiswapFarmUpgradeable.sol\":{\"keccak256\":\"0x15c54114dcfbf4a483a377192cf3ce8d64dbd0483e16cd584ab7f20fd0b17f4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96ecf5dac4208cf556077b312b3e3cc9e427f900d3cdbe17d95ec3fed1062b81\",\"dweb:/ipfs/QmXBRvxRtvvjLN2Wkt26Up49gjMWu2ucXzjRZJd5DywKUX\"]},\"project:/contracts/interfaces/IMiniChefV2.sol\":{\"keccak256\":\"0x7d9e8d326098127547e889cdb4464eba1ca37e5a8546b6a6b07ceb646d3e5a32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3660e01a8b32a858605de335e4372d1aba1c42ed885804259f23f597832720e5\",\"dweb:/ipfs/QmXVhZSGMxP9rE6eJWSCDx3qyzVzYjKHhCYkZq9cmEajiR\"]},\"project:/contracts/interfaces/IRewarder.sol\":{\"keccak256\":\"0x8a3be93ae6c89f036ecd472ce482442ce9510a6108cd2faca526cf4b4587446c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0147bc3ee4b15de254613a227266cdb1a8cbd5d59eda4c581ec9872d99d5f738\",\"dweb:/ipfs/QmakQJBgy25AkitgokWNiegicP22zpGoUNJidJwgP6cJgD\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x1530b00512450cd32128a92e9444a96da92399a84ab1e1a3539b4817cf91676b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e40fa52888c0351f252749cdeb252ea4cdecbfd893e31563a606cc5cf455aa2a\",\"dweb:/ipfs/QmUah3Qkt6U8WErkh6TDdZwwgcXRzMmzrFKeuoHr8KmiaN\"]},\"project:/contracts/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0xec9edfa4778dfd003d2f53807fc04f5274d28ade94226f7df74957de7c07111a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f9089e0dcf2871197521b6f84f353b9d63816bfa0c1a2ba64379492ffc77f53\",\"dweb:/ipfs/QmSnAv4R1MWmxjHh37Tp2yfHMQdnfPA9T17rTiLprixy2i\"]},\"project:/contracts/utils/OwnableUpgradeableNoTransfer.sol\":{\"keccak256\":\"0x70029c5daf701eaf30f018115a9693cdc7b7d4332e8bacd748c25796f665acfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c311a78f131f9ec4b8111f915d027252ff3ab28a9637e76b07456792f8a22f0c\",\"dweb:/ipfs/QmdxCEDNWG5bHrH4E5HXCZ7UCw18FcsR782X9FBAwH1aWm\"]},\"project:/contracts/utils/UniswapV2ERC20.sol\":{\"keccak256\":\"0xbbbdc4a6ddfda4fb96183c620b03f783f89bb30356c1516de9de2f546df7432c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fa75bf9cb3deb89b16f30305a869f0263a4aec4be646743ab8b139e3cb02e7c\",\"dweb:/ipfs/QmRAXoB5ygYxoAKNej9vmDtsfkXxbvbpSkvWza5YZp6WWh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50616212806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620001065760003560e01c8063081e3eda146200010b5780633f4ba83a1462000121578063430004c1146200012d57806351bdca3e146200015a5780635c975abb146200018d578063613c91af14620001a4578063715018a614620001bb5780637c770aae14620001c55780638456cb5914620001dc5780638da5cb5b14620001e6578063bfe1092814620001ff578063c4d66de81462000213578063d2dd71ad146200022a578063d95a4d931462000241578063e23329081462000255578063e9403256146200026c578063ecb039431462000283578063f2fde38b146200029a578063f9d9331d14620002b1575b600080fd5b609a546040519081526020015b60405180910390f35b6200012b620002dd565b005b620001446200013e3660046200174d565b62000326565b6040805192835260208301919091520162000118565b620001716200016b366004620017a7565b6200045f565b6040805193845260208401929092529082015260600162000118565b60335460ff16604051901515815260200162000118565b6200012b620001b5366004620017e5565b62000526565b6200012b620005de565b62000171620001d63660046200181d565b6200068a565b6200012b62000977565b620001f0620009b5565b60405162000118919062001878565b609854620001f0906001600160a01b031681565b6200012b620002243660046200188c565b620009c4565b6200012b6200023b366004620018f3565b62000b2d565b609754620001f0906001600160a01b031681565b6200012b620002663660046200188c565b62000c52565b620001716200027d3660046200188c565b62000cd0565b620001f062000294366004620019da565b62000d8f565b6200012b620002ab3660046200188c565b62000dba565b620001f0620002c23660046200188c565b6099602052600090815260409020546001600160a01b031681565b33620002e8620009b5565b6001600160a01b0316146200031a5760405162461bcd60e51b81526004016200031190620019f4565b60405180910390fd5b6200032462000e76565b565b6000806200033660335460ff1690565b15620003565760405162461bcd60e51b8152600401620003119062001a29565b6001600160a01b03868116600090815260996020526040902054166200037b57600080fd5b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af1158015620003eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000411919062001a53565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526099602052604081205490918291829116156200051f576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b90620004c790889060040162001878565b602060405180830381865afa158015620004e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050b919062001a78565b925062000519848462000f07565b90925090505b9250925092565b6098546001600160a01b031633146200053e57600080fd5b6001600160a01b03838116600090815260996020526040902054166200056357600080fd5b6001600160a01b0383811660009081526099602052604090819020549051631d1b53a960e31b8152600481018590526024810184905291169063e8da9d4890604401600060405180830381600087803b158015620005c057600080fd5b505af1158015620005d5573d6000803e3d6000fd5b50505050505050565b33620005e9620009b5565b6001600160a01b031614620006125760405162461bcd60e51b81526004016200031190620019f4565b6200061e6000620011b3565b609760009054906101000a90046001600160a01b03166001600160a01b031663715018a66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200066f57600080fd5b505af115801562000684573d6000803e3d6000fd5b50505050565b60008060006200069c60335460ff1690565b15620006bc5760405162461bcd60e51b8152600401620003119062001a29565b6001600160a01b03858116600090815260996020526040902054166200074f57620006e78562001205565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b8715620007f0576001600160a01b0380861660009081526099602090815260409182902054825162fc63d160e41b81529251620007f09433949216928d928492630fc63d10926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007de919062001a92565b6001600160a01b0316929190620012dc565b86156200085a576001600160a01b03808616600090815260996020908152604091829020548251635f64b55b60e01b815292516200085a9433949216928c928492635f64b55b926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b85156200088a576001600160a01b038086166000818152609960205260409020546200088a9233911689620012dc565b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af1158015620008fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000921919062001ab2565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b3362000982620009b5565b6001600160a01b031614620009ab5760405162461bcd60e51b81526004016200031190620019f4565b6200032462001338565b6065546001600160a01b031690565b600054610100900460ff16620009e15760005460ff1615620009eb565b620009eb62001394565b62000a505760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000311565b600054610100900460ff1615801562000a73576000805461ffff19166101011790555b62000a7d620013a7565b62000a87620013db565b60405162000a9590620016fb565b604051809103906000f08015801562000ab2573d6000803e3d6000fd5b5060405162000ac19062001709565b62000acd919062001878565b604051809103906000f08015801562000aea573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b039290921691909117905562000b168262000dba565b801562000b29576000805461ff00191690555b5050565b6098546001600160a01b0316331462000b4557600080fd5b60335460ff161562000b6b5760405162461bcd60e51b8152600401620003119062001a29565b6001600160a01b038981166000908152609960205260409020541662000b9057600080fd5b6001600160a01b03808a16600090815260996020526040908190205490516373ad67d760e01b81529116906373ad67d79062000bdf908b908b908b908b908b908b908b908b9060040162001b2e565b600060405180830381600087803b15801562000bfa57600080fd5b505af115801562000c0f573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b3362000c5d620009b5565b6001600160a01b03161462000c865760405162461bcd60e51b81526004016200031190620019f4565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000d88576001600160a01b03808516600090815260996020908152604091829020548251637d88209760e01b81529251931692637d8820979260048082019392918290030181865afa15801562000d4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d74919062001a78565b925062000d82848462000f07565b90925090505b9193909250565b609a818154811062000da057600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000dc5620009b5565b6001600160a01b03161462000dee5760405162461bcd60e51b81526004016200031190620019f4565b6001600160a01b03811662000e0257600080fd5b62000e0d81620011b3565b60975460405163f2fde38b60e01b81526001600160a01b039091169063f2fde38b9062000e3f90849060040162001878565b600060405180830381600087803b15801562000e5a57600080fd5b505af115801562000e6f573d6000803e3d6000fd5b5050505050565b60335460ff1662000ec15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640162000311565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000efd919062001878565b60405180910390a1565b6001600160a01b03828116600090815260996020526040812054909182911615620011ac576000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f93919062001a78565b6001600160a01b0380871660009081526099602090815260409182902054825162fc63d160e41b815292519495508594931692630fc63d109260048082019392918290030181865afa15801562000fee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001014919062001a92565b6001600160a01b03166370a08231876040518263ffffffff1660e01b815260040162001041919062001878565b602060405180830381865afa1580156200105f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001085919062001a78565b62001091908662001b96565b6200109d919062001bc4565b6001600160a01b03808716600090815260996020908152604091829020548251635f64b55b60e01b815292519497508594931692635f64b55b9260048082019392918290030181865afa158015620010f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200111f919062001a92565b6001600160a01b03166370a08231876040518263ffffffff1660e01b81526004016200114c919062001878565b602060405180830381865afa1580156200116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001190919062001a78565b6200119c908662001b96565b620011a8919062001bc4565b9150505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b906200123590869060240162001878565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620012749062001717565b6200128192919062001c44565b604051809103906000f0801580156200129e573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620006849085906200140f565b60335460ff16156200135e5760405162461bcd60e51b8152600401620003119062001a29565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000eee3390565b6000620013a130620014ed565b15905090565b600054610100900460ff16620013d15760405162461bcd60e51b8152600401620003119062001c6a565b62000324620014fc565b600054610100900460ff16620014055760405162461bcd60e51b8152600401620003119062001c6a565b6200032462001532565b600062001466826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620015679092919063ffffffff16565b805190915015620014e8578080602001905181019062001487919062001cb5565b620014e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000311565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620015265760405162461bcd60e51b8152600401620003119062001c6a565b6033805460ff19169055565b600054610100900460ff166200155c5760405162461bcd60e51b8152600401620003119062001c6a565b6200032433620011b3565b606062001578848460008562001582565b90505b9392505050565b606082471015620015e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000311565b620015f085620014ed565b6200163e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000311565b600080866001600160a01b031685876040516200165c919062001cd5565b60006040518083038185875af1925050503d80600081146200169b576040519150601f19603f3d011682016040523d82523d6000602084013e620016a0565b606091505b5091509150620016b2828286620016bd565b979650505050505050565b60608315620016ce5750816200157b565b825115620016df5782518084602001fd5b8160405162461bcd60e51b815260040162000311919062001cf3565b61364b8062001d0983390190565b610523806200535483390190565b610966806200587783390190565b6001600160a01b03811681146200173b57600080fd5b50565b80151581146200173b57600080fd5b600080600080608085870312156200176457600080fd5b8435620017718162001725565b93506020850135925060408501356200178a816200173e565b915060608501356200179c8162001725565b939692955090935050565b60008060408385031215620017bb57600080fd5b8235620017c88162001725565b91506020830135620017da8162001725565b809150509250929050565b600080600060608486031215620017fb57600080fd5b8335620018088162001725565b95602085013595506040909401359392505050565b600080600080600060a086880312156200183657600080fd5b8535945060208601359350604086013592506060860135620018588162001725565b915060808601356200186a8162001725565b809150509295509295909350565b6001600160a01b0391909116815260200190565b6000602082840312156200189f57600080fd5b81356200157b8162001725565b60008083601f840112620018bf57600080fd5b5081356001600160401b03811115620018d757600080fd5b6020830191508360208260051b8501011115620011ac57600080fd5b600080600080600080600080600060a08a8c0312156200191257600080fd5b89356200191f8162001725565b985060208a01356001600160401b03808211156200193c57600080fd5b6200194a8d838e01620018ac565b909a50985060408c01359150808211156200196457600080fd5b620019728d838e01620018ac565b909850965060608c01359150808211156200198c57600080fd5b6200199a8d838e01620018ac565b909650945060808c0135915080821115620019b457600080fd5b50620019c38c828d01620018ac565b915080935050809150509295985092959850929598565b600060208284031215620019ed57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000806040838503121562001a6757600080fd5b505080516020909101519092909150565b60006020828403121562001a8b57600080fd5b5051919050565b60006020828403121562001aa557600080fd5b81516200157b8162001725565b60008060006060848603121562001ac857600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b8581101562001b2357813562001b078162001725565b6001600160a01b03168752958201959082019060010162001af1565b509495945050505050565b60808152600062001b44608083018a8c62001ae1565b828103602084015262001b5981898b62001ae1565b9050828103604084015262001b7081878962001ae1565b9050828103606084015262001b8781858762001ae1565b9b9a5050505050505050505050565b600081600019048311821515161562001bbf57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001be257634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101562001c0457818101518382015260200162001bea565b83811115620006845750506000910152565b6000815180845262001c3081602086016020860162001be7565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620015789083018462001c16565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121562001cc857600080fd5b81516200157b816200173e565b6000825162001ce981846020870162001be7565b9190910192915050565b6020815260006200157b602083018462001c1656fe60a06040523060805234801561001457600080fd5b50600160685560805161360161004a6000396000818161061801528181610661015281816109c20152610a0201526136016000f3fe6080604052600436106101265760003560e01c80630103c92b1461012b57806306fdde031461015e578063095ea7b31461019d5780630fc63d10146101cd57806318160ddd146101fa57806323b872dd146102105780632a8dc13114610230578063313ce567146102505780633659cfe614610277578063430004c114610299578063452ed4f1146102ce5780634f1ef286146102ee5780635f64b55b1461030157806370a082311461032157806373ad67d71461034e5780637d8820971461036e5780638da5cb5b1461038457806395d89b4114610399578063a9059cbb146103c8578063c4d66de8146103e8578063dd62ed3e14610408578063e8da9d4814610440578063f106845414610460578063f7c618c114610476578063fad3cc4b14610496575b600080fd5b34801561013757600080fd5b5061014b610146366004612b38565b6104d1565b6040519081526020015b60405180910390f35b34801561016a57600080fd5b50610190604051806040016040528060068152602001650556e6f2d4c560d41b81525081565b6040516101559190612b85565b3480156101a957600080fd5b506101bd6101b8366004612bb8565b610562565b6040519015158152602001610155565b3480156101d957600080fd5b50606c546101ed906001600160a01b031681565b6040516101559190612be4565b34801561020657600080fd5b5061014b60005481565b34801561021c57600080fd5b506101bd61022b366004612bf8565b610578565b34801561023c57600080fd5b50606a546101ed906001600160a01b031681565b34801561025c57600080fd5b50610265601281565b60405160ff9091168152602001610155565b34801561028357600080fd5b50610297610292366004612b38565b61060d565b005b3480156102a557600080fd5b506102b96102b4366004612c47565b6106df565b60408051928352602083019190915201610155565b3480156102da57600080fd5b50606b546101ed906001600160a01b031681565b6102976102fc366004612ce0565b6109b7565b34801561030d57600080fd5b50606d546101ed906001600160a01b031681565b34801561032d57600080fd5b5061014b61033c366004612b38565b60016020526000908152604090205481565b34801561035a57600080fd5b50610297610369366004612dd2565b610a71565b34801561037a57600080fd5b5061014b60785481565b34801561039057600080fd5b506101ed611196565b3480156103a557600080fd5b50610190604051806040016040528060038152602001620554c560ec1b81525081565b3480156103d457600080fd5b506101bd6103e3366004612bb8565b6111a5565b3480156103f457600080fd5b50610297610403366004612b38565b6111b2565b34801561041457600080fd5b5061014b610423366004612e95565b600260209081526000928352604080842090915290825290205481565b34801561044c57600080fd5b5061029761045b366004612ece565b6118de565b34801561046c57600080fd5b5061014b606f5481565b34801561048257600080fd5b506069546101ed906001600160a01b031681565b3480156104a257600080fd5b506104b66104b1366004612ef0565b6118fa565b60408051938452602084019290925290820152606001610155565b6001600160a01b0381166000908152607760209081526040808320607254845290915281205460ff161561051b57506001600160a01b031660009081526074602052604090205490565b60005461052a57506000919050565b600080546001600160a01b038416825260016020526040909120546078546105529190612f3c565b61055c9190612f5b565b92915050565b600061056f338484611bc7565b50600192915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146105f7576001600160a01b03841660009081526002602090815260408083203384529091529020546105d29083611c29565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610602848484611c35565b5060015b9392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561065f5760405162461bcd60e51b815260040161065690612f7d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610691611cc9565b6001600160a01b0316146106b75760405162461bcd60e51b815260040161065690612fb7565b6106c081611ce5565b604080516000808252602082019092526106dc91839190611d01565b50565b600080336106eb611196565b6001600160a01b0316146106fe57600080fd5b600260685414156107215760405162461bcd60e51b815260040161065690612ff1565b6002606855841580159061074c57506001600160a01b03861660009081526074602052604090205415155b61075557600080fd5b61075e86611e48565b600043607054111561077f57436070546107789190613028565b9050610791565b600260735461078e9190612f5b565b90505b6000607954826078546107a49190612f3c565b6107ae919061303f565b905060006107bc8389612f3c565b6107c69083613028565b6001600160a01b038a16600090815260746020526040812080549293508a929091906107f3908490613028565b92505081905550876078600082825461080c9190613028565b90915550506071548290610821908390612f3c565b61082b9190612f5b565b60715561083983828b611fd8565b606f54604051630ad58d2f60e01b815260008051602061356583398151915291630ad58d2f9161087091908c903090600401613057565b600060405180830381600087803b15801561088a57600080fd5b505af115801561089e573d6000803e3d6000fd5b5050505086156108ce57606b546108bf906001600160a01b0316878a612177565b600080945094505050506109a7565b606c54606d546000805160206135058339815191529163baa2abde916001600160a01b0391821691168b6000808c6109084261025861303f565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af115801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e9190613076565b90955093505050505b6001606855909590945092505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a005760405162461bcd60e51b815260040161065690612f7d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a32611cc9565b6001600160a01b031614610a585760405162461bcd60e51b815260040161065690612fb7565b610a6182611ce5565b610a6d82826001611d01565b5050565b33610a7a611196565b6001600160a01b031614610a8d57600080fd5b60026068541415610ab05760405162461bcd60e51b815260040161065690612ff1565b6002606855607854610ac157600080fd5b606f54604051630c7e663b60e11b81526004810191909152306024820152600080516020613565833981519152906318fccc7690604401600060405180830381600087803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b50506069546040516370a0823160e01b815260009350600292506001600160a01b03909116906370a0823190610b60903090600401612be4565b602060405180830381865afa158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba1919061309a565b610bab9190612f5b565b90506000610bbb4261025861303f565b606e549091506001600160a01b031615610d9857606a546040516370a0823160e01b81526000916002916001600160a01b03909116906370a0823190610c05903090600401612be4565b602060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c46919061309a565b610c509190612f5b565b606a54606c549192506001600160a01b03918216911614610cf9576000805160206135058339815191526001600160a01b03166338ed17398260008e8e30886040518763ffffffff1660e01b8152600401610cb0969594939291906130b3565b6000604051808303816000875af1158015610ccf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cf791908101906131b4565b505b606a54606d546001600160a01b03908116911614610d96576040516338ed173960e01b8152600080516020613505833981519152906338ed173990610d4d9084906000908e908e9030908a906004016130b3565b6000604051808303816000875af1158015610d6c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d9491908101906131b4565b505b505b606954606c546001600160a01b03908116911614610e35576040516338ed173960e01b8152600080516020613505833981519152906338ed173990610dec9085906000908b908b90309089906004016130b3565b6000604051808303816000875af1158015610e0b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e3391908101906131b4565b505b606954606d546001600160a01b03908116911614610ed2576040516338ed173960e01b8152600080516020613505833981519152906338ed173990610e8990859060009089908990309089906004016130b3565b6000604051808303816000875af1158015610ea8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ed091908101906131b4565b505b606c546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610f03903090600401612be4565b602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f44919061309a565b606d546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610f7a903090600401612be4565b602060405180830381865afa158015610f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbb919061309a565b606c54606d5460405162e8e33760e81b81529293506000805160206135058339815191529263e8e337009261100e926001600160a01b039182169291169087908790600190819030908d906004016131e8565b6060604051808303816000875af115801561102d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110519190613231565b5050606b546040516370a0823160e01b8152600092506001600160a01b03909116906370a0823190611087903090600401612be4565b602060405180830381865afa1580156110a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c8919061309a565b905080156111515780607860008282546110e2919061303f565b9091555050606f54604051638dbdbe6d60e01b815260008051602061356583398151915291638dbdbe6d9161111e919085903090600401613057565b600060405180830381600087803b15801561113857600080fd5b505af115801561114c573d6000803e3d6000fd5b505050505b60725461115e9043613028565b607381905561117e908290611173904361303f565b607191909155607055565b50504360725550506001606855505050505050505050565b6036546001600160a01b031690565b600061056f338484611c35565b600354610100900460ff166111cd5760035460ff16156111d5565b6111d56121cd565b6111f15760405162461bcd60e51b81526004016106569061325f565b600354610100900460ff16158015611213576003805461ffff19166101011790555b61121b6121de565b61122482612263565b606f819055506000805160206135658339815191526001600160a01b031663ab560e106040518163ffffffff1660e01b8152600401602060405180830381865afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a91906132ad565b606980546001600160a01b0319166001600160a01b0392909216919091179055606f5460405163c346253d60e01b815260048101919091526000805160206135658339815191529063c346253d90602401602060405180830381865afa158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132c91906132ad565b606e80546001600160a01b0319166001600160a01b039290921691821790551561141a57606e54606f5460405163d63b3c4960e01b8152600481019190915260006024820181905260448201819052916001600160a01b03169063d63b3c4990606401600060405180830381865afa1580156113ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113d491908101906132ca565b509050806000815181106113ea576113ea61338e565b6020026020010151606a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b606f546040516378ed5d1f60e01b81526004810191909152600080516020613565833981519152906378ed5d1f90602401602060405180830381865afa158015611468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148c91906132ad565b606b80546001600160a01b0319166001600160a01b0392909216918217905560408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa1580156114e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150a91906132ad565b606c80546001600160a01b0319166001600160a01b03928316179055606b546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015611568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158c91906132ad565b606d80546001600160a01b0319166001600160a01b03928316179055606b5460405163095ea7b360e01b815260001992919091169063095ea7b3906115e5906000805160206135658339815191529085906004016133a4565b6020604051808303816000875af1158015611604573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162891906133bd565b50606b5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611669906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ac91906133bd565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906116ed906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af115801561170c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173091906133bd565b50606a5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611771906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b491906133bd565b50606c5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906117f5906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611814573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183891906133bd565b50606d5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611879906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bc91906133bd565b50504360725562124f806073558015610a6d576003805461ff00191690555050565b336118e7611196565b6001600160a01b03161461117357600080fd5b6000808033611907611196565b6001600160a01b03161461191a57600080fd5b6002606854141561193d5760405162461bcd60e51b815260040161065690612ff1565b6002606855600087158015906119535750600087115b15611a0157606c54606d546000805160206135058339815191529163e8e33700916001600160a01b0391821691168b8b600080306119934261025861303f565b6040518963ffffffff1660e01b81526004016119b69897969594939291906131e8565b6060604051808303816000875af11580156119d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f99190613231565b919550935090505b611a0b868261303f565b915060008211611a1a57600080fd5b611a2385611e48565b6000436070541115611a445743607054611a3d9190613028565b9050611a56565b6002607354611a539190612f5b565b90505b600060795482607854611a699190612f3c565b611a73919061303f565b9050600081611a828487612f3c565b611a8c919061303f565b6001600160a01b038916600090815260746020526040812080549293508792909190611ab990849061303f565b925050819055508460786000828254611ad2919061303f565b90915550508115611afa578181607154611aec9190612f3c565b611af69190612f5b565b6071555b611b0583828a612396565b606f54604051638dbdbe6d60e01b815260008051602061356583398151915291638dbdbe6d91611b3c919089903090600401613057565b600060405180830381600087803b158015611b5657600080fd5b505af1158015611b6a573d6000803e3d6000fd5b50505050611b9188888d611b7e9190613028565b606c546001600160a01b03169190612177565b611bb288611b9f888d613028565b606d546001600160a01b03169190612177565b50506001606855509297919650945092505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106068284613028565b6001600160a01b038316600090815260016020526040902054611c589082611c29565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611c879082612506565b6001600160a01b0380841660008181526001602052604090819020939093559151908516906000805160206135ac83398151915290611c1c9085815260200190565b600080516020613545833981519152546001600160a01b031690565b33611cee611196565b6001600160a01b0316146106dc57600080fd5b6000611d0b611cc9565b9050611d1684612512565b600083511180611d235750815b15611d3457611d3284846125a5565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16611e4157805460ff19166001178155604051611daf908690611d80908590602401612be4565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526125a5565b50805460ff19168155611dc0611cc9565b6001600160a01b0316826001600160a01b031614611e385760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610656565b611e41856125ca565b5050505050565b6001600160a01b0381166000908152607760209081526040808320607254845290915290205460ff1615611ee2576001600160a01b038116600090815260746020908152604080832054607690925290912054611ea59043613028565b611eaf9190612f3c565b6001600160a01b03821660009081526075602052604081208054909190611ed790849061303f565b90915550611f579050565b611eeb816104d1565b6001600160a01b0382166000908152607460205260409020819055607254611f139043613028565b611f1d9190612f3c565b6001600160a01b038216600090815260756020908152604080832093909355607781528282206072548352905220805460ff191660011790555b607254607a541115611f9957607854607a54611f739043613028565b611f7d9190612f3c565b60796000828254611f8e919061303f565b90915550611fb79050565b607854607254611fa99043613028565b611fb39190612f3c565b6079555b6001600160a01b031660009081526076602052604090204390819055607a55565b6001600160a01b03811660009081526074602052604090205461201e576001600160a01b03811660009081526001602052604090205461201990829061260a565b505050565b600080546001600160a01b03831682526001602052604090912054141561204457505050565b6001600160a01b0381166000908152607560209081526040808320546074909252822054849190612076908790612f3c565b612080919061303f565b60715461208d9190612f3c565b6120979190612f5b565b905060006071546078546120ab919061303f565b6001600160a01b0384166000908152607460205260409020546120cf90849061303f565b6120db6012600a6134be565b6120e59190612f3c565b6120ef9190612f5b565b9050611e4183826121026012600a6134be565b61210c9190613028565b6121186012600a6134be565b6000546121259086612f3c565b61212f9190612f5b565b6001600160a01b0387166000908152600160205260409020546121529190613028565b61215e6012600a6134be565b6121689190612f3c565b6121729190612f5b565b61260a565b6120198363a9059cbb60e01b84846040516024016121969291906133a4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261268a565b60006121d83061275c565b15905090565b600354610100900460ff166121f95760035460ff1615612201565b6122016121cd565b61221d5760405162461bcd60e51b81526004016106569061325f565b600354610100900460ff1615801561223f576003805461ffff19166101011790555b61224761276b565b61224f6127d8565b80156106dc576003805461ff001916905550565b600080805b6000805160206135658339815191526001600160a01b031663081e3eda6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d8919061309a565b811015612385576040516378ed5d1f60e01b8152600481018290526001600160a01b03851690600080516020613565833981519152906378ed5d1f90602401602060405180830381865afa158015612334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061235891906132ad565b6001600160a01b031614156123735780925060019150612385565b8061237d816134cd565b915050612268565b508061239057600080fd5b50919050565b6000546123b257612019816123ad6012600a6134be565b61285f565b600080546001600160a01b0383168252600160205260409091205414156123d857505050565b6001600160a01b038116600090815260756020908152604080832054607490925282205484919061240a908790612f3c565b612414919061303f565b6071546124219190612f3c565b61242b9190612f5b565b9050600060715460785461243f919061303f565b6001600160a01b03841660009081526074602052604090205461246390849061303f565b61246f6012600a6134be565b6124799190612f3c565b6124839190612f5b565b9050611e4183826124966012600a6134be565b6124a09190613028565b6001600160a01b0386166000908152600160205260409020546124c56012600a6134be565b6000546124d29087612f3c565b6124dc9190612f5b565b6124e69190613028565b6124f26012600a6134be565b6124fc9190612f3c565b6123ad9190612f5b565b6000610606828461303f565b803b6125765760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610656565b60008051602061354583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606106068383604051806060016040528060278152602001613585602791396128d0565b6125d381612512565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b03821660009081526001602052604090205461262d9082611c29565b6001600160a01b038316600090815260016020526040812091909155546126549082611c29565b60009081556040518281526001600160a01b038416906000805160206135ac833981519152906020015b60405180910390a35050565b60006126df826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129a49092919063ffffffff16565b80519091501561201957808060200190518101906126fd91906133bd565b6120195760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610656565b6001600160a01b03163b151590565b600354610100900460ff166127d65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610656565b565b600354610100900460ff166127f35760035460ff16156127fb565b6127fb6121cd565b6128175760405162461bcd60e51b81526004016106569061325f565b600354610100900460ff16158015612839576003805461ffff19166101011790555b603680546001600160a01b0319163317905580156106dc576003805461ff001916905550565b60005461286c9082612506565b60009081556001600160a01b0383168152600160205260409020546128919082612506565b6001600160a01b0383166000818152600160205260408082209390935591519091906000805160206135ac8339815191529061267e9085815260200190565b6060833b61292f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610656565b600080856001600160a01b03168560405161294a91906134e8565b600060405180830381855af49150503d8060008114612985576040519150601f19603f3d011682016040523d82523d6000602084013e61298a565b606091505b509150915061299a8282866129bb565b9695505050505050565b60606129b384846000856129f4565b949350505050565b606083156129ca575081610606565b8251156129da5782518084602001fd5b8160405162461bcd60e51b81526004016106569190612b85565b606082471015612a555760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610656565b612a5e8561275c565b612aaa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610656565b600080866001600160a01b03168587604051612ac691906134e8565b60006040518083038185875af1925050503d8060008114612b03576040519150601f19603f3d011682016040523d82523d6000602084013e612b08565b606091505b5091509150612b188282866129bb565b979650505050505050565b6001600160a01b03811681146106dc57600080fd5b600060208284031215612b4a57600080fd5b813561060681612b23565b60005b83811015612b70578181015183820152602001612b58565b83811115612b7f576000848401525b50505050565b6020815260008251806020840152612ba4816040850160208701612b55565b601f01601f19169190910160400192915050565b60008060408385031215612bcb57600080fd5b8235612bd681612b23565b946020939093013593505050565b6001600160a01b0391909116815260200190565b600080600060608486031215612c0d57600080fd5b8335612c1881612b23565b92506020840135612c2881612b23565b929592945050506040919091013590565b80151581146106dc57600080fd5b60008060008060808587031215612c5d57600080fd5b8435612c6881612b23565b9350602085013592506040850135612c7f81612c39565b91506060850135612c8f81612b23565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612cd857612cd8612c9a565b604052919050565b60008060408385031215612cf357600080fd5b8235612cfe81612b23565b91506020838101356001600160401b0380821115612d1b57600080fd5b818601915086601f830112612d2f57600080fd5b813581811115612d4157612d41612c9a565b612d53601f8201601f19168501612cb0565b91508082528784828501011115612d6957600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f840112612d9957600080fd5b5081356001600160401b03811115612db057600080fd5b6020830191508360208260051b8501011115612dcb57600080fd5b9250929050565b6000806000806000806000806080898b031215612dee57600080fd5b88356001600160401b0380821115612e0557600080fd5b612e118c838d01612d87565b909a50985060208b0135915080821115612e2a57600080fd5b612e368c838d01612d87565b909850965060408b0135915080821115612e4f57600080fd5b612e5b8c838d01612d87565b909650945060608b0135915080821115612e7457600080fd5b50612e818b828c01612d87565b999c989b5096995094979396929594505050565b60008060408385031215612ea857600080fd5b8235612eb381612b23565b91506020830135612ec381612b23565b809150509250929050565b60008060408385031215612ee157600080fd5b50508035926020909101359150565b60008060008060808587031215612f0657600080fd5b8435935060208501359250604085013591506060850135612c8f81612b23565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612f5657612f56612f26565b500290565b600082612f7857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602c9082015260008051602061352583398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061352583398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008282101561303a5761303a612f26565b500390565b6000821982111561305257613052612f26565b500190565b92835260208301919091526001600160a01b0316604082015260600190565b6000806040838503121561308957600080fd5b505080516020909101519092909150565b6000602082840312156130ac57600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b888110156131055783356130ea81612b23565b6001600160a01b0316825292820192908201906001016130d7565b506001600160a01b0396909616606085015250505060800152949350505050565b60006001600160401b0382111561313f5761313f612c9a565b5060051b60200190565b600082601f83011261315a57600080fd5b8151602061316f61316a83613126565b612cb0565b82815260059290921b8401810191818101908684111561318e57600080fd5b8286015b848110156131a95780518352918301918301613192565b509695505050505050565b6000602082840312156131c657600080fd5b81516001600160401b038111156131dc57600080fd5b6129b384828501613149565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b60008060006060848603121561324657600080fd5b8351925060208401519150604084015190509250925092565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000602082840312156132bf57600080fd5b815161060681612b23565b600080604083850312156132dd57600080fd5b82516001600160401b03808211156132f457600080fd5b818501915085601f83011261330857600080fd5b8151602061331861316a83613126565b82815260059290921b8401810191818101908984111561333757600080fd5b948201945b8386101561335e57855161334f81612b23565b8252948201949082019061333c565b9188015191965090935050508082111561337757600080fd5b5061338485828601613149565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03929092168252602082015260400190565b6000602082840312156133cf57600080fd5b815161060681612c39565b600181815b808511156134155781600019048211156133fb576133fb612f26565b8085161561340857918102915b93841c93908002906133df565b509250929050565b60008261342c5750600161055c565b816134395750600061055c565b816001811461344f576002811461345957613475565b600191505061055c565b60ff84111561346a5761346a612f26565b50506001821b61055c565b5060208310610133831016604e8410600b8410161715613498575081810a61055c565b6134a283836133da565b80600019048211156134b6576134b6612f26565b029392505050565b600061060660ff84168361341d565b60006000198214156134e1576134e1612f26565b5060010190565b600082516134fa818460208701612b55565b919091019291505056fe0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b4799750646756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc0000000000000000000000000769fd68dfb93167989c6f7254cd0d766fb2841f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204762b8a11f3f4a0bff7ddd8bb2d3065dc63a758346c672600a8e6ced6f2490bb64736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202b5cdc4121b2f5dc54b210c603ba5c3a1cbc9e5484c95af88a60ee0a4d41deab64736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001065760003560e01c8063081e3eda146200010b5780633f4ba83a1462000121578063430004c1146200012d57806351bdca3e146200015a5780635c975abb146200018d578063613c91af14620001a4578063715018a614620001bb5780637c770aae14620001c55780638456cb5914620001dc5780638da5cb5b14620001e6578063bfe1092814620001ff578063c4d66de81462000213578063d2dd71ad146200022a578063d95a4d931462000241578063e23329081462000255578063e9403256146200026c578063ecb039431462000283578063f2fde38b146200029a578063f9d9331d14620002b1575b600080fd5b609a546040519081526020015b60405180910390f35b6200012b620002dd565b005b620001446200013e3660046200174d565b62000326565b6040805192835260208301919091520162000118565b620001716200016b366004620017a7565b6200045f565b6040805193845260208401929092529082015260600162000118565b60335460ff16604051901515815260200162000118565b6200012b620001b5366004620017e5565b62000526565b6200012b620005de565b62000171620001d63660046200181d565b6200068a565b6200012b62000977565b620001f0620009b5565b60405162000118919062001878565b609854620001f0906001600160a01b031681565b6200012b620002243660046200188c565b620009c4565b6200012b6200023b366004620018f3565b62000b2d565b609754620001f0906001600160a01b031681565b6200012b620002663660046200188c565b62000c52565b620001716200027d3660046200188c565b62000cd0565b620001f062000294366004620019da565b62000d8f565b6200012b620002ab3660046200188c565b62000dba565b620001f0620002c23660046200188c565b6099602052600090815260409020546001600160a01b031681565b33620002e8620009b5565b6001600160a01b0316146200031a5760405162461bcd60e51b81526004016200031190620019f4565b60405180910390fd5b6200032462000e76565b565b6000806200033660335460ff1690565b15620003565760405162461bcd60e51b8152600401620003119062001a29565b6001600160a01b03868116600090815260996020526040902054166200037b57600080fd5b6001600160a01b038681166000908152609960205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af1158015620003eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000411919062001a53565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526099602052604081205490918291829116156200051f576001600160a01b0380851660009081526099602052604090819020549051630103c92b60e01b8152911690630103c92b90620004c790889060040162001878565b602060405180830381865afa158015620004e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050b919062001a78565b925062000519848462000f07565b90925090505b9250925092565b6098546001600160a01b031633146200053e57600080fd5b6001600160a01b03838116600090815260996020526040902054166200056357600080fd5b6001600160a01b0383811660009081526099602052604090819020549051631d1b53a960e31b8152600481018590526024810184905291169063e8da9d4890604401600060405180830381600087803b158015620005c057600080fd5b505af1158015620005d5573d6000803e3d6000fd5b50505050505050565b33620005e9620009b5565b6001600160a01b031614620006125760405162461bcd60e51b81526004016200031190620019f4565b6200061e6000620011b3565b609760009054906101000a90046001600160a01b03166001600160a01b031663715018a66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200066f57600080fd5b505af115801562000684573d6000803e3d6000fd5b50505050565b60008060006200069c60335460ff1690565b15620006bc5760405162461bcd60e51b8152600401620003119062001a29565b6001600160a01b03858116600090815260996020526040902054166200074f57620006e78562001205565b6001600160a01b0380871660008181526099602052604081208054949093166001600160a01b031994851617909255609a805460018101825592527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490910180549092161790555b8715620007f0576001600160a01b0380861660009081526099602090815260409182902054825162fc63d160e41b81529251620007f09433949216928d928492630fc63d10926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007de919062001a92565b6001600160a01b0316929190620012dc565b86156200085a576001600160a01b03808616600090815260996020908152604091829020548251635f64b55b60e01b815292516200085a9433949216928c928492635f64b55b926004808401939192918290030181865afa158015620007b8573d6000803e3d6000fd5b85156200088a576001600160a01b038086166000818152609960205260409020546200088a9233911689620012dc565b6001600160a01b038581166000908152609960205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af1158015620008fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000921919062001ab2565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b3362000982620009b5565b6001600160a01b031614620009ab5760405162461bcd60e51b81526004016200031190620019f4565b6200032462001338565b6065546001600160a01b031690565b600054610100900460ff16620009e15760005460ff1615620009eb565b620009eb62001394565b62000a505760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000311565b600054610100900460ff1615801562000a73576000805461ffff19166101011790555b62000a7d620013a7565b62000a87620013db565b60405162000a9590620016fb565b604051809103906000f08015801562000ab2573d6000803e3d6000fd5b5060405162000ac19062001709565b62000acd919062001878565b604051809103906000f08015801562000aea573d6000803e3d6000fd5b50609780546001600160a01b0319166001600160a01b039290921691909117905562000b168262000dba565b801562000b29576000805461ff00191690555b5050565b6098546001600160a01b0316331462000b4557600080fd5b60335460ff161562000b6b5760405162461bcd60e51b8152600401620003119062001a29565b6001600160a01b038981166000908152609960205260409020541662000b9057600080fd5b6001600160a01b03808a16600090815260996020526040908190205490516373ad67d760e01b81529116906373ad67d79062000bdf908b908b908b908b908b908b908b908b9060040162001b2e565b600060405180830381600087803b15801562000bfa57600080fd5b505af115801562000c0f573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b3362000c5d620009b5565b6001600160a01b03161462000c865760405162461bcd60e51b81526004016200031190620019f4565b609880546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260996020526040812054909182918291161562000d88576001600160a01b03808516600090815260996020908152604091829020548251637d88209760e01b81529251931692637d8820979260048082019392918290030181865afa15801562000d4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d74919062001a78565b925062000d82848462000f07565b90925090505b9193909250565b609a818154811062000da057600080fd5b6000918252602090912001546001600160a01b0316905081565b3362000dc5620009b5565b6001600160a01b03161462000dee5760405162461bcd60e51b81526004016200031190620019f4565b6001600160a01b03811662000e0257600080fd5b62000e0d81620011b3565b60975460405163f2fde38b60e01b81526001600160a01b039091169063f2fde38b9062000e3f90849060040162001878565b600060405180830381600087803b15801562000e5a57600080fd5b505af115801562000e6f573d6000803e3d6000fd5b5050505050565b60335460ff1662000ec15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640162000311565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405162000efd919062001878565b60405180910390a1565b6001600160a01b03828116600090815260996020526040812054909182911615620011ac576000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f93919062001a78565b6001600160a01b0380871660009081526099602090815260409182902054825162fc63d160e41b815292519495508594931692630fc63d109260048082019392918290030181865afa15801562000fee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001014919062001a92565b6001600160a01b03166370a08231876040518263ffffffff1660e01b815260040162001041919062001878565b602060405180830381865afa1580156200105f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001085919062001a78565b62001091908662001b96565b6200109d919062001bc4565b6001600160a01b03808716600090815260996020908152604091829020548251635f64b55b60e01b815292519497508594931692635f64b55b9260048082019392918290030181865afa158015620010f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200111f919062001a92565b6001600160a01b03166370a08231876040518263ffffffff1660e01b81526004016200114c919062001878565b602060405180830381865afa1580156200116a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001190919062001a78565b6200119c908662001b96565b620011a8919062001bc4565b9150505b9250929050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460405160009182916001600160a01b039091169063189acdbd60e31b906200123590869060240162001878565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620012749062001717565b6200128192919062001c44565b604051809103906000f0801580156200129e573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052620006849085906200140f565b60335460ff16156200135e5760405162461bcd60e51b8152600401620003119062001a29565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25862000eee3390565b6000620013a130620014ed565b15905090565b600054610100900460ff16620013d15760405162461bcd60e51b8152600401620003119062001c6a565b62000324620014fc565b600054610100900460ff16620014055760405162461bcd60e51b8152600401620003119062001c6a565b6200032462001532565b600062001466826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620015679092919063ffffffff16565b805190915015620014e8578080602001905181019062001487919062001cb5565b620014e85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000311565b505050565b6001600160a01b03163b151590565b600054610100900460ff16620015265760405162461bcd60e51b8152600401620003119062001c6a565b6033805460ff19169055565b600054610100900460ff166200155c5760405162461bcd60e51b8152600401620003119062001c6a565b6200032433620011b3565b606062001578848460008562001582565b90505b9392505050565b606082471015620015e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000311565b620015f085620014ed565b6200163e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000311565b600080866001600160a01b031685876040516200165c919062001cd5565b60006040518083038185875af1925050503d80600081146200169b576040519150601f19603f3d011682016040523d82523d6000602084013e620016a0565b606091505b5091509150620016b2828286620016bd565b979650505050505050565b60608315620016ce5750816200157b565b825115620016df5782518084602001fd5b8160405162461bcd60e51b815260040162000311919062001cf3565b61364b8062001d0983390190565b610523806200535483390190565b610966806200587783390190565b6001600160a01b03811681146200173b57600080fd5b50565b80151581146200173b57600080fd5b600080600080608085870312156200176457600080fd5b8435620017718162001725565b93506020850135925060408501356200178a816200173e565b915060608501356200179c8162001725565b939692955090935050565b60008060408385031215620017bb57600080fd5b8235620017c88162001725565b91506020830135620017da8162001725565b809150509250929050565b600080600060608486031215620017fb57600080fd5b8335620018088162001725565b95602085013595506040909401359392505050565b600080600080600060a086880312156200183657600080fd5b8535945060208601359350604086013592506060860135620018588162001725565b915060808601356200186a8162001725565b809150509295509295909350565b6001600160a01b0391909116815260200190565b6000602082840312156200189f57600080fd5b81356200157b8162001725565b60008083601f840112620018bf57600080fd5b5081356001600160401b03811115620018d757600080fd5b6020830191508360208260051b8501011115620011ac57600080fd5b600080600080600080600080600060a08a8c0312156200191257600080fd5b89356200191f8162001725565b985060208a01356001600160401b03808211156200193c57600080fd5b6200194a8d838e01620018ac565b909a50985060408c01359150808211156200196457600080fd5b620019728d838e01620018ac565b909850965060608c01359150808211156200198c57600080fd5b6200199a8d838e01620018ac565b909650945060808c0135915080821115620019b457600080fd5b50620019c38c828d01620018ac565b915080935050809150509295985092959850929598565b600060208284031215620019ed57600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000806040838503121562001a6757600080fd5b505080516020909101519092909150565b60006020828403121562001a8b57600080fd5b5051919050565b60006020828403121562001aa557600080fd5b81516200157b8162001725565b60008060006060848603121562001ac857600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b8581101562001b2357813562001b078162001725565b6001600160a01b03168752958201959082019060010162001af1565b509495945050505050565b60808152600062001b44608083018a8c62001ae1565b828103602084015262001b5981898b62001ae1565b9050828103604084015262001b7081878962001ae1565b9050828103606084015262001b8781858762001ae1565b9b9a5050505050505050505050565b600081600019048311821515161562001bbf57634e487b7160e01b600052601160045260246000fd5b500290565b60008262001be257634e487b7160e01b600052601260045260246000fd5b500490565b60005b8381101562001c0457818101518382015260200162001bea565b83811115620006845750506000910152565b6000815180845262001c3081602086016020860162001be7565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620015789083018462001c16565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121562001cc857600080fd5b81516200157b816200173e565b6000825162001ce981846020870162001be7565b9190910192915050565b6020815260006200157b602083018462001c1656fe60a06040523060805234801561001457600080fd5b50600160685560805161360161004a6000396000818161061801528181610661015281816109c20152610a0201526136016000f3fe6080604052600436106101265760003560e01c80630103c92b1461012b57806306fdde031461015e578063095ea7b31461019d5780630fc63d10146101cd57806318160ddd146101fa57806323b872dd146102105780632a8dc13114610230578063313ce567146102505780633659cfe614610277578063430004c114610299578063452ed4f1146102ce5780634f1ef286146102ee5780635f64b55b1461030157806370a082311461032157806373ad67d71461034e5780637d8820971461036e5780638da5cb5b1461038457806395d89b4114610399578063a9059cbb146103c8578063c4d66de8146103e8578063dd62ed3e14610408578063e8da9d4814610440578063f106845414610460578063f7c618c114610476578063fad3cc4b14610496575b600080fd5b34801561013757600080fd5b5061014b610146366004612b38565b6104d1565b6040519081526020015b60405180910390f35b34801561016a57600080fd5b50610190604051806040016040528060068152602001650556e6f2d4c560d41b81525081565b6040516101559190612b85565b3480156101a957600080fd5b506101bd6101b8366004612bb8565b610562565b6040519015158152602001610155565b3480156101d957600080fd5b50606c546101ed906001600160a01b031681565b6040516101559190612be4565b34801561020657600080fd5b5061014b60005481565b34801561021c57600080fd5b506101bd61022b366004612bf8565b610578565b34801561023c57600080fd5b50606a546101ed906001600160a01b031681565b34801561025c57600080fd5b50610265601281565b60405160ff9091168152602001610155565b34801561028357600080fd5b50610297610292366004612b38565b61060d565b005b3480156102a557600080fd5b506102b96102b4366004612c47565b6106df565b60408051928352602083019190915201610155565b3480156102da57600080fd5b50606b546101ed906001600160a01b031681565b6102976102fc366004612ce0565b6109b7565b34801561030d57600080fd5b50606d546101ed906001600160a01b031681565b34801561032d57600080fd5b5061014b61033c366004612b38565b60016020526000908152604090205481565b34801561035a57600080fd5b50610297610369366004612dd2565b610a71565b34801561037a57600080fd5b5061014b60785481565b34801561039057600080fd5b506101ed611196565b3480156103a557600080fd5b50610190604051806040016040528060038152602001620554c560ec1b81525081565b3480156103d457600080fd5b506101bd6103e3366004612bb8565b6111a5565b3480156103f457600080fd5b50610297610403366004612b38565b6111b2565b34801561041457600080fd5b5061014b610423366004612e95565b600260209081526000928352604080842090915290825290205481565b34801561044c57600080fd5b5061029761045b366004612ece565b6118de565b34801561046c57600080fd5b5061014b606f5481565b34801561048257600080fd5b506069546101ed906001600160a01b031681565b3480156104a257600080fd5b506104b66104b1366004612ef0565b6118fa565b60408051938452602084019290925290820152606001610155565b6001600160a01b0381166000908152607760209081526040808320607254845290915281205460ff161561051b57506001600160a01b031660009081526074602052604090205490565b60005461052a57506000919050565b600080546001600160a01b038416825260016020526040909120546078546105529190612f3c565b61055c9190612f5b565b92915050565b600061056f338484611bc7565b50600192915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146105f7576001600160a01b03841660009081526002602090815260408083203384529091529020546105d29083611c29565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610602848484611c35565b5060015b9392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561065f5760405162461bcd60e51b815260040161065690612f7d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610691611cc9565b6001600160a01b0316146106b75760405162461bcd60e51b815260040161065690612fb7565b6106c081611ce5565b604080516000808252602082019092526106dc91839190611d01565b50565b600080336106eb611196565b6001600160a01b0316146106fe57600080fd5b600260685414156107215760405162461bcd60e51b815260040161065690612ff1565b6002606855841580159061074c57506001600160a01b03861660009081526074602052604090205415155b61075557600080fd5b61075e86611e48565b600043607054111561077f57436070546107789190613028565b9050610791565b600260735461078e9190612f5b565b90505b6000607954826078546107a49190612f3c565b6107ae919061303f565b905060006107bc8389612f3c565b6107c69083613028565b6001600160a01b038a16600090815260746020526040812080549293508a929091906107f3908490613028565b92505081905550876078600082825461080c9190613028565b90915550506071548290610821908390612f3c565b61082b9190612f5b565b60715561083983828b611fd8565b606f54604051630ad58d2f60e01b815260008051602061356583398151915291630ad58d2f9161087091908c903090600401613057565b600060405180830381600087803b15801561088a57600080fd5b505af115801561089e573d6000803e3d6000fd5b5050505086156108ce57606b546108bf906001600160a01b0316878a612177565b600080945094505050506109a7565b606c54606d546000805160206135058339815191529163baa2abde916001600160a01b0391821691168b6000808c6109084261025861303f565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af115801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e9190613076565b90955093505050505b6001606855909590945092505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a005760405162461bcd60e51b815260040161065690612f7d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a32611cc9565b6001600160a01b031614610a585760405162461bcd60e51b815260040161065690612fb7565b610a6182611ce5565b610a6d82826001611d01565b5050565b33610a7a611196565b6001600160a01b031614610a8d57600080fd5b60026068541415610ab05760405162461bcd60e51b815260040161065690612ff1565b6002606855607854610ac157600080fd5b606f54604051630c7e663b60e11b81526004810191909152306024820152600080516020613565833981519152906318fccc7690604401600060405180830381600087803b158015610b1257600080fd5b505af1158015610b26573d6000803e3d6000fd5b50506069546040516370a0823160e01b815260009350600292506001600160a01b03909116906370a0823190610b60903090600401612be4565b602060405180830381865afa158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba1919061309a565b610bab9190612f5b565b90506000610bbb4261025861303f565b606e549091506001600160a01b031615610d9857606a546040516370a0823160e01b81526000916002916001600160a01b03909116906370a0823190610c05903090600401612be4565b602060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c46919061309a565b610c509190612f5b565b606a54606c549192506001600160a01b03918216911614610cf9576000805160206135058339815191526001600160a01b03166338ed17398260008e8e30886040518763ffffffff1660e01b8152600401610cb0969594939291906130b3565b6000604051808303816000875af1158015610ccf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cf791908101906131b4565b505b606a54606d546001600160a01b03908116911614610d96576040516338ed173960e01b8152600080516020613505833981519152906338ed173990610d4d9084906000908e908e9030908a906004016130b3565b6000604051808303816000875af1158015610d6c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d9491908101906131b4565b505b505b606954606c546001600160a01b03908116911614610e35576040516338ed173960e01b8152600080516020613505833981519152906338ed173990610dec9085906000908b908b90309089906004016130b3565b6000604051808303816000875af1158015610e0b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e3391908101906131b4565b505b606954606d546001600160a01b03908116911614610ed2576040516338ed173960e01b8152600080516020613505833981519152906338ed173990610e8990859060009089908990309089906004016130b3565b6000604051808303816000875af1158015610ea8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ed091908101906131b4565b505b606c546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610f03903090600401612be4565b602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f44919061309a565b606d546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610f7a903090600401612be4565b602060405180830381865afa158015610f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbb919061309a565b606c54606d5460405162e8e33760e81b81529293506000805160206135058339815191529263e8e337009261100e926001600160a01b039182169291169087908790600190819030908d906004016131e8565b6060604051808303816000875af115801561102d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110519190613231565b5050606b546040516370a0823160e01b8152600092506001600160a01b03909116906370a0823190611087903090600401612be4565b602060405180830381865afa1580156110a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c8919061309a565b905080156111515780607860008282546110e2919061303f565b9091555050606f54604051638dbdbe6d60e01b815260008051602061356583398151915291638dbdbe6d9161111e919085903090600401613057565b600060405180830381600087803b15801561113857600080fd5b505af115801561114c573d6000803e3d6000fd5b505050505b60725461115e9043613028565b607381905561117e908290611173904361303f565b607191909155607055565b50504360725550506001606855505050505050505050565b6036546001600160a01b031690565b600061056f338484611c35565b600354610100900460ff166111cd5760035460ff16156111d5565b6111d56121cd565b6111f15760405162461bcd60e51b81526004016106569061325f565b600354610100900460ff16158015611213576003805461ffff19166101011790555b61121b6121de565b61122482612263565b606f819055506000805160206135658339815191526001600160a01b031663ab560e106040518163ffffffff1660e01b8152600401602060405180830381865afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a91906132ad565b606980546001600160a01b0319166001600160a01b0392909216919091179055606f5460405163c346253d60e01b815260048101919091526000805160206135658339815191529063c346253d90602401602060405180830381865afa158015611308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132c91906132ad565b606e80546001600160a01b0319166001600160a01b039290921691821790551561141a57606e54606f5460405163d63b3c4960e01b8152600481019190915260006024820181905260448201819052916001600160a01b03169063d63b3c4990606401600060405180830381865afa1580156113ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113d491908101906132ca565b509050806000815181106113ea576113ea61338e565b6020026020010151606a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b606f546040516378ed5d1f60e01b81526004810191909152600080516020613565833981519152906378ed5d1f90602401602060405180830381865afa158015611468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148c91906132ad565b606b80546001600160a01b0319166001600160a01b0392909216918217905560408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa1580156114e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150a91906132ad565b606c80546001600160a01b0319166001600160a01b03928316179055606b546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015611568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158c91906132ad565b606d80546001600160a01b0319166001600160a01b03928316179055606b5460405163095ea7b360e01b815260001992919091169063095ea7b3906115e5906000805160206135658339815191529085906004016133a4565b6020604051808303816000875af1158015611604573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162891906133bd565b50606b5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611669906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ac91906133bd565b5060695460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906116ed906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af115801561170c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173091906133bd565b50606a5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611771906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b491906133bd565b50606c5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b3906117f5906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611814573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183891906133bd565b50606d5460405163095ea7b360e01b81526001600160a01b039091169063095ea7b390611879906000805160206135058339815191529085906004016133a4565b6020604051808303816000875af1158015611898573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bc91906133bd565b50504360725562124f806073558015610a6d576003805461ff00191690555050565b336118e7611196565b6001600160a01b03161461117357600080fd5b6000808033611907611196565b6001600160a01b03161461191a57600080fd5b6002606854141561193d5760405162461bcd60e51b815260040161065690612ff1565b6002606855600087158015906119535750600087115b15611a0157606c54606d546000805160206135058339815191529163e8e33700916001600160a01b0391821691168b8b600080306119934261025861303f565b6040518963ffffffff1660e01b81526004016119b69897969594939291906131e8565b6060604051808303816000875af11580156119d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f99190613231565b919550935090505b611a0b868261303f565b915060008211611a1a57600080fd5b611a2385611e48565b6000436070541115611a445743607054611a3d9190613028565b9050611a56565b6002607354611a539190612f5b565b90505b600060795482607854611a699190612f3c565b611a73919061303f565b9050600081611a828487612f3c565b611a8c919061303f565b6001600160a01b038916600090815260746020526040812080549293508792909190611ab990849061303f565b925050819055508460786000828254611ad2919061303f565b90915550508115611afa578181607154611aec9190612f3c565b611af69190612f5b565b6071555b611b0583828a612396565b606f54604051638dbdbe6d60e01b815260008051602061356583398151915291638dbdbe6d91611b3c919089903090600401613057565b600060405180830381600087803b158015611b5657600080fd5b505af1158015611b6a573d6000803e3d6000fd5b50505050611b9188888d611b7e9190613028565b606c546001600160a01b03169190612177565b611bb288611b9f888d613028565b606d546001600160a01b03169190612177565b50506001606855509297919650945092505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106068284613028565b6001600160a01b038316600090815260016020526040902054611c589082611c29565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611c879082612506565b6001600160a01b0380841660008181526001602052604090819020939093559151908516906000805160206135ac83398151915290611c1c9085815260200190565b600080516020613545833981519152546001600160a01b031690565b33611cee611196565b6001600160a01b0316146106dc57600080fd5b6000611d0b611cc9565b9050611d1684612512565b600083511180611d235750815b15611d3457611d3284846125a5565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16611e4157805460ff19166001178155604051611daf908690611d80908590602401612be4565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526125a5565b50805460ff19168155611dc0611cc9565b6001600160a01b0316826001600160a01b031614611e385760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610656565b611e41856125ca565b5050505050565b6001600160a01b0381166000908152607760209081526040808320607254845290915290205460ff1615611ee2576001600160a01b038116600090815260746020908152604080832054607690925290912054611ea59043613028565b611eaf9190612f3c565b6001600160a01b03821660009081526075602052604081208054909190611ed790849061303f565b90915550611f579050565b611eeb816104d1565b6001600160a01b0382166000908152607460205260409020819055607254611f139043613028565b611f1d9190612f3c565b6001600160a01b038216600090815260756020908152604080832093909355607781528282206072548352905220805460ff191660011790555b607254607a541115611f9957607854607a54611f739043613028565b611f7d9190612f3c565b60796000828254611f8e919061303f565b90915550611fb79050565b607854607254611fa99043613028565b611fb39190612f3c565b6079555b6001600160a01b031660009081526076602052604090204390819055607a55565b6001600160a01b03811660009081526074602052604090205461201e576001600160a01b03811660009081526001602052604090205461201990829061260a565b505050565b600080546001600160a01b03831682526001602052604090912054141561204457505050565b6001600160a01b0381166000908152607560209081526040808320546074909252822054849190612076908790612f3c565b612080919061303f565b60715461208d9190612f3c565b6120979190612f5b565b905060006071546078546120ab919061303f565b6001600160a01b0384166000908152607460205260409020546120cf90849061303f565b6120db6012600a6134be565b6120e59190612f3c565b6120ef9190612f5b565b9050611e4183826121026012600a6134be565b61210c9190613028565b6121186012600a6134be565b6000546121259086612f3c565b61212f9190612f5b565b6001600160a01b0387166000908152600160205260409020546121529190613028565b61215e6012600a6134be565b6121689190612f3c565b6121729190612f5b565b61260a565b6120198363a9059cbb60e01b84846040516024016121969291906133a4565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261268a565b60006121d83061275c565b15905090565b600354610100900460ff166121f95760035460ff1615612201565b6122016121cd565b61221d5760405162461bcd60e51b81526004016106569061325f565b600354610100900460ff1615801561223f576003805461ffff19166101011790555b61224761276b565b61224f6127d8565b80156106dc576003805461ff001916905550565b600080805b6000805160206135658339815191526001600160a01b031663081e3eda6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d8919061309a565b811015612385576040516378ed5d1f60e01b8152600481018290526001600160a01b03851690600080516020613565833981519152906378ed5d1f90602401602060405180830381865afa158015612334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061235891906132ad565b6001600160a01b031614156123735780925060019150612385565b8061237d816134cd565b915050612268565b508061239057600080fd5b50919050565b6000546123b257612019816123ad6012600a6134be565b61285f565b600080546001600160a01b0383168252600160205260409091205414156123d857505050565b6001600160a01b038116600090815260756020908152604080832054607490925282205484919061240a908790612f3c565b612414919061303f565b6071546124219190612f3c565b61242b9190612f5b565b9050600060715460785461243f919061303f565b6001600160a01b03841660009081526074602052604090205461246390849061303f565b61246f6012600a6134be565b6124799190612f3c565b6124839190612f5b565b9050611e4183826124966012600a6134be565b6124a09190613028565b6001600160a01b0386166000908152600160205260409020546124c56012600a6134be565b6000546124d29087612f3c565b6124dc9190612f5b565b6124e69190613028565b6124f26012600a6134be565b6124fc9190612f3c565b6123ad9190612f5b565b6000610606828461303f565b803b6125765760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610656565b60008051602061354583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606106068383604051806060016040528060278152602001613585602791396128d0565b6125d381612512565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b03821660009081526001602052604090205461262d9082611c29565b6001600160a01b038316600090815260016020526040812091909155546126549082611c29565b60009081556040518281526001600160a01b038416906000805160206135ac833981519152906020015b60405180910390a35050565b60006126df826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129a49092919063ffffffff16565b80519091501561201957808060200190518101906126fd91906133bd565b6120195760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610656565b6001600160a01b03163b151590565b600354610100900460ff166127d65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610656565b565b600354610100900460ff166127f35760035460ff16156127fb565b6127fb6121cd565b6128175760405162461bcd60e51b81526004016106569061325f565b600354610100900460ff16158015612839576003805461ffff19166101011790555b603680546001600160a01b0319163317905580156106dc576003805461ff001916905550565b60005461286c9082612506565b60009081556001600160a01b0383168152600160205260409020546128919082612506565b6001600160a01b0383166000818152600160205260408082209390935591519091906000805160206135ac8339815191529061267e9085815260200190565b6060833b61292f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610656565b600080856001600160a01b03168560405161294a91906134e8565b600060405180830381855af49150503d8060008114612985576040519150601f19603f3d011682016040523d82523d6000602084013e61298a565b606091505b509150915061299a8282866129bb565b9695505050505050565b60606129b384846000856129f4565b949350505050565b606083156129ca575081610606565b8251156129da5782518084602001fd5b8160405162461bcd60e51b81526004016106569190612b85565b606082471015612a555760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610656565b612a5e8561275c565b612aaa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610656565b600080866001600160a01b03168587604051612ac691906134e8565b60006040518083038185875af1925050503d8060008114612b03576040519150601f19603f3d011682016040523d82523d6000602084013e612b08565b606091505b5091509150612b188282866129bb565b979650505050505050565b6001600160a01b03811681146106dc57600080fd5b600060208284031215612b4a57600080fd5b813561060681612b23565b60005b83811015612b70578181015183820152602001612b58565b83811115612b7f576000848401525b50505050565b6020815260008251806020840152612ba4816040850160208701612b55565b601f01601f19169190910160400192915050565b60008060408385031215612bcb57600080fd5b8235612bd681612b23565b946020939093013593505050565b6001600160a01b0391909116815260200190565b600080600060608486031215612c0d57600080fd5b8335612c1881612b23565b92506020840135612c2881612b23565b929592945050506040919091013590565b80151581146106dc57600080fd5b60008060008060808587031215612c5d57600080fd5b8435612c6881612b23565b9350602085013592506040850135612c7f81612c39565b91506060850135612c8f81612b23565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612cd857612cd8612c9a565b604052919050565b60008060408385031215612cf357600080fd5b8235612cfe81612b23565b91506020838101356001600160401b0380821115612d1b57600080fd5b818601915086601f830112612d2f57600080fd5b813581811115612d4157612d41612c9a565b612d53601f8201601f19168501612cb0565b91508082528784828501011115612d6957600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f840112612d9957600080fd5b5081356001600160401b03811115612db057600080fd5b6020830191508360208260051b8501011115612dcb57600080fd5b9250929050565b6000806000806000806000806080898b031215612dee57600080fd5b88356001600160401b0380821115612e0557600080fd5b612e118c838d01612d87565b909a50985060208b0135915080821115612e2a57600080fd5b612e368c838d01612d87565b909850965060408b0135915080821115612e4f57600080fd5b612e5b8c838d01612d87565b909650945060608b0135915080821115612e7457600080fd5b50612e818b828c01612d87565b999c989b5096995094979396929594505050565b60008060408385031215612ea857600080fd5b8235612eb381612b23565b91506020830135612ec381612b23565b809150509250929050565b60008060408385031215612ee157600080fd5b50508035926020909101359150565b60008060008060808587031215612f0657600080fd5b8435935060208501359250604085013591506060850135612c8f81612b23565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612f5657612f56612f26565b500290565b600082612f7857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602c9082015260008051602061352583398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c9082015260008051602061352583398151915260408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008282101561303a5761303a612f26565b500390565b6000821982111561305257613052612f26565b500190565b92835260208301919091526001600160a01b0316604082015260600190565b6000806040838503121561308957600080fd5b505080516020909101519092909150565b6000602082840312156130ac57600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b888110156131055783356130ea81612b23565b6001600160a01b0316825292820192908201906001016130d7565b506001600160a01b0396909616606085015250505060800152949350505050565b60006001600160401b0382111561313f5761313f612c9a565b5060051b60200190565b600082601f83011261315a57600080fd5b8151602061316f61316a83613126565b612cb0565b82815260059290921b8401810191818101908684111561318e57600080fd5b8286015b848110156131a95780518352918301918301613192565b509695505050505050565b6000602082840312156131c657600080fd5b81516001600160401b038111156131dc57600080fd5b6129b384828501613149565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b60008060006060848603121561324657600080fd5b8351925060208401519150604084015190509250925092565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000602082840312156132bf57600080fd5b815161060681612b23565b600080604083850312156132dd57600080fd5b82516001600160401b03808211156132f457600080fd5b818501915085601f83011261330857600080fd5b8151602061331861316a83613126565b82815260059290921b8401810191818101908984111561333757600080fd5b948201945b8386101561335e57855161334f81612b23565b8252948201949082019061333c565b9188015191965090935050508082111561337757600080fd5b5061338485828601613149565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03929092168252602082015260400190565b6000602082840312156133cf57600080fd5b815161060681612c39565b600181815b808511156134155781600019048211156133fb576133fb612f26565b8085161561340857918102915b93841c93908002906133df565b509250929050565b60008261342c5750600161055c565b816134395750600061055c565b816001811461344f576002811461345957613475565b600191505061055c565b60ff84111561346a5761346a612f26565b50506001821b61055c565b5060208310610133831016604e8410600b8410161715613498575081810a61055c565b6134a283836133da565b80600019048211156134b6576134b6612f26565b029392505050565b600061060660ff84168361341d565b60006000198214156134e1576134e1612f26565b5060010190565b600082516134fa818460208701612b55565b919091019291505056fe0000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b4799750646756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc0000000000000000000000000769fd68dfb93167989c6f7254cd0d766fb2841f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204762b8a11f3f4a0bff7ddd8bb2d3065dc63a758346c672600a8e6ced6f2490bb64736f6c634300080a0033608060405234801561001057600080fd5b5060405161052338038061052383398101604081905261002f91610148565b61003833610047565b61004181610097565b50610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61021f1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b60006020828403121561015a57600080fd5b81516001600160a01b038116811461017157600080fd5b9392505050565b61039c806101876000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610301565b6100bd565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610135565b61007e610170565b61006f6100b8366004610301565b61017f565b336100c6610170565b6001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec90610331565b60405180910390fd5b6100fe81610225565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b3361013e610170565b6001600160a01b0316146101645760405162461bcd60e51b81526004016100ec90610331565b61016e60006102b1565b565b6000546001600160a01b031690565b33610188610170565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016100ec90610331565b6001600160a01b0381166102135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ec565b61021c816102b1565b50565b3b151590565b803b61028f5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100ec565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031357600080fd5b81356001600160a01b038116811461032a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220d3d4a860e145913f032ee28b0976994c159bea78f64580a84c890ece6cd002a064736f6c634300080a0033608060405260405161096638038061096683398101604081905261002291610479565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610539565b60008051602061091f833981519152146100695761006961055e565b6100758282600061007c565b50506105de565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610574565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610574565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061091f83398151915260001b61030a60201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161093f6027913961030d565b9392505050565b3b151590565b90565b6060833b61036c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b031685604051610387919061058f565b600060405180830381855af49150503d80600081146103c2576040519150601f19603f3d011682016040523d82523d6000602084013e6103c7565b606091505b5090925090506103d88282866103e2565b9695505050505050565b606083156103f15750816102fd565b8251156104015782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105ab565b80516001600160a01b038116811461043257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610468578181015183820152602001610450565b838111156101405750506000910152565b6000806040838503121561048c57600080fd5b6104958361041b565b60208401519092506001600160401b03808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610437565b604051601f8201601f19908116603f0116810190838211818310171561050057610500610437565b8160405282815288602084870101111561051957600080fd5b61052a83602083016020880161044d565b80955050505050509250929050565b60008282101561055957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561058657600080fd5b6102fd8261041b565b600082516105a181846020870161044d565b9190910192915050565b60208152600082518060208401526105ca81604085016020870161044d565b601f01601f19169190910160400192915050565b610332806105ed6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b6100f7565b565b606061004e83836040518060600160405280602781526020016102d66027913961011b565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f2919061022d565b905090565b3660008037600080366000845af43d6000803e808015610116573d6000f35b3d6000fd5b6060833b61017f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161019a9190610286565b600060405180830381855af49150503d80600081146101d5576040519150601f19603f3d011682016040523d82523d6000602084013e6101da565b606091505b50915091506101ea8282866101f4565b9695505050505050565b6060831561020357508161004e565b8251156102135782518084602001fd5b8160405162461bcd60e51b815260040161017691906102a2565b60006020828403121561023f57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610271578181015183820152602001610259565b83811115610280576000848401525b50505050565b60008251610298818460208701610256565b9190910192915050565b60208152600082518060208401526102c1816040850160208701610256565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208258630b867c85c689d251b2a041426fe5ea464e3b306f1e4e2dfe296d3f9c3864736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202b5cdc4121b2f5dc54b210c603ba5c3a1cbc9e5484c95af88a60ee0a4d41deab64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14933:42",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:42",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:42",
                "type": ""
              }
            ],
            "src": "14:177:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:86:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "264:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "275:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "295:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "286:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "286:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "282:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "271:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:31:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "261:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:42:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:42"
                  },
                  "nodeType": "YulIf",
                  "src": "251:70:42"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "230:5:42",
                "type": ""
              }
            ],
            "src": "196:131:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "374:76:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "397:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "411:13:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "404:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "404:21:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "394:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "394:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "387:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "387:40:42"
                  },
                  "nodeType": "YulIf",
                  "src": "384:60:42"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "363:5:42",
                "type": ""
              }
            ],
            "src": "332:118:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "573:474:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "620:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "629:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "632:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "622:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "622:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "622:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "594:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "603:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "590:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "590:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "615:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "586:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "583:53:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "645:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "671:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "658:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "649:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "715:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "690:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "690:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "690:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "730:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "740:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "730:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "754:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "764:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "805:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "837:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "848:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "820:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "809:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "883:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "861:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "861:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "900:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "910:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "900:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "926:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "958:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "969:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "954:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "941:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "930:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1007:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "982:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1024:17:42",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1034:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1024:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "515:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "526:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "538:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "546:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "554:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "562:6:42",
                "type": ""
              }
            ],
            "src": "455:592:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:119:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1203:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1191:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1244:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1271:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1282:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1267:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1267:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1287:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1260:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1260:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1153:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1172:4:42",
                "type": ""
              }
            ],
            "src": "1052:248:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:301:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1438:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1447:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1440:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1440:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1440:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1405:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1402:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1463:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1489:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1476:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1467:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1533:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1508:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1508:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1548:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1558:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1572:47:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1604:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1600:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1587:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:32:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1576:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1653:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1628:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1680:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1350:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1361:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1373:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1381:6:42",
                "type": ""
              }
            ],
            "src": "1305:388:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:162:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1877:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1907:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1918:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1961:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1934:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1934:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1988:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1999:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1984:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1984:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2004:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1977:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1977:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1977:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1808:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1819:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1827:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1835:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1846:4:42",
                "type": ""
              }
            ],
            "src": "1698:319:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2117:92:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2127:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2150:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2135:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2127:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2169:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2194:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2187:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2187:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2180:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2180:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2162:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2162:41:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2086:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2097:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2108:4:42",
                "type": ""
              }
            ],
            "src": "2022:187:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2318:279:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2364:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2373:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2376:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2366:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2366:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2366:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2339:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2348:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2360:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2331:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2331:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "2328:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2389:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2415:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2402:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2402:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2393:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2459:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2434:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2434:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2434:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2474:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2484:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2474:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2498:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2525:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2536:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2521:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2521:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2508:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2508:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2498:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2549:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2576:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2587:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2572:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2572:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2559:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2559:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2549:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2268:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2279:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2291:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2299:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2307:6:42",
                "type": ""
              }
            ],
            "src": "2214:383:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2740:456:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2787:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2796:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2799:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2789:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2789:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2789:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2761:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2770:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2757:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2757:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2782:3:42",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2753:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2753:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "2750:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2812:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2835:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2822:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2812:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2854:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2881:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2892:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2877:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2877:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2864:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2864:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2854:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2905:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2932:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2943:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2928:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2915:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2915:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2905:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2956:45:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2986:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2997:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2982:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2982:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2969:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2969:32:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2960:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3035:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3010:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3010:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3050:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3060:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3074:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3106:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3117:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3102:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3102:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3089:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:33:42"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3078:7:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3156:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3131:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3131:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3131:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3173:17:42",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3183:7:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3173:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2674:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2685:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2697:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2705:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2713:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2721:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2729:6:42",
                "type": ""
              }
            ],
            "src": "2602:594:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3302:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3312:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3324:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3335:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3320:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3320:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3312:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3354:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3369:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3385:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3390:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3381:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3381:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3394:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3377:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3377:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3365:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3365:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3347:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3347:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3347:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3271:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3282:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3293:4:42",
                "type": ""
              }
            ],
            "src": "3201:203:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3479:177:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3525:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3534:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3537:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3527:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3527:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3527:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3500:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3509:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3496:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3496:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3521:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3492:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3489:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3550:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3576:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3563:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3563:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3554:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3620:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3595:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3595:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3595:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3635:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3645:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3635:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3445:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3456:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3468:6:42",
                "type": ""
              }
            ],
            "src": "3409:247:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3745:283:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3794:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3803:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3806:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3796:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3796:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3796:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3773:6:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3781:4:42",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3769:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3769:17:42"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3788:3:42"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3765:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3765:27:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3758:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3758:35:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3755:55:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3819:30:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3842:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3829:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3829:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3819:6:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3892:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3901:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3904:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3894:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3894:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3894:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3864:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3880:2:42",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3884:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3876:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3876:10:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3888:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3872:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3872:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3861:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3861:30:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3858:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3917:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3933:6:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3941:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3929:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3929:17:42"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "3917:8:42"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4006:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4015:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4018:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4008:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4008:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4008:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3969:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3981:1:42",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3984:6:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3977:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3977:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3965:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3965:27:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3994:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3961:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3961:38:42"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4001:3:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3958:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:47:42"
                  },
                  "nodeType": "YulIf",
                  "src": "3955:67:42"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3708:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3716:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "3724:8:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3734:6:42",
                "type": ""
              }
            ],
            "src": "3661:367:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4311:1262:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4358:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4367:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4370:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4360:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4360:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4360:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4332:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4341:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4328:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4328:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4353:3:42",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4324:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4324:33:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4321:53:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4383:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4409:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4396:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4396:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4387:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4453:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4428:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4428:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4428:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4468:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4478:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4468:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4492:46:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4523:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4534:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4519:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4519:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4506:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4506:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4496:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4547:28:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4565:2:42",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4569:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4561:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4561:10:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4573:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4557:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4557:18:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4551:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4602:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4611:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4614:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4604:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4604:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4604:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4590:6:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4598:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4587:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4587:14:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4584:34:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4627:96:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4695:9:42"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4706:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4691:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4691:22:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4715:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4653:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:70:42"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "4631:8:42",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "4641:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4732:18:42",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "4742:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4732:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4759:18:42",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "4769:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4759:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4786:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4819:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4830:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4815:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4815:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4802:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4802:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4790:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4863:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4872:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4875:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4865:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4865:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4865:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4849:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4859:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4846:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4846:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "4843:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4888:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4956:9:42"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4967:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4952:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4952:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4978:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4914:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4914:72:42"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "4892:8:42",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "4902:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4995:18:42",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "5005:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4995:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5022:18:42",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "5032:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5022:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5049:48:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5082:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5093:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5078:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5078:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5065:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5065:32:42"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "5053:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5126:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5135:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5138:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5128:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5128:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5128:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "5112:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5122:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5109:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5109:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5106:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5151:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5219:9:42"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "5230:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5215:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5215:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5241:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5177:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5177:72:42"
                  },
                  "variables": [
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "5155:8:42",
                      "type": ""
                    },
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "5165:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5258:18:42",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "5268:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5258:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5285:18:42",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "5295:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "5285:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5312:49:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5345:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5356:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5341:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5341:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5328:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5328:33:42"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "5316:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5390:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5399:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5402:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5392:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5392:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5392:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "5376:8:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5386:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5373:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5373:16:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5370:36:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5415:98:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5483:9:42"
                          },
                          {
                            "name": "offset_3",
                            "nodeType": "YulIdentifier",
                            "src": "5494:8:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5479:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5479:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5505:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5441:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5441:72:42"
                  },
                  "variables": [
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "5419:8:42",
                      "type": ""
                    },
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "5429:8:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5522:18:42",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "5532:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "5522:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5549:18:42",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "5559:8:42"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "5549:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4213:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4224:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4236:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4244:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4252:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4260:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4268:6:42",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4276:6:42",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4284:6:42",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "4292:6:42",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "4300:6:42",
                "type": ""
              }
            ],
            "src": "4033:1540:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5648:110:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5694:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5703:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5706:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5696:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5696:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5696:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5669:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5678:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5665:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5665:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5690:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5661:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5661:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5658:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5719:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5742:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5729:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5729:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5719:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5614:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5625:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5637:6:42",
                "type": ""
              }
            ],
            "src": "5578:180:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5897:102:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5907:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5919:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5930:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5915:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5915:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5907:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5949:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5964:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5980:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5985:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5976:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5976:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5989:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5972:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5972:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5960:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5960:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5942:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5942:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5942:51:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SushiswapFarmUpgradeable_$9273__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5866:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5877:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5888:4:42",
                "type": ""
              }
            ],
            "src": "5763:236:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6178:182:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6195:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6206:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6188:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6229:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6240:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6225:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6225:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6245:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6218:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6218:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6218:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6268:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6279:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6264:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6264:18:42"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6284:34:42",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6257:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6257:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6257:62:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6328:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6340:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6351:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6336:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6336:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6328:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6155:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6169:4:42",
                "type": ""
              }
            ],
            "src": "6004:356:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6539:166:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6556:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6567:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6549:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6590:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6601:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6586:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6586:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6606:2:42",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6579:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6579:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6579:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6629:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6640:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6625:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6625:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6645:18:42",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6618:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:46:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6618:46:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6673:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6685:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6696:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6681:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6681:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6673:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6516:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6530:4:42",
                "type": ""
              }
            ],
            "src": "6365:340:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6889:278:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6899:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6911:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6922:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6907:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6907:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6899:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6935:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6953:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6958:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6949:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6949:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6962:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6945:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6945:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6939:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6980:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6995:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7003:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6991:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6991:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6973:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6973:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6973:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7027:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7038:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7023:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7023:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7043:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7016:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7016:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7016:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7070:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7081:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7066:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7066:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7100:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7093:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7093:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7086:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7086:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7059:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7059:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7059:50:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7129:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7140:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7125:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7125:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7149:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7157:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7145:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7145:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7118:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7118:43:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6834:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6845:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6853:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6861:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6869:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6880:4:42",
                "type": ""
              }
            ],
            "src": "6710:457:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7270:147:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7316:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7325:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7328:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7318:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7318:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7318:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7291:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7300:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7287:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7287:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7312:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7283:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7283:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7280:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7341:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7357:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7351:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7351:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7341:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7376:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7396:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7407:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7392:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7392:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7386:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7376:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7228:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7239:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7251:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7259:6:42",
                "type": ""
              }
            ],
            "src": "7172:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7503:103:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7549:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7558:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7561:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7551:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7551:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7551:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7524:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7533:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7520:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7520:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7545:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7516:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7516:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7513:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7574:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7590:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7584:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7584:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7574:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7469:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7480:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7492:6:42",
                "type": ""
              }
            ],
            "src": "7422:184:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7692:170:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7738:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7747:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7750:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7740:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7740:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7740:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7713:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7722:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7709:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7709:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7734:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7705:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7705:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "7702:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7763:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7782:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7776:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7776:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7767:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7826:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7801:24:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7801:31:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7801:31:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7841:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7851:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7841:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7658:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7669:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7681:6:42",
                "type": ""
              }
            ],
            "src": "7611:251:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8052:232:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8062:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8074:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8085:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8070:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8070:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8062:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8105:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8116:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8098:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8098:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8098:25:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8143:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8154:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8139:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8139:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8159:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8132:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8132:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8132:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8186:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8197:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8182:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8182:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8202:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8175:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8175:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8175:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8229:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8240:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8225:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8225:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "8249:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8265:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8270:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8261:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8261:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8274:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8257:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8257:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8245:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8245:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8218:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8218:60:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8218:60:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7997:9:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8008:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8016:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8024:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8032:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8043:4:42",
                "type": ""
              }
            ],
            "src": "7867:417:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8404:191:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8450:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8459:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8462:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8452:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8452:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8452:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8425:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8434:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8421:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8421:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8446:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8417:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8417:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "8414:52:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8475:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8491:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8485:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8485:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8475:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8510:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8530:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8541:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8526:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8526:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8520:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8520:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8510:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8554:35:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8574:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8585:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8570:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8570:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8564:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8564:25:42"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8554:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8354:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8365:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8377:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8385:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8393:6:42",
                "type": ""
              }
            ],
            "src": "8289:306:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8774:236:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8791:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8802:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8784:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8784:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8784:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8825:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8836:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8821:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8821:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8841:2:42",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8814:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8814:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8814:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8864:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8875:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8860:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8860:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8880:34:42",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8853:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8853:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8853:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8935:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8946:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8931:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8931:18:42"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8951:16:42",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8924:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8924:44:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8924:44:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8977:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8989:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9000:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8985:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8985:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8977:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8751:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8765:4:42",
                "type": ""
              }
            ],
            "src": "8600:410:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9093:444:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9110:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9115:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9103:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9103:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9103:19:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9131:14:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9141:4:42",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9135:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9154:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9165:3:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9170:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9161:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9161:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9154:3:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9182:19:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9196:5:42"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "9186:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9210:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9219:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9214:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9278:234:42",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9292:35:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9320:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "9307:12:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9307:20:42"
                        },
                        "variables": [
                          {
                            "name": "value_1",
                            "nodeType": "YulTypedName",
                            "src": "9296:7:42",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "9365:7:42"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "9340:24:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9340:33:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9340:33:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9393:3:42"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9402:7:42"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9419:3:42",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9424:1:42",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "9415:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9415:11:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9428:1:42",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "9411:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9411:19:42"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "9398:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9398:33:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9386:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9386:46:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9386:46:42"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9445:19:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9456:3:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9461:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9452:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9452:12:42"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9445:3:42"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9477:25:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9491:6:42"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9499:2:42"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9487:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9487:15:42"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9477:6:42"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9240:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9243:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9237:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9237:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9251:18:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9253:14:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9262:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9265:1:42",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9258:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9258:9:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9253:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9233:3:42",
                    "statements": []
                  },
                  "src": "9229:283:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9521:10:42",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "9528:3:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9521:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9062:5:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9069:6:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9077:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9085:3:42",
                "type": ""
              }
            ],
            "src": "9015:522:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9967:558:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9984:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9995:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9977:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9977:22:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9977:22:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10008:88:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10060:6:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10068:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10080:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10091:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10076:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10076:19:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10022:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10022:74:42"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "10012:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10116:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10127:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10112:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10112:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "10136:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10144:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10132:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10132:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10105:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10105:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10105:50:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10164:75:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10216:6:42"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "10224:6:42"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "10232:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10178:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10178:61:42"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "10168:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10259:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10270:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10255:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10255:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "10279:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10287:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10275:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10275:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10248:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10248:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10248:50:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10307:75:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10359:6:42"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "10367:6:42"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "10375:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10321:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10321:61:42"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "10311:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10402:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10413:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10398:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10398:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulIdentifier",
                            "src": "10422:6:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10430:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10418:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10418:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10391:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10391:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10391:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10450:69:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "10496:6:42"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "10504:6:42"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "10512:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "10458:37:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10458:61:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10450:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9880:9:42",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "9891:6:42",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9899:6:42",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9907:6:42",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9915:6:42",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9923:6:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9931:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9939:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9947:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9958:4:42",
                "type": ""
              }
            ],
            "src": "9542:983:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10704:170:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10721:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10732:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10714:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10714:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10714:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10755:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10766:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10751:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10751:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10771:2:42",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10744:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10744:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10744:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10794:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10805:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10790:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10790:18:42"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10810:22:42",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10783:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10783:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10783:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10842:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10854:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10865:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10850:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10850:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10842:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10681:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10695:4:42",
                "type": ""
              }
            ],
            "src": "10530:344:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10931:213:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10998:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11019:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11026:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11031:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11022:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11022:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11012:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11012:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11012:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11063:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11066:4:42",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11056:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11056:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11056:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11091:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11094:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11084:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11084:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11084:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10962:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10955:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10955:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10948:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10948:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10970:1:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10981:1:42",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10977:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10977:6:42"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10985:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10973:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10973:14:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10967:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10967:21:42"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10944:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10944:45:42"
                  },
                  "nodeType": "YulIf",
                  "src": "10941:168:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11118:20:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11133:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11136:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11129:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11129:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11118:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10910:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10913:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10919:7:42",
                "type": ""
              }
            ],
            "src": "10879:265:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11195:171:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11226:111:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11247:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11254:3:42",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11259:10:42",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11250:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11250:20:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11240:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11240:31:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11240:31:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11291:1:42",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11294:4:42",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11284:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11284:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11284:15:42"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11319:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11322:4:42",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11312:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11312:15:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11312:15:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11215:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11208:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11208:9:42"
                  },
                  "nodeType": "YulIf",
                  "src": "11205:132:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11346:14:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11355:1:42"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11358:1:42"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11351:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11351:9:42"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11346:1:42"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11180:1:42",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11183:1:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11189:1:42",
                "type": ""
              }
            ],
            "src": "11149:217:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11424:205:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11434:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11443:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11438:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11503:63:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11528:3:42"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11533:1:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11524:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11524:11:42"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11547:3:42"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11552:1:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11543:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11543:11:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11537:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11537:18:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11517:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11517:39:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11517:39:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11464:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11467:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11461:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11461:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11475:19:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11477:15:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11486:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11489:2:42",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11482:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11482:10:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11477:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11457:3:42",
                    "statements": []
                  },
                  "src": "11453:113:42"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11592:31:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11605:3:42"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11610:6:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11601:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11601:16:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11619:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11594:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11594:27:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11594:27:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11581:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11584:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11578:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11578:13:42"
                  },
                  "nodeType": "YulIf",
                  "src": "11575:48:42"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11402:3:42",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11407:3:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11412:6:42",
                "type": ""
              }
            ],
            "src": "11371:258:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11683:208:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11693:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11713:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11707:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11707:12:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11697:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11735:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11740:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11728:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11728:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11728:19:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11782:5:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11789:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11778:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11778:16:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11800:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11805:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11796:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11796:14:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11812:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "11756:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11756:63:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11756:63:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11828:57:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11843:3:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11856:6:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11864:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11852:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11852:15:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11873:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11869:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11869:7:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11848:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11848:29:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11839:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11839:39:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11880:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11835:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11835:50:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11828:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11660:5:42",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11667:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11675:3:42",
                "type": ""
              }
            ],
            "src": "11634:257:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12043:167:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12060:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12075:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12091:3:42",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12096:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "12087:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12087:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12100:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "12083:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12083:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12071:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12071:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12053:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12053:51:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12053:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12124:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12135:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12120:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12120:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12140:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12113:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12113:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12113:30:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12152:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12177:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12189:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12200:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12185:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12185:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "12160:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12160:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12152:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12004:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12015:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12023:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12034:4:42",
                "type": ""
              }
            ],
            "src": "11896:314:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12372:218:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12382:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12394:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12405:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12390:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12390:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12382:4:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12417:29:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12435:3:42",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12440:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12431:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12431:11:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12444:1:42",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12427:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12427:19:42"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12421:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12462:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12477:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12485:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12473:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12473:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12455:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12455:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12455:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12509:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12520:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12505:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12505:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12529:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12537:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12525:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12525:15:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12498:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12498:43:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12498:43:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12561:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12572:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12557:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12557:18:42"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12577:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12550:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12550:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12550:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12325:9:42",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12336:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12344:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12352:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12363:4:42",
                "type": ""
              }
            ],
            "src": "12215:375:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12769:233:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12786:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12797:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12779:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12779:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12779:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12820:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12831:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12816:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12816:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12836:2:42",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12809:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12809:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12809:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12859:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12870:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12855:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12855:18:42"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12875:34:42",
                        "type": "",
                        "value": "Initializable: contract is not i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12848:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12848:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12848:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12930:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12941:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12926:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12926:18:42"
                      },
                      {
                        "hexValue": "6e697469616c697a696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12946:13:42",
                        "type": "",
                        "value": "nitializing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12919:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12919:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12919:41:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12969:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12981:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12992:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12977:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12977:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12969:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12746:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12760:4:42",
                "type": ""
              }
            ],
            "src": "12595:407:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13085:167:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13131:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13140:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13143:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13133:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13133:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13133:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13106:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13115:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13102:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13102:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13127:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13098:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13098:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "13095:52:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13156:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13175:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13169:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13169:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13160:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13216:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "13194:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13194:28:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13194:28:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13231:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13241:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13231:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13051:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13062:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13074:6:42",
                "type": ""
              }
            ],
            "src": "13007:245:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13431:232:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13448:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13459:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13441:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13441:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13441:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13482:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13493:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13478:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13478:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13498:2:42",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13471:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13471:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13471:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13521:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13532:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13517:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13517:18:42"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13537:34:42",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13510:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13510:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13510:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13592:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13603:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13588:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13588:18:42"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13608:12:42",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13581:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13581:40:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13581:40:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13630:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13642:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13653:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13638:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13638:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13630:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13408:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13422:4:42",
                "type": ""
              }
            ],
            "src": "13257:406:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13842:228:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13859:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13870:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13852:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13852:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13852:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13893:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13904:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13889:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13889:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13909:2:42",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13882:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13882:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13882:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13932:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13943:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13928:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13928:18:42"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13948:34:42",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13921:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13921:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13921:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14003:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14014:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13999:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13999:18:42"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14019:8:42",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13992:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13992:36:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13992:36:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14037:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14049:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14060:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14045:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14045:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14037:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13819:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13833:4:42",
                "type": ""
              }
            ],
            "src": "13668:402:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14249:179:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14266:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14277:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14259:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14259:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14259:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14300:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14311:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14296:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14296:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14316:2:42",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14289:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14289:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14289:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14339:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14350:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14335:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14335:18:42"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14355:31:42",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14328:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14328:59:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14328:59:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14396:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14408:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14419:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14404:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14404:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14396:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14226:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14240:4:42",
                "type": ""
              }
            ],
            "src": "14075:353:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14570:137:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14580:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14600:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14594:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14594:13:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14584:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14642:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14650:4:42",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14638:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14638:17:42"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14657:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14662:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14616:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14616:53:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14616:53:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14678:23:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14689:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14694:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14685:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14685:16:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14678:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14546:3:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14551:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14562:3:42",
                "type": ""
              }
            ],
            "src": "14433:274:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14833:98:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14850:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14861:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14843:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14843:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14843:21:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14873:52:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14898:6:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14910:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14921:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14906:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14906:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "14881:16:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14881:44:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14873:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14802:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14813:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14824:4:42",
                "type": ""
              }
            ],
            "src": "14712:219:42"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_3), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_SushiswapFarmUpgradeable_$9273__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_address_dyn_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_address_dyn_calldata(value4, value5, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        tail := abi_encode_array_address_dyn_calldata(value6, value7, tail_3)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "560:8968:23:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "560:8968:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7472:94;7544:7;:14;7472:94;;160:25:42;;;148:2;133:18;7472:94:23;;;;;;;;8230:67;;;:::i;:::-;;4059:362;;;;;;:::i;:::-;;:::i;:::-;;;;1226:25:42;;;1282:2;1267:18;;1260:34;;;;1199:18;4059:362:23;1052:248:42;6439:318:23;;;;;;:::i;:::-;;:::i;:::-;;;;1900:25:42;;;1956:2;1941:18;;1934:34;;;;1984:18;;;1977:34;1888:2;1873:18;6439:318:23;1698:319:42;1341:84:2;1411:7;;;;1341:84;;2187:14:42;;2180:22;2162:41;;2150:2;2135:18;1341:84:2;2022:187:42;4778:262:23;;;;;;:::i;:::-;;:::i;7987:164::-;;;:::i;2590:948::-;;;;;;:::i;:::-;;:::i;8159:63::-;;;:::i;1276:85:0:-;;;:::i;:::-;;;;;;;:::i;1069:26:23:-;;;;;-1:-1:-1;;;;;1069:26:23;;;1657:259;;;;;;:::i;:::-;;:::i;5526:559::-;;;;;;:::i;:::-;;:::i;1035:25::-;;;;;-1:-1:-1;;;;;1035:25:23;;;7574:169;;;;;;:::i;:::-;;:::i;7110:354::-;;;;;;:::i;:::-;;:::i;1146:24::-;;;;;;:::i;:::-;;:::i;7751:228::-;;;;;;:::i;:::-;;:::i;1102:37::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1102:37:23;;;8230:67;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;;;;;;;;;8279:10:23::1;:8;:10::i;:::-;8230:67::o:0;4059:362::-;4176:15;4193;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;4230:13:23;;::::1;4260:1;4230:13:::0;;;:5:::1;:13;::::0;;;;;::::1;4222:42;;;::::0;::::1;;-1:-1:-1::0;;;;;4296:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;:65;;-1:-1:-1;;;4296:65:23;;4319:10:::1;4296:65;::::0;::::1;6973:34:42::0;7023:18;;;7016:34;;;7093:14;;7086:22;7066:18;;;7059:50;7145:15;;;7125:18;;;7118:43;4296:13:23;::::1;::::0;:22:::1;::::0;6907:19:42;;4296:65:23::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4377:36;::::0;160:25:42;;;4275:86:23;;-1:-1:-1;4275:86:23;-1:-1:-1;;;;;;4377:36:23;::::1;::::0;4386:10:::1;::::0;4377:36:::1;::::0;148:2:42;133:18;4377:36:23::1;;;;;;;4059:362:::0;;;;;;;:::o;6439:318::-;-1:-1:-1;;;;;6579:13:23;;;6515:15;6579:13;;;:5;:13;;;;;;6515:15;;;;;;6579:13;:33;6575:175;;-1:-1:-1;;;;;6639:13:23;;;;;;;:5;:13;;;;;;;;:35;;-1:-1:-1;;;6639:35:23;;:13;;;:25;;:35;;6665:8;;6639:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6629:45;;6708:30;6722:6;6730:7;6708:13;:30::i;:::-;6689:49;;-1:-1:-1;6689:49:23;-1:-1:-1;6575:175:23;6439:318;;;;;:::o;4778:262::-;1573:11;;-1:-1:-1;;;;;1573:11:23;1559:10;:25;1551:34;;;;;;-1:-1:-1;;;;;4918:13:23;;::::1;4948:1;4918:13:::0;;;:5:::1;:13;::::0;;;;;::::1;4910:42;;;::::0;::::1;;-1:-1:-1::0;;;;;4963:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;:68;;-1:-1:-1;;;4963:68:23;;::::1;::::0;::::1;1226:25:42::0;;;1267:18;;;1260:34;;;4963:13:23;::::1;::::0;:31:::1;::::0;1199:18:42;;4963:68:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4778:262:::0;;;:::o;7987:164::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;8053:30:23::1;8080:1;8053:18;:30::i;:::-;8112:10;;;;;;;;;-1:-1:-1::0;;;;;8112:10:23::1;-1:-1:-1::0;;;;;8094:47:23::1;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7987:164::o:0;2590:948::-;2725:13;2740;2755:17;1655:8:2;1411:7;;;;;1341:84;1655:8;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2787:13:23;;::::1;2817:1;2787:13:::0;;;:5:::1;:13;::::0;;;;;::::1;2784:139;;2857:18;2868:6;2857:10;:18::i;:::-;-1:-1:-1::0;;;;;2836:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;:40;;;;;::::1;-1:-1:-1::0;;;;;;2836:40:23;;::::1;;::::0;;;2891:7:::1;:20:::0;;2836:40;2891:20;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;;::::0;;2784:139:::1;2938:11:::0;;2935:145:::1;;-1:-1:-1::0;;;;;3044:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;;;2983:22;;-1:-1:-1;;;2983:22:23;;;;2965:103:::1;::::0;3024:10:::1;::::0;3044:13;::::1;::::0;3060:7;;3044:13;;2983:20:::1;::::0;:22:::1;::::0;;::::1;::::0;3044:13;;2983:22;;;;;;3044:13;2983:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2965:58:23::1;::::0;:103;;:58:::1;:103::i;:::-;3093:11:::0;;3090:145:::1;;-1:-1:-1::0;;;;;3199:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;;;3138:22;;-1:-1:-1;;;3138:22:23;;;;3120:103:::1;::::0;3179:10:::1;::::0;3199:13;::::1;::::0;3215:7;;3199:13;;3138:20:::1;::::0;:22:::1;::::0;;::::1;::::0;3199:13;;3138:22;;;;;;3199:13;3138:22:::1;;;;;;;;;::::0;::::1;;;;3120:103;3248:12:::0;;3245:131:::1;;-1:-1:-1::0;;;;;3339:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;3276:88:::1;::::0;3319:10:::1;::::0;3339:13:::1;3355:8:::0;3276:42:::1;:88::i;:::-;-1:-1:-1::0;;;;;3416:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;:60;;-1:-1:-1;;;3416:60:23;;::::1;::::0;::::1;8098:25:42::0;;;8139:18;;;8132:34;;;8182:18;;;8175:34;;;8245:32;;;8225:18;;;8218:60;3416:13:23;::::1;::::0;:21:::1;::::0;8070:19:42;;3416:60:23::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3493:37;::::0;160:25:42;;;3388:88:23;;-1:-1:-1;3388:88:23;;-1:-1:-1;3388:88:23;-1:-1:-1;;;;;;3493:37:23;;::::1;::::0;;;::::1;::::0;::::1;::::0;148:2:42;133:18;3493:37:23::1;;;;;;;2590:948:::0;;;;;;;;;:::o;8159:63::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;8206:8:23::1;:6;:8::i;1276:85:0:-:0;1348:6;;-1:-1:-1;;;;;1348:6:0;;1276:85::o;1657:259:23:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;2385:16;:14;:16::i;:::-;2361:107;;;;-1:-1:-1;;;2361:107:1;;8802:2:42;2361:107:1;;;8784:21:42;8841:2;8821:18;;;8814:30;8880:34;8860:18;;;8853:62;-1:-1:-1;;;8931:18:42;;;8924:44;8985:19;;2361:107:1;8600:410:42;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;1727:17:23::1;:15;:17::i;:::-;1755:16;:14;:16::i;:::-;1847:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1803:66;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1782:10:23::1;:88:::0;;-1:-1:-1;;;;;;1782:88:23::1;-1:-1:-1::0;;;;;1782:88:23;;;::::1;::::0;;;::::1;::::0;;1881:27:::1;1899:8:::0;1881:17:::1;:27::i;:::-;2649:14:1::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;1657:259:23;:::o;5526:559::-;1573:11;;-1:-1:-1;;;;;1573:11:23;1559:10;:25;1551:34;;;;;;1411:7:2;;;;1654:9:::1;1646:38;;;;-1:-1:-1::0;;;1646:38:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5855:13:23;;::::2;5885:1;5855:13:::0;;;:5:::2;:13;::::0;;;;;::::2;5847:42;;;::::0;::::2;;-1:-1:-1::0;;;;;5911:13:23;;::::2;;::::0;;;:5:::2;:13;::::0;;;;;;;:132;;-1:-1:-1;;;5911:132:23;;:13;::::2;::::0;:24:::2;::::0;:132:::2;::::0;5936:26;;;;5964;;;;5992:24;;;;6018;;;;5911:132:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;6059:18:23::2;::::0;-1:-1:-1;;;;;6059:18:23;::::2;::::0;-1:-1:-1;6059:18:23::2;::::0;-1:-1:-1;6059:18:23;;::::2;5526:559:::0;;;;;;;;;:::o;7574:169::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;7657:11:23::1;:28:::0;;-1:-1:-1;;;;;;7657:28:23::1;-1:-1:-1::0;;;;;7657:28:23;::::1;::::0;;::::1;::::0;;;7701:34:::1;::::0;::::1;::::0;-1:-1:-1;;7701:34:23::1;7574:169:::0;:::o;7110:354::-;-1:-1:-1;;;;;7260:13:23;;;7172:23;7260:13;;;:5;:13;;;;;;7172:23;;;;;;7260:13;:33;7256:201;;-1:-1:-1;;;;;7328:13:23;;;;;;;:5;:13;;;;;;;;;;:29;;-1:-1:-1;;;7328:29:23;;;;:13;;;:27;;:29;;;;;:13;:29;;;;;;:13;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7310:47;;7407:38;7421:6;7429:15;7407:13;:38::i;:::-;7372:73;;-1:-1:-1;7372:73:23;-1:-1:-1;7256:201:23;7110:354;;;;;:::o;1146:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1146:24:23;;-1:-1:-1;1146:24:23;:::o;7751:228::-;929:10:6;1488:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1488:23:0;;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7841:22:23;::::1;7833:31;;;::::0;::::1;;7875:28;7894:8;7875:18;:28::i;:::-;7932:10;::::0;7914:57:::1;::::0;-1:-1:-1;;;7914:57:23;;-1:-1:-1;;;;;7932:10:23;;::::1;::::0;7914:47:::1;::::0;:57:::1;::::0;7962:8;;7914:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7751:228:::0;:::o;2353:117:2:-;1411:7;;;;1912:41;;;;-1:-1:-1;;;1912:41:2;;10732:2:42;1912:41:2;;;10714:21:42;10771:2;10751:18;;;10744:30;-1:-1:-1;;;10790:18:42;;;10783:50;10850:18;;1912:41:2;10530:344:42;1912:41:2;2411:7:::1;:15:::0;;-1:-1:-1;;2411:15:2::1;::::0;;2441:22:::1;929:10:6::0;2450:12:2::1;2441:22;;;;;;:::i;:::-;;;;;;;;2353:117::o:0;8627:444:23:-;-1:-1:-1;;;;;8756:13:23;;;8707:15;8756:13;;;:5;:13;;;;;;8707:15;;;;8756:13;:33;8752:312;;8806:19;8835:6;-1:-1:-1;;;;;8828:26:23;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8899:13:23;;;;;;;:5;:13;;;;;;;;;;:22;;-1:-1:-1;;;8899:22:23;;;;8806:50;;-1:-1:-1;8806:50:23;;8899:13;;;:20;;:22;;;;;:13;:22;;;;;;:13;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8892:40:23;;8933:6;8892:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8881:59;;:8;:59;:::i;:::-;:73;;;;:::i;:::-;-1:-1:-1;;;;;8997:13:23;;;;;;;:5;:13;;;;;;;;;;:22;;-1:-1:-1;;;8997:22:23;;;;8871:83;;-1:-1:-1;9041:11:23;;8997:13;;;:20;;:22;;;;;:13;:22;;;;;;:13;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8990:40:23;;9031:6;8990:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8979:59;;:8;:59;:::i;:::-;:73;;;;:::i;:::-;8969:83;;8791:273;8752:312;8627:444;;;;;:::o;2510:187:0:-;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;9164:361:23:-;9288:10;;9313:117;;9218:7;;;;-1:-1:-1;;;;;9288:10:23;;;;-1:-1:-1;;;9354:36:23;9313:117;;9409:6;;9313:117;;;:::i;:::-;;;;-1:-1:-1;;9313:117:23;;;;;;;;;;;;;;-1:-1:-1;;;;;9313:117:23;-1:-1:-1;;;;;;9313:117:23;;;;;;;;;;9258:183;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9457:28:23;;9238:203;;-1:-1:-1;;;;;;9457:28:23;;;;;;;;9511:5;9164:361;-1:-1:-1;;9164:361:23:o;967:252:4:-;1143:68;;;-1:-1:-1;;;;;12473:15:42;;;1143:68:4;;;12455:34:42;12525:15;;12505:18;;;12498:43;12557:18;;;;12550:34;;;1143:68:4;;;;;;;;;;12390:18:42;;;;1143:68:4;;;;;;;;-1:-1:-1;;;;;1143:68:4;-1:-1:-1;;;1143:68:4;;;1116:96;;1136:5;;1116:19;:96::i;2106:115:2:-;1411:7;;;;1654:9;1646:38;;;;-1:-1:-1;;;1646:38:2;;;;;;;:::i;:::-;2165:7:::1;:14:::0;;-1:-1:-1;;2165:14:2::1;2175:4;2165:14;::::0;;2194:20:::1;2201:12;929:10:6::0;;850:96;3037:123:1;3085:4;3109:44;3147:4;3109:29;:44::i;:::-;3108:45;3101:52;;3037:123;:::o;1048:97:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1111:27:2::1;:25;:27::i;988:95:0:-:0;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;3306:717:4:-:0;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:4;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:4;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:4;;13459:2:42;3921:85:4;;;13441:21:42;13498:2;13478:18;;;13471:30;13537:34;13517:18;;;13510:62;-1:-1:-1;;;13588:18:42;;;13581:40;13638:19;;3921:85:4;13257:406:42;3921:85:4;3387:636;3306:717;;:::o;1186:320:5:-;-1:-1:-1;;;;;1476:19:5;;:23;;;1186:320::o;1151:95:2:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1224:7:2::1;:15:::0;;-1:-1:-1;;1224:15:2::1;::::0;;1151:95::o;1089:111:0:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:6::0;1161:18:0::1;:32::i;3872:223:5:-:0;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;;3872:223;;;;;;:::o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:5;;13870:2:42;5148:81:5;;;13852:21:42;13909:2;13889:18;;;13882:30;13948:34;13928:18;;;13921:62;-1:-1:-1;;;13999:18:42;;;13992:36;14045:19;;5148:81:5;13668:402:42;5148:81:5;5247:18;5258:6;5247:10;:18::i;:::-;5239:60;;;;-1:-1:-1;;;5239:60:5;;14277:2:42;5239:60:5;;;14259:21:42;14316:2;14296:18;;;14289:30;14355:31;14335:18;;;14328:59;14404:18;;5239:60:5;14075:353:42;5239:60:5;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:5;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:5:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:5;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:42:-;-1:-1:-1;;;;;271:31:42;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:118::-;418:5;411:13;404:21;397:5;394:32;384:60;;440:1;437;430:12;455:592;538:6;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;671:9;658:23;690:31;715:5;690:31;:::i;:::-;740:5;-1:-1:-1;792:2:42;777:18;;764:32;;-1:-1:-1;848:2:42;833:18;;820:32;861:30;820:32;861:30;:::i;:::-;910:7;-1:-1:-1;969:2:42;954:18;;941:32;982:33;941:32;982:33;:::i;:::-;455:592;;;;-1:-1:-1;455:592:42;;-1:-1:-1;;455:592:42:o;1305:388::-;1373:6;1381;1434:2;1422:9;1413:7;1409:23;1405:32;1402:52;;;1450:1;1447;1440:12;1402:52;1489:9;1476:23;1508:31;1533:5;1508:31;:::i;:::-;1558:5;-1:-1:-1;1615:2:42;1600:18;;1587:32;1628:33;1587:32;1628:33;:::i;:::-;1680:7;1670:17;;;1305:388;;;;;:::o;2214:383::-;2291:6;2299;2307;2360:2;2348:9;2339:7;2335:23;2331:32;2328:52;;;2376:1;2373;2366:12;2328:52;2415:9;2402:23;2434:31;2459:5;2434:31;:::i;:::-;2484:5;2536:2;2521:18;;2508:32;;-1:-1:-1;2587:2:42;2572:18;;;2559:32;;2214:383;-1:-1:-1;;;2214:383:42:o;2602:594::-;2697:6;2705;2713;2721;2729;2782:3;2770:9;2761:7;2757:23;2753:33;2750:53;;;2799:1;2796;2789:12;2750:53;2835:9;2822:23;2812:33;;2892:2;2881:9;2877:18;2864:32;2854:42;;2943:2;2932:9;2928:18;2915:32;2905:42;;2997:2;2986:9;2982:18;2969:32;3010:31;3035:5;3010:31;:::i;:::-;3060:5;-1:-1:-1;3117:3:42;3102:19;;3089:33;3131;3089;3131;:::i;:::-;3183:7;3173:17;;;2602:594;;;;;;;;:::o;3201:203::-;-1:-1:-1;;;;;3365:32:42;;;;3347:51;;3335:2;3320:18;;3201:203::o;3409:247::-;3468:6;3521:2;3509:9;3500:7;3496:23;3492:32;3489:52;;;3537:1;3534;3527:12;3489:52;3576:9;3563:23;3595:31;3620:5;3595:31;:::i;3661:367::-;3724:8;3734:6;3788:3;3781:4;3773:6;3769:17;3765:27;3755:55;;3806:1;3803;3796:12;3755:55;-1:-1:-1;3829:20:42;;-1:-1:-1;;;;;3861:30:42;;3858:50;;;3904:1;3901;3894:12;3858:50;3941:4;3933:6;3929:17;3917:29;;4001:3;3994:4;3984:6;3981:1;3977:14;3969:6;3965:27;3961:38;3958:47;3955:67;;;4018:1;4015;4008:12;4033:1540;4236:6;4244;4252;4260;4268;4276;4284;4292;4300;4353:3;4341:9;4332:7;4328:23;4324:33;4321:53;;;4370:1;4367;4360:12;4321:53;4409:9;4396:23;4428:31;4453:5;4428:31;:::i;:::-;4478:5;-1:-1:-1;4534:2:42;4519:18;;4506:32;-1:-1:-1;;;;;4587:14:42;;;4584:34;;;4614:1;4611;4604:12;4584:34;4653:70;4715:7;4706:6;4695:9;4691:22;4653:70;:::i;:::-;4742:8;;-1:-1:-1;4627:96:42;-1:-1:-1;4830:2:42;4815:18;;4802:32;;-1:-1:-1;4846:16:42;;;4843:36;;;4875:1;4872;4865:12;4843:36;4914:72;4978:7;4967:8;4956:9;4952:24;4914:72;:::i;:::-;5005:8;;-1:-1:-1;4888:98:42;-1:-1:-1;5093:2:42;5078:18;;5065:32;;-1:-1:-1;5109:16:42;;;5106:36;;;5138:1;5135;5128:12;5106:36;5177:72;5241:7;5230:8;5219:9;5215:24;5177:72;:::i;:::-;5268:8;;-1:-1:-1;5151:98:42;-1:-1:-1;5356:3:42;5341:19;;5328:33;;-1:-1:-1;5373:16:42;;;5370:36;;;5402:1;5399;5392:12;5370:36;;5441:72;5505:7;5494:8;5483:9;5479:24;5441:72;:::i;:::-;5415:98;;5532:8;5522:18;;;5559:8;5549:18;;;4033:1540;;;;;;;;;;;:::o;5578:180::-;5637:6;5690:2;5678:9;5669:7;5665:23;5661:32;5658:52;;;5706:1;5703;5696:12;5658:52;-1:-1:-1;5729:23:42;;5578:180;-1:-1:-1;5578:180:42:o;6004:356::-;6206:2;6188:21;;;6225:18;;;6218:30;6284:34;6279:2;6264:18;;6257:62;6351:2;6336:18;;6004:356::o;6365:340::-;6567:2;6549:21;;;6606:2;6586:18;;;6579:30;-1:-1:-1;;;6640:2:42;6625:18;;6618:46;6696:2;6681:18;;6365:340::o;7172:245::-;7251:6;7259;7312:2;7300:9;7291:7;7287:23;7283:32;7280:52;;;7328:1;7325;7318:12;7280:52;-1:-1:-1;;7351:16:42;;7407:2;7392:18;;;7386:25;7351:16;;7386:25;;-1:-1:-1;7172:245:42:o;7422:184::-;7492:6;7545:2;7533:9;7524:7;7520:23;7516:32;7513:52;;;7561:1;7558;7551:12;7513:52;-1:-1:-1;7584:16:42;;7422:184;-1:-1:-1;7422:184:42:o;7611:251::-;7681:6;7734:2;7722:9;7713:7;7709:23;7705:32;7702:52;;;7750:1;7747;7740:12;7702:52;7782:9;7776:16;7801:31;7826:5;7801:31;:::i;8289:306::-;8377:6;8385;8393;8446:2;8434:9;8425:7;8421:23;8417:32;8414:52;;;8462:1;8459;8452:12;8414:52;8491:9;8485:16;8475:26;;8541:2;8530:9;8526:18;8520:25;8510:35;;8585:2;8574:9;8570:18;8564:25;8554:35;;8289:306;;;;;:::o;9015:522::-;9115:6;9110:3;9103:19;9085:3;9141:4;9170:2;9165:3;9161:12;9154:19;;9196:5;9219:1;9229:283;9243:6;9240:1;9237:13;9229:283;;;9320:6;9307:20;9340:33;9365:7;9340:33;:::i;:::-;-1:-1:-1;;;;;9398:33:42;9386:46;;9452:12;;;;9487:15;;;;9428:1;9258:9;9229:283;;;-1:-1:-1;9528:3:42;;9015:522;-1:-1:-1;;;;;9015:522:42:o;9542:983::-;9995:3;9984:9;9977:22;9958:4;10022:74;10091:3;10080:9;10076:19;10068:6;10060;10022:74;:::i;:::-;10144:9;10136:6;10132:22;10127:2;10116:9;10112:18;10105:50;10178:61;10232:6;10224;10216;10178:61;:::i;:::-;10164:75;;10287:9;10279:6;10275:22;10270:2;10259:9;10255:18;10248:50;10321:61;10375:6;10367;10359;10321:61;:::i;:::-;10307:75;;10430:9;10422:6;10418:22;10413:2;10402:9;10398:18;10391:50;10458:61;10512:6;10504;10496;10458:61;:::i;:::-;10450:69;9542:983;-1:-1:-1;;;;;;;;;;;9542:983:42:o;10879:265::-;10919:7;10985:1;10981;10977:6;10973:14;10970:1;10967:21;10962:1;10955:9;10948:17;10944:45;10941:168;;;11031:10;11026:3;11022:20;11019:1;11012:31;11066:4;11063:1;11056:15;11094:4;11091:1;11084:15;10941:168;-1:-1:-1;11129:9:42;;10879:265::o;11149:217::-;11189:1;11215;11205:132;;11259:10;11254:3;11250:20;11247:1;11240:31;11294:4;11291:1;11284:15;11322:4;11319:1;11312:15;11205:132;-1:-1:-1;11351:9:42;;11149:217::o;11371:258::-;11443:1;11453:113;11467:6;11464:1;11461:13;11453:113;;;11543:11;;;11537:18;11524:11;;;11517:39;11489:2;11482:10;11453:113;;;11584:6;11581:1;11578:13;11575:48;;;-1:-1:-1;;11619:1:42;11601:16;;11594:27;11371:258::o;11634:257::-;11675:3;11713:5;11707:12;11740:6;11735:3;11728:19;11756:63;11812:6;11805:4;11800:3;11796:14;11789:4;11782:5;11778:16;11756:63;:::i;:::-;11873:2;11852:15;-1:-1:-1;;11848:29:42;11839:39;;;;11880:4;11835:50;;11634:257;-1:-1:-1;;11634:257:42:o;11896:314::-;-1:-1:-1;;;;;12071:32:42;;12053:51;;12140:2;12135;12120:18;;12113:30;;;-1:-1:-1;;12160:44:42;;12185:18;;12177:6;12160:44;:::i;12595:407::-;12797:2;12779:21;;;12836:2;12816:18;;;12809:30;12875:34;12870:2;12855:18;;12848:62;-1:-1:-1;;;12941:2:42;12926:18;;12919:41;12992:3;12977:19;;12595:407::o;13007:245::-;13074:6;13127:2;13115:9;13106:7;13102:23;13098:32;13095:52;;;13143:1;13140;13133:12;13095:52;13175:9;13169:16;13194:28;13216:5;13194:28;:::i;14433:274::-;14562:3;14600:6;14594:13;14616:53;14662:6;14657:3;14650:4;14642:6;14638:17;14616:53;:::i;:::-;14685:16;;;;;14433:274;-1:-1:-1;;14433:274:42:o;14712:219::-;14861:2;14850:9;14843:21;14824:4;14881:44;14921:2;14910:9;14906:18;14898:6;14881:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {SushiswapFarmUpgradeable as Farm, IERC20, IERC20Upgradeable, SafeERC20Upgradeable, IUniswapV2Pair, Initializable} from \"./farms/SushiswapFarmUpgradeable.sol\"; \r\n \r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract SushiswapFarmFactoryBeacon is Initializable, PausableUpgradeable, OwnableUpgradeable {\r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    /**\r\n     * @dev Contract Variables:\r\n     * farmBeacon - Farm contract implementation.\r\n     *\r\n     * distributor - Address authorized to make distributions.\r\n     * Farms - Links {lpPools} to the deployed Farm contract.\r\n     * lpPools - List of pools that have corresponding deployed Farm contract.\r\n     */\r\n    address public farmBeacon;\r\n\r\n    address public distributor;\r\n    mapping(address => Farm) public Farms;\r\n    address[] public lpPools;\r\n\r\n    event FarmDeployed(address indexed farmAddress);\r\n    event Deposit(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Withdraw(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Distribute(address indexed lpPool);\r\n    event DistributorChanged(address indexed newDistributor);\r\n\r\n    modifier distributorOnly(){\r\n        require(msg.sender == distributor);\r\n        _;\r\n    }\r\n\r\n    // ============ Methods ============\r\n\r\n    function initialize(address upgrader) external initializer {\r\n        __Pausable_init();\r\n        __Ownable_init();\r\n        farmBeacon = address(new UpgradeableBeacon(\r\n            address(new Farm())\r\n        ));\r\n        transferOwnership(upgrader);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\r\n     * @param amountA  - Token A amount to deposit.\r\n     * @param amountB -  Token B amount to deposit.\r\n     * @param amountLP - LP Token amount to deposit.\r\n     * @param lpPair - Address of the pool to deposit tokens in.\r\n     * @param recipient - Address which will recieve the deposit and leftover tokens.\r\n     \r\n     * @return sentA - Token A amount sent to the farm.\r\n     * @return sentB - Token B amount sent to the farm.\r\n     * @return liquidity - Total liquidity sent to the farm (in lpTokens).\r\n     */\r\n    function deposit(uint256 amountA, uint256 amountB, uint256 amountLP, address lpPair, address recipient) external whenNotPaused returns(uint256 sentA, uint256 sentB, uint256 liquidity){\r\n        if(Farms[lpPair] == Farm(address(0))){\r\n            Farms[lpPair] = Farm(createFarm(lpPair));\r\n            lpPools.push(lpPair);\r\n        }\r\n\r\n        if(amountA > 0){\r\n            IERC20Upgradeable(Farms[lpPair].tokenA()).safeTransferFrom(msg.sender, address(Farms[lpPair]), amountA);\r\n        }\r\n        if(amountB > 0){\r\n            IERC20Upgradeable(Farms[lpPair].tokenB()).safeTransferFrom(msg.sender, address(Farms[lpPair]), amountB);\r\n        }\r\n        if(amountLP > 0){\r\n            IERC20Upgradeable(lpPair).safeTransferFrom(msg.sender, address(Farms[lpPair]), amountLP);\r\n        }\r\n\r\n        (sentA, sentB, liquidity) = Farms[lpPair].deposit(amountA, amountB, amountLP, recipient); \r\n        emit Deposit(recipient, lpPair, liquidity);\r\n    }\r\n\r\n    /** \r\n     * @dev Withdraws tokens from the given pool. \r\n     * @param lpPair - LP pool to withdraw from.\r\n     * @param amount - LP amount to withdraw. \r\n     * @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\r\n     * @param recipient - The address which will recieve tokens.\r\n\r\n     * @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     * @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     */ \r\n    function withdraw(address lpPair, uint256 amount, bool withdrawLP, address recipient) external whenNotPaused returns(uint256 amountA, uint256 amountB){  \r\n        require(Farms[lpPair] != Farm(address(0)));\r\n        (amountA, amountB) = Farms[lpPair].withdraw(msg.sender, amount, withdrawLP, recipient);\r\n        emit Withdraw(msg.sender, lpPair, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets expected reward amount and block for token distribution calculations.\r\n     * @param lpPair - LP pool to check total deposits in.\r\n     * @param expectedReward - New reward amount.\r\n     * @param expectedRewardBlock - New reward block.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */  \r\n    function setExpectedReward(address lpPair, uint256 expectedReward, uint256 expectedRewardBlock) external distributorOnly {\r\n        require(Farms[lpPair] != Farm(address(0)));\r\n        Farms[lpPair].setExpectedReward(expectedReward, expectedRewardBlock); \r\n    }\r\n\r\n    /**\r\n     * @dev Distributes tokens between users.\r\n     * @param lpPair - LP pool to distribute tokens in.\r\n     * @param rewarderTokenToTokenARoute An array of token addresses.\r\n     * @param rewarderTokenToTokenBRoute An array of token addresses.\r\n     * @param rewardTokenToTokenARoute An array of token addresses.\r\n     * @param rewardTokenToTokenBRoute An array of token addresses.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */ \r\n    function distribute(\r\n        address lpPair,\r\n        address[] calldata rewarderTokenToTokenARoute,\r\n        address[] calldata rewarderTokenToTokenBRoute,\r\n        address[] calldata rewardTokenToTokenARoute,\r\n        address[] calldata rewardTokenToTokenBRoute\r\n    ) external distributorOnly whenNotPaused{\r\n        require(Farms[lpPair] != Farm(address(0))); \r\n        \r\n        Farms[lpPair].distribute(rewarderTokenToTokenARoute, rewarderTokenToTokenBRoute, rewardTokenToTokenARoute, rewardTokenToTokenBRoute);\r\n        emit Distribute(lpPair);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns tokens staked by the {_address} for the given {lpPair}.\r\n     * @param _address - The address to check stakes for.\r\n     * @param lpPair - LP pool to check stakes in.\r\n\r\n     * @return stakeLP - Total user stake(in LP tokens).\r\n     * @return stakeA - Token A stake.\r\n     * @return stakeB - Token B stake.\r\n     */\r\n    function userStake(address _address, address lpPair) external view returns (uint256 stakeLP, uint256 stakeA, uint256 stakeB) {\r\n        if (Farms[lpPair] != Farm(address(0))) {\r\n            stakeLP = Farms[lpPair].userBalance(_address);\r\n            (stakeA, stakeB) = getTokenStake(lpPair, stakeLP);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\r\n     * @param lpPair - LP pool to check total deposits in.\r\n\r\n     * @return totalDepositsLP - Total deposits (in LP tokens).\r\n     * @return totalDepositsA - Token A deposits.\r\n     * @return totalDepositsB - Token B deposits.\r\n     */ \r\n    function totalDeposits(address lpPair) external view returns (uint256 totalDepositsLP, uint256 totalDepositsA, uint256 totalDepositsB) {\r\n        if (Farms[lpPair] != Farm(address(0))) {\r\n            totalDepositsLP = Farms[lpPair].totalDeposits();\r\n            (totalDepositsA, totalDepositsB) = getTokenStake(lpPair, totalDepositsLP);\r\n        }\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return lpPools.length;\r\n    }\r\n\r\n    function transferDistributor(address newDistributor) external onlyOwner {\r\n        distributor = newDistributor;\r\n        emit DistributorChanged(newDistributor);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public override onlyOwner {\r\n        require(newOwner != address(0));\r\n        _transferOwnership(newOwner);\r\n        UpgradeableBeacon(farmBeacon).transferOwnership(newOwner);\r\n    }\r\n\r\n    function renounceOwnership() public override onlyOwner {\r\n        _transferOwnership(address(0));\r\n        UpgradeableBeacon(farmBeacon).renounceOwnership();\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\r\n     * @param lpPair - LP pool to check total deposits in.\r\n     * @param amountLP - Amount of LP tokens to convert.\r\n\r\n     * @return amountA - Token A amount.\r\n     * @return amountB - Token B amount.\r\n     */ \r\n    function getTokenStake(address lpPair, uint256 amountLP) internal view returns (uint256 amountA, uint256 amountB) {\r\n        if (Farms[lpPair] != Farm(address(0))) {\r\n            uint256 totalSupply = IERC20(lpPair).totalSupply();\r\n            amountA = amountLP * IERC20(Farms[lpPair].tokenA()).balanceOf(lpPair) / totalSupply;\r\n            amountB = amountLP * IERC20(Farms[lpPair].tokenB()).balanceOf(lpPair) / totalSupply;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys new Farm contract and calls initialize on it.\r\n     */\r\n    function createFarm(address lpPair) internal returns (address) {\r\n        BeaconProxy proxy = new BeaconProxy(\r\n            farmBeacon,\r\n            abi.encodeWithSelector(\r\n                Farm(address(0)).initialize.selector,\r\n                lpPair\r\n            )\r\n        );\r\n        emit FarmDeployed(address(proxy));\r\n        return address(proxy);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-branch\\contracts\\SushiswapFarmFactoryBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/SushiswapFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        2069
      ],
      "AddressUpgradeable": [
        853
      ],
      "BeaconProxy": [
        1483
      ],
      "Context": [
        2091
      ],
      "ContextUpgradeable": [
        895
      ],
      "ERC1967Upgrade": [
        1349
      ],
      "Farm": [
        9273
      ],
      "IBeacon": [
        1493
      ],
      "IERC20": [
        1772
      ],
      "IERC20Upgradeable": [
        386
      ],
      "IUniswapV2Pair": [
        9919
      ],
      "Initializable": [
        197
      ],
      "Ownable": [
        1000
      ],
      "OwnableUpgradeable": [
        123
      ],
      "PausableUpgradeable": [
        308
      ],
      "Proxy": [
        1401
      ],
      "SafeERC20Upgradeable": [
        610
      ],
      "StorageSlot": [
        2151
      ],
      "SushiswapFarmFactoryBeacon": [
        5101
      ],
      "UpgradeableBeacon": [
        1568
      ]
    },
    "id": 5102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4425,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:23"
      },
      {
        "id": 4426,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:23"
      },
      {
        "absolutePath": "project:/contracts/farms/SushiswapFarmUpgradeable.sol",
        "file": "./farms/SushiswapFarmUpgradeable.sol",
        "id": 4433,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5102,
        "sourceUnit": 9274,
        "src": "95:166:23",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4427,
              "name": "SushiswapFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:24:23",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4428,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "137:6:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4429,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "145:17:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4430,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "164:20:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4431,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "186:14:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4432,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "202:13:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 4434,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5102,
        "sourceUnit": 1569,
        "src": "267:68:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 4435,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5102,
        "sourceUnit": 1484,
        "src": "337:62:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "id": 4436,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5102,
        "sourceUnit": 309,
        "src": "401:78:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 4437,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5102,
        "sourceUnit": 124,
        "src": "481:75:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4438,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 197,
              "src": "599:13:23"
            },
            "id": 4439,
            "nodeType": "InheritanceSpecifier",
            "src": "599:13:23"
          },
          {
            "baseName": {
              "id": 4440,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 308,
              "src": "614:19:23"
            },
            "id": 4441,
            "nodeType": "InheritanceSpecifier",
            "src": "614:19:23"
          },
          {
            "baseName": {
              "id": 4442,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 123,
              "src": "635:18:23"
            },
            "id": 4443,
            "nodeType": "InheritanceSpecifier",
            "src": "635:18:23"
          }
        ],
        "canonicalName": "SushiswapFarmFactoryBeacon",
        "contractDependencies": [
          1483,
          1568,
          9273
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5101,
        "linearizedBaseContracts": [
          5101,
          123,
          308,
          895,
          197
        ],
        "name": "SushiswapFarmFactoryBeacon",
        "nameLocation": "569:26:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4447,
            "libraryName": {
              "id": 4444,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 610,
              "src": "667:20:23"
            },
            "nodeType": "UsingForDirective",
            "src": "661:49:23",
            "typeName": {
              "id": 4446,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4445,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 386,
                "src": "692:17:23"
              },
              "referencedDeclaration": 386,
              "src": "692:17:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 4448,
              "nodeType": "StructuredDocumentation",
              "src": "718:311:23",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n distributor - Address authorized to make distributions.\n Farms - Links {lpPools} to the deployed Farm contract.\n lpPools - List of pools that have corresponding deployed Farm contract."
            },
            "functionSelector": "d95a4d93",
            "id": 4450,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "1050:10:23",
            "nodeType": "VariableDeclaration",
            "scope": 5101,
            "src": "1035:25:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4449,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1035:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 4452,
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1084:11:23",
            "nodeType": "VariableDeclaration",
            "scope": 5101,
            "src": "1069:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4451,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1069:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 4457,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "1134:5:23",
            "nodeType": "VariableDeclaration",
            "scope": 5101,
            "src": "1102:37:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
            },
            "typeName": {
              "id": 4456,
              "keyType": {
                "id": 4453,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1110:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1102:24:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
              },
              "valueType": {
                "id": 4455,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4454,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9273,
                  "src": "1121:4:23"
                },
                "referencedDeclaration": 9273,
                "src": "1121:4:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                  "typeString": "contract SushiswapFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 4460,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "1163:7:23",
            "nodeType": "VariableDeclaration",
            "scope": 5101,
            "src": "1146:24:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4458,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1146:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4459,
              "nodeType": "ArrayTypeName",
              "src": "1146:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4464,
            "name": "FarmDeployed",
            "nameLocation": "1185:12:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4462,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "1214:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4464,
                  "src": "1198:27:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:29:23"
            },
            "src": "1179:48:23"
          },
          {
            "anonymous": false,
            "id": 4472,
            "name": "Deposit",
            "nameLocation": "1239:7:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4466,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1263:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "1247:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4468,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1287:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "1271:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1303:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4472,
                  "src": "1295:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:64:23"
            },
            "src": "1233:78:23"
          },
          {
            "anonymous": false,
            "id": 4480,
            "name": "Withdraw",
            "nameLocation": "1323:8:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4474,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1348:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "1332:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4476,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1372:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "1356:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4478,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1388:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "1380:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1331:64:23"
            },
            "src": "1317:79:23"
          },
          {
            "anonymous": false,
            "id": 4484,
            "name": "Distribute",
            "nameLocation": "1408:10:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4482,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1435:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4484,
                  "src": "1419:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:24:23"
            },
            "src": "1402:41:23"
          },
          {
            "anonymous": false,
            "id": 4488,
            "name": "DistributorChanged",
            "nameLocation": "1455:18:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4486,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "1490:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4488,
                  "src": "1474:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1473:32:23"
            },
            "src": "1449:57:23"
          },
          {
            "body": {
              "id": 4498,
              "nodeType": "Block",
              "src": "1540:65:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4491,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1559:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1559:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4493,
                          "name": "distributor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4452,
                          "src": "1573:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1559:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1551:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1551:34:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4496,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:34:23"
                },
                {
                  "id": 4497,
                  "nodeType": "PlaceholderStatement",
                  "src": "1596:1:23"
                }
              ]
            },
            "id": 4499,
            "name": "distributorOnly",
            "nameLocation": "1523:15:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:2:23"
            },
            "src": "1514:91:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4533,
              "nodeType": "Block",
              "src": "1716:200:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4506,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "1727:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:17:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4508,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:17:23"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4509,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1755:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1755:16:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4511,
                  "nodeType": "ExpressionStatement",
                  "src": "1755:16:23"
                },
                {
                  "expression": {
                    "id": 4527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4512,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4450,
                      "src": "1782:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 4522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1847:8:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                      "typeString": "function () returns (contract SushiswapFarmUpgradeable)"
                                    },
                                    "typeName": {
                                      "id": 4521,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 4520,
                                        "name": "Farm",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 9273,
                                        "src": "1851:4:23"
                                      },
                                      "referencedDeclaration": 9273,
                                      "src": "1851:4:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                        "typeString": "contract SushiswapFarmUpgradeable"
                                      }
                                    }
                                  },
                                  "id": 4523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1847:10:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                ],
                                "id": 4519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1839:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4518,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1839:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1839:19:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1803:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1568_$",
                              "typeString": "function (address) returns (contract UpgradeableBeacon)"
                            },
                            "typeName": {
                              "id": 4516,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4515,
                                "name": "UpgradeableBeacon",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1568,
                                "src": "1807:17:23"
                              },
                              "referencedDeclaration": 1568,
                              "src": "1807:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                                "typeString": "contract UpgradeableBeacon"
                              }
                            }
                          },
                          "id": 4525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1803:66:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 4514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1795:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1795:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1795:75:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1782:88:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4528,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:88:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4530,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4501,
                        "src": "1899:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4529,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4953
                      ],
                      "referencedDeclaration": 4953,
                      "src": "1881:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1881:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4532,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:27:23"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 4534,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4504,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4503,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "1704:11:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1704:11:23"
              }
            ],
            "name": "initialize",
            "nameLocation": "1666:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4501,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1685:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4534,
                  "src": "1677:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1676:18:23"
            },
            "returnParameters": {
              "id": 4505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1716:0:23"
            },
            "scope": 5101,
            "src": "1657:259:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4673,
              "nodeType": "Block",
              "src": "2773:765:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 4565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4556,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4457,
                        "src": "2787:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4558,
                      "indexExpression": {
                        "id": 4557,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4543,
                        "src": "2793:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2787:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2817:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2809:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4560,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2809:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2809:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4559,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9273,
                        "src": "2804:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2804:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "2787:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4583,
                  "nodeType": "IfStatement",
                  "src": "2784:139:23",
                  "trueBody": {
                    "id": 4582,
                    "nodeType": "Block",
                    "src": "2821:102:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 4574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4566,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4457,
                              "src": "2836:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                              }
                            },
                            "id": 4568,
                            "indexExpression": {
                              "id": 4567,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4543,
                              "src": "2842:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2836:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                              "typeString": "contract SushiswapFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 4571,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4543,
                                    "src": "2868:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4570,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5100,
                                  "src": "2857:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 4572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2857:18:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4569,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9273,
                              "src": "2852:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                "typeString": "type(contract SushiswapFarmUpgradeable)"
                              }
                            },
                            "id": 4573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2852:24:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                              "typeString": "contract SushiswapFarmUpgradeable"
                            }
                          },
                          "src": "2836:40:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "id": 4575,
                        "nodeType": "ExpressionStatement",
                        "src": "2836:40:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4579,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4543,
                              "src": "2904:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4576,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4460,
                              "src": "2891:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2891:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 4580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2891:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4581,
                        "nodeType": "ExpressionStatement",
                        "src": "2891:20:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4584,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4537,
                      "src": "2938:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2948:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2938:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4607,
                  "nodeType": "IfStatement",
                  "src": "2935:145:23",
                  "trueBody": {
                    "id": 4606,
                    "nodeType": "Block",
                    "src": "2950:130:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4595,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3024:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3024:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 4599,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4457,
                                    "src": "3044:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4601,
                                  "indexExpression": {
                                    "id": 4600,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4543,
                                    "src": "3050:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3044:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                ],
                                "id": 4598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3036:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4597,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3036:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3036:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4603,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4537,
                              "src": "3060:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 4588,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4457,
                                        "src": "2983:5:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 4590,
                                      "indexExpression": {
                                        "id": 4589,
                                        "name": "lpPair",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4543,
                                        "src": "2989:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2983:13:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                        "typeString": "contract SushiswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 4591,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8085,
                                    "src": "2983:20:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 4592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2983:22:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4587,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "2965:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 4593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2965:41:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 4594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "2965:58:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 4604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2965:103:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4605,
                        "nodeType": "ExpressionStatement",
                        "src": "2965:103:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4608,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4539,
                      "src": "3093:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3103:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3093:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4631,
                  "nodeType": "IfStatement",
                  "src": "3090:145:23",
                  "trueBody": {
                    "id": 4630,
                    "nodeType": "Block",
                    "src": "3105:130:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4619,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3179:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3179:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 4623,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4457,
                                    "src": "3199:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4625,
                                  "indexExpression": {
                                    "id": 4624,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4543,
                                    "src": "3205:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3199:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                ],
                                "id": 4622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3191:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4621,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3191:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3191:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4627,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4539,
                              "src": "3215:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 4612,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4457,
                                        "src": "3138:5:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 4614,
                                      "indexExpression": {
                                        "id": 4613,
                                        "name": "lpPair",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4543,
                                        "src": "3144:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3138:13:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                        "typeString": "contract SushiswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 4615,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8087,
                                    "src": "3138:20:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 4616,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3138:22:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4611,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3120:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 4617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3120:41:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 4618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3120:58:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 4628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3120:103:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4629,
                        "nodeType": "ExpressionStatement",
                        "src": "3120:103:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4632,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4541,
                      "src": "3248:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3259:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3248:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4651,
                  "nodeType": "IfStatement",
                  "src": "3245:131:23",
                  "trueBody": {
                    "id": 4650,
                    "nodeType": "Block",
                    "src": "3261:115:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4639,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3319:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3319:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 4643,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4457,
                                    "src": "3339:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4645,
                                  "indexExpression": {
                                    "id": 4644,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4543,
                                    "src": "3345:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3339:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                ],
                                "id": 4642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3331:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4641,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3331:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3331:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4647,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4541,
                              "src": "3355:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4636,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4543,
                                  "src": "3294:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4635,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "3276:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$386_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 4637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3276:25:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$386",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 4638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 443,
                            "src": "3276:42:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$386_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$386_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 4648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3276:88:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4649,
                        "nodeType": "ExpressionStatement",
                        "src": "3276:88:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 4652,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4550,
                          "src": "3389:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4653,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4552,
                          "src": "3396:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4654,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4554,
                          "src": "3403:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4655,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3388:25:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4660,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4537,
                          "src": "3438:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4661,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4539,
                          "src": "3447:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4662,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4541,
                          "src": "3456:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4663,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4545,
                          "src": "3466:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 4656,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4457,
                            "src": "3416:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4658,
                          "indexExpression": {
                            "id": 4657,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4543,
                            "src": "3422:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3416:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "id": 4659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8488,
                        "src": "3416:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 4664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3416:60:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3388:88:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4666,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:88:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4668,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4545,
                        "src": "3501:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4669,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4543,
                        "src": "3512:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4670,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4554,
                        "src": "3520:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4667,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4472,
                      "src": "3493:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3493:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4672,
                  "nodeType": "EmitStatement",
                  "src": "3488:42:23"
                }
              ]
            },
            "documentation": {
              "id": 4535,
              "nodeType": "StructuredDocumentation",
              "src": "1924:660:23",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpPair - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 4674,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4547,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "2703:13:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2703:13:23"
              }
            ],
            "name": "deposit",
            "nameLocation": "2599:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4537,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2615:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2607:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2607:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4539,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2632:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2624:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4541,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2649:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2641:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4543,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "2667:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2659:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4545,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2683:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2675:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2675:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2606:87:23"
            },
            "returnParameters": {
              "id": 4555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4550,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2733:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2725:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4552,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2748:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2740:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4554,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2763:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "2755:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2724:49:23"
            },
            "scope": 5101,
            "src": "2590:948:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4727,
              "nodeType": "Block",
              "src": "4209:212:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        },
                        "id": 4702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4693,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4457,
                            "src": "4230:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4695,
                          "indexExpression": {
                            "id": 4694,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4677,
                            "src": "4236:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4230:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4260:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4252:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4697,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4252:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4252:10:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4696,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9273,
                            "src": "4247:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "type(contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4247:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "src": "4230:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4222:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4222:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4704,
                  "nodeType": "ExpressionStatement",
                  "src": "4222:42:23"
                },
                {
                  "expression": {
                    "id": 4718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 4705,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "4276:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4706,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4690,
                          "src": "4285:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4707,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4275:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 4712,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4319:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4319:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4714,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4679,
                          "src": "4331:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4715,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4681,
                          "src": "4339:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 4716,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4683,
                          "src": "4351:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 4708,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4457,
                            "src": "4296:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4710,
                          "indexExpression": {
                            "id": 4709,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4677,
                            "src": "4302:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4296:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "id": 4711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8632,
                        "src": "4296:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 4717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4296:65:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4275:86:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4719,
                  "nodeType": "ExpressionStatement",
                  "src": "4275:86:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4721,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4386:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4386:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4723,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4677,
                        "src": "4398:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4724,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4679,
                        "src": "4406:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4720,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4480,
                      "src": "4377:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4726,
                  "nodeType": "EmitStatement",
                  "src": "4372:41:23"
                }
              ]
            },
            "documentation": {
              "id": 4675,
              "nodeType": "StructuredDocumentation",
              "src": "3546:506:23",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpPair - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 4728,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4686,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4685,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "4154:13:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "4154:13:23"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4068:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4677,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "4085:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "4077:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4077:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4679,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4101:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "4093:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4093:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4681,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "4114:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "4109:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4680,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4683,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4134:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "4126:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4126:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4076:68:23"
            },
            "returnParameters": {
              "id": 4691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4688,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4184:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "4176:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4690,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4201:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "4193:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4193:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:34:23"
            },
            "scope": 5101,
            "src": "4059:362:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4761,
              "nodeType": "Block",
              "src": "4899:141:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        },
                        "id": 4750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4741,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4457,
                            "src": "4918:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4743,
                          "indexExpression": {
                            "id": 4742,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4731,
                            "src": "4924:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4918:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4948:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4940:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4745,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4940:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4940:10:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4744,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9273,
                            "src": "4935:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "type(contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4935:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "src": "4918:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4910:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4910:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4752,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:42:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4757,
                        "name": "expectedReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4733,
                        "src": "4995:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4758,
                        "name": "expectedRewardBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "5011:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 4753,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "4963:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                            "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                          }
                        },
                        "id": 4755,
                        "indexExpression": {
                          "id": 4754,
                          "name": "lpPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4731,
                          "src": "4969:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4963:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        }
                      },
                      "id": 4756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setExpectedReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9161,
                      "src": "4963:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 4759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:68:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4760,
                  "nodeType": "ExpressionStatement",
                  "src": "4963:68:23"
                }
              ]
            },
            "documentation": {
              "id": 4729,
              "nodeType": "StructuredDocumentation",
              "src": "4429:341:23",
              "text": " @dev Sets expected reward amount and block for token distribution calculations.\n @param lpPair - LP pool to check total deposits in.\n @param expectedReward - New reward amount.\n @param expectedRewardBlock - New reward block.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "613c91af",
            "id": 4762,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4738,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4737,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4499,
                  "src": "4883:15:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "4883:15:23"
              }
            ],
            "name": "setExpectedReward",
            "nameLocation": "4787:17:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4731,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "4813:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4762,
                  "src": "4805:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4733,
                  "mutability": "mutable",
                  "name": "expectedReward",
                  "nameLocation": "4829:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4762,
                  "src": "4821:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4821:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4735,
                  "mutability": "mutable",
                  "name": "expectedRewardBlock",
                  "nameLocation": "4853:19:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4762,
                  "src": "4845:27:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4845:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4804:69:23"
            },
            "returnParameters": {
              "id": 4739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4899:0:23"
            },
            "scope": 5101,
            "src": "4778:262:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4811,
              "nodeType": "Block",
              "src": "5836:249:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        },
                        "id": 4794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4785,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4457,
                            "src": "5855:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4787,
                          "indexExpression": {
                            "id": 4786,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4765,
                            "src": "5861:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5855:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5885:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5877:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4789,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5877:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5877:10:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4788,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9273,
                            "src": "5872:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                              "typeString": "type(contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5872:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "src": "5855:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4784,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5847:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5847:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4796,
                  "nodeType": "ExpressionStatement",
                  "src": "5847:42:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4801,
                        "name": "rewarderTokenToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4768,
                        "src": "5936:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4802,
                        "name": "rewarderTokenToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4771,
                        "src": "5964:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4803,
                        "name": "rewardTokenToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4774,
                        "src": "5992:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4804,
                        "name": "rewardTokenToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4777,
                        "src": "6018:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 4797,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "5911:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                            "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                          }
                        },
                        "id": 4799,
                        "indexExpression": {
                          "id": 4798,
                          "name": "lpPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4765,
                          "src": "5917:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5911:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        }
                      },
                      "id": 4800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9146,
                      "src": "5911:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,address[] memory,address[] memory,address[] memory) external"
                      }
                    },
                    "id": 4805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:132:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4806,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:132:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4808,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4765,
                        "src": "6070:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4807,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4484,
                      "src": "6059:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:18:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4810,
                  "nodeType": "EmitStatement",
                  "src": "6054:23:23"
                }
              ]
            },
            "documentation": {
              "id": 4763,
              "nodeType": "StructuredDocumentation",
              "src": "5048:471:23",
              "text": " @dev Distributes tokens between users.\n @param lpPair - LP pool to distribute tokens in.\n @param rewarderTokenToTokenARoute An array of token addresses.\n @param rewarderTokenToTokenBRoute An array of token addresses.\n @param rewardTokenToTokenARoute An array of token addresses.\n @param rewardTokenToTokenBRoute An array of token addresses.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "d2dd71ad",
            "id": 4812,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4780,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4779,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4499,
                  "src": "5807:15:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5807:15:23"
              },
              {
                "id": 4782,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4781,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "5823:13:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5823:13:23"
              }
            ],
            "name": "distribute",
            "nameLocation": "5535:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4765,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "5564:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4812,
                  "src": "5556:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5556:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4768,
                  "mutability": "mutable",
                  "name": "rewarderTokenToTokenARoute",
                  "nameLocation": "5600:26:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4812,
                  "src": "5581:45:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4766,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5581:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4767,
                    "nodeType": "ArrayTypeName",
                    "src": "5581:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4771,
                  "mutability": "mutable",
                  "name": "rewarderTokenToTokenBRoute",
                  "nameLocation": "5656:26:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4812,
                  "src": "5637:45:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4769,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5637:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4770,
                    "nodeType": "ArrayTypeName",
                    "src": "5637:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4774,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenARoute",
                  "nameLocation": "5712:24:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4812,
                  "src": "5693:43:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4772,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5693:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4773,
                    "nodeType": "ArrayTypeName",
                    "src": "5693:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4777,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenBRoute",
                  "nameLocation": "5766:24:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4812,
                  "src": "5747:43:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4775,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5747:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4776,
                    "nodeType": "ArrayTypeName",
                    "src": "5747:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5545:252:23"
            },
            "returnParameters": {
              "id": 4783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5836:0:23"
            },
            "scope": 5101,
            "src": "5526:559:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4856,
              "nodeType": "Block",
              "src": "6564:193:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 4835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4826,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4457,
                        "src": "6579:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4828,
                      "indexExpression": {
                        "id": 4827,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4817,
                        "src": "6585:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6579:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6609:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6601:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4830,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6601:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6601:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4829,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9273,
                        "src": "6596:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6596:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "6579:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4855,
                  "nodeType": "IfStatement",
                  "src": "6575:175:23",
                  "trueBody": {
                    "id": 4854,
                    "nodeType": "Block",
                    "src": "6614:136:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 4843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4836,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4820,
                            "src": "6629:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4841,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4815,
                                "src": "6665:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 4837,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4457,
                                  "src": "6639:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                    "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4839,
                                "indexExpression": {
                                  "id": 4838,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4817,
                                  "src": "6645:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6639:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                  "typeString": "contract SushiswapFarmUpgradeable"
                                }
                              },
                              "id": 4840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9213,
                              "src": "6639:25:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 4842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6639:35:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6629:45:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4844,
                        "nodeType": "ExpressionStatement",
                        "src": "6629:45:23"
                      },
                      {
                        "expression": {
                          "id": 4852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4845,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4822,
                                "src": "6690:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4846,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4824,
                                "src": "6698:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4847,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6689:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4849,
                                "name": "lpPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4817,
                                "src": "6722:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4850,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4820,
                                "src": "6730:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4848,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5058,
                              "src": "6708:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6708:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6689:49:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4853,
                        "nodeType": "ExpressionStatement",
                        "src": "6689:49:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4813,
              "nodeType": "StructuredDocumentation",
              "src": "6093:340:23",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpPair - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 4857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "6448:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4815,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6466:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "6458:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4817,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "6484:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "6476:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6476:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6457:34:23"
            },
            "returnParameters": {
              "id": 4825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4820,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "6523:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "6515:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6515:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4822,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "6540:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "6532:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6532:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4824,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "6556:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4857,
                  "src": "6548:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6548:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6514:49:23"
            },
            "scope": 5101,
            "src": "6439:318:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4898,
              "nodeType": "Block",
              "src": "7245:219:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 4878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4869,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4457,
                        "src": "7260:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4871,
                      "indexExpression": {
                        "id": 4870,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4860,
                        "src": "7266:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7260:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7290:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7282:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4873,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7282:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7282:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4872,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9273,
                        "src": "7277:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7277:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "7260:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4897,
                  "nodeType": "IfStatement",
                  "src": "7256:201:23",
                  "trueBody": {
                    "id": 4896,
                    "nodeType": "Block",
                    "src": "7295:162:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 4885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4879,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4863,
                            "src": "7310:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 4880,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4457,
                                  "src": "7328:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                    "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4882,
                                "indexExpression": {
                                  "id": 4881,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4860,
                                  "src": "7334:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7328:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                  "typeString": "contract SushiswapFarmUpgradeable"
                                }
                              },
                              "id": 4883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8133,
                              "src": "7328:27:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 4884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7328:29:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7310:47:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4886,
                        "nodeType": "ExpressionStatement",
                        "src": "7310:47:23"
                      },
                      {
                        "expression": {
                          "id": 4894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4887,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4865,
                                "src": "7373:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4888,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4867,
                                "src": "7389:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4889,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7372:32:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4891,
                                "name": "lpPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4860,
                                "src": "7421:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4892,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4863,
                                "src": "7429:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4890,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5058,
                              "src": "7407:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7407:38:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "7372:73:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4895,
                        "nodeType": "ExpressionStatement",
                        "src": "7372:73:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4858,
              "nodeType": "StructuredDocumentation",
              "src": "6765:338:23",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpPair - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 4899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "7119:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4860,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "7141:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "7133:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7133:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7132:16:23"
            },
            "returnParameters": {
              "id": 4868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4863,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "7180:15:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "7172:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7172:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4865,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "7205:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "7197:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7197:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4867,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "7229:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "7221:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7221:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7171:73:23"
            },
            "scope": 5101,
            "src": "7110:354:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4907,
              "nodeType": "Block",
              "src": "7526:40:23",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4904,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4460,
                      "src": "7544:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7544:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4903,
                  "id": 4906,
                  "nodeType": "Return",
                  "src": "7537:21:23"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 4908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "7481:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7491:2:23"
            },
            "returnParameters": {
              "id": 4903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4908,
                  "src": "7517:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7517:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7516:9:23"
            },
            "scope": 5101,
            "src": "7472:94:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4923,
              "nodeType": "Block",
              "src": "7646:97:23",
              "statements": [
                {
                  "expression": {
                    "id": 4917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4915,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4452,
                      "src": "7657:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4916,
                      "name": "newDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4910,
                      "src": "7671:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7657:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4918,
                  "nodeType": "ExpressionStatement",
                  "src": "7657:28:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4920,
                        "name": "newDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4910,
                        "src": "7720:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4919,
                      "name": "DistributorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4488,
                      "src": "7701:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7701:34:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4922,
                  "nodeType": "EmitStatement",
                  "src": "7696:39:23"
                }
              ]
            },
            "functionSelector": "e2332908",
            "id": 4924,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4913,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4912,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7636:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "7636:9:23"
              }
            ],
            "name": "transferDistributor",
            "nameLocation": "7583:19:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4910,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "7611:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4924,
                  "src": "7603:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7603:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7602:24:23"
            },
            "returnParameters": {
              "id": 4914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7646:0:23"
            },
            "scope": 5101,
            "src": "7574:169:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              97
            ],
            "body": {
              "id": 4952,
              "nodeType": "Block",
              "src": "7822:157:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4933,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4926,
                          "src": "7841:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7861:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7853:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4934,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7853:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7853:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7841:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7833:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7833:31:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4940,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:31:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4942,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4926,
                        "src": "7894:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4941,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "7875:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7875:28:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4944,
                  "nodeType": "ExpressionStatement",
                  "src": "7875:28:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4949,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4926,
                        "src": "7962:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4946,
                            "name": "farmBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4450,
                            "src": "7932:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4945,
                          "name": "UpgradeableBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "7914:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UpgradeableBeacon_$1568_$",
                            "typeString": "type(contract UpgradeableBeacon)"
                          }
                        },
                        "id": 4947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7914:29:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 4948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 979,
                      "src": "7914:47:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7914:57:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4951,
                  "nodeType": "ExpressionStatement",
                  "src": "7914:57:23"
                }
              ]
            },
            "functionSelector": "f2fde38b",
            "id": 4953,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4929,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "7812:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "7812:9:23"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "7760:17:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4928,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7803:8:23"
            },
            "parameters": {
              "id": 4927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4926,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "7786:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4953,
                  "src": "7778:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7778:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7777:18:23"
            },
            "returnParameters": {
              "id": 4931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7822:0:23"
            },
            "scope": 5101,
            "src": "7751:228:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              74
            ],
            "body": {
              "id": 4972,
              "nodeType": "Block",
              "src": "8042:109:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8080:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8072:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4960,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8072:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8072:10:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4959,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "8053:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8053:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4965,
                  "nodeType": "ExpressionStatement",
                  "src": "8053:30:23"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4967,
                            "name": "farmBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4450,
                            "src": "8112:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4966,
                          "name": "UpgradeableBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1568,
                          "src": "8094:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UpgradeableBeacon_$1568_$",
                            "typeString": "type(contract UpgradeableBeacon)"
                          }
                        },
                        "id": 4968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8094:29:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1568",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 4969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 956,
                      "src": "8094:47:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8094:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4971,
                  "nodeType": "ExpressionStatement",
                  "src": "8094:49:23"
                }
              ]
            },
            "functionSelector": "715018a6",
            "id": 4973,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4957,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4956,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "8032:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "8032:9:23"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "7996:17:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4955,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8023:8:23"
            },
            "parameters": {
              "id": 4954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8013:2:23"
            },
            "returnParameters": {
              "id": 4958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8042:0:23"
            },
            "scope": 5101,
            "src": "7987:164:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4981,
              "nodeType": "Block",
              "src": "8195:27:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4978,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "8206:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8206:8:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4980,
                  "nodeType": "ExpressionStatement",
                  "src": "8206:8:23"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "id": 4982,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4975,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "8185:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "8185:9:23"
              }
            ],
            "name": "pause",
            "nameLocation": "8168:5:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8173:2:23"
            },
            "returnParameters": {
              "id": 4977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8195:0:23"
            },
            "scope": 5101,
            "src": "8159:63:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4990,
              "nodeType": "Block",
              "src": "8268:29:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4987,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "8279:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8279:10:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4989,
                  "nodeType": "ExpressionStatement",
                  "src": "8279:10:23"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "id": 4991,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4984,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "8258:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "8258:9:23"
              }
            ],
            "name": "unpause",
            "nameLocation": "8239:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8246:2:23"
            },
            "returnParameters": {
              "id": 4986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8268:0:23"
            },
            "scope": 5101,
            "src": "8230:67:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5057,
              "nodeType": "Block",
              "src": "8741:330:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 5012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5003,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4457,
                        "src": "8756:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 5005,
                      "indexExpression": {
                        "id": 5004,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4994,
                        "src": "8762:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8756:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8786:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8778:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5007,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8778:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8778:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5006,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9273,
                        "src": "8773:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 5011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8773:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "8756:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5056,
                  "nodeType": "IfStatement",
                  "src": "8752:312:23",
                  "trueBody": {
                    "id": 5055,
                    "nodeType": "Block",
                    "src": "8791:273:23",
                    "statements": [
                      {
                        "assignments": [
                          5014
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5014,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "8814:11:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 5055,
                            "src": "8806:19:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5013,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8806:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5020,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5016,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4994,
                                  "src": "8835:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5015,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1772,
                                "src": "8828:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8828:14:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1772",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1703,
                            "src": "8828:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 5019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8828:28:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8806:50:23"
                      },
                      {
                        "expression": {
                          "id": 5036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5021,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4999,
                            "src": "8871:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5022,
                                "name": "amountLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4996,
                                "src": "8881:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 5031,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4994,
                                    "src": "8933:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 5024,
                                              "name": "Farms",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4457,
                                              "src": "8899:5:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                                "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                              }
                                            },
                                            "id": 5026,
                                            "indexExpression": {
                                              "id": 5025,
                                              "name": "lpPair",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4994,
                                              "src": "8905:6:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8899:13:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                              "typeString": "contract SushiswapFarmUpgradeable"
                                            }
                                          },
                                          "id": 5027,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenA",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8085,
                                          "src": "8899:20:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 5028,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8899:22:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 5023,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1772,
                                      "src": "8892:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 5029,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8892:30:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1772",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 5030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1711,
                                  "src": "8892:40:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 5032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8892:48:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8881:59:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 5034,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5014,
                              "src": "8943:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8881:73:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8871:83:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5037,
                        "nodeType": "ExpressionStatement",
                        "src": "8871:83:23"
                      },
                      {
                        "expression": {
                          "id": 5053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5038,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5001,
                            "src": "8969:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5039,
                                "name": "amountLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4996,
                                "src": "8979:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 5048,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4994,
                                    "src": "9031:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 5041,
                                              "name": "Farms",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4457,
                                              "src": "8997:5:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                                "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                              }
                                            },
                                            "id": 5043,
                                            "indexExpression": {
                                              "id": 5042,
                                              "name": "lpPair",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4994,
                                              "src": "9003:6:23",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8997:13:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                              "typeString": "contract SushiswapFarmUpgradeable"
                                            }
                                          },
                                          "id": 5044,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenB",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8087,
                                          "src": "8997:20:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                            "typeString": "function () view external returns (address)"
                                          }
                                        },
                                        "id": 5045,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8997:22:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 5040,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1772,
                                      "src": "8990:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1772_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 5046,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8990:30:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1772",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 5047,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1711,
                                  "src": "8990:40:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 5049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8990:48:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8979:59:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 5051,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5014,
                              "src": "9041:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8979:73:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8969:83:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5054,
                        "nodeType": "ExpressionStatement",
                        "src": "8969:83:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4992,
              "nodeType": "StructuredDocumentation",
              "src": "8305:315:23",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpPair - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 5058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "8636:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4994,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "8658:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5058,
                  "src": "8650:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8650:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4996,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "8674:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5058,
                  "src": "8666:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8666:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8649:34:23"
            },
            "returnParameters": {
              "id": 5002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4999,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "8715:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5058,
                  "src": "8707:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8707:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5001,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "8732:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5058,
                  "src": "8724:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8724:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8706:34:23"
            },
            "scope": 5101,
            "src": "8627:444:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5099,
              "nodeType": "Block",
              "src": "9227:298:23",
              "statements": [
                {
                  "assignments": [
                    5068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5068,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "9250:5:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5099,
                      "src": "9238:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 5067,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5066,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "9238:11:23"
                        },
                        "referencedDeclaration": 1483,
                        "src": "9238:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5086,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5072,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4450,
                        "src": "9288:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 5078,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9367:1:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 5077,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9359:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 5076,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9359:7:23",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 5079,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9359:10:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 5075,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9273,
                                  "src": "9354:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$9273_$",
                                    "typeString": "type(contract SushiswapFarmUpgradeable)"
                                  }
                                },
                                "id": 5080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9354:16:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$9273",
                                  "typeString": "contract SushiswapFarmUpgradeable"
                                }
                              },
                              "id": 5081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8315,
                              "src": "9354:27:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 5082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9354:36:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 5083,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5061,
                            "src": "9409:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5073,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "9313:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9313:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 5084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9313:117:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9258:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1483_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 5070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5069,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1483,
                          "src": "9262:11:23"
                        },
                        "referencedDeclaration": 1483,
                        "src": "9262:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 5085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9258:183:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9238:203:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5090,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5068,
                            "src": "9478:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 5089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9470:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5088,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9470:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9470:14:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5087,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4464,
                      "src": "9457:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9457:28:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5093,
                  "nodeType": "EmitStatement",
                  "src": "9452:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5096,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5068,
                        "src": "9511:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1483",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 5095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9503:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9503:7:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9503:14:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5065,
                  "id": 5098,
                  "nodeType": "Return",
                  "src": "9496:21:23"
                }
              ]
            },
            "documentation": {
              "id": 5059,
              "nodeType": "StructuredDocumentation",
              "src": "9079:79:23",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 5100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "9173:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5061,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "9192:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5100,
                  "src": "9184:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9184:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9183:16:23"
            },
            "returnParameters": {
              "id": 5065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5064,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5100,
                  "src": "9218:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9218:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9217:9:23"
            },
            "scope": 5101,
            "src": "9164:361:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 5102,
        "src": "560:8968:23",
        "usedErrors": []
      }
    ],
    "src": "33:9495:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-05T16:26:14.389Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256,address,address)": {
        "details": "Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.",
        "params": {
          "amountA": "- Token A amount to deposit.",
          "amountB": "-  Token B amount to deposit.",
          "amountLP": "- LP Token amount to deposit.",
          "lpPair": "- Address of the pool to deposit tokens in.",
          "recipient": "- Address which will recieve the deposit and leftover tokens."
        },
        "returns": {
          "liquidity": "- Total liquidity sent to the farm (in lpTokens).",
          "sentA": "- Token A amount sent to the farm.",
          "sentB": "- Token B amount sent to the farm."
        }
      },
      "distribute(address,address[],address[],address[],address[])": {
        "details": "Distributes tokens between users.",
        "params": {
          "lpPair": "- LP pool to distribute tokens in.",
          "rewardTokenToTokenARoute": "An array of token addresses.",
          "rewardTokenToTokenBRoute": "An array of token addresses. Note: This function can only be called by the distributor.",
          "rewarderTokenToTokenARoute": "An array of token addresses.",
          "rewarderTokenToTokenBRoute": "An array of token addresses."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setExpectedReward(address,uint256,uint256)": {
        "details": "Sets expected reward amount and block for token distribution calculations.",
        "params": {
          "expectedReward": "- New reward amount.",
          "expectedRewardBlock": "- New reward block. Note: This function can only be called by the distributor.",
          "lpPair": "- LP pool to check total deposits in."
        }
      },
      "totalDeposits(address)": {
        "details": "Returns total amount locked in the pool. Doesn't take pending rewards into account.",
        "params": {
          "lpPair": "- LP pool to check total deposits in."
        },
        "returns": {
          "totalDepositsA": "- Token A deposits.",
          "totalDepositsB": "- Token B deposits.",
          "totalDepositsLP": "- Total deposits (in LP tokens)."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "userStake(address,address)": {
        "details": "Returns tokens staked by the {_address} for the given {lpPair}.",
        "params": {
          "_address": "- The address to check stakes for.",
          "lpPair": "- LP pool to check stakes in."
        },
        "returns": {
          "stakeA": "- Token A stake.",
          "stakeB": "- Token B stake.",
          "stakeLP": "- Total user stake(in LP tokens)."
        }
      },
      "withdraw(address,uint256,bool,address)": {
        "details": "Withdraws tokens from the given pool. ",
        "params": {
          "amount": "- LP amount to withdraw. ",
          "lpPair": "- LP pool to withdraw from.",
          "recipient": "- The address which will recieve tokens.",
          "withdrawLP": "- True: Withdraw in LP tokens, False: Withdraw in normal tokens."
        },
        "returns": {
          "amountA": "- Token A amount sent to the {recipient}, 0 if withdrawLP == false.",
          "amountB": "- Token B amount sent to the {recipient}, 0 if withdrawLP == false."
        }
      }
    },
    "stateVariables": {
      "farmBeacon": {
        "details": "Contract Variables: farmBeacon - Farm contract implementation. distributor - Address authorized to make distributions. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}