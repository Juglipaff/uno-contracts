{
  "contractName": "SushiswapFarmFactoryBeacon",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        }
      ],
      "name": "Distribute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "DistributorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmAddress",
          "type": "address"
        }
      ],
      "name": "FarmDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lpPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Farms",
      "outputs": [
        {
          "internalType": "contract SushiswapFarmUpgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "upgrader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountLP",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sentA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sentB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawLP",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "rewarderTokenToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewarderTokenToTokenBRoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenARoute",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "rewardTokenToTokenBRoute",
          "type": "address[]"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        }
      ],
      "name": "userStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpPair",
          "type": "address"
        }
      ],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDepositsLP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDepositsB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDistributor",
          "type": "address"
        }
      ],
      "name": "transferDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"}],\"name\":\"Distribute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"DistributorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmAddress\",\"type\":\"address\"}],\"name\":\"FarmDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Farms\",\"outputs\":[{\"internalType\":\"contract SushiswapFarmUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sentA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewarderTokenToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewarderTokenToTokenBRoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenARoute\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokenToTokenBRoute\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"}],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDepositsLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositsB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"transferDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"}],\"name\":\"userStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawLP\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint256,uint256,address,address)\":{\"details\":\"Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\",\"params\":{\"amountA\":\"- Token A amount to deposit.\",\"amountB\":\"-  Token B amount to deposit.\",\"amountLP\":\"- LP Token amount to deposit.\",\"lpPair\":\"- Address of the pool to deposit tokens in.\",\"recipient\":\"- Address which will recieve the deposit and leftover tokens.\"},\"returns\":{\"liquidity\":\"- Total liquidity sent to the farm (in lpTokens).\",\"sentA\":\"- Token A amount sent to the farm.\",\"sentB\":\"- Token B amount sent to the farm.\"}},\"distribute(address,address[],address[],address[],address[])\":{\"details\":\"Distributes tokens between users.\",\"params\":{\"lpPair\":\"- LP pool to distribute tokens in.\",\"rewardTokenToTokenARoute\":\"An array of token addresses.\",\"rewardTokenToTokenBRoute\":\"An array of token addresses. Note: This function can only be called by the distributor.\",\"rewarderTokenToTokenARoute\":\"An array of token addresses.\",\"rewarderTokenToTokenBRoute\":\"An array of token addresses.\"}},\"totalDeposits(address)\":{\"details\":\"Returns total amount locked in the pool. Doesn't take pending rewards into account.\",\"params\":{\"lpPair\":\"- LP pool to check total deposits in.\"},\"returns\":{\"totalDepositsA\":\"- Token A deposits.\",\"totalDepositsB\":\"- Token B deposits.\",\"totalDepositsLP\":\"- Total deposits (in LP tokens).\"}},\"userStake(address,address)\":{\"details\":\"Returns tokens staked by the {_address} for the given {lpPair}.\",\"params\":{\"_address\":\"- The address to check stakes for.\",\"lpPair\":\"- LP pool to check stakes in.\"},\"returns\":{\"stakeA\":\"- Token A stake.\",\"stakeB\":\"- Token B stake.\",\"stakeLP\":\"- Total user stake(in LP tokens).\"}},\"withdraw(address,uint256,bool,address)\":{\"details\":\"Withdraws tokens from the given pool. \",\"params\":{\"amount\":\"- LP amount to withdraw. \",\"lpPair\":\"- LP pool to withdraw from.\",\"recipient\":\"- The address which will recieve tokens.\",\"withdrawLP\":\"- True: Withdraw in LP tokens, False: Withdraw in normal tokens.\"},\"returns\":{\"amountA\":\"- Token A amount sent to the {recipient}, 0 if withdrawLP == false.\",\"amountB\":\"- Token B amount sent to the {recipient}, 0 if withdrawLP == false.\"}}},\"stateVariables\":{\"farmBeacon\":{\"details\":\"Contract Variables: farmBeacon - Farm contract implementation. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract. distributor - Address authorized to make distributions.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SushiswapFarmFactoryBeacon.sol\":\"SushiswapFarmFactoryBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88b812365459a042c2aab5c689ff723098e0e19cb372718d3dd028b3c406e4f6\",\"dweb:/ipfs/QmTsLrMYzPjnB85pyAy85NNcBg64RPVueJARzwNg9xMyR1\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf67f82ba68e13b306fa350fc0e2acaac3b0e90b2734a56e61302d79b408fb0b\",\"dweb:/ipfs/QmVhMTANFDtZFpxdGk6SayfttDxEh23GrT8ttiFRoow7c2\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca7bd5deecc4abd97f0218708c6e004953971cc62de68557fe0c6c8607f85a65\",\"dweb:/ipfs/QmRw3dGdS6ksHZiqcPRknYvWXfYP2hTj21PhkLjXyEVEf6\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x0edeb16b9821ae2b16e9d69c383b38d3ad2fbb3e0c06cf809a0786d96e602551\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88adc865fb1bd8dab4c58096e1d5887713f62c0405f8d2d17294727a8f43d8f7\",\"dweb:/ipfs/QmUJ27zsjxCatfoTFWho4k4qdhuBTorMqLuJzWqUX4Sdmg\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x54878f0d2f40b5e13f84977bcd3c71d4c38581414e7efb4909cb16dd3ace392f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de34b91166c2da5be35edc989b7cc9033fa1c15ef7ad93916208d25081089736\",\"dweb:/ipfs/QmSKZ1DeBfbEmDcvh5sKRpwqnTz5YNJtyAybzbkRgTET6N\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x20ba3c551439998a53313a63959be77ab70f14338a39592c7a6eb36e8bc3d148\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b4ad713900e1f3f43788b00742e0c1a885c254decf8fb8d854f4769401239cd\",\"dweb:/ipfs/QmatiW29TqVMi4dgfHM2Uppn4LqsSeJZtnVvT2rrYqyjR2\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9\",\"dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/SushiswapFarmFactoryBeacon.sol\":{\"keccak256\":\"0x80ba6987008157bde54e3da2facc3e752d262e9e6cb0c3f89a55ea5e236835f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b95ebd07f2c5cd2862917ced17bde55c85532964ac8137ff0b639e912502faf\",\"dweb:/ipfs/QmRAtMqiPBMaz7Y86LicFLyR2sYtRS3UbYWCV4jzqQMBZq\"]},\"project:/contracts/farms/SushiswapFarmUpgradeable.sol\":{\"keccak256\":\"0xa09542f8fcd51f576faa750201c3e7aae294596fe9de3923ca21269c4c9d722e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d24462e478b553617ff19fc5de14a075d5e518a4a9d6fc283178e99b9e5cbbe\",\"dweb:/ipfs/QmfE2YZPPnHBAmqd3TKmVeeNbc29umWXnryUwnTYGrvPpF\"]},\"project:/contracts/interfaces/IMiniChefV2.sol\":{\"keccak256\":\"0x7d9e8d326098127547e889cdb4464eba1ca37e5a8546b6a6b07ceb646d3e5a32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3660e01a8b32a858605de335e4372d1aba1c42ed885804259f23f597832720e5\",\"dweb:/ipfs/QmXVhZSGMxP9rE6eJWSCDx3qyzVzYjKHhCYkZq9cmEajiR\"]},\"project:/contracts/interfaces/IRewarder.sol\":{\"keccak256\":\"0x8a3be93ae6c89f036ecd472ce482442ce9510a6108cd2faca526cf4b4587446c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0147bc3ee4b15de254613a227266cdb1a8cbd5d59eda4c581ec9872d99d5f738\",\"dweb:/ipfs/QmakQJBgy25AkitgokWNiegicP22zpGoUNJidJwgP6cJgD\"]},\"project:/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xa3d83596fa1f4b8a66b37bf6ed9b8f193d16964f718feada7ff6b27817de51a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734097d009c568d586d793ef891a3da29e7a24330e290b2b3553e676f4c9c3a7\",\"dweb:/ipfs/QmUhmfSvgMBRnJNYHfNjDKtti7Fna6Uqr4rsKuJeHkEScw\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x1530b00512450cd32128a92e9444a96da92399a84ab1e1a3539b4817cf91676b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e40fa52888c0351f252749cdeb252ea4cdecbfd893e31563a606cc5cf455aa2a\",\"dweb:/ipfs/QmUah3Qkt6U8WErkh6TDdZwwgcXRzMmzrFKeuoHr8KmiaN\"]},\"project:/contracts/interfaces/IUniswapV2Router.sol\":{\"keccak256\":\"0xec9edfa4778dfd003d2f53807fc04f5274d28ade94226f7df74957de7c07111a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f9089e0dcf2871197521b6f84f353b9d63816bfa0c1a2ba64379492ffc77f53\",\"dweb:/ipfs/QmSnAv4R1MWmxjHh37Tp2yfHMQdnfPA9T17rTiLprixy2i\"]},\"project:/contracts/utils/Cooldown.sol\":{\"keccak256\":\"0xb9dcb6b93efb728bf356c0fadb2b124083f28317147fef31e3c57df79673e7e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd8bd1180c0fe93e63807b6bf06c73e76845bcc578031e22917f176cc50d1c59\",\"dweb:/ipfs/QmRi11ypJ3Byvrn4cetvZW6YwkD5pBkyMp3n3J219qQyjP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615505806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c8063d2dd71ad116200007a578063d2dd71ad146200019b578063d95a4d9314620001b2578063e233290814620001cc578063e940325614620001e3578063ecb0394314620001fa578063f9d9331d146200021157600080fd5b8063081e3eda14620000c8578063430004c114620000de57806351bdca3e146200010b5780637c770aae146200013e578063bfe109281462000155578063c4d66de81462000182575b600080fd5b6002546040519081526020015b60405180910390f35b620000f5620000ef36600462001329565b6200023d565b60408051928352602083019190915201620000d5565b620001226200011c36600462001383565b62000392565b60408051938452602084019290925290820152606001620000d5565b620001226200014f366004620013c1565b62000454565b60035462000169906001600160a01b031681565b6040516001600160a01b039091168152602001620000d5565b62000199620001933660046200141c565b62000778565b005b62000199620001ac36600462001484565b6200092c565b60005462000169906201000090046001600160a01b031681565b62000199620001dd3660046200141c565b62000ac8565b62000122620001f43660046200141c565b62000b83565b620001696200020b3660046200156c565b62000c42565b62000169620002223660046200141c565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b038481166000908152600160205260408120549091829116620002ae5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e74206578697374000000000060448201526064015b60405180910390fd5b6001600160a01b038681166000908152600160205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af11580156200031e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000344919062001586565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526001602052604081205490918291829116156200044d576001600160a01b0384811660009081526001602052604090819020549051630103c92b60e01b81528783166004820152911690630103c92b90602401602060405180830381865afa15801562000413573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004399190620015ab565b925062000447848462000c6d565b90925090505b9250925092565b6001600160a01b0382811660009081526001602052604081205490918291829116620004ee57620004858562000f14565b6001600160a01b03808716600081815260016020819052604082208054959094166001600160a01b03199586161790935560028054938401815590527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180549092161790555b8715620005a4576001600160a01b03808616600090815260016020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa1580156200054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005729190620015c5565b6001600160a01b03808816600090815260016020526040902054919250620005a291818416913391168c62000fe2565b505b86156200065b576001600160a01b038086166000908152600160209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa15801562000603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006299190620015c5565b6001600160a01b038088166000908152600160205260409020549192506200065991818416913391168b62000fe2565b505b85156200068b576001600160a01b038086166000818152600160205260409020546200068b923391168962000fe2565b6001600160a01b038581166000908152600160205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af1158015620006fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007229190620015e5565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b600054610100900460ff16620007955760005460ff161562000799565b303b155b620007fe5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002a5565b600054610100900460ff1615801562000821576000805461ffff19166101011790555b60006040516200083190620012d7565b604051809103906000f0801580156200084e573d6000803e3d6000fd5b506040516200085d90620012e5565b6001600160a01b039091168152602001604051809103906000f0801580156200088a573d6000803e3d6000fd5b5060405163f2fde38b60e01b81526001600160a01b0385811660048301529192509082169063f2fde38b90602401600060405180830381600087803b158015620008d357600080fd5b505af1158015620008e8573d6000803e3d6000fd5b5050600080546001600160a01b03909416620100000262010000600160b01b0319909416939093179092555050801562000928576000805461ff00191690555b5050565b6003546001600160a01b031615806200094f57506003546001600160a01b031633145b6200099d5760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b6001600160a01b038981166000908152600160205260409020541662000a065760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e7420657869737400000000006044820152606401620002a5565b6001600160a01b03808a16600090815260016020526040908190205490516373ad67d760e01b81529116906373ad67d79062000a55908b908b908b908b908b908b908b908b9060040162001661565b600060405180830381600087803b15801562000a7057600080fd5b505af115801562000a85573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b6003546001600160a01b0316158062000aeb57506003546001600160a01b031633145b62000b395760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260016020526040812054909182918291161562000c3b576001600160a01b03808516600090815260016020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000c01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c279190620015ab565b925062000c35848462000c6d565b90925090505b9193909250565b6002818154811062000c5357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0382811660009081526001602052604081205490918291161562000f0d576000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000cd3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cf99190620015ab565b6001600160a01b03808716600090815260016020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562000d54573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d7a9190620015c5565b6040516370a0823160e01b81526001600160a01b03888116600483015291909116906370a0823190602401602060405180830381865afa15801562000dc3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000de99190620015ab565b905062000e038262000dfc878462001044565b9062001059565b6001600160a01b038088166000908152600160209081526040808320548151635f64b55b60e01b8152915195995092949290931692635f64b55b92600480830193928290030181865afa15801562000e5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e859190620015c5565b6040516370a0823160e01b81526001600160a01b03898116600483015291909116906370a0823190602401602060405180830381865afa15801562000ece573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef49190620015ab565b905062000f078362000dfc888462001044565b93505050505b9250929050565b60008054604080516001600160a01b0385811660248301523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b179052915184936201000090049092169162000f7a90620012f3565b62000f8792919062001726565b604051809103906000f08015801562000fa4573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526200103e90859062001067565b50505050565b60006200105282846200174c565b9392505050565b60006200105282846200177a565b6000620010be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620011459092919063ffffffff16565b805190915015620011405780806020019051810190620010df91906200179d565b620011405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620002a5565b505050565b60606200115684846000856200115e565b949350505050565b606082471015620011c15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620002a5565b6001600160a01b0385163b6200121a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002a5565b600080866001600160a01b03168587604051620012389190620017bd565b60006040518083038185875af1925050503d806000811462001277576040519150601f19603f3d011682016040523d82523d6000602084013e6200127c565b606091505b50915091506200128e82828662001299565b979650505050505050565b60608315620012aa57508162001052565b825115620012bb5782518084602001fd5b8160405162461bcd60e51b8152600401620002a59190620017db565b612e2c80620017f183390190565b610529806200461d83390190565b61098a8062004b4683390190565b6001600160a01b03811681146200131757600080fd5b50565b80151581146200131757600080fd5b600080600080608085870312156200134057600080fd5b84356200134d8162001301565b935060208501359250604085013562001366816200131a565b91506060850135620013788162001301565b939692955090935050565b600080604083850312156200139757600080fd5b8235620013a48162001301565b91506020830135620013b68162001301565b809150509250929050565b600080600080600060a08688031215620013da57600080fd5b8535945060208601359350604086013592506060860135620013fc8162001301565b915060808601356200140e8162001301565b809150509295509295909350565b6000602082840312156200142f57600080fd5b8135620010528162001301565b60008083601f8401126200144f57600080fd5b50813567ffffffffffffffff8111156200146857600080fd5b6020830191508360208260051b850101111562000f0d57600080fd5b600080600080600080600080600060a08a8c031215620014a357600080fd5b8935620014b08162001301565b985060208a013567ffffffffffffffff80821115620014ce57600080fd5b620014dc8d838e016200143c565b909a50985060408c0135915080821115620014f657600080fd5b620015048d838e016200143c565b909850965060608c01359150808211156200151e57600080fd5b6200152c8d838e016200143c565b909650945060808c01359150808211156200154657600080fd5b50620015558c828d016200143c565b915080935050809150509295985092959850929598565b6000602082840312156200157f57600080fd5b5035919050565b600080604083850312156200159a57600080fd5b505080516020909101519092909150565b600060208284031215620015be57600080fd5b5051919050565b600060208284031215620015d857600080fd5b8151620010528162001301565b600080600060608486031215620015fb57600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b85811015620016565781356200163a8162001301565b6001600160a01b03168752958201959082019060010162001624565b509495945050505050565b60808152600062001677608083018a8c62001614565b82810360208401526200168c81898b62001614565b90508281036040840152620016a381878962001614565b90508281036060840152620016ba81858762001614565b9b9a5050505050505050505050565b60005b83811015620016e6578181015183820152602001620016cc565b838111156200103e5750506000910152565b6000815180845262001712816020860160208601620016c9565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200115690830184620016f8565b60008160001904831182151516156200177557634e487b7160e01b600052601160045260246000fd5b500290565b6000826200179857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620017b057600080fd5b815162001052816200131a565b60008251620017d1818460208701620016c9565b9190910192915050565b602081526000620010526020830184620016f856fe60a06040523060805234801561001457600080fd5b506001606555608051612ddb6100516000396000818161043d0152818161048601528181610ef101528181610f310152610fc40152612ddb6000f3fe6080604052600436106101095760003560e01c806352d1902d116100955780638da5cb5b116100645780638da5cb5b146102c2578063f1068454146102e0578063f2fde38b146102f6578063f7c618c114610316578063fad3cc4b1461033657600080fd5b806352d1902d146102585780635f64b55b1461026d578063715018a61461028d57806373ad67d7146102a257600080fd5b80633659cfe6116100dc5780633659cfe6146101ae578063430004c1146101d0578063452ed4f114610205578063485cc955146102255780634f1ef2861461024557600080fd5b80630103c92b1461010e5780630fc63d1014610141578063168a4822146101795780632a8dc1311461018e575b600080fd5b34801561011a57600080fd5b5061012e610129366004612507565b610371565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b50606a54610161906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b34801561018557600080fd5b5061012e6103fc565b34801561019a57600080fd5b50606854610161906001600160a01b031681565b3480156101ba57600080fd5b506101ce6101c9366004612507565b610432565b005b3480156101dc57600080fd5b506101f06101eb366004612532565b61051b565b60408051928352602083019190915201610138565b34801561021157600080fd5b50606954610161906001600160a01b031681565b34801561023157600080fd5b506101ce610240366004612585565b610741565b6101ce610253366004612605565b610ee6565b34801561026457600080fd5b5061012e610fb7565b34801561027957600080fd5b50606b54610161906001600160a01b031681565b34801561029957600080fd5b506101ce61106a565b3480156102ae57600080fd5b506101ce6102bd3660046126f9565b6110a0565b3480156102ce57600080fd5b506033546001600160a01b0316610161565b3480156102ec57600080fd5b5061012e606c5481565b34801561030257600080fd5b506101ce610311366004612507565b6117f4565b34801561032257600080fd5b50606754610161906001600160a01b031681565b34801561034257600080fd5b506103566103513660046127bd565b61188c565b60408051938452602084019290925290820152606001610138565b6001600160a01b03811660009081526076602052604081205460745482916103cf91670de0b6b3a7640000916103c9916103aa91611aae565b6001600160a01b03871660009081526075602052604090205490611aba565b90611ac6565b6001600160a01b0384166000908152607560205260409020549091506103f59082611ad2565b9392505050565b600061042d610424670de0b6b3a76400006103c9607454607354611aba90919063ffffffff16565b60735490611ad2565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104845760405162461bcd60e51b815260040161047b906127f3565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104cd600080516020612d5f833981519152546001600160a01b031690565b6001600160a01b0316146104f35760405162461bcd60e51b815260040161047b9061283f565b6104fc81611ade565b6040805160008082526020820190925261051891839190611b08565b50565b600080336001600160a01b031661053a6033546001600160a01b031690565b6001600160a01b0316146105605760405162461bcd60e51b815260040161047b9061288b565b600260655414156105835760405162461bcd60e51b815260040161047b906128c0565b60026065556001600160a01b0386166000908152607560205260409020546105fd5760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b606482015260840161047b565b600061060887611c73565b905060006106168288611aae565b90508015610628576106288882611d44565b851561065357606954610645906001600160a01b03168689611df8565b600080935093505050610731565b606a54606b54731b02da8cb0d097eb8d57a175b88c7d8b479975069163baa2abde916001600160a01b0391821691168a6000808b61069342610258611ad2565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af1158015610705573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072991906128f7565b909450925050505b6001606555909590945092505050565b600054610100900460ff1661075c5760005460ff1615610760565b303b155b6107c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161047b565b600054610100900460ff161580156107e5576000805461ffff19166101011790555b6107ed611e4a565b6107f6826117f4565b6107ff83611e79565b606c81905550730769fd68dfb93167989c6f7254cd0d766fb2841f6001600160a01b031663ab560e106040518163ffffffff1660e01b8152600401602060405180830381865afa158015610857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087b919061291b565b606780546001600160a01b0319166001600160a01b0392909216919091179055606c5460405163c346253d60e01b81526004810191909152730769fd68dfb93167989c6f7254cd0d766fb2841f9063c346253d90602401602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610913919061291b565b606d80546001600160a01b0319166001600160a01b0392909216918217905515610a0157606d54606c5460405163d63b3c4960e01b8152600481019190915260006024820181905260448201819052916001600160a01b03169063d63b3c4990606401600060405180830381865afa158015610993573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109bb91908101906129c7565b509050806000815181106109d1576109d1612a8c565b6020026020010151606860006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b606c546040516378ed5d1f60e01b81526004810191909152730769fd68dfb93167989c6f7254cd0d766fb2841f906378ed5d1f90602401602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a79919061291b565b606980546001600160a01b0319166001600160a01b0392909216918217905560408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061291b565b606a80546001600160a01b0319166001600160a01b039283161790556069546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b79919061291b565b606b80546001600160a01b0319166001600160a01b0392831617905560695460405163095ea7b360e01b8152730769fd68dfb93167989c6f7254cd0d766fb2841f60048201526000196024820181905292919091169063095ea7b3906044016020604051808303816000875af1158015610bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1b9190612aa2565b5060695460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca59190612aa2565b5060675460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610d0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2f9190612aa2565b5060685460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190612aa2565b50606a5460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610e1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e439190612aa2565b50606b5460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd9190612aa2565b50508015610ee1576000805461ff00191690555b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610f2f5760405162461bcd60e51b815260040161047b906127f3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f78600080516020612d5f833981519152546001600160a01b031690565b6001600160a01b031614610f9e5760405162461bcd60e51b815260040161047b9061283f565b610fa782611ade565b610fb382826001611b08565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110575760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161047b565b50600080516020612d5f83398151915290565b6033546001600160a01b031633146110945760405162461bcd60e51b815260040161047b9061288b565b61109e6000612014565b565b6033546001600160a01b031633146110ca5760405162461bcd60e51b815260040161047b9061288b565b600260655414156110ed5760405162461bcd60e51b815260040161047b906128c0565b60026065556073546111515760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b606482015260840161047b565b606c54604051630c7e663b60e11b81526004810191909152306024820152730769fd68dfb93167989c6f7254cd0d766fb2841f906318fccc7690604401600060405180830381600087803b1580156111a857600080fd5b505af11580156111bc573d6000803e3d6000fd5b50506067546040516370a0823160e01b81523060048201526000935061123592506002916001600160a01b0316906370a08231906024015b602060405180830381865afa158015611211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190612abf565b606d549091506001600160a01b0316156113e2576068546040516370a0823160e01b8152306004820152600091611281916002916001600160a01b0316906370a08231906024016111f4565b606854606a549192506001600160a01b0391821691161461133257731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed17398260008d8d306112c842610258611ad2565b6040518763ffffffff1660e01b81526004016112e996959493929190612ad8565b6000604051808303816000875af1158015611308573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113309190810190612b4b565b505b606854606b546001600160a01b039081169116146113e057731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed17398260008b8b3061137642610258611ad2565b6040518763ffffffff1660e01b815260040161139796959493929190612ad8565b6000604051808303816000875af11580156113b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113de9190810190612b4b565b505b505b606754606a546001600160a01b0390811691161461149057731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed173982600088883061142642610258611ad2565b6040518763ffffffff1660e01b815260040161144796959493929190612ad8565b6000604051808303816000875af1158015611466573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148e9190810190612b4b565b505b606754606b546001600160a01b0390811691161461153e57731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed17398260008686306114d442610258611ad2565b6040518763ffffffff1660e01b81526004016114f596959493929190612ad8565b6000604051808303816000875af1158015611514573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261153c9190810190612b4b565b505b606a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ab9190612abf565b606b546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d9190612abf565b606a54606b54919250731b02da8cb0d097eb8d57a175b88c7d8b479975069163e8e33700916001600160a01b03908116911685856001803061166142610258611ad2565b6040518963ffffffff1660e01b8152600401611684989796959493929190612b80565b6060604051808303816000875af11580156116a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c79190612bc9565b50506069546040516370a0823160e01b8152306004820152600092506001600160a01b03909116906370a0823190602401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117399190612abf565b905080156117e1576073546117679061175e906103c9670de0b6b3a764000085611aba565b60745490611ad2565b607455606c54604051638dbdbe6d60e01b8152600481019190915260248101829052306044820152730769fd68dfb93167989c6f7254cd0d766fb2841f90638dbdbe6d90606401600060405180830381600087803b1580156117c857600080fd5b505af11580156117dc573d6000803e3d6000fd5b505050505b5050600160655550505050505050505050565b6033546001600160a01b0316331461181e5760405162461bcd60e51b815260040161047b9061288b565b6001600160a01b0381166118835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047b565b61051881612014565b60008080336001600160a01b03166118ac6033546001600160a01b031690565b6001600160a01b0316146118d25760405162461bcd60e51b815260040161047b9061288b565b600260655414156118f55760405162461bcd60e51b815260040161047b906128c0565b60026065556001600160a01b038416600090815260756020526040812054156119245761192185611c73565b90505b600080891180156119355750600088115b156119e957606a54606b54731b02da8cb0d097eb8d57a175b88c7d8b479975069163e8e33700916001600160a01b0391821691168c8c6000803061197b42610258611ad2565b6040518963ffffffff1660e01b815260040161199e989796959493929190612b80565b6060604051808303816000875af11580156119bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e19190612bc9565b919650945090505b6119f38188611ad2565b925060008311611a455760405162461bcd60e51b815260206004820152601860248201527f54686520616d6f756e742070726f766964656420697320300000000000000000604482015260640161047b565b611a5886611a538585611ad2565b611d44565b611a7986611a668b88611aae565b606a546001600160a01b03169190611df8565b611a9a86611a878a87611aae565b606b546001600160a01b03169190611df8565b505060016065819055509450945094915050565b60006103f58284612c0d565b60006103f58284612c24565b60006103f58284612c43565b60006103f58284612c65565b6033546001600160a01b031633146105185760405162461bcd60e51b815260040161047b9061288b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611b3b57610ee183612066565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611b95575060408051601f3d908101601f19168201909252611b9291810190612abf565b60015b611bf85760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161047b565b600080516020612d5f8339815191528114611c675760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161047b565b50610ee1838383612102565b600080611c7f83610371565b6001600160a01b038416600090815260756020526040902054607354919250611ca89190611aae565b6073556001600160a01b03831660009081526075602052604080822091909155606c549051630ad58d2f60e01b8152600481019190915260248101829052306044820152730769fd68dfb93167989c6f7254cd0d766fb2841f90630ad58d2f90606401600060405180830381600087803b158015611d2557600080fd5b505af1158015611d39573d6000803e3d6000fd5b509295945050505050565b6001600160a01b0382166000908152607560209081526040808320849055607454607690925290912055607354611d7b9082611ad2565b607355606c54604051638dbdbe6d60e01b8152600481019190915260248101829052306044820152730769fd68dfb93167989c6f7254cd0d766fb2841f90638dbdbe6d90606401600060405180830381600087803b158015611ddc57600080fd5b505af1158015611df0573d6000803e3d6000fd5b505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ee190849061212d565b600054610100900460ff16611e715760405162461bcd60e51b815260040161047b90612c7d565b61109e6121ff565b600080805b730769fd68dfb93167989c6f7254cd0d766fb2841f6001600160a01b031663081e3eda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef49190612abf565b811015611fa7576040516378ed5d1f60e01b8152600481018290526001600160a01b03851690730769fd68dfb93167989c6f7254cd0d766fb2841f906378ed5d1f90602401602060405180830381865afa158015611f56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7a919061291b565b6001600160a01b03161415611f955780925060019150611fa7565b80611f9f81612cc8565b915050611e7e565b508061200e5760405162461bcd60e51b815260206004820152603060248201527f54686520706f6f6c20776974682074686520676976656e207061697220746f6b60448201526f195b88191bd95cdb89dd08195e1a5cdd60821b606482015260840161047b565b50919050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b6120d35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161047b565b600080516020612d5f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61210b8361222f565b6000825111806121185750805b15610ee157612127838361226f565b50505050565b6000612182826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122949092919063ffffffff16565b805190915015610ee157808060200190518101906121a09190612aa2565b610ee15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161047b565b600054610100900460ff166122265760405162461bcd60e51b815260040161047b90612c7d565b61109e33612014565b61223881612066565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f58383604051806060016040528060278152602001612d7f602791396122ab565b60606122a38484600085612388565b949350505050565b60606001600160a01b0384163b6123135760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161047b565b600080856001600160a01b03168560405161232e9190612d0f565b600060405180830381855af49150503d8060008114612369576040519150601f19603f3d011682016040523d82523d6000602084013e61236e565b606091505b509150915061237e8282866124b9565b9695505050505050565b6060824710156123e95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161047b565b6001600160a01b0385163b6124405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161047b565b600080866001600160a01b0316858760405161245c9190612d0f565b60006040518083038185875af1925050503d8060008114612499576040519150601f19603f3d011682016040523d82523d6000602084013e61249e565b606091505b50915091506124ae8282866124b9565b979650505050505050565b606083156124c85750816103f5565b8251156124d85782518084602001fd5b8160405162461bcd60e51b815260040161047b9190612d2b565b6001600160a01b038116811461051857600080fd5b60006020828403121561251957600080fd5b81356103f5816124f2565b801515811461051857600080fd5b6000806000806080858703121561254857600080fd5b8435612553816124f2565b935060208501359250604085013561256a81612524565b9150606085013561257a816124f2565b939692955090935050565b6000806040838503121561259857600080fd5b82356125a3816124f2565b915060208301356125b3816124f2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156125fd576125fd6125be565b604052919050565b6000806040838503121561261857600080fd5b8235612623816124f2565b915060208381013567ffffffffffffffff8082111561264157600080fd5b818601915086601f83011261265557600080fd5b813581811115612667576126676125be565b612679601f8201601f191685016125d4565b9150808252878482850101111561268f57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f8401126126bf57600080fd5b50813567ffffffffffffffff8111156126d757600080fd5b6020830191508360208260051b85010111156126f257600080fd5b9250929050565b6000806000806000806000806080898b03121561271557600080fd5b883567ffffffffffffffff8082111561272d57600080fd5b6127398c838d016126ad565b909a50985060208b013591508082111561275257600080fd5b61275e8c838d016126ad565b909850965060408b013591508082111561277757600080fd5b6127838c838d016126ad565b909650945060608b013591508082111561279c57600080fd5b506127a98b828c016126ad565b999c989b5096995094979396929594505050565b600080600080608085870312156127d357600080fd5b843593506020850135925060408501359150606085013561257a816124f2565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000806040838503121561290a57600080fd5b505080516020909101519092909150565b60006020828403121561292d57600080fd5b81516103f5816124f2565b600067ffffffffffffffff821115612952576129526125be565b5060051b60200190565b600082601f83011261296d57600080fd5b8151602061298261297d83612938565b6125d4565b82815260059290921b840181019181810190868411156129a157600080fd5b8286015b848110156129bc57805183529183019183016129a5565b509695505050505050565b600080604083850312156129da57600080fd5b825167ffffffffffffffff808211156129f257600080fd5b818501915085601f830112612a0657600080fd5b81516020612a1661297d83612938565b82815260059290921b84018101918181019089841115612a3557600080fd5b948201945b83861015612a5c578551612a4d816124f2565b82529482019490820190612a3a565b91880151919650909350505080821115612a7557600080fd5b50612a828582860161295c565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ab457600080fd5b81516103f581612524565b600060208284031215612ad157600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015612b2a578335612b0f816124f2565b6001600160a01b031682529282019290820190600101612afc565b506001600160a01b0396909616606085015250505060800152949350505050565b600060208284031215612b5d57600080fd5b815167ffffffffffffffff811115612b7457600080fd5b6122a38482850161295c565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612bde57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600082821015612c1f57612c1f612bf7565b500390565b6000816000190483118215151615612c3e57612c3e612bf7565b500290565b600082612c6057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612c7857612c78612bf7565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000600019821415612cdc57612cdc612bf7565b5060010190565b60005b83811015612cfe578181015183820152602001612ce6565b838111156121275750506000910152565b60008251612d21818460208701612ce3565b9190910192915050565b6020815260008251806020840152612d4a816040850160208701612ce3565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208e672f5adb48a17e8b83baab0671cd1100fc68203439b1a80b08511f2f3ba50564736f6c634300080a0033608060405234801561001057600080fd5b5060405161052938038061052983398101604081905261002f91610151565b61003833610047565b61004181610097565b50610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03163b151590565b60006020828403121561016357600080fd5b81516001600160a01b038116811461017a57600080fd5b9392505050565b610399806101906000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102fe565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102fe565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061032e565b60405180910390fd5b61010281610219565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061032e565b61016d60006102ae565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061032e565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b610207816102ae565b50565b6001600160a01b03163b151590565b6001600160a01b0381163b61028c5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031057600080fd5b81356001600160a01b038116811461032757600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f0a243b52461696fadf05325e53c8019325f72ee91b3a6ba2f983ff13a83604364736f6c634300080a0033608060405260405161098a38038061098a8339810160408190526100229161048b565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161054b565b6000805160206109438339815191521461006957610069610570565b6100758282600061007c565b50506105f0565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610586565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610586565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061094383398151915260001b61031360201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161096360279139610316565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61037e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b03168560405161039991906105a1565b600060405180830381855af49150503d80600081146103d4576040519150601f19603f3d011682016040523d82523d6000602084013e6103d9565b606091505b5090925090506103ea8282866103f4565b9695505050505050565b606083156104035750816102fd565b8251156104135782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105bd565b80516001600160a01b038116811461044457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047a578181015183820152602001610462565b838111156101405750506000910152565b6000806040838503121561049e57600080fd5b6104a78361042d565b60208401519092506001600160401b03808211156104c457600080fd5b818501915085601f8301126104d857600080fd5b8151818111156104ea576104ea610449565b604051601f8201601f19908116603f0116810190838211818310171561051257610512610449565b8160405282815288602084870101111561052b57600080fd5b61053c83602083016020880161045f565b80955050505050509250929050565b60008282101561056b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561059857600080fd5b6102fd8261042d565b600082516105b381846020870161045f565b9190910192915050565b60208152600082518060208401526105dc81604085016020870161045f565b601f01601f19169190910160400192915050565b610344806105ff6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e860279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061023f565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101ac9190610298565b600060405180830381855af49150503d80600081146101e7576040519150601f19603f3d011682016040523d82523d6000602084013e6101ec565b606091505b50915091506101fc828286610206565b9695505050505050565b6060831561021557508161004e565b8251156102255782518084602001fd5b8160405162461bcd60e51b815260040161018891906102b4565b60006020828403121561025157600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028357818101518382015260200161026b565b83811115610292576000848401525b50505050565b600082516102aa818460208701610268565b9190910192915050565b60208152600082518060208401526102d3816040850160208701610268565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122058fee286ec8c0f6a9e56c42f4511af15e2d551bc7768492988b09d51b654ef8064736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cf2ce663d3da46df502c5a279f6335578d4bbbd17b2d038309791c3a50721a2b64736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000c35760003560e01c8063d2dd71ad116200007a578063d2dd71ad146200019b578063d95a4d9314620001b2578063e233290814620001cc578063e940325614620001e3578063ecb0394314620001fa578063f9d9331d146200021157600080fd5b8063081e3eda14620000c8578063430004c114620000de57806351bdca3e146200010b5780637c770aae146200013e578063bfe109281462000155578063c4d66de81462000182575b600080fd5b6002546040519081526020015b60405180910390f35b620000f5620000ef36600462001329565b6200023d565b60408051928352602083019190915201620000d5565b620001226200011c36600462001383565b62000392565b60408051938452602084019290925290820152606001620000d5565b620001226200014f366004620013c1565b62000454565b60035462000169906001600160a01b031681565b6040516001600160a01b039091168152602001620000d5565b62000199620001933660046200141c565b62000778565b005b62000199620001ac36600462001484565b6200092c565b60005462000169906201000090046001600160a01b031681565b62000199620001dd3660046200141c565b62000ac8565b62000122620001f43660046200141c565b62000b83565b620001696200020b3660046200156c565b62000c42565b62000169620002223660046200141c565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b038481166000908152600160205260408120549091829116620002ae5760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e74206578697374000000000060448201526064015b60405180910390fd5b6001600160a01b038681166000908152600160205260409081902054905163430004c160e01b8152336004820152602481018890528615156044820152858316606482015291169063430004c19060840160408051808303816000875af11580156200031e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000344919062001586565b60405187815291935091506001600160a01b0387169033907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a394509492505050565b6001600160a01b0381811660009081526001602052604081205490918291829116156200044d576001600160a01b0384811660009081526001602052604090819020549051630103c92b60e01b81528783166004820152911690630103c92b90602401602060405180830381865afa15801562000413573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004399190620015ab565b925062000447848462000c6d565b90925090505b9250925092565b6001600160a01b0382811660009081526001602052604081205490918291829116620004ee57620004858562000f14565b6001600160a01b03808716600081815260016020819052604082208054959094166001600160a01b03199586161790935560028054938401815590527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180549092161790555b8715620005a4576001600160a01b03808616600090815260016020908152604080832054815162fc63d160e41b8152915193941692630fc63d10926004808401939192918290030181865afa1580156200054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005729190620015c5565b6001600160a01b03808816600090815260016020526040902054919250620005a291818416913391168c62000fe2565b505b86156200065b576001600160a01b038086166000908152600160209081526040808320548151635f64b55b60e01b8152915193941692635f64b55b926004808401939192918290030181865afa15801562000603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006299190620015c5565b6001600160a01b038088166000908152600160205260409020549192506200065991818416913391168b62000fe2565b505b85156200068b576001600160a01b038086166000818152600160205260409020546200068b923391168962000fe2565b6001600160a01b038581166000908152600160205260409081902054905163fad3cc4b60e01b8152600481018b9052602481018a905260448101899052868316606482015291169063fad3cc4b906084016060604051808303816000875af1158015620006fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007229190620015e5565b60405181815292955090935091506001600160a01b0380871691908616907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3955095509592505050565b600054610100900460ff16620007955760005460ff161562000799565b303b155b620007fe5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002a5565b600054610100900460ff1615801562000821576000805461ffff19166101011790555b60006040516200083190620012d7565b604051809103906000f0801580156200084e573d6000803e3d6000fd5b506040516200085d90620012e5565b6001600160a01b039091168152602001604051809103906000f0801580156200088a573d6000803e3d6000fd5b5060405163f2fde38b60e01b81526001600160a01b0385811660048301529192509082169063f2fde38b90602401600060405180830381600087803b158015620008d357600080fd5b505af1158015620008e8573d6000803e3d6000fd5b5050600080546001600160a01b03909416620100000262010000600160b01b0319909416939093179092555050801562000928576000805461ff00191690555b5050565b6003546001600160a01b031615806200094f57506003546001600160a01b031633145b6200099d5760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b6001600160a01b038981166000908152600160205260409020541662000a065760405162461bcd60e51b815260206004820152601b60248201527f54686520676976656e20706f6f6c20646f65736e7420657869737400000000006044820152606401620002a5565b6001600160a01b03808a16600090815260016020526040908190205490516373ad67d760e01b81529116906373ad67d79062000a55908b908b908b908b908b908b908b908b9060040162001661565b600060405180830381600087803b15801562000a7057600080fd5b505af115801562000a85573d6000803e3d6000fd5b50506040516001600160a01b038c1692507f2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb79150600090a2505050505050505050565b6003546001600160a01b0316158062000aeb57506003546001600160a01b031633145b62000b395760405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206973206e6f74206469737472696275746f720000006044820152606401620002a5565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fe37acc13f5ed9d0cc83c2842e093fe5a494d5b8fb5b1db06356b327081832f5290600090a250565b6001600160a01b03818116600090815260016020526040812054909182918291161562000c3b576001600160a01b03808516600090815260016020908152604091829020548251630b45241160e11b8152925193169263168a48229260048082019392918290030181865afa15801562000c01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c279190620015ab565b925062000c35848462000c6d565b90925090505b9193909250565b6002818154811062000c5357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0382811660009081526001602052604081205490918291161562000f0d576000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000cd3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cf99190620015ab565b6001600160a01b03808716600090815260016020908152604080832054815162fc63d160e41b8152915195965092949290931692630fc63d1092600480830193928290030181865afa15801562000d54573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d7a9190620015c5565b6040516370a0823160e01b81526001600160a01b03888116600483015291909116906370a0823190602401602060405180830381865afa15801562000dc3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000de99190620015ab565b905062000e038262000dfc878462001044565b9062001059565b6001600160a01b038088166000908152600160209081526040808320548151635f64b55b60e01b8152915195995092949290931692635f64b55b92600480830193928290030181865afa15801562000e5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e859190620015c5565b6040516370a0823160e01b81526001600160a01b03898116600483015291909116906370a0823190602401602060405180830381865afa15801562000ece573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ef49190620015ab565b905062000f078362000dfc888462001044565b93505050505b9250929050565b60008054604080516001600160a01b0385811660248301523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b179052915184936201000090049092169162000f7a90620012f3565b62000f8792919062001726565b604051809103906000f08015801562000fa4573d6000803e3d6000fd5b506040519091506001600160a01b038216907f7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d0890600090a292915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526200103e90859062001067565b50505050565b60006200105282846200174c565b9392505050565b60006200105282846200177a565b6000620010be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620011459092919063ffffffff16565b805190915015620011405780806020019051810190620010df91906200179d565b620011405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620002a5565b505050565b60606200115684846000856200115e565b949350505050565b606082471015620011c15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620002a5565b6001600160a01b0385163b6200121a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002a5565b600080866001600160a01b03168587604051620012389190620017bd565b60006040518083038185875af1925050503d806000811462001277576040519150601f19603f3d011682016040523d82523d6000602084013e6200127c565b606091505b50915091506200128e82828662001299565b979650505050505050565b60608315620012aa57508162001052565b825115620012bb5782518084602001fd5b8160405162461bcd60e51b8152600401620002a59190620017db565b612e2c80620017f183390190565b610529806200461d83390190565b61098a8062004b4683390190565b6001600160a01b03811681146200131757600080fd5b50565b80151581146200131757600080fd5b600080600080608085870312156200134057600080fd5b84356200134d8162001301565b935060208501359250604085013562001366816200131a565b91506060850135620013788162001301565b939692955090935050565b600080604083850312156200139757600080fd5b8235620013a48162001301565b91506020830135620013b68162001301565b809150509250929050565b600080600080600060a08688031215620013da57600080fd5b8535945060208601359350604086013592506060860135620013fc8162001301565b915060808601356200140e8162001301565b809150509295509295909350565b6000602082840312156200142f57600080fd5b8135620010528162001301565b60008083601f8401126200144f57600080fd5b50813567ffffffffffffffff8111156200146857600080fd5b6020830191508360208260051b850101111562000f0d57600080fd5b600080600080600080600080600060a08a8c031215620014a357600080fd5b8935620014b08162001301565b985060208a013567ffffffffffffffff80821115620014ce57600080fd5b620014dc8d838e016200143c565b909a50985060408c0135915080821115620014f657600080fd5b620015048d838e016200143c565b909850965060608c01359150808211156200151e57600080fd5b6200152c8d838e016200143c565b909650945060808c01359150808211156200154657600080fd5b50620015558c828d016200143c565b915080935050809150509295985092959850929598565b6000602082840312156200157f57600080fd5b5035919050565b600080604083850312156200159a57600080fd5b505080516020909101519092909150565b600060208284031215620015be57600080fd5b5051919050565b600060208284031215620015d857600080fd5b8151620010528162001301565b600080600060608486031215620015fb57600080fd5b8351925060208401519150604084015190509250925092565b8183526000602080850194508260005b85811015620016565781356200163a8162001301565b6001600160a01b03168752958201959082019060010162001624565b509495945050505050565b60808152600062001677608083018a8c62001614565b82810360208401526200168c81898b62001614565b90508281036040840152620016a381878962001614565b90508281036060840152620016ba81858762001614565b9b9a5050505050505050505050565b60005b83811015620016e6578181015183820152602001620016cc565b838111156200103e5750506000910152565b6000815180845262001712816020860160208601620016c9565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200115690830184620016f8565b60008160001904831182151516156200177557634e487b7160e01b600052601160045260246000fd5b500290565b6000826200179857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620017b057600080fd5b815162001052816200131a565b60008251620017d1818460208701620016c9565b9190910192915050565b602081526000620010526020830184620016f856fe60a06040523060805234801561001457600080fd5b506001606555608051612ddb6100516000396000818161043d0152818161048601528181610ef101528181610f310152610fc40152612ddb6000f3fe6080604052600436106101095760003560e01c806352d1902d116100955780638da5cb5b116100645780638da5cb5b146102c2578063f1068454146102e0578063f2fde38b146102f6578063f7c618c114610316578063fad3cc4b1461033657600080fd5b806352d1902d146102585780635f64b55b1461026d578063715018a61461028d57806373ad67d7146102a257600080fd5b80633659cfe6116100dc5780633659cfe6146101ae578063430004c1146101d0578063452ed4f114610205578063485cc955146102255780634f1ef2861461024557600080fd5b80630103c92b1461010e5780630fc63d1014610141578063168a4822146101795780632a8dc1311461018e575b600080fd5b34801561011a57600080fd5b5061012e610129366004612507565b610371565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b50606a54610161906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b34801561018557600080fd5b5061012e6103fc565b34801561019a57600080fd5b50606854610161906001600160a01b031681565b3480156101ba57600080fd5b506101ce6101c9366004612507565b610432565b005b3480156101dc57600080fd5b506101f06101eb366004612532565b61051b565b60408051928352602083019190915201610138565b34801561021157600080fd5b50606954610161906001600160a01b031681565b34801561023157600080fd5b506101ce610240366004612585565b610741565b6101ce610253366004612605565b610ee6565b34801561026457600080fd5b5061012e610fb7565b34801561027957600080fd5b50606b54610161906001600160a01b031681565b34801561029957600080fd5b506101ce61106a565b3480156102ae57600080fd5b506101ce6102bd3660046126f9565b6110a0565b3480156102ce57600080fd5b506033546001600160a01b0316610161565b3480156102ec57600080fd5b5061012e606c5481565b34801561030257600080fd5b506101ce610311366004612507565b6117f4565b34801561032257600080fd5b50606754610161906001600160a01b031681565b34801561034257600080fd5b506103566103513660046127bd565b61188c565b60408051938452602084019290925290820152606001610138565b6001600160a01b03811660009081526076602052604081205460745482916103cf91670de0b6b3a7640000916103c9916103aa91611aae565b6001600160a01b03871660009081526075602052604090205490611aba565b90611ac6565b6001600160a01b0384166000908152607560205260409020549091506103f59082611ad2565b9392505050565b600061042d610424670de0b6b3a76400006103c9607454607354611aba90919063ffffffff16565b60735490611ad2565b905090565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104845760405162461bcd60e51b815260040161047b906127f3565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104cd600080516020612d5f833981519152546001600160a01b031690565b6001600160a01b0316146104f35760405162461bcd60e51b815260040161047b9061283f565b6104fc81611ade565b6040805160008082526020820190925261051891839190611b08565b50565b600080336001600160a01b031661053a6033546001600160a01b031690565b6001600160a01b0316146105605760405162461bcd60e51b815260040161047b9061288b565b600260655414156105835760405162461bcd60e51b815260040161047b906128c0565b60026065556001600160a01b0386166000908152607560205260409020546105fd5760405162461bcd60e51b815260206004820152602760248201527f54686520616d6f756e74207374616b65642073686f756c64206265206d6f72656044820152660207468616e20360cc1b606482015260840161047b565b600061060887611c73565b905060006106168288611aae565b90508015610628576106288882611d44565b851561065357606954610645906001600160a01b03168689611df8565b600080935093505050610731565b606a54606b54731b02da8cb0d097eb8d57a175b88c7d8b479975069163baa2abde916001600160a01b0391821691168a6000808b61069342610258611ad2565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e40160408051808303816000875af1158015610705573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072991906128f7565b909450925050505b6001606555909590945092505050565b600054610100900460ff1661075c5760005460ff1615610760565b303b155b6107c35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161047b565b600054610100900460ff161580156107e5576000805461ffff19166101011790555b6107ed611e4a565b6107f6826117f4565b6107ff83611e79565b606c81905550730769fd68dfb93167989c6f7254cd0d766fb2841f6001600160a01b031663ab560e106040518163ffffffff1660e01b8152600401602060405180830381865afa158015610857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087b919061291b565b606780546001600160a01b0319166001600160a01b0392909216919091179055606c5460405163c346253d60e01b81526004810191909152730769fd68dfb93167989c6f7254cd0d766fb2841f9063c346253d90602401602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610913919061291b565b606d80546001600160a01b0319166001600160a01b0392909216918217905515610a0157606d54606c5460405163d63b3c4960e01b8152600481019190915260006024820181905260448201819052916001600160a01b03169063d63b3c4990606401600060405180830381865afa158015610993573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109bb91908101906129c7565b509050806000815181106109d1576109d1612a8c565b6020026020010151606860006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b606c546040516378ed5d1f60e01b81526004810191909152730769fd68dfb93167989c6f7254cd0d766fb2841f906378ed5d1f90602401602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a79919061291b565b606980546001600160a01b0319166001600160a01b0392909216918217905560408051630dfe168160e01b81529051630dfe1681916004808201926020929091908290030181865afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af7919061291b565b606a80546001600160a01b0319166001600160a01b039283161790556069546040805163d21220a760e01b81529051919092169163d21220a79160048083019260209291908290030181865afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b79919061291b565b606b80546001600160a01b0319166001600160a01b0392831617905560695460405163095ea7b360e01b8152730769fd68dfb93167989c6f7254cd0d766fb2841f60048201526000196024820181905292919091169063095ea7b3906044016020604051808303816000875af1158015610bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1b9190612aa2565b5060695460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca59190612aa2565b5060675460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610d0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2f9190612aa2565b5060685460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190612aa2565b50606a5460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610e1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e439190612aa2565b50606b5460405163095ea7b360e01b8152731b02da8cb0d097eb8d57a175b88c7d8b479975066004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303816000875af1158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd9190612aa2565b50508015610ee1576000805461ff00191690555b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610f2f5760405162461bcd60e51b815260040161047b906127f3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f78600080516020612d5f833981519152546001600160a01b031690565b6001600160a01b031614610f9e5760405162461bcd60e51b815260040161047b9061283f565b610fa782611ade565b610fb382826001611b08565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110575760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161047b565b50600080516020612d5f83398151915290565b6033546001600160a01b031633146110945760405162461bcd60e51b815260040161047b9061288b565b61109e6000612014565b565b6033546001600160a01b031633146110ca5760405162461bcd60e51b815260040161047b9061288b565b600260655414156110ed5760405162461bcd60e51b815260040161047b906128c0565b60026065556073546111515760405162461bcd60e51b815260206004820152602760248201527f54686572652073686f756c6420626520736f6d6520746f6b656e7320696e20746044820152661a19481c1bdbdb60ca1b606482015260840161047b565b606c54604051630c7e663b60e11b81526004810191909152306024820152730769fd68dfb93167989c6f7254cd0d766fb2841f906318fccc7690604401600060405180830381600087803b1580156111a857600080fd5b505af11580156111bc573d6000803e3d6000fd5b50506067546040516370a0823160e01b81523060048201526000935061123592506002916001600160a01b0316906370a08231906024015b602060405180830381865afa158015611211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190612abf565b606d549091506001600160a01b0316156113e2576068546040516370a0823160e01b8152306004820152600091611281916002916001600160a01b0316906370a08231906024016111f4565b606854606a549192506001600160a01b0391821691161461133257731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed17398260008d8d306112c842610258611ad2565b6040518763ffffffff1660e01b81526004016112e996959493929190612ad8565b6000604051808303816000875af1158015611308573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113309190810190612b4b565b505b606854606b546001600160a01b039081169116146113e057731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed17398260008b8b3061137642610258611ad2565b6040518763ffffffff1660e01b815260040161139796959493929190612ad8565b6000604051808303816000875af11580156113b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113de9190810190612b4b565b505b505b606754606a546001600160a01b0390811691161461149057731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed173982600088883061142642610258611ad2565b6040518763ffffffff1660e01b815260040161144796959493929190612ad8565b6000604051808303816000875af1158015611466573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148e9190810190612b4b565b505b606754606b546001600160a01b0390811691161461153e57731b02da8cb0d097eb8d57a175b88c7d8b479975066338ed17398260008686306114d442610258611ad2565b6040518763ffffffff1660e01b81526004016114f596959493929190612ad8565b6000604051808303816000875af1158015611514573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261153c9190810190612b4b565b505b606a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ab9190612abf565b606b546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161d9190612abf565b606a54606b54919250731b02da8cb0d097eb8d57a175b88c7d8b479975069163e8e33700916001600160a01b03908116911685856001803061166142610258611ad2565b6040518963ffffffff1660e01b8152600401611684989796959493929190612b80565b6060604051808303816000875af11580156116a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c79190612bc9565b50506069546040516370a0823160e01b8152306004820152600092506001600160a01b03909116906370a0823190602401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117399190612abf565b905080156117e1576073546117679061175e906103c9670de0b6b3a764000085611aba565b60745490611ad2565b607455606c54604051638dbdbe6d60e01b8152600481019190915260248101829052306044820152730769fd68dfb93167989c6f7254cd0d766fb2841f90638dbdbe6d90606401600060405180830381600087803b1580156117c857600080fd5b505af11580156117dc573d6000803e3d6000fd5b505050505b5050600160655550505050505050505050565b6033546001600160a01b0316331461181e5760405162461bcd60e51b815260040161047b9061288b565b6001600160a01b0381166118835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047b565b61051881612014565b60008080336001600160a01b03166118ac6033546001600160a01b031690565b6001600160a01b0316146118d25760405162461bcd60e51b815260040161047b9061288b565b600260655414156118f55760405162461bcd60e51b815260040161047b906128c0565b60026065556001600160a01b038416600090815260756020526040812054156119245761192185611c73565b90505b600080891180156119355750600088115b156119e957606a54606b54731b02da8cb0d097eb8d57a175b88c7d8b479975069163e8e33700916001600160a01b0391821691168c8c6000803061197b42610258611ad2565b6040518963ffffffff1660e01b815260040161199e989796959493929190612b80565b6060604051808303816000875af11580156119bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e19190612bc9565b919650945090505b6119f38188611ad2565b925060008311611a455760405162461bcd60e51b815260206004820152601860248201527f54686520616d6f756e742070726f766964656420697320300000000000000000604482015260640161047b565b611a5886611a538585611ad2565b611d44565b611a7986611a668b88611aae565b606a546001600160a01b03169190611df8565b611a9a86611a878a87611aae565b606b546001600160a01b03169190611df8565b505060016065819055509450945094915050565b60006103f58284612c0d565b60006103f58284612c24565b60006103f58284612c43565b60006103f58284612c65565b6033546001600160a01b031633146105185760405162461bcd60e51b815260040161047b9061288b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611b3b57610ee183612066565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611b95575060408051601f3d908101601f19168201909252611b9291810190612abf565b60015b611bf85760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161047b565b600080516020612d5f8339815191528114611c675760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161047b565b50610ee1838383612102565b600080611c7f83610371565b6001600160a01b038416600090815260756020526040902054607354919250611ca89190611aae565b6073556001600160a01b03831660009081526075602052604080822091909155606c549051630ad58d2f60e01b8152600481019190915260248101829052306044820152730769fd68dfb93167989c6f7254cd0d766fb2841f90630ad58d2f90606401600060405180830381600087803b158015611d2557600080fd5b505af1158015611d39573d6000803e3d6000fd5b509295945050505050565b6001600160a01b0382166000908152607560209081526040808320849055607454607690925290912055607354611d7b9082611ad2565b607355606c54604051638dbdbe6d60e01b8152600481019190915260248101829052306044820152730769fd68dfb93167989c6f7254cd0d766fb2841f90638dbdbe6d90606401600060405180830381600087803b158015611ddc57600080fd5b505af1158015611df0573d6000803e3d6000fd5b505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ee190849061212d565b600054610100900460ff16611e715760405162461bcd60e51b815260040161047b90612c7d565b61109e6121ff565b600080805b730769fd68dfb93167989c6f7254cd0d766fb2841f6001600160a01b031663081e3eda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef49190612abf565b811015611fa7576040516378ed5d1f60e01b8152600481018290526001600160a01b03851690730769fd68dfb93167989c6f7254cd0d766fb2841f906378ed5d1f90602401602060405180830381865afa158015611f56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7a919061291b565b6001600160a01b03161415611f955780925060019150611fa7565b80611f9f81612cc8565b915050611e7e565b508061200e5760405162461bcd60e51b815260206004820152603060248201527f54686520706f6f6c20776974682074686520676976656e207061697220746f6b60448201526f195b88191bd95cdb89dd08195e1a5cdd60821b606482015260840161047b565b50919050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b6120d35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161047b565b600080516020612d5f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61210b8361222f565b6000825111806121185750805b15610ee157612127838361226f565b50505050565b6000612182826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122949092919063ffffffff16565b805190915015610ee157808060200190518101906121a09190612aa2565b610ee15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161047b565b600054610100900460ff166122265760405162461bcd60e51b815260040161047b90612c7d565b61109e33612014565b61223881612066565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606103f58383604051806060016040528060278152602001612d7f602791396122ab565b60606122a38484600085612388565b949350505050565b60606001600160a01b0384163b6123135760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161047b565b600080856001600160a01b03168560405161232e9190612d0f565b600060405180830381855af49150503d8060008114612369576040519150601f19603f3d011682016040523d82523d6000602084013e61236e565b606091505b509150915061237e8282866124b9565b9695505050505050565b6060824710156123e95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161047b565b6001600160a01b0385163b6124405760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161047b565b600080866001600160a01b0316858760405161245c9190612d0f565b60006040518083038185875af1925050503d8060008114612499576040519150601f19603f3d011682016040523d82523d6000602084013e61249e565b606091505b50915091506124ae8282866124b9565b979650505050505050565b606083156124c85750816103f5565b8251156124d85782518084602001fd5b8160405162461bcd60e51b815260040161047b9190612d2b565b6001600160a01b038116811461051857600080fd5b60006020828403121561251957600080fd5b81356103f5816124f2565b801515811461051857600080fd5b6000806000806080858703121561254857600080fd5b8435612553816124f2565b935060208501359250604085013561256a81612524565b9150606085013561257a816124f2565b939692955090935050565b6000806040838503121561259857600080fd5b82356125a3816124f2565b915060208301356125b3816124f2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156125fd576125fd6125be565b604052919050565b6000806040838503121561261857600080fd5b8235612623816124f2565b915060208381013567ffffffffffffffff8082111561264157600080fd5b818601915086601f83011261265557600080fd5b813581811115612667576126676125be565b612679601f8201601f191685016125d4565b9150808252878482850101111561268f57600080fd5b80848401858401376000848284010152508093505050509250929050565b60008083601f8401126126bf57600080fd5b50813567ffffffffffffffff8111156126d757600080fd5b6020830191508360208260051b85010111156126f257600080fd5b9250929050565b6000806000806000806000806080898b03121561271557600080fd5b883567ffffffffffffffff8082111561272d57600080fd5b6127398c838d016126ad565b909a50985060208b013591508082111561275257600080fd5b61275e8c838d016126ad565b909850965060408b013591508082111561277757600080fd5b6127838c838d016126ad565b909650945060608b013591508082111561279c57600080fd5b506127a98b828c016126ad565b999c989b5096995094979396929594505050565b600080600080608085870312156127d357600080fd5b843593506020850135925060408501359150606085013561257a816124f2565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000806040838503121561290a57600080fd5b505080516020909101519092909150565b60006020828403121561292d57600080fd5b81516103f5816124f2565b600067ffffffffffffffff821115612952576129526125be565b5060051b60200190565b600082601f83011261296d57600080fd5b8151602061298261297d83612938565b6125d4565b82815260059290921b840181019181810190868411156129a157600080fd5b8286015b848110156129bc57805183529183019183016129a5565b509695505050505050565b600080604083850312156129da57600080fd5b825167ffffffffffffffff808211156129f257600080fd5b818501915085601f830112612a0657600080fd5b81516020612a1661297d83612938565b82815260059290921b84018101918181019089841115612a3557600080fd5b948201945b83861015612a5c578551612a4d816124f2565b82529482019490820190612a3a565b91880151919650909350505080821115612a7557600080fd5b50612a828582860161295c565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ab457600080fd5b81516103f581612524565b600060208284031215612ad157600080fd5b5051919050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015612b2a578335612b0f816124f2565b6001600160a01b031682529282019290820190600101612afc565b506001600160a01b0396909616606085015250505060800152949350505050565b600060208284031215612b5d57600080fd5b815167ffffffffffffffff811115612b7457600080fd5b6122a38482850161295c565b6001600160a01b039889168152968816602088015260408701959095526060860193909352608085019190915260a084015290921660c082015260e08101919091526101000190565b600080600060608486031215612bde57600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600082821015612c1f57612c1f612bf7565b500390565b6000816000190483118215151615612c3e57612c3e612bf7565b500290565b600082612c6057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612c7857612c78612bf7565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000600019821415612cdc57612cdc612bf7565b5060010190565b60005b83811015612cfe578181015183820152602001612ce6565b838111156121275750506000910152565b60008251612d21818460208701612ce3565b9190910192915050565b6020815260008251806020840152612d4a816040850160208701612ce3565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212208e672f5adb48a17e8b83baab0671cd1100fc68203439b1a80b08511f2f3ba50564736f6c634300080a0033608060405234801561001057600080fd5b5060405161052938038061052983398101604081905261002f91610151565b61003833610047565b61004181610097565b50610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100aa8161014260201b61020a1760201c565b6101205760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03163b151590565b60006020828403121561016357600080fd5b81516001600160a01b038116811461017a57600080fd5b9392505050565b610399806101906000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a61461009a5780638da5cb5b146100a2578063f2fde38b146100b3575b600080fd5b61006f61006a3660046102fe565b6100c6565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006f610139565b6000546001600160a01b031661007e565b61006f6100c13660046102fe565b61016f565b6000546001600160a01b031633146100f95760405162461bcd60e51b81526004016100f09061032e565b60405180910390fd5b61010281610219565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b031633146101635760405162461bcd60e51b81526004016100f09061032e565b61016d60006102ae565b565b6000546001600160a01b031633146101995760405162461bcd60e51b81526004016100f09061032e565b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f0565b610207816102ae565b50565b6001600160a01b03163b151590565b6001600160a01b0381163b61028c5760405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b60648201526084016100f0565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561031057600080fd5b81356001600160a01b038116811461032757600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220f0a243b52461696fadf05325e53c8019325f72ee91b3a6ba2f983ff13a83604364736f6c634300080a0033608060405260405161098a38038061098a8339810160408190526100229161048b565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161054b565b6000805160206109438339815191521461006957610069610570565b6100758282600061007c565b50506105f0565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610586565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610586565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061094383398151915260001b61031360201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161096360279139610316565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61037e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b03168560405161039991906105a1565b600060405180830381855af49150503d80600081146103d4576040519150601f19603f3d011682016040523d82523d6000602084013e6103d9565b606091505b5090925090506103ea8282866103f4565b9695505050505050565b606083156104035750816102fd565b8251156104135782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105bd565b80516001600160a01b038116811461044457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047a578181015183820152602001610462565b838111156101405750506000910152565b6000806040838503121561049e57600080fd5b6104a78361042d565b60208401519092506001600160401b03808211156104c457600080fd5b818501915085601f8301126104d857600080fd5b8151818111156104ea576104ea610449565b604051601f8201601f19908116603f0116810190838211818310171561051257610512610449565b8160405282815288602084870101111561052b57600080fd5b61053c83602083016020880161045f565b80955050505050509250929050565b60008282101561056b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561059857600080fd5b6102fd8261042d565b600082516105b381846020870161045f565b9190910192915050565b60208152600082518060208401526105dc81604085016020870161045f565b601f01601f19169190910160400192915050565b610344806105ff6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e860279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061023f565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101915760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101ac9190610298565b600060405180830381855af49150503d80600081146101e7576040519150601f19603f3d011682016040523d82523d6000602084013e6101ec565b606091505b50915091506101fc828286610206565b9695505050505050565b6060831561021557508161004e565b8251156102255782518084602001fd5b8160405162461bcd60e51b815260040161018891906102b4565b60006020828403121561025157600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561028357818101518382015260200161026b565b83811115610292576000848401525b50505050565b600082516102aa818460208701610268565b9190910192915050565b60208152600082518060208401526102d3816040850160208701610268565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122058fee286ec8c0f6a9e56c42f4511af15e2d551bc7768492988b09d51b654ef8064736f6c634300080a0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cf2ce663d3da46df502c5a279f6335578d4bbbd17b2d038309791c3a50721a2b64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13909:40",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:40",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:40",
                "type": ""
              }
            ],
            "src": "14:177:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:86:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "305:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "314:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "307:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "307:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "307:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "264:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "275:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "295:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "286:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "286:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "282:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "271:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "271:31:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "261:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:42:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:50:40"
                  },
                  "nodeType": "YulIf",
                  "src": "251:70:40"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "230:5:40",
                "type": ""
              }
            ],
            "src": "196:131:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "374:76:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "397:5:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "411:13:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "404:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "404:21:40"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "394:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "394:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "387:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "387:40:40"
                  },
                  "nodeType": "YulIf",
                  "src": "384:60:40"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "363:5:40",
                "type": ""
              }
            ],
            "src": "332:118:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "573:474:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "620:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "629:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "632:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "622:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "622:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "622:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "594:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "603:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "590:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "590:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "615:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "586:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "583:53:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "645:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "671:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "658:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "649:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "715:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "690:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "690:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "690:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "730:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "740:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "730:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "754:42:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "764:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:32:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "805:47:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "837:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "848:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "820:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:32:40"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "809:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "883:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "861:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "861:30:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "900:17:40",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "910:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "900:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "926:47:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "958:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "969:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "954:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "941:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:32:40"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "930:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1007:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "982:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:33:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1024:17:40",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1034:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1024:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_boolt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "515:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "526:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "538:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "546:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "554:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "562:6:40",
                "type": ""
              }
            ],
            "src": "455:592:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:119:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1203:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1199:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1199:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1191:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1244:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:25:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1271:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1282:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1267:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1267:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1287:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1260:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1260:34:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1153:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1172:4:40",
                "type": ""
              }
            ],
            "src": "1052:248:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:301:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1438:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1447:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1440:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1440:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1440:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1405:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "1402:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1463:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1489:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1476:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1467:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1533:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1508:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1508:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1548:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1558:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1572:47:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1604:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1615:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1600:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1587:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:32:40"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1576:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1653:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1628:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1628:33:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:17:40",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1680:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1350:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1361:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1373:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1381:6:40",
                "type": ""
              }
            ],
            "src": "1305:388:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:162:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1877:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1907:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1918:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:25:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1961:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1934:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1934:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1988:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1999:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1984:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1984:18:40"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2004:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1977:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1977:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1977:34:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1808:9:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1819:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1827:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1835:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1846:4:40",
                "type": ""
              }
            ],
            "src": "1698:319:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2160:456:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2207:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2216:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2219:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2209:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2209:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2209:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2181:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2190:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2177:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2202:3:40",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2173:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "2170:53:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2232:33:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2255:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2242:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2232:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2274:42:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2301:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2312:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2297:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2297:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2284:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2284:32:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2274:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2325:42:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2352:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2363:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2348:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2348:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2335:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:32:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2376:45:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2406:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2417:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2402:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2402:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2389:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2389:32:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2380:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2455:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2430:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2430:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2430:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2470:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2480:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2470:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2494:48:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2526:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2537:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2522:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2522:19:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2509:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2509:33:40"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2498:7:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2576:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2551:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2551:33:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2551:33:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2593:17:40",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2603:7:40"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2593:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2094:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2105:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2117:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2125:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2133:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2141:6:40",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2149:6:40",
                "type": ""
              }
            ],
            "src": "2022:594:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2722:102:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2732:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2744:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2755:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2740:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2732:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2774:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2789:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2805:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2810:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2801:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2801:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2814:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2797:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2797:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2785:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2785:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2767:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2767:51:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2767:51:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2691:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2702:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2713:4:40",
                "type": ""
              }
            ],
            "src": "2621:203:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2899:177:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2945:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2954:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2957:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2947:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2947:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2947:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2920:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2929:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2916:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2916:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2941:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2912:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "2909:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2970:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2996:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2983:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2983:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2974:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3040:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3015:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3015:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3055:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3065:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3055:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2865:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2876:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2888:6:40",
                "type": ""
              }
            ],
            "src": "2829:247:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3165:283:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3214:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3223:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3226:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3216:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3216:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3216:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3193:6:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3201:4:40",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3189:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3189:17:40"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3208:3:40"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3185:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3185:27:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3178:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3178:35:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3175:55:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3239:30:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3262:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3249:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:20:40"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3239:6:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3312:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3321:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3324:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3314:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3314:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3314:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3284:6:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3292:18:40",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3281:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3281:30:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3278:50:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3337:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3353:6:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3349:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:17:40"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "3337:8:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3426:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3435:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3438:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3428:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3428:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3428:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3389:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3401:1:40",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3404:6:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3397:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3397:14:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3385:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3385:27:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3381:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:38:40"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3421:3:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3378:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3378:47:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3375:67:40"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3128:6:40",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3136:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "3144:8:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3154:6:40",
                "type": ""
              }
            ],
            "src": "3081:367:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3731:1262:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3778:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3787:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3790:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3780:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3780:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3780:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3752:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3761:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3748:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3773:3:40",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3744:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3744:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3741:53:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3803:36:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3829:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3816:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:23:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3807:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3873:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3848:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3848:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3848:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3888:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3898:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3888:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3912:46:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3943:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3954:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3939:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3939:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3926:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3926:32:40"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3916:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3967:28:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3977:18:40",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3971:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4022:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4031:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4034:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4024:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4024:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4024:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4010:6:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4018:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4007:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4007:14:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4004:34:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4047:96:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4115:9:40"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4126:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4111:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4111:22:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4135:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4073:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:70:40"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "4051:8:40",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "4061:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4152:18:40",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "4162:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4152:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4179:18:40",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "4189:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4179:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4206:48:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4239:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4250:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4235:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4235:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4222:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4222:32:40"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4210:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4283:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4292:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4295:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4285:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4285:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4285:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4269:8:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4279:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4266:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:16:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4263:36:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4308:98:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4376:9:40"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4387:8:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4372:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4372:24:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4398:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4334:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4334:72:40"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "4312:8:40",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "4322:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4415:18:40",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "4425:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4415:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4442:18:40",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "4452:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4442:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4469:48:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4502:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4513:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4498:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4498:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4485:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4485:32:40"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "4473:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4546:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4555:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4558:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4548:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4548:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4548:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "4532:8:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4542:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4529:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4529:16:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4526:36:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4571:98:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4639:9:40"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "4650:8:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4635:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4635:24:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4661:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4597:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:72:40"
                  },
                  "variables": [
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "4575:8:40",
                      "type": ""
                    },
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "4585:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4678:18:40",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "4688:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4678:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4705:18:40",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "4715:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "4705:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4732:49:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4765:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4776:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4761:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4761:19:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4748:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4748:33:40"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "4736:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4810:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4819:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4822:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4812:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4812:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4812:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "4796:8:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4806:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4793:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:16:40"
                  },
                  "nodeType": "YulIf",
                  "src": "4790:36:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4835:98:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4903:9:40"
                          },
                          {
                            "name": "offset_3",
                            "nodeType": "YulIdentifier",
                            "src": "4914:8:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4899:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:24:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4925:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4861:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4861:72:40"
                  },
                  "variables": [
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "4839:8:40",
                      "type": ""
                    },
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "4849:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4942:18:40",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "4952:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "4942:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4969:18:40",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "4979:8:40"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "4969:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3633:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3644:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3656:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3664:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3672:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3680:6:40",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3688:6:40",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3696:6:40",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3704:6:40",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "3712:6:40",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "3720:6:40",
                "type": ""
              }
            ],
            "src": "3453:1540:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5068:110:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5114:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5123:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5126:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5116:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5116:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5116:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5089:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5098:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5085:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5085:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5110:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5081:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5081:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "5078:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5139:33:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5162:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5149:12:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5149:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5139:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5034:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5045:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5057:6:40",
                "type": ""
              }
            ],
            "src": "4998:180:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5317:102:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5327:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5339:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5350:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5335:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5335:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5327:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5369:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5384:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5400:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5405:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5396:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5396:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5409:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5392:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5392:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5380:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5380:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5362:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5362:51:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5362:51:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SushiswapFarmUpgradeable_$8021__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5286:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5297:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5308:4:40",
                "type": ""
              }
            ],
            "src": "5183:236:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5598:177:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5615:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5626:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5608:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5608:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5608:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5649:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5660:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5645:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5645:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5665:2:40",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5638:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5638:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5638:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5688:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5699:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5684:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5684:18:40"
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5704:29:40",
                        "type": "",
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5677:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5677:57:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5677:57:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5743:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5755:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5766:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5751:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5751:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5743:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5575:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5589:4:40",
                "type": ""
              }
            ],
            "src": "5424:351:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5959:278:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5969:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5981:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5992:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5977:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5977:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5969:4:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6005:29:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6023:3:40",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6028:1:40",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6019:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6019:11:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6032:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6015:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6015:19:40"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6009:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6050:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6065:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6073:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6061:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6061:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6043:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6043:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6043:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6097:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6108:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6093:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6093:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6113:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6086:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6086:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6086:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6140:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6151:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6136:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6136:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "6170:6:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6163:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6163:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6156:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6156:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6129:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6129:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6129:50:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6199:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6210:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6195:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6195:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6219:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6227:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6215:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6215:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6188:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:43:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:43:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5904:9:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5915:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5923:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5931:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5939:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5950:4:40",
                "type": ""
              }
            ],
            "src": "5780:457:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6340:147:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6386:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6395:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6398:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6388:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6388:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6388:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6361:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6370:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6357:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6357:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6382:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6353:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6353:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "6350:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6411:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6427:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6421:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6421:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6411:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6446:35:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6466:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6477:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6462:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6462:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6456:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6456:25:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6446:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6298:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6309:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6321:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6329:6:40",
                "type": ""
              }
            ],
            "src": "6242:245:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6573:103:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6619:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6628:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6631:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6621:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6621:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6621:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6594:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6603:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6590:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6590:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6615:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6586:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6586:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "6583:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6644:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6660:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6654:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6654:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6644:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6539:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6550:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6562:6:40",
                "type": ""
              }
            ],
            "src": "6492:184:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6762:170:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6808:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6817:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6820:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6810:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6810:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6810:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6783:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6792:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6779:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6779:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6804:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6775:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6775:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "6772:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6833:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6852:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6846:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6846:16:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6837:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6896:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6871:24:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6871:31:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6871:31:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6911:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6921:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6911:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6728:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6739:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6751:6:40",
                "type": ""
              }
            ],
            "src": "6681:251:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7122:232:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7132:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7144:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7155:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7140:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7140:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7132:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7175:9:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7186:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7168:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7168:25:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7168:25:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7213:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7224:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7209:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7209:18:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7229:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7202:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7202:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7202:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7256:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7267:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7252:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7252:18:40"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7272:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7245:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7245:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7245:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7299:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7310:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7295:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7295:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7319:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7335:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7340:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7331:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7331:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7344:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7327:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7327:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7315:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7315:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7288:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7288:60:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7288:60:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7067:9:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7078:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7086:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7094:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7102:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7113:4:40",
                "type": ""
              }
            ],
            "src": "6937:417:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7474:191:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7520:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7529:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7532:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7522:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7522:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7522:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7495:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7504:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7491:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7491:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7516:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7487:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7487:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7484:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7545:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7561:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7555:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7555:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7545:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7580:35:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7600:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7611:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7596:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7596:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7590:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7590:25:40"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7580:6:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7624:35:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7644:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7655:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7640:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7640:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7634:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7634:25:40"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7624:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7424:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7435:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7447:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7455:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7463:6:40",
                "type": ""
              }
            ],
            "src": "7359:306:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7844:236:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7861:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7872:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7854:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7854:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7854:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7895:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7906:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7891:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7891:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7911:2:40",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7884:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7884:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7884:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7934:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7945:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7930:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7930:18:40"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7950:34:40",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7923:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7923:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7923:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8005:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8016:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8001:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8001:18:40"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8021:16:40",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7994:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7994:44:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7994:44:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8047:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8059:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8070:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8055:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8055:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8047:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7821:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7835:4:40",
                "type": ""
              }
            ],
            "src": "7670:410:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8259:179:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8276:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8287:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8269:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8269:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8269:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8310:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8321:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8306:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8306:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8326:2:40",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8299:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8299:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8299:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8349:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8360:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8345:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8345:18:40"
                      },
                      {
                        "hexValue": "5468652063616c6c6572206973206e6f74206469737472696275746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8365:31:40",
                        "type": "",
                        "value": "The caller is not distributor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8338:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8338:59:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8338:59:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8406:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8418:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8429:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8414:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8414:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8406:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8236:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8250:4:40",
                "type": ""
              }
            ],
            "src": "8085:353:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8521:444:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8538:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8543:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8531:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8531:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8531:19:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8559:14:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8569:4:40",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8563:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8582:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8593:3:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8598:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8589:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8589:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8582:3:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8610:19:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8624:5:40"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "8614:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8638:10:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8647:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8642:1:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8706:234:40",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8720:35:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8748:6:40"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "8735:12:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8735:20:40"
                        },
                        "variables": [
                          {
                            "name": "value_1",
                            "nodeType": "YulTypedName",
                            "src": "8724:7:40",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "8793:7:40"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "8768:24:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8768:33:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8768:33:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8821:3:40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8830:7:40"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8847:3:40",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8852:1:40",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "8843:3:40"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8843:11:40"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8856:1:40",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "8839:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8839:19:40"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "8826:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8826:33:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8814:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8814:46:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8814:46:40"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8873:19:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "8884:3:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8889:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8880:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8880:12:40"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8873:3:40"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8905:25:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "8919:6:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8927:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8915:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8915:15:40"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8905:6:40"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8668:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8671:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8665:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8665:13:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8679:18:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8681:14:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8690:1:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8693:1:40",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8686:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8686:9:40"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8681:1:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8661:3:40",
                    "statements": []
                  },
                  "src": "8657:283:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8949:10:40",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8956:3:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8949:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8490:5:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8497:6:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8505:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8513:3:40",
                "type": ""
              }
            ],
            "src": "8443:522:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9395:558:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9412:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9423:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9405:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9405:22:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9405:22:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9436:88:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9488:6:40"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9496:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9508:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9519:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9504:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9504:19:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9450:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9450:74:40"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "9440:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9544:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9555:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9540:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9540:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "9564:6:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9572:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9560:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9560:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9533:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9533:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9533:50:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9592:75:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9644:6:40"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9652:6:40"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "9660:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9606:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9606:61:40"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "9596:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9687:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9698:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9683:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9683:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "9707:6:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9715:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9703:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9703:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9676:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9676:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9676:50:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9735:75:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "9787:6:40"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "9795:6:40"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "9803:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9749:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9749:61:40"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "9739:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9830:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9841:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9826:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9826:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulIdentifier",
                            "src": "9850:6:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9858:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9846:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9846:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9819:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9819:50:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9819:50:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9878:69:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "9924:6:40"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "9932:6:40"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "9940:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9886:37:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9886:61:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9878:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9308:9:40",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "9319:6:40",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "9327:6:40",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "9335:6:40",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "9343:6:40",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9351:6:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9359:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9367:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9375:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9386:4:40",
                "type": ""
              }
            ],
            "src": "8970:983:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10087:175:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10097:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10109:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10120:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10105:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10105:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10097:4:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10132:29:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10150:3:40",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10155:1:40",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10146:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10146:11:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10159:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10142:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10142:19:40"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10136:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10177:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10192:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10200:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10188:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10188:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10170:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10170:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10170:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10224:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10235:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10220:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10220:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10244:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10252:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10240:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10240:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10213:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10213:43:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10213:43:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10048:9:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10059:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10067:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10078:4:40",
                "type": ""
              }
            ],
            "src": "9958:304:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10320:205:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10330:10:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10339:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10334:1:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10399:63:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10424:3:40"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10429:1:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10420:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10420:11:40"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10443:3:40"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10448:1:40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10439:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10439:11:40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10433:5:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10433:18:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10413:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10413:39:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10413:39:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10360:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10363:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10357:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10357:13:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10371:19:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10373:15:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10382:1:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10385:2:40",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10378:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10378:10:40"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10373:1:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10353:3:40",
                    "statements": []
                  },
                  "src": "10349:113:40"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10488:31:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10501:3:40"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10506:6:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10497:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10497:16:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10515:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10490:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10490:27:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10490:27:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10477:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10480:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10474:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10474:13:40"
                  },
                  "nodeType": "YulIf",
                  "src": "10471:48:40"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10298:3:40",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10303:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10308:6:40",
                "type": ""
              }
            ],
            "src": "10267:258:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10579:208:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10589:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10609:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10603:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10603:12:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10593:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10631:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10636:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10624:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10624:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10624:19:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10678:5:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10685:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10674:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10674:16:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10696:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10701:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10692:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10692:14:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10708:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "10652:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10652:63:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10652:63:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10724:57:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10739:3:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10752:6:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10760:2:40",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10748:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10748:15:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10769:2:40",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10765:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10765:7:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10744:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10744:29:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10735:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10735:39:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10776:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10731:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10731:50:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10724:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10556:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10563:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10571:3:40",
                "type": ""
              }
            ],
            "src": "10530:257:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10939:167:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10956:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10971:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10987:3:40",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10992:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10983:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10983:11:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10996:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10979:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10979:19:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10967:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10967:32:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10949:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10949:51:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10949:51:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11020:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11031:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11016:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11016:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11036:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11009:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11009:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11009:30:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11048:52:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11073:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11085:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11096:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11081:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11081:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "11056:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11056:44:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11048:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10900:9:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10911:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10919:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10930:4:40",
                "type": ""
              }
            ],
            "src": "10792:314:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11268:218:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11278:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11290:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11301:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11286:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11286:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11278:4:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11313:29:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11331:3:40",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11336:1:40",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11327:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11327:11:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11340:1:40",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11323:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11323:19:40"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11317:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11358:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11373:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11381:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11369:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11369:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11351:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11351:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11351:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11405:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11416:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11401:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11401:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11425:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11433:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11421:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11421:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11394:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11394:43:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11394:43:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11457:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11468:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11453:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11453:18:40"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11473:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11446:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11446:34:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11446:34:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11221:9:40",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11232:6:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11240:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11248:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11259:4:40",
                "type": ""
              }
            ],
            "src": "11111:375:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11543:213:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11610:111:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11631:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11638:3:40",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11643:10:40",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11634:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11634:20:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11624:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11624:31:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11624:31:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11675:1:40",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11678:4:40",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11668:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11668:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11668:15:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11703:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11706:4:40",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11696:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11696:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11696:15:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11574:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11567:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11567:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11560:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11560:17:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11582:1:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11593:1:40",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11589:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11589:6:40"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11597:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11585:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11585:14:40"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11579:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11579:21:40"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11556:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11556:45:40"
                  },
                  "nodeType": "YulIf",
                  "src": "11553:168:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11730:20:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11745:1:40"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11748:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11741:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11741:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11730:7:40"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11522:1:40",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11525:1:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11531:7:40",
                "type": ""
              }
            ],
            "src": "11491:265:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11807:171:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11838:111:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11859:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11866:3:40",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11871:10:40",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11862:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11862:20:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11852:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11852:31:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11852:31:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11903:1:40",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11906:4:40",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11896:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11896:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11896:15:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11931:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11934:4:40",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11924:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11924:15:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11924:15:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11827:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11820:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11820:9:40"
                  },
                  "nodeType": "YulIf",
                  "src": "11817:132:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11958:14:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11967:1:40"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11970:1:40"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11963:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11963:9:40"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11958:1:40"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11792:1:40",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11795:1:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11801:1:40",
                "type": ""
              }
            ],
            "src": "11761:217:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12061:167:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12107:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12116:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12119:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12109:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12109:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12109:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12082:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12091:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12078:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12078:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12103:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12074:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12074:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "12071:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12132:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12151:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12145:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12145:16:40"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12136:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12192:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12170:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12170:28:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12170:28:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12207:15:40",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12217:5:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12207:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12027:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12038:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12050:6:40",
                "type": ""
              }
            ],
            "src": "11983:245:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12407:232:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12424:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12435:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12417:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12417:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12417:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12458:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12469:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12454:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12454:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12474:2:40",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12447:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12447:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12447:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12497:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12508:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12493:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12493:18:40"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12513:34:40",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12486:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12486:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12486:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12568:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12579:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12564:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12564:18:40"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12584:12:40",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12557:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12557:40:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12557:40:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12606:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12618:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12629:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12614:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12614:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12606:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12384:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12398:4:40",
                "type": ""
              }
            ],
            "src": "12233:406:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12818:228:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12835:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12846:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12828:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12828:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12828:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12869:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12880:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12865:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12865:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12885:2:40",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12858:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12858:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12858:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12908:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12919:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12904:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12904:18:40"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12924:34:40",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12897:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12897:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12897:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12979:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12990:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12975:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12975:18:40"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12995:8:40",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12968:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12968:36:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12968:36:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13013:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13025:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13036:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13021:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13021:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13013:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12795:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12809:4:40",
                "type": ""
              }
            ],
            "src": "12644:402:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13225:179:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13242:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13253:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13235:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13235:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13235:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13276:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13287:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13272:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13272:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13292:2:40",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13265:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13265:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13265:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13315:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13326:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13311:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13311:18:40"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13331:31:40",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13304:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13304:59:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13304:59:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13372:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13384:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13395:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13380:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13380:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13372:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13202:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13216:4:40",
                "type": ""
              }
            ],
            "src": "13051:353:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13546:137:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13556:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13576:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13570:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13570:13:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13560:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13618:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13626:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13614:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13614:17:40"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13633:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13638:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13592:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13592:53:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13592:53:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13654:23:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13665:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13670:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13661:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13661:16:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13654:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13522:3:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13527:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13538:3:40",
                "type": ""
              }
            ],
            "src": "13409:274:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13809:98:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13826:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13837:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13819:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13819:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13819:21:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13849:52:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13874:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13886:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13897:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13882:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13882:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "13857:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13857:44:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13849:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13778:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13789:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13800:4:40",
                "type": ""
              }
            ],
            "src": "13688:219:40"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value3 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_3), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_SushiswapFarmUpgradeable_$8021__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"The given pool doesnt exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool_t_address__to_t_address_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"The caller is not distributor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_address_dyn_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_address_dyn_calldata(value4, value5, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        tail := abi_encode_array_address_dyn_calldata(value6, value7, tail_3)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
      "id": 40,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "413:8151:23:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "413:8151:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6888:94;6960:7;:14;6888:94;;160:25:40;;;148:2;133:18;6888:94:23;;;;;;;;4057:379;;;;;;:::i;:::-;;:::i;:::-;;;;1226:25:40;;;1282:2;1267:18;;1260:34;;;;1199:18;4057:379:23;1052:248:40;5852:318:23;;;;;;:::i;:::-;;:::i;:::-;;;;1900:25:40;;;1956:2;1941:18;;1934:34;;;;1984:18;;;1977:34;1888:2;1873:18;5852:318:23;1698:319:40;2506:1030:23;;;;;;:::i;:::-;;:::i;989:26::-;;;;;-1:-1:-1;;;;;989:26:23;;;;;;-1:-1:-1;;;;;2785:32:40;;;2767:51;;2755:2;2740:18;989:26:23;2621:203:40;1564:268:23;;;;;;:::i;:::-;;:::i;:::-;;4922:576;;;;;;:::i;:::-;;:::i;880:25::-;;;;;;;;-1:-1:-1;;;;;880:25:23;;;8386:175;;;;;;:::i;:::-;;:::i;6523:357::-;;;;;;:::i;:::-;;:::i;958:24::-;;;;;;:::i;:::-;;:::i;914:37::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;914:37:23;;;4057:379;-1:-1:-1;;;;;4214:13:23;;;4160:15;4214:13;;;:5;:13;;;;;;4160:15;;;;4214:13;4206:73;;;;-1:-1:-1;;;4206:73:23;;5626:2:40;4206:73:23;;;5608:21:40;5665:2;5645:18;;;5638:30;5704:29;5684:18;;;5677:57;5751:18;;4206:73:23;;;;;;;;;-1:-1:-1;;;;;4311:13:23;;;;;;;:5;:13;;;;;;;;:65;;-1:-1:-1;;;4311:65:23;;4334:10;4311:65;;;6043:34:40;6093:18;;;6086:34;;;6163:14;;6156:22;6136:18;;;6129:50;6215:15;;;6195:18;;;6188:43;4311:13:23;;;:22;;5977:19:40;;4311:65:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4392:36;;160:25:40;;;4290:86:23;;-1:-1:-1;4290:86:23;-1:-1:-1;;;;;;4392:36:23;;;4401:10;;4392:36;;148:2:40;133:18;4392:36:23;;;;;;;4057:379;;;;;;;:::o;5852:318::-;-1:-1:-1;;;;;5992:13:23;;;5928:15;5992:13;;;:5;:13;;;;;;5928:15;;;;;;5992:13;:33;5988:175;;-1:-1:-1;;;;;6052:13:23;;;;;;;:5;:13;;;;;;;;:35;;-1:-1:-1;;;6052:35:23;;2785:32:40;;;6052:35:23;;;2767:51:40;6052:13:23;;;:25;;2740:18:40;;6052:35:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6042:45;;6121:30;6135:6;6143:7;6121:13;:30::i;:::-;6102:49;;-1:-1:-1;6102:49:23;-1:-1:-1;5988:175:23;5852:318;;;;;:::o;2506:1030::-;-1:-1:-1;;;;;2689:13:23;;;2627;2689;;;:5;:13;;;;;;2627;;;;;;2689;2686:139;;2759:18;2770:6;2759:10;:18::i;:::-;-1:-1:-1;;;;;2738:13:23;;;;;;;:5;:13;;;;;;;:40;;;;;;-1:-1:-1;;;;;;2738:40:23;;;;;;;2793:7;:20;;;;;;;;;;;;;;;;;;;;;2686:139;2840:11;;2837:193;;-1:-1:-1;;;;;2912:13:23;;;2867:24;2912:13;;;:5;:13;;;;;;;;;:22;;-1:-1:-1;;;2912:22:23;;;;2867:24;;2912:13;;:20;;:22;;;;;:13;;:22;;;;;;:13;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2994:13:23;;;;;;;:5;:13;;;;;;2867:68;;-1:-1:-1;2950:68:23;;:23;;;;2974:10;;2994:13;3010:7;2950:23;:68::i;:::-;2852:178;2837:193;3043:11;;3040:193;;-1:-1:-1;;;;;3115:13:23;;;3070:24;3115:13;;;:5;:13;;;;;;;;;:22;;-1:-1:-1;;;3115:22:23;;;;3070:24;;3115:13;;:20;;:22;;;;;:13;;:22;;;;;;:13;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3197:13:23;;;;;;;:5;:13;;;;;;3070:68;;-1:-1:-1;3153:68:23;;:23;;;;3177:10;;3197:13;3213:7;3153:23;:68::i;:::-;3055:178;3040:193;3246:12;;3243:131;;-1:-1:-1;;;;;3337:13:23;;;;;;;:5;:13;;;;;;3274:88;;3317:10;;3337:13;3353:8;3274:42;:88::i;:::-;-1:-1:-1;;;;;3414:13:23;;;;;;;:5;:13;;;;;;;;:60;;-1:-1:-1;;;3414:60:23;;;;;7168:25:40;;;7209:18;;;7202:34;;;7252:18;;;7245:34;;;7315:32;;;7295:18;;;7288:60;3414:13:23;;;:21;;7140:19:40;;3414:60:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3491:37;;160:25:40;;;3386:88:23;;-1:-1:-1;3386:88:23;;-1:-1:-1;3386:88:23;-1:-1:-1;;;;;;3491:37:23;;;;;;;;;;148:2:40;133:18;3491:37:23;;;;;;;2506:1030;;;;;;;;;:::o;1564:268::-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:4;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;7872:2:40;2361:107:1;;;7854:21:40;7911:2;7891:18;;;7884:30;7950:34;7930:18;;;7923:62;-1:-1:-1;;;8001:18:40;;;7994:44;8055:19;;2361:107:1;7670:410:40;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;1632:29:23::1;1708:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1664:66;;;;;:::i;:::-;-1:-1:-1::0;;;;;2785:32:40;;;2767:51;;2755:2;2740:18;1664:66:23::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1741:39:23::1;::::0;-1:-1:-1;;;1741:39:23;;-1:-1:-1;;;;;2785:32:40;;;1741:39:23::1;::::0;::::1;2767:51:40::0;1632:98:23;;-1:-1:-1;1741:29:23;;::::1;::::0;::::1;::::0;2740:18:40;;1741:39:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1791:10:23::1;:33:::0;;-1:-1:-1;;;;;1791:33:23;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;1791:33:23;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;2645:66:1;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;1564:268:23;:::o;4922:576::-;1404:11;;-1:-1:-1;;;;;1404:11:23;:25;;:54;;-1:-1:-1;1447:11:23;;-1:-1:-1;;;;;1447:11:23;1433:10;:25;1404:54;1396:96;;;;-1:-1:-1;;;1396:96:23;;8287:2:40;1396:96:23;;;8269:21:40;8326:2;8306:18;;;8299:30;8365:31;8345:18;;;8338:59;8414:18;;1396:96:23;8085:353:40;1396:96:23;-1:-1:-1;;;;;5237:13:23;;::::1;5267:1;5237:13:::0;;;:5:::1;:13;::::0;;;;;::::1;5229:73;;;::::0;-1:-1:-1;;;5229:73:23;;5626:2:40;5229:73:23::1;::::0;::::1;5608:21:40::0;5665:2;5645:18;;;5638:30;5704:29;5684:18;;;5677:57;5751:18;;5229:73:23::1;5424:351:40::0;5229:73:23::1;-1:-1:-1::0;;;;;5324:13:23;;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;:132;;-1:-1:-1;;;5324:132:23;;:13;::::1;::::0;:24:::1;::::0;:132:::1;::::0;5349:26;;;;5377;;;;5405:24;;;;5431;;;;5324:132:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5472:18:23::1;::::0;-1:-1:-1;;;;;5472:18:23;::::1;::::0;-1:-1:-1;5472:18:23::1;::::0;-1:-1:-1;5472:18:23;;::::1;4922:576:::0;;;;;;;;;:::o;8386:175::-;1404:11;;-1:-1:-1;;;;;1404:11:23;:25;;:54;;-1:-1:-1;1447:11:23;;-1:-1:-1;;;;;1447:11:23;1433:10;:25;1404:54;1396:96;;;;-1:-1:-1;;;1396:96:23;;8287:2:40;1396:96:23;;;8269:21:40;8326:2;8306:18;;;8299:30;8365:31;8345:18;;;8338:59;8414:18;;1396:96:23;8085:353:40;1396:96:23;8475:11:::1;:28:::0;;-1:-1:-1;;;;;;8475:28:23::1;-1:-1:-1::0;;;;;8475:28:23;::::1;::::0;;::::1;::::0;;;8519:34:::1;::::0;::::1;::::0;-1:-1:-1;;8519:34:23::1;8386:175:::0;:::o;6523:357::-;-1:-1:-1;;;;;6673:13:23;;;6585:23;6673:13;;;:5;:13;;;;;;6585:23;;;;;;6673:13;:33;6669:204;;-1:-1:-1;;;;;6741:13:23;;;;;;;:5;:13;;;;;;;;;;:32;;-1:-1:-1;;;6741:32:23;;;;:13;;;:30;;:32;;;;;:13;:32;;;;;;:13;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6723:50;;6823:38;6837:6;6845:15;6823:13;:38::i;:::-;6788:73;;-1:-1:-1;6788:73:23;-1:-1:-1;6669:204:23;6523:357;;;;;:::o;958:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;958:24:23;;-1:-1:-1;958:24:23;:::o;7800:578::-;-1:-1:-1;;;;;7929:13:23;;;7880:15;7929:13;;;:5;:13;;;;;;7880:15;;;;7929:13;:33;7925:446;;7979:19;8008:6;-1:-1:-1;;;;;8001:26:23;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8079:13:23;;;8044:25;8079:13;;;:5;:13;;;;;;;;;:22;;-1:-1:-1;;;8079:22:23;;;;7979:50;;-1:-1:-1;8044:25:23;;8079:13;;;;;:20;;:22;;;;;:13;:22;;;;;:13;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8072:48;;-1:-1:-1;;;8072:48:23;;-1:-1:-1;;;;;2785:32:40;;;8072:48:23;;;2767:51:40;8072:40:23;;;;;;;2740:18:40;;8072:48:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8044:76;-1:-1:-1;8145:48:23;8181:11;8145:31;:8;8044:76;8145:12;:31::i;:::-;:35;;:48::i;:::-;-1:-1:-1;;;;;8245:13:23;;;8210:25;8245:13;;;:5;:13;;;;;;;;;:22;;-1:-1:-1;;;8245:22:23;;;;8135:58;;-1:-1:-1;8210:25:23;;8245:13;;;;;:20;;:22;;;;;:13;:22;;;;;:13;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8238:48;;-1:-1:-1;;;8238:48:23;;-1:-1:-1;;;;;2785:32:40;;;8238:48:23;;;2767:51:40;8238:40:23;;;;;;;2740:18:40;;8238:48:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8210:76;-1:-1:-1;8311:48:23;8347:11;8311:31;:8;8210:76;8311:12;:31::i;:48::-;8301:58;;7964:407;;;7925:446;7800:578;;;;;:::o;7075:393::-;7129:7;7199:10;;7224:149;;;-1:-1:-1;;;;;10188:15:40;;;7224:149:23;;;10170:34:40;7353:4:23;10220:18:40;;;;10213:43;;;;7224:149:23;;;;;;;;;;10105:18:40;;;;7224:149:23;;;;;;;-1:-1:-1;;;;;7224:149:23;-1:-1:-1;;;7224:149:23;;;7169:215;;7129:7;;7199:10;;;;;;;7169:215;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7400:28:23;;7149:235;;-1:-1:-1;;;;;;7400:28:23;;;;;;;;7454:5;7075:393;-1:-1:-1;;7075:393:23:o;967:252:3:-;1143:68;;;-1:-1:-1;;;;;11369:15:40;;;1143:68:3;;;11351:34:40;11421:15;;11401:18;;;11394:43;11453:18;;;;11446:34;;;1143:68:3;;;;;;;;;;11286:18:40;;;;1143:68:3;;;;;;;;-1:-1:-1;;;;;1143:68:3;-1:-1:-1;;;1143:68:3;;;1116:96;;1136:5;;1116:19;:96::i;:::-;967:252;;;;:::o;3451:96:19:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3306:717:3:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:3;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:3;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:3;;12435:2:40;3921:85:3;;;12417:21:40;12474:2;12454:18;;;12447:30;12513:34;12493:18;;;12486:62;-1:-1:-1;;;12564:18:40;;;12557:40;12614:19;;3921:85:3;12233:406:40;3921:85:3;3387:636;3306:717;;:::o;3872:223:4:-;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:4:o;4959:499::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:4;;12846:2:40;5148:81:4;;;12828:21:40;12885:2;12865:18;;;12858:30;12924:34;12904:18;;;12897:62;-1:-1:-1;;;12975:18:40;;;12968:36;13021:19;;5148:81:4;12644:402:40;5148:81:4;-1:-1:-1;;;;;1476:19:4;;;5239:60;;;;-1:-1:-1;;;5239:60:4;;13253:2:40;5239:60:4;;;13235:21:40;13292:2;13272:18;;;13265:30;13331:31;13311:18;;;13304:59;13380:18;;5239:60:4;13051:353:40;5239:60:4;5311:12;5325:23;5352:6;-1:-1:-1;;;;;5352:11:4;5371:5;5378:4;5352:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:73;;;;5400:51;5417:7;5426:10;5438:12;5400:16;:51::i;:::-;5393:58;4959:499;-1:-1:-1;;;;;;;4959:499:4:o;6622:692::-;6768:12;6796:7;6792:516;;;-1:-1:-1;6826:10:4;6819:17;;6792:516;6937:17;;:21;6933:365;;7131:10;7125:17;7191:15;7178:10;7174:2;7170:19;7163:44;6933:365;7270:12;7263:20;;-1:-1:-1;;;7263:20:4;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;196:131:40:-;-1:-1:-1;;;;;271:31:40;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:118::-;418:5;411:13;404:21;397:5;394:32;384:60;;440:1;437;430:12;455:592;538:6;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;671:9;658:23;690:31;715:5;690:31;:::i;:::-;740:5;-1:-1:-1;792:2:40;777:18;;764:32;;-1:-1:-1;848:2:40;833:18;;820:32;861:30;820:32;861:30;:::i;:::-;910:7;-1:-1:-1;969:2:40;954:18;;941:32;982:33;941:32;982:33;:::i;:::-;455:592;;;;-1:-1:-1;455:592:40;;-1:-1:-1;;455:592:40:o;1305:388::-;1373:6;1381;1434:2;1422:9;1413:7;1409:23;1405:32;1402:52;;;1450:1;1447;1440:12;1402:52;1489:9;1476:23;1508:31;1533:5;1508:31;:::i;:::-;1558:5;-1:-1:-1;1615:2:40;1600:18;;1587:32;1628:33;1587:32;1628:33;:::i;:::-;1680:7;1670:17;;;1305:388;;;;;:::o;2022:594::-;2117:6;2125;2133;2141;2149;2202:3;2190:9;2181:7;2177:23;2173:33;2170:53;;;2219:1;2216;2209:12;2170:53;2255:9;2242:23;2232:33;;2312:2;2301:9;2297:18;2284:32;2274:42;;2363:2;2352:9;2348:18;2335:32;2325:42;;2417:2;2406:9;2402:18;2389:32;2430:31;2455:5;2430:31;:::i;:::-;2480:5;-1:-1:-1;2537:3:40;2522:19;;2509:33;2551;2509;2551;:::i;:::-;2603:7;2593:17;;;2022:594;;;;;;;;:::o;2829:247::-;2888:6;2941:2;2929:9;2920:7;2916:23;2912:32;2909:52;;;2957:1;2954;2947:12;2909:52;2996:9;2983:23;3015:31;3040:5;3015:31;:::i;3081:367::-;3144:8;3154:6;3208:3;3201:4;3193:6;3189:17;3185:27;3175:55;;3226:1;3223;3216:12;3175:55;-1:-1:-1;3249:20:40;;3292:18;3281:30;;3278:50;;;3324:1;3321;3314:12;3278:50;3361:4;3353:6;3349:17;3337:29;;3421:3;3414:4;3404:6;3401:1;3397:14;3389:6;3385:27;3381:38;3378:47;3375:67;;;3438:1;3435;3428:12;3453:1540;3656:6;3664;3672;3680;3688;3696;3704;3712;3720;3773:3;3761:9;3752:7;3748:23;3744:33;3741:53;;;3790:1;3787;3780:12;3741:53;3829:9;3816:23;3848:31;3873:5;3848:31;:::i;:::-;3898:5;-1:-1:-1;3954:2:40;3939:18;;3926:32;3977:18;4007:14;;;4004:34;;;4034:1;4031;4024:12;4004:34;4073:70;4135:7;4126:6;4115:9;4111:22;4073:70;:::i;:::-;4162:8;;-1:-1:-1;4047:96:40;-1:-1:-1;4250:2:40;4235:18;;4222:32;;-1:-1:-1;4266:16:40;;;4263:36;;;4295:1;4292;4285:12;4263:36;4334:72;4398:7;4387:8;4376:9;4372:24;4334:72;:::i;:::-;4425:8;;-1:-1:-1;4308:98:40;-1:-1:-1;4513:2:40;4498:18;;4485:32;;-1:-1:-1;4529:16:40;;;4526:36;;;4558:1;4555;4548:12;4526:36;4597:72;4661:7;4650:8;4639:9;4635:24;4597:72;:::i;:::-;4688:8;;-1:-1:-1;4571:98:40;-1:-1:-1;4776:3:40;4761:19;;4748:33;;-1:-1:-1;4793:16:40;;;4790:36;;;4822:1;4819;4812:12;4790:36;;4861:72;4925:7;4914:8;4903:9;4899:24;4861:72;:::i;:::-;4835:98;;4952:8;4942:18;;;4979:8;4969:18;;;3453:1540;;;;;;;;;;;:::o;4998:180::-;5057:6;5110:2;5098:9;5089:7;5085:23;5081:32;5078:52;;;5126:1;5123;5116:12;5078:52;-1:-1:-1;5149:23:40;;4998:180;-1:-1:-1;4998:180:40:o;6242:245::-;6321:6;6329;6382:2;6370:9;6361:7;6357:23;6353:32;6350:52;;;6398:1;6395;6388:12;6350:52;-1:-1:-1;;6421:16:40;;6477:2;6462:18;;;6456:25;6421:16;;6456:25;;-1:-1:-1;6242:245:40:o;6492:184::-;6562:6;6615:2;6603:9;6594:7;6590:23;6586:32;6583:52;;;6631:1;6628;6621:12;6583:52;-1:-1:-1;6654:16:40;;6492:184;-1:-1:-1;6492:184:40:o;6681:251::-;6751:6;6804:2;6792:9;6783:7;6779:23;6775:32;6772:52;;;6820:1;6817;6810:12;6772:52;6852:9;6846:16;6871:31;6896:5;6871:31;:::i;7359:306::-;7447:6;7455;7463;7516:2;7504:9;7495:7;7491:23;7487:32;7484:52;;;7532:1;7529;7522:12;7484:52;7561:9;7555:16;7545:26;;7611:2;7600:9;7596:18;7590:25;7580:35;;7655:2;7644:9;7640:18;7634:25;7624:35;;7359:306;;;;;:::o;8443:522::-;8543:6;8538:3;8531:19;8513:3;8569:4;8598:2;8593:3;8589:12;8582:19;;8624:5;8647:1;8657:283;8671:6;8668:1;8665:13;8657:283;;;8748:6;8735:20;8768:33;8793:7;8768:33;:::i;:::-;-1:-1:-1;;;;;8826:33:40;8814:46;;8880:12;;;;8915:15;;;;8856:1;8686:9;8657:283;;;-1:-1:-1;8956:3:40;;8443:522;-1:-1:-1;;;;;8443:522:40:o;8970:983::-;9423:3;9412:9;9405:22;9386:4;9450:74;9519:3;9508:9;9504:19;9496:6;9488;9450:74;:::i;:::-;9572:9;9564:6;9560:22;9555:2;9544:9;9540:18;9533:50;9606:61;9660:6;9652;9644;9606:61;:::i;:::-;9592:75;;9715:9;9707:6;9703:22;9698:2;9687:9;9683:18;9676:50;9749:61;9803:6;9795;9787;9749:61;:::i;:::-;9735:75;;9858:9;9850:6;9846:22;9841:2;9830:9;9826:18;9819:50;9886:61;9940:6;9932;9924;9886:61;:::i;:::-;9878:69;8970:983;-1:-1:-1;;;;;;;;;;;8970:983:40:o;10267:258::-;10339:1;10349:113;10363:6;10360:1;10357:13;10349:113;;;10439:11;;;10433:18;10420:11;;;10413:39;10385:2;10378:10;10349:113;;;10480:6;10477:1;10474:13;10471:48;;;-1:-1:-1;;10515:1:40;10497:16;;10490:27;10267:258::o;10530:257::-;10571:3;10609:5;10603:12;10636:6;10631:3;10624:19;10652:63;10708:6;10701:4;10696:3;10692:14;10685:4;10678:5;10674:16;10652:63;:::i;:::-;10769:2;10748:15;-1:-1:-1;;10744:29:40;10735:39;;;;10776:4;10731:50;;10530:257;-1:-1:-1;;10530:257:40:o;10792:314::-;-1:-1:-1;;;;;10967:32:40;;10949:51;;11036:2;11031;11016:18;;11009:30;;;-1:-1:-1;;11056:44:40;;11081:18;;11073:6;11056:44;:::i;11491:265::-;11531:7;11597:1;11593;11589:6;11585:14;11582:1;11579:21;11574:1;11567:9;11560:17;11556:45;11553:168;;;11643:10;11638:3;11634:20;11631:1;11624:31;11678:4;11675:1;11668:15;11706:4;11703:1;11696:15;11553:168;-1:-1:-1;11741:9:40;;11491:265::o;11761:217::-;11801:1;11827;11817:132;;11871:10;11866:3;11862:20;11859:1;11852:31;11906:4;11903:1;11896:15;11934:4;11931:1;11924:15;11817:132;-1:-1:-1;11963:9:40;;11761:217::o;11983:245::-;12050:6;12103:2;12091:9;12082:7;12078:23;12074:32;12071:52;;;12119:1;12116;12109:12;12071:52;12151:9;12145:16;12170:28;12192:5;12170:28;:::i;13409:274::-;13538:3;13576:6;13570:13;13592:53;13638:6;13633:3;13626:4;13618:6;13614:17;13592:53;:::i;:::-;13661:16;;;;;13409:274;-1:-1:-1;;13409:274:40:o;13688:219::-;13837:2;13826:9;13819:21;13800:4;13857:44;13897:2;13886:9;13882:18;13874:6;13857:44;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {SushiswapFarmUpgradeable as Farm, SafeMath, IERC20, IERC20Upgradeable, SafeERC20Upgradeable, IUniswapV2Pair, Initializable} from \"./farms/SushiswapFarmUpgradeable.sol\"; \r\n \r\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\r\n\r\ncontract SushiswapFarmFactoryBeacon is Initializable{\r\n    using SafeMath for uint256; \r\n    using SafeERC20Upgradeable for IERC20Upgradeable;\r\n\r\n    /**\r\n     * @dev Contract Variables:\r\n     * farmBeacon - Farm contract implementation.\r\n     *\r\n     * Farms - Links {lpPools} to the deployed Farm contract.\r\n     * lpPools - List of pools that have corresponding deployed Farm contract.\r\n     * distributor - Address authorized to make distributions.\r\n     */\r\n    address public farmBeacon;\r\n\r\n    mapping(address => Farm) public Farms;\r\n    address[] public lpPools;\r\n    address public distributor;\r\n\r\n    event FarmDeployed(address indexed farmAddress);\r\n    event Deposit(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Withdraw(address indexed sender, address indexed lpPool, uint256 amount);\r\n    event Distribute(address indexed lpPool);\r\n    event DistributorChanged(address indexed newDistributor);\r\n\r\n    modifier distributorOnly(){\r\n        require(distributor == address(0) || msg.sender == distributor, 'The caller is not distributor');\r\n        _;\r\n    }\r\n\r\n    // ============ Methods ============\r\n\r\n    function initialize(address upgrader) public initializer {\r\n        UpgradeableBeacon _farmBeacon = new UpgradeableBeacon(\r\n            address(new Farm())\r\n        );\r\n        _farmBeacon.transferOwnership(upgrader);\r\n        farmBeacon = address(_farmBeacon);\r\n    }\r\n\r\n    /**\r\n     * @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\r\n     * @param amountA  - Token A amount to deposit.\r\n     * @param amountB -  Token B amount to deposit.\r\n     * @param amountLP - LP Token amount to deposit.\r\n     * @param lpPair - Address of the pool to deposit tokens in.\r\n     * @param recipient - Address which will recieve the deposit and leftover tokens.\r\n     \r\n     * @return sentA - Token A amount sent to the farm.\r\n     * @return sentB - Token B amount sent to the farm.\r\n     * @return liquidity - Total liquidity sent to the farm (in lpTokens).\r\n     */\r\n    function deposit(uint256 amountA, uint256 amountB, uint256 amountLP, address lpPair, address recipient) external returns(uint256 sentA, uint256 sentB, uint256 liquidity){\r\n        if(Farms[lpPair] == Farm(address(0))){\r\n            Farms[lpPair] = Farm(createFarm(lpPair));\r\n            lpPools.push(lpPair);\r\n        }\r\n\r\n        if(amountA > 0){\r\n            IERC20Upgradeable tokenA = IERC20Upgradeable(Farms[lpPair].tokenA());\r\n            tokenA.safeTransferFrom(msg.sender, address(Farms[lpPair]), amountA);\r\n        }\r\n        if(amountB > 0){\r\n            IERC20Upgradeable tokenB = IERC20Upgradeable(Farms[lpPair].tokenB());\r\n            tokenB.safeTransferFrom(msg.sender, address(Farms[lpPair]), amountB);\r\n        }\r\n        if(amountLP > 0){\r\n            IERC20Upgradeable(lpPair).safeTransferFrom(msg.sender, address(Farms[lpPair]), amountLP);\r\n        }\r\n\r\n        (sentA, sentB, liquidity) = Farms[lpPair].deposit(amountA, amountB, amountLP, recipient); \r\n        emit Deposit(recipient, lpPair, liquidity);\r\n    }\r\n\r\n    /** \r\n     * @dev Withdraws tokens from the given pool. \r\n     * @param lpPair - LP pool to withdraw from.\r\n     * @param amount - LP amount to withdraw. \r\n     * @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\r\n     * @param recipient - The address which will recieve tokens.\r\n\r\n     * @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     * @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false.\r\n     */ \r\n    function withdraw(address lpPair, uint256 amount, bool withdrawLP, address recipient) external returns(uint256 amountA, uint256 amountB){  \r\n        require(Farms[lpPair] != Farm(address(0)), 'The given pool doesnt exist');\r\n        (amountA, amountB) = Farms[lpPair].withdraw(msg.sender, amount, withdrawLP, recipient);\r\n        emit Withdraw(msg.sender, lpPair, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Distributes tokens between users.\r\n     * @param lpPair - LP pool to distribute tokens in.\r\n     * @param rewarderTokenToTokenARoute An array of token addresses.\r\n     * @param rewarderTokenToTokenBRoute An array of token addresses.\r\n     * @param rewardTokenToTokenARoute An array of token addresses.\r\n     * @param rewardTokenToTokenBRoute An array of token addresses.\r\n     *\r\n     * Note: This function can only be called by the distributor.\r\n     */ \r\n    function distribute(\r\n        address lpPair,\r\n        address[] calldata rewarderTokenToTokenARoute,\r\n        address[] calldata rewarderTokenToTokenBRoute,\r\n        address[] calldata rewardTokenToTokenARoute,\r\n        address[] calldata rewardTokenToTokenBRoute\r\n    ) external distributorOnly{\r\n        require(Farms[lpPair] != Farm(address(0)), 'The given pool doesnt exist'); \r\n        \r\n        Farms[lpPair].distribute(rewarderTokenToTokenARoute, rewarderTokenToTokenBRoute, rewardTokenToTokenARoute, rewardTokenToTokenBRoute);\r\n        emit Distribute(lpPair);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns tokens staked by the {_address} for the given {lpPair}.\r\n     * @param _address - The address to check stakes for.\r\n     * @param lpPair - LP pool to check stakes in.\r\n\r\n     * @return stakeLP - Total user stake(in LP tokens).\r\n     * @return stakeA - Token A stake.\r\n     * @return stakeB - Token B stake.\r\n     */\r\n    function userStake(address _address, address lpPair) external view returns (uint256 stakeLP, uint256 stakeA, uint256 stakeB) {\r\n        if (Farms[lpPair] != Farm(address(0))) {\r\n            stakeLP = Farms[lpPair].userBalance(_address);\r\n            (stakeA, stakeB) = getTokenStake(lpPair, stakeLP);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\r\n     * @param lpPair - LP pool to check total deposits in.\r\n\r\n     * @return totalDepositsLP - Total deposits (in LP tokens).\r\n     * @return totalDepositsA - Token A deposits.\r\n     * @return totalDepositsB - Token B deposits.\r\n     */ \r\n    function totalDeposits(address lpPair) external view returns (uint256 totalDepositsLP, uint256 totalDepositsA, uint256 totalDepositsB) {\r\n        if (Farms[lpPair] != Farm(address(0))) {\r\n            totalDepositsLP = Farms[lpPair].getTotalDeposits();\r\n            (totalDepositsA, totalDepositsB) = getTokenStake(lpPair, totalDepositsLP);\r\n        }\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return lpPools.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys new Farm contract and calls initialize on it.\r\n     */\r\n    function createFarm(address lpPair) internal returns (address) {\r\n        BeaconProxy proxy = new BeaconProxy(\r\n            farmBeacon,\r\n            abi.encodeWithSelector(\r\n                Farm(address(0)).initialize.selector,\r\n                lpPair,\r\n                address(this)\r\n            )\r\n        );\r\n        emit FarmDeployed(address(proxy));\r\n        return address(proxy);\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\r\n     * @param lpPair - LP pool to check total deposits in.\r\n     * @param amountLP - Amount of LP tokens to convert.\r\n\r\n     * @return amountA - Token A amount.\r\n     * @return amountB - Token B amount.\r\n     */ \r\n    function getTokenStake(address lpPair, uint256 amountLP) internal view returns (uint256 amountA, uint256 amountB) {\r\n        if (Farms[lpPair] != Farm(address(0))) {\r\n            uint256 totalSupply = IERC20(lpPair).totalSupply();\r\n            uint256 totalTokenAAmount = IERC20(Farms[lpPair].tokenA()).balanceOf(lpPair);\r\n            amountA = amountLP.mul(totalTokenAAmount).div(totalSupply);\r\n\r\n            uint256 totalTokenBAmount = IERC20(Farms[lpPair].tokenB()).balanceOf(lpPair);\r\n            amountB = amountLP.mul(totalTokenBAmount).div(totalSupply);\r\n        }\r\n    }\r\n\r\n    function transferDistributor(address newDistributor) external distributorOnly {\r\n        distributor = newDistributor;\r\n        emit DistributorChanged(newDistributor);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts\\contracts\\SushiswapFarmFactoryBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/SushiswapFarmFactoryBeacon.sol",
    "exportedSymbols": {
      "Address": [
        1965
      ],
      "BeaconProxy": [
        1351
      ],
      "Context": [
        1987
      ],
      "ERC1967Upgrade": [
        1217
      ],
      "Farm": [
        8021
      ],
      "IBeacon": [
        1361
      ],
      "IERC1822Proxiable": [
        899
      ],
      "IERC20": [
        1670
      ],
      "IERC20Upgradeable": [
        275
      ],
      "IUniswapV2Pair": [
        8667
      ],
      "Initializable": [
        197
      ],
      "Ownable": [
        889
      ],
      "Proxy": [
        1269
      ],
      "SafeERC20Upgradeable": [
        499
      ],
      "SafeMath": [
        2359
      ],
      "StorageSlot": [
        2047
      ],
      "SushiswapFarmFactoryBeacon": [
        4732
      ],
      "UpgradeableBeacon": [
        1436
      ]
    },
    "id": 4733,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4126,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:23"
      },
      {
        "id": 4127,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:23"
      },
      {
        "absolutePath": "project:/contracts/farms/SushiswapFarmUpgradeable.sol",
        "file": "./farms/SushiswapFarmUpgradeable.sol",
        "id": 4135,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4733,
        "sourceUnit": 8022,
        "src": "95:176:23",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4128,
              "name": "SushiswapFarmUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:24:23",
              "typeDescriptions": {}
            },
            "local": "Farm",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4129,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "137:8:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4130,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "147:6:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4131,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "155:17:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4132,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "174:20:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4133,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "196:14:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4134,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "212:13:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
        "id": 4136,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4733,
        "sourceUnit": 1437,
        "src": "277:68:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
        "id": 4137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4733,
        "sourceUnit": 1352,
        "src": "347:62:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4138,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 197,
              "src": "452:13:23"
            },
            "id": 4139,
            "nodeType": "InheritanceSpecifier",
            "src": "452:13:23"
          }
        ],
        "canonicalName": "SushiswapFarmFactoryBeacon",
        "contractDependencies": [
          1351,
          1436,
          8021
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4732,
        "linearizedBaseContracts": [
          4732,
          197
        ],
        "name": "SushiswapFarmFactoryBeacon",
        "nameLocation": "422:26:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4142,
            "libraryName": {
              "id": 4140,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2359,
              "src": "478:8:23"
            },
            "nodeType": "UsingForDirective",
            "src": "472:27:23",
            "typeName": {
              "id": 4141,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4146,
            "libraryName": {
              "id": 4143,
              "name": "SafeERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 499,
              "src": "512:20:23"
            },
            "nodeType": "UsingForDirective",
            "src": "506:49:23",
            "typeName": {
              "id": 4145,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4144,
                "name": "IERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 275,
                "src": "537:17:23"
              },
              "referencedDeclaration": 275,
              "src": "537:17:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 4147,
              "nodeType": "StructuredDocumentation",
              "src": "563:311:23",
              "text": " @dev Contract Variables:\n farmBeacon - Farm contract implementation.\n Farms - Links {lpPools} to the deployed Farm contract.\n lpPools - List of pools that have corresponding deployed Farm contract.\n distributor - Address authorized to make distributions."
            },
            "functionSelector": "d95a4d93",
            "id": 4149,
            "mutability": "mutable",
            "name": "farmBeacon",
            "nameLocation": "895:10:23",
            "nodeType": "VariableDeclaration",
            "scope": 4732,
            "src": "880:25:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4148,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9d9331d",
            "id": 4154,
            "mutability": "mutable",
            "name": "Farms",
            "nameLocation": "946:5:23",
            "nodeType": "VariableDeclaration",
            "scope": 4732,
            "src": "914:37:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
            },
            "typeName": {
              "id": 4153,
              "keyType": {
                "id": 4150,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "922:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "914:24:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
              },
              "valueType": {
                "id": 4152,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4151,
                  "name": "Farm",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8021,
                  "src": "933:4:23"
                },
                "referencedDeclaration": 8021,
                "src": "933:4:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                  "typeString": "contract SushiswapFarmUpgradeable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ecb03943",
            "id": 4157,
            "mutability": "mutable",
            "name": "lpPools",
            "nameLocation": "975:7:23",
            "nodeType": "VariableDeclaration",
            "scope": 4732,
            "src": "958:24:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4155,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "958:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4156,
              "nodeType": "ArrayTypeName",
              "src": "958:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe10928",
            "id": 4159,
            "mutability": "mutable",
            "name": "distributor",
            "nameLocation": "1004:11:23",
            "nodeType": "VariableDeclaration",
            "scope": 4732,
            "src": "989:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4158,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "989:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4163,
            "name": "FarmDeployed",
            "nameLocation": "1030:12:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmAddress",
                  "nameLocation": "1059:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4163,
                  "src": "1043:27:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:29:23"
            },
            "src": "1024:48:23"
          },
          {
            "anonymous": false,
            "id": 4171,
            "name": "Deposit",
            "nameLocation": "1084:7:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4165,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1108:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "1092:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4167,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1132:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "1116:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4169,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1148:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "1140:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:64:23"
            },
            "src": "1078:78:23"
          },
          {
            "anonymous": false,
            "id": 4179,
            "name": "Withdraw",
            "nameLocation": "1168:8:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1193:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "1177:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1217:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "1201:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1233:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4179,
                  "src": "1225:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:64:23"
            },
            "src": "1162:79:23"
          },
          {
            "anonymous": false,
            "id": 4183,
            "name": "Distribute",
            "nameLocation": "1253:10:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4181,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lpPool",
                  "nameLocation": "1280:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4183,
                  "src": "1264:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1263:24:23"
            },
            "src": "1247:41:23"
          },
          {
            "anonymous": false,
            "id": 4187,
            "name": "DistributorChanged",
            "nameLocation": "1300:18:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4185,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "1335:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4187,
                  "src": "1319:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1318:32:23"
            },
            "src": "1294:57:23"
          },
          {
            "body": {
              "id": 4205,
              "nodeType": "Block",
              "src": "1385:127:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4190,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4159,
                            "src": "1404:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1427:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1419:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4191,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1419:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1419:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1404:25:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4196,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1433:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1433:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4198,
                            "name": "distributor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4159,
                            "src": "1447:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1433:25:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1404:54:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652063616c6c6572206973206e6f74206469737472696275746f72",
                        "id": 4201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1460:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5",
                          "typeString": "literal_string \"The caller is not distributor\""
                        },
                        "value": "The caller is not distributor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_761eb24bde83dec467e2ac5b8bbe09f6fde579d1404557a8d48b30b29405ccf5",
                          "typeString": "literal_string \"The caller is not distributor\""
                        }
                      ],
                      "id": 4189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1396:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:96:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4203,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:96:23"
                },
                {
                  "id": 4204,
                  "nodeType": "PlaceholderStatement",
                  "src": "1503:1:23"
                }
              ]
            },
            "id": 4206,
            "name": "distributorOnly",
            "nameLocation": "1368:15:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:2:23"
            },
            "src": "1359:153:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4241,
              "nodeType": "Block",
              "src": "1621:211:23",
              "statements": [
                {
                  "assignments": [
                    4215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4215,
                      "mutability": "mutable",
                      "name": "_farmBeacon",
                      "nameLocation": "1650:11:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4241,
                      "src": "1632:29:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                        "typeString": "contract UpgradeableBeacon"
                      },
                      "typeName": {
                        "id": 4214,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4213,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1436,
                          "src": "1632:17:23"
                        },
                        "referencedDeclaration": 1436,
                        "src": "1632:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4227,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1708:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                "typeString": "function () returns (contract SushiswapFarmUpgradeable)"
                              },
                              "typeName": {
                                "id": 4222,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 4221,
                                  "name": "Farm",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 8021,
                                  "src": "1712:4:23"
                                },
                                "referencedDeclaration": 8021,
                                "src": "1712:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                  "typeString": "contract SushiswapFarmUpgradeable"
                                }
                              }
                            },
                            "id": 4224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1708:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                              "typeString": "contract SushiswapFarmUpgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                              "typeString": "contract SushiswapFarmUpgradeable"
                            }
                          ],
                          "id": 4220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1700:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1700:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1700:19:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1664:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$1436_$",
                        "typeString": "function (address) returns (contract UpgradeableBeacon)"
                      },
                      "typeName": {
                        "id": 4217,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4216,
                          "name": "UpgradeableBeacon",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1436,
                          "src": "1668:17:23"
                        },
                        "referencedDeclaration": 1436,
                        "src": "1668:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      }
                    },
                    "id": 4226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:66:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                      "typeString": "contract UpgradeableBeacon"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1632:98:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4231,
                        "name": "upgrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4208,
                        "src": "1771:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4228,
                        "name": "_farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4215,
                        "src": "1741:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                          "typeString": "contract UpgradeableBeacon"
                        }
                      },
                      "id": 4230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 868,
                      "src": "1741:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4233,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:39:23"
                },
                {
                  "expression": {
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4234,
                      "name": "farmBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4149,
                      "src": "1791:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4237,
                          "name": "_farmBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4215,
                          "src": "1812:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UpgradeableBeacon_$1436",
                            "typeString": "contract UpgradeableBeacon"
                          }
                        ],
                        "id": 4236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1804:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1804:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1804:20:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1791:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4240,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:33:23"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 4242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4210,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "1609:11:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1609:11:23"
              }
            ],
            "name": "initialize",
            "nameLocation": "1573:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4208,
                  "mutability": "mutable",
                  "name": "upgrader",
                  "nameLocation": "1592:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4242,
                  "src": "1584:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1583:18:23"
            },
            "returnParameters": {
              "id": 4212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1621:0:23"
            },
            "scope": 4732,
            "src": "1564:268:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4391,
              "nodeType": "Block",
              "src": "2675:861:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 4271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4262,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4154,
                        "src": "2689:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4264,
                      "indexExpression": {
                        "id": 4263,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "2695:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2689:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2719:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2711:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4266,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2711:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2711:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4265,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8021,
                        "src": "2706:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2706:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "2689:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4289,
                  "nodeType": "IfStatement",
                  "src": "2686:139:23",
                  "trueBody": {
                    "id": 4288,
                    "nodeType": "Block",
                    "src": "2723:102:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 4280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4272,
                              "name": "Farms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4154,
                              "src": "2738:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                              }
                            },
                            "id": 4274,
                            "indexExpression": {
                              "id": 4273,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4251,
                              "src": "2744:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2738:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                              "typeString": "contract SushiswapFarmUpgradeable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 4277,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4251,
                                    "src": "2770:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4276,
                                  "name": "createFarm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4636,
                                  "src": "2759:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address) returns (address)"
                                  }
                                },
                                "id": 4278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2759:18:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4275,
                              "name": "Farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8021,
                              "src": "2754:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                "typeString": "type(contract SushiswapFarmUpgradeable)"
                              }
                            },
                            "id": 4279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2754:24:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                              "typeString": "contract SushiswapFarmUpgradeable"
                            }
                          },
                          "src": "2738:40:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "id": 4281,
                        "nodeType": "ExpressionStatement",
                        "src": "2738:40:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4285,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4251,
                              "src": "2806:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4282,
                              "name": "lpPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4157,
                              "src": "2793:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2793:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 4286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2793:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4287,
                        "nodeType": "ExpressionStatement",
                        "src": "2793:20:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4290,
                      "name": "amountA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4245,
                      "src": "2840:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2850:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2840:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4319,
                  "nodeType": "IfStatement",
                  "src": "2837:193:23",
                  "trueBody": {
                    "id": 4318,
                    "nodeType": "Block",
                    "src": "2852:178:23",
                    "statements": [
                      {
                        "assignments": [
                          4295
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4295,
                            "mutability": "mutable",
                            "name": "tokenA",
                            "nameLocation": "2885:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4318,
                            "src": "2867:24:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 4294,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4293,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 275,
                                "src": "2867:17:23"
                              },
                              "referencedDeclaration": 275,
                              "src": "2867:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4303,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 4297,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4154,
                                    "src": "2912:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4299,
                                  "indexExpression": {
                                    "id": 4298,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4251,
                                    "src": "2918:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2912:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                },
                                "id": 4300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7137,
                                "src": "2912:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 4301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2912:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4296,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "2894:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 4302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2894:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2867:68:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4307,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2974:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2974:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 4311,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4154,
                                    "src": "2994:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4313,
                                  "indexExpression": {
                                    "id": 4312,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4251,
                                    "src": "3000:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2994:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                ],
                                "id": 4310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2986:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4309,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2986:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2986:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4315,
                              "name": "amountA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4245,
                              "src": "3010:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4304,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4295,
                              "src": "2950:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 4306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 332,
                            "src": "2950:23:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$275_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 4316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2950:68:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4317,
                        "nodeType": "ExpressionStatement",
                        "src": "2950:68:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4320,
                      "name": "amountB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4247,
                      "src": "3043:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3053:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3043:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4349,
                  "nodeType": "IfStatement",
                  "src": "3040:193:23",
                  "trueBody": {
                    "id": 4348,
                    "nodeType": "Block",
                    "src": "3055:178:23",
                    "statements": [
                      {
                        "assignments": [
                          4325
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4325,
                            "mutability": "mutable",
                            "name": "tokenB",
                            "nameLocation": "3088:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4348,
                            "src": "3070:24:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                              "typeString": "contract IERC20Upgradeable"
                            },
                            "typeName": {
                              "id": 4324,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4323,
                                "name": "IERC20Upgradeable",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 275,
                                "src": "3070:17:23"
                              },
                              "referencedDeclaration": 275,
                              "src": "3070:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4333,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "baseExpression": {
                                    "id": 4327,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4154,
                                    "src": "3115:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4329,
                                  "indexExpression": {
                                    "id": 4328,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4251,
                                    "src": "3121:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3115:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                },
                                "id": 4330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenB",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7139,
                                "src": "3115:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 4331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3115:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4326,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "3097:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 4332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3097:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3070:68:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4337,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3177:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3177:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 4341,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4154,
                                    "src": "3197:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4343,
                                  "indexExpression": {
                                    "id": 4342,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4251,
                                    "src": "3203:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3197:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                ],
                                "id": 4340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3189:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4339,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3189:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3189:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4345,
                              "name": "amountB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4247,
                              "src": "3213:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4334,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4325,
                              "src": "3153:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 4336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 332,
                            "src": "3153:23:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$275_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 4346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3153:68:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4347,
                        "nodeType": "ExpressionStatement",
                        "src": "3153:68:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4350,
                      "name": "amountLP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4249,
                      "src": "3246:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3257:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3246:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4369,
                  "nodeType": "IfStatement",
                  "src": "3243:131:23",
                  "trueBody": {
                    "id": 4368,
                    "nodeType": "Block",
                    "src": "3259:115:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4357,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3317:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3317:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 4361,
                                    "name": "Farms",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4154,
                                    "src": "3337:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                      "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                    }
                                  },
                                  "id": 4363,
                                  "indexExpression": {
                                    "id": 4362,
                                    "name": "lpPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4251,
                                    "src": "3343:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3337:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                    "typeString": "contract SushiswapFarmUpgradeable"
                                  }
                                ],
                                "id": 4360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3329:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4359,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3329:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3329:22:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4365,
                              "name": "amountLP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4249,
                              "src": "3353:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4354,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4251,
                                  "src": "3292:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4353,
                                "name": "IERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 275,
                                "src": "3274:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$275_$",
                                  "typeString": "type(contract IERC20Upgradeable)"
                                }
                              },
                              "id": 4355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3274:25:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Upgradeable_$275",
                                "typeString": "contract IERC20Upgradeable"
                              }
                            },
                            "id": 4356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 332,
                            "src": "3274:42:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$275_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$275_$",
                              "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                            }
                          },
                          "id": 4366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3274:88:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4367,
                        "nodeType": "ExpressionStatement",
                        "src": "3274:88:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 4370,
                          "name": "sentA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4256,
                          "src": "3387:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4371,
                          "name": "sentB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4258,
                          "src": "3394:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4372,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4260,
                          "src": "3401:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4373,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3386:25:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4378,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4245,
                          "src": "3436:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4379,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4247,
                          "src": "3445:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4380,
                          "name": "amountLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4249,
                          "src": "3454:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4381,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4253,
                          "src": "3464:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 4374,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4154,
                            "src": "3414:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4376,
                          "indexExpression": {
                            "id": 4375,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4251,
                            "src": "3420:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3414:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "id": 4377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7479,
                        "src": "3414:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 4382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3414:60:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "3386:88:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4384,
                  "nodeType": "ExpressionStatement",
                  "src": "3386:88:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4386,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4253,
                        "src": "3499:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4387,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "3510:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4388,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4260,
                        "src": "3518:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4385,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4171,
                      "src": "3491:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3491:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4390,
                  "nodeType": "EmitStatement",
                  "src": "3486:42:23"
                }
              ]
            },
            "documentation": {
              "id": 4243,
              "nodeType": "StructuredDocumentation",
              "src": "1840:660:23",
              "text": " @dev Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.\n @param amountA  - Token A amount to deposit.\n @param amountB -  Token B amount to deposit.\n @param amountLP - LP Token amount to deposit.\n @param lpPair - Address of the pool to deposit tokens in.\n @param recipient - Address which will recieve the deposit and leftover tokens.\n @return sentA - Token A amount sent to the farm.\n @return sentB - Token B amount sent to the farm.\n @return liquidity - Total liquidity sent to the farm (in lpTokens)."
            },
            "functionSelector": "7c770aae",
            "id": 4392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2515:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4245,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "2531:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2523:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4247,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "2548:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2540:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4249,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "2565:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2557:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4251,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "2583:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2575:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4253,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2599:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2591:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2591:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2522:87:23"
            },
            "returnParameters": {
              "id": 4261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "sentA",
                  "nameLocation": "2635:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2627:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4258,
                  "mutability": "mutable",
                  "name": "sentB",
                  "nameLocation": "2650:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2642:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4260,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2665:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4392,
                  "src": "2657:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2657:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2626:49:23"
            },
            "scope": 4732,
            "src": "2506:1030:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4444,
              "nodeType": "Block",
              "src": "4193:243:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        },
                        "id": 4418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4409,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4154,
                            "src": "4214:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4411,
                          "indexExpression": {
                            "id": 4410,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4395,
                            "src": "4220:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4214:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4415,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4244:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4236:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4413,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4236:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4236:10:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4412,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8021,
                            "src": "4231:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                              "typeString": "type(contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4231:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "src": "4214:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 4419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4249:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 4408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4206:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4206:73:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4421,
                  "nodeType": "ExpressionStatement",
                  "src": "4206:73:23"
                },
                {
                  "expression": {
                    "id": 4435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 4422,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4404,
                          "src": "4291:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4423,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4406,
                          "src": "4300:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4424,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4290:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 4429,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4334:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4334:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 4431,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4397,
                          "src": "4346:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4432,
                          "name": "withdrawLP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4399,
                          "src": "4354:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 4433,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4401,
                          "src": "4366:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 4425,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4154,
                            "src": "4311:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4427,
                          "indexExpression": {
                            "id": 4426,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4395,
                            "src": "4317:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4311:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "id": 4428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7566,
                        "src": "4311:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,bool,address) external returns (uint256,uint256)"
                        }
                      },
                      "id": 4434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4311:65:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "4290:86:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4436,
                  "nodeType": "ExpressionStatement",
                  "src": "4290:86:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4401:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4401:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4440,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "4413:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4441,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4397,
                        "src": "4421:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4437,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4179,
                      "src": "4392:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4392:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4443,
                  "nodeType": "EmitStatement",
                  "src": "4387:41:23"
                }
              ]
            },
            "documentation": {
              "id": 4393,
              "nodeType": "StructuredDocumentation",
              "src": "3544:506:23",
              "text": " @dev Withdraws tokens from the given pool. \n @param lpPair - LP pool to withdraw from.\n @param amount - LP amount to withdraw. \n @param withdrawLP - True: Withdraw in LP tokens, False: Withdraw in normal tokens.\n @param recipient - The address which will recieve tokens.\n @return amountA - Token A amount sent to the {recipient}, 0 if withdrawLP == false.\n @return amountB - Token B amount sent to the {recipient}, 0 if withdrawLP == false."
            },
            "functionSelector": "430004c1",
            "id": 4445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4066:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4395,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "4083:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "4075:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4075:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4397,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4099:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "4091:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4091:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4399,
                  "mutability": "mutable",
                  "name": "withdrawLP",
                  "nameLocation": "4112:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "4107:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4401,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4132:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "4124:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4124:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4074:68:23"
            },
            "returnParameters": {
              "id": 4407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4404,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4168:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "4160:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4406,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4185:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4445,
                  "src": "4177:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4177:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4159:34:23"
            },
            "scope": 4732,
            "src": "4057:379:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4493,
              "nodeType": "Block",
              "src": "5218:280:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        },
                        "id": 4475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4466,
                            "name": "Farms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4154,
                            "src": "5237:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                              "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4468,
                          "indexExpression": {
                            "id": 4467,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4448,
                            "src": "5243:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5237:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5267:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5259:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4470,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5259:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5259:10:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4469,
                            "name": "Farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8021,
                            "src": "5254:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                              "typeString": "type(contract SushiswapFarmUpgradeable)"
                            }
                          },
                          "id": 4474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5254:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                            "typeString": "contract SushiswapFarmUpgradeable"
                          }
                        },
                        "src": "5237:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520676976656e20706f6f6c20646f65736e74206578697374",
                        "id": 4476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5272:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        },
                        "value": "The given pool doesnt exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_562428aca480cf8500bf673da14cae17e70cbcc63f64939e38628e47c713e2f7",
                          "typeString": "literal_string \"The given pool doesnt exist\""
                        }
                      ],
                      "id": 4465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5229:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:73:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4478,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:73:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4483,
                        "name": "rewarderTokenToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "5349:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4484,
                        "name": "rewarderTokenToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4454,
                        "src": "5377:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4485,
                        "name": "rewardTokenToTokenARoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4457,
                        "src": "5405:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 4486,
                        "name": "rewardTokenToTokenBRoute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4460,
                        "src": "5431:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 4479,
                          "name": "Farms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4154,
                          "src": "5324:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                            "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                          }
                        },
                        "id": 4481,
                        "indexExpression": {
                          "id": 4480,
                          "name": "lpPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4448,
                          "src": "5330:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5324:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                          "typeString": "contract SushiswapFarmUpgradeable"
                        }
                      },
                      "id": 4482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7903,
                      "src": "5324:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,address[] memory,address[] memory,address[] memory) external"
                      }
                    },
                    "id": 4487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5324:132:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4488,
                  "nodeType": "ExpressionStatement",
                  "src": "5324:132:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4490,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4448,
                        "src": "5483:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4489,
                      "name": "Distribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4183,
                      "src": "5472:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5472:18:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4492,
                  "nodeType": "EmitStatement",
                  "src": "5467:23:23"
                }
              ]
            },
            "documentation": {
              "id": 4446,
              "nodeType": "StructuredDocumentation",
              "src": "4444:471:23",
              "text": " @dev Distributes tokens between users.\n @param lpPair - LP pool to distribute tokens in.\n @param rewarderTokenToTokenARoute An array of token addresses.\n @param rewarderTokenToTokenBRoute An array of token addresses.\n @param rewardTokenToTokenARoute An array of token addresses.\n @param rewardTokenToTokenBRoute An array of token addresses.\n Note: This function can only be called by the distributor."
            },
            "functionSelector": "d2dd71ad",
            "id": 4494,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4462,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4206,
                  "src": "5203:15:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5203:15:23"
              }
            ],
            "name": "distribute",
            "nameLocation": "4931:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4448,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "4960:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4494,
                  "src": "4952:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4451,
                  "mutability": "mutable",
                  "name": "rewarderTokenToTokenARoute",
                  "nameLocation": "4996:26:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4494,
                  "src": "4977:45:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4449,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4977:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4450,
                    "nodeType": "ArrayTypeName",
                    "src": "4977:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4454,
                  "mutability": "mutable",
                  "name": "rewarderTokenToTokenBRoute",
                  "nameLocation": "5052:26:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4494,
                  "src": "5033:45:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4452,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5033:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4453,
                    "nodeType": "ArrayTypeName",
                    "src": "5033:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4457,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenARoute",
                  "nameLocation": "5108:24:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4494,
                  "src": "5089:43:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4455,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5089:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4456,
                    "nodeType": "ArrayTypeName",
                    "src": "5089:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4460,
                  "mutability": "mutable",
                  "name": "rewardTokenToTokenBRoute",
                  "nameLocation": "5162:24:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4494,
                  "src": "5143:43:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4458,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5143:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4459,
                    "nodeType": "ArrayTypeName",
                    "src": "5143:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4941:252:23"
            },
            "returnParameters": {
              "id": 4464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5218:0:23"
            },
            "scope": 4732,
            "src": "4922:576:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4538,
              "nodeType": "Block",
              "src": "5977:193:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 4517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4508,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4154,
                        "src": "5992:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4510,
                      "indexExpression": {
                        "id": 4509,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4499,
                        "src": "5998:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5992:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6022:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6014:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4512,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6014:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6014:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4511,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8021,
                        "src": "6009:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6009:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "5992:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4537,
                  "nodeType": "IfStatement",
                  "src": "5988:175:23",
                  "trueBody": {
                    "id": 4536,
                    "nodeType": "Block",
                    "src": "6027:136:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 4525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4518,
                            "name": "stakeLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4502,
                            "src": "6042:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4523,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4497,
                                "src": "6078:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 4519,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4154,
                                  "src": "6052:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                    "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4521,
                                "indexExpression": {
                                  "id": 4520,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4499,
                                  "src": "6058:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6052:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                  "typeString": "contract SushiswapFarmUpgradeable"
                                }
                              },
                              "id": 4522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7939,
                              "src": "6052:25:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 4524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6052:35:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6042:45:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4526,
                        "nodeType": "ExpressionStatement",
                        "src": "6042:45:23"
                      },
                      {
                        "expression": {
                          "id": 4534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4527,
                                "name": "stakeA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4504,
                                "src": "6103:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4528,
                                "name": "stakeB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4506,
                                "src": "6111:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4529,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6102:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4531,
                                "name": "lpPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4499,
                                "src": "6135:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4532,
                                "name": "stakeLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4502,
                                "src": "6143:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4530,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4715,
                              "src": "6121:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6121:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6102:49:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4535,
                        "nodeType": "ExpressionStatement",
                        "src": "6102:49:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4495,
              "nodeType": "StructuredDocumentation",
              "src": "5506:340:23",
              "text": " @dev Returns tokens staked by the {_address} for the given {lpPair}.\n @param _address - The address to check stakes for.\n @param lpPair - LP pool to check stakes in.\n @return stakeLP - Total user stake(in LP tokens).\n @return stakeA - Token A stake.\n @return stakeB - Token B stake."
            },
            "functionSelector": "51bdca3e",
            "id": 4539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userStake",
            "nameLocation": "5861:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4497,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "5879:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4539,
                  "src": "5871:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5871:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4499,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "5897:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4539,
                  "src": "5889:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5889:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5870:34:23"
            },
            "returnParameters": {
              "id": 4507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4502,
                  "mutability": "mutable",
                  "name": "stakeLP",
                  "nameLocation": "5936:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4539,
                  "src": "5928:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5928:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4504,
                  "mutability": "mutable",
                  "name": "stakeA",
                  "nameLocation": "5953:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4539,
                  "src": "5945:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5945:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4506,
                  "mutability": "mutable",
                  "name": "stakeB",
                  "nameLocation": "5969:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4539,
                  "src": "5961:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5961:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5927:49:23"
            },
            "scope": 4732,
            "src": "5852:318:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4580,
              "nodeType": "Block",
              "src": "6658:222:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 4560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4551,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4154,
                        "src": "6673:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4553,
                      "indexExpression": {
                        "id": 4552,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4542,
                        "src": "6679:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6673:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6703:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6695:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4555,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6695:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6695:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4554,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8021,
                        "src": "6690:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6690:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "6673:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4579,
                  "nodeType": "IfStatement",
                  "src": "6669:204:23",
                  "trueBody": {
                    "id": 4578,
                    "nodeType": "Block",
                    "src": "6708:165:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 4567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4561,
                            "name": "totalDepositsLP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4545,
                            "src": "6723:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 4562,
                                  "name": "Farms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4154,
                                  "src": "6741:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                    "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4564,
                                "indexExpression": {
                                  "id": 4563,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4542,
                                  "src": "6747:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6741:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                  "typeString": "contract SushiswapFarmUpgradeable"
                                }
                              },
                              "id": 4565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getTotalDeposits",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7960,
                              "src": "6741:30:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 4566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6741:32:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6723:50:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4568,
                        "nodeType": "ExpressionStatement",
                        "src": "6723:50:23"
                      },
                      {
                        "expression": {
                          "id": 4576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4569,
                                "name": "totalDepositsA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4547,
                                "src": "6789:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4570,
                                "name": "totalDepositsB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4549,
                                "src": "6805:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4571,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6788:32:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4573,
                                "name": "lpPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4542,
                                "src": "6837:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4574,
                                "name": "totalDepositsLP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4545,
                                "src": "6845:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4572,
                              "name": "getTokenStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4715,
                              "src": "6823:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 4575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6823:38:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6788:73:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4577,
                        "nodeType": "ExpressionStatement",
                        "src": "6788:73:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4540,
              "nodeType": "StructuredDocumentation",
              "src": "6178:338:23",
              "text": " @dev Returns total amount locked in the pool. Doesn't take pending rewards into account.\n @param lpPair - LP pool to check total deposits in.\n @return totalDepositsLP - Total deposits (in LP tokens).\n @return totalDepositsA - Token A deposits.\n @return totalDepositsB - Token B deposits."
            },
            "functionSelector": "e9403256",
            "id": 4581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposits",
            "nameLocation": "6532:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4542,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "6554:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4581,
                  "src": "6546:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6546:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6545:16:23"
            },
            "returnParameters": {
              "id": 4550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4545,
                  "mutability": "mutable",
                  "name": "totalDepositsLP",
                  "nameLocation": "6593:15:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4581,
                  "src": "6585:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6585:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4547,
                  "mutability": "mutable",
                  "name": "totalDepositsA",
                  "nameLocation": "6618:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4581,
                  "src": "6610:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6610:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4549,
                  "mutability": "mutable",
                  "name": "totalDepositsB",
                  "nameLocation": "6642:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4581,
                  "src": "6634:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6634:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6584:73:23"
            },
            "scope": 4732,
            "src": "6523:357:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4589,
              "nodeType": "Block",
              "src": "6942:40:23",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4586,
                      "name": "lpPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4157,
                      "src": "6960:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 4587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6960:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4585,
                  "id": 4588,
                  "nodeType": "Return",
                  "src": "6953:21:23"
                }
              ]
            },
            "functionSelector": "081e3eda",
            "id": 4590,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nameLocation": "6897:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6907:2:23"
            },
            "returnParameters": {
              "id": 4585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4590,
                  "src": "6933:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6933:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6932:9:23"
            },
            "scope": 4732,
            "src": "6888:94:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4635,
              "nodeType": "Block",
              "src": "7138:330:23",
              "statements": [
                {
                  "assignments": [
                    4600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4600,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "7161:5:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 4635,
                      "src": "7149:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 4599,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4598,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1351,
                          "src": "7149:11:23"
                        },
                        "referencedDeclaration": 1351,
                        "src": "7149:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4622,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4604,
                        "name": "farmBeacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4149,
                        "src": "7199:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 4610,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7278:1:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 4609,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7270:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 4608,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7270:7:23",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4611,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7270:10:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4607,
                                  "name": "Farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8021,
                                  "src": "7265:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                    "typeString": "type(contract SushiswapFarmUpgradeable)"
                                  }
                                },
                                "id": 4612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7265:16:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                  "typeString": "contract SushiswapFarmUpgradeable"
                                }
                              },
                              "id": 4613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7359,
                              "src": "7265:27:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                                "typeString": "function (address,address) external"
                              }
                            },
                            "id": 4614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7265:36:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 4615,
                            "name": "lpPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4593,
                            "src": "7320:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 4618,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7353:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiswapFarmFactoryBeacon_$4732",
                                  "typeString": "contract SushiswapFarmFactoryBeacon"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiswapFarmFactoryBeacon_$4732",
                                  "typeString": "contract SushiswapFarmFactoryBeacon"
                                }
                              ],
                              "id": 4617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7345:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4616,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7345:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7345:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4605,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "7224:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7224:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 4620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7224:149:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7169:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$1351_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 4602,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4601,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1351,
                          "src": "7173:11:23"
                        },
                        "referencedDeclaration": 1351,
                        "src": "7173:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 4621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7169:215:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7149:235:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4626,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4600,
                            "src": "7421:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 4625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7413:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4624,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7413:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7413:14:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4623,
                      "name": "FarmDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4163,
                      "src": "7400:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7400:28:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4629,
                  "nodeType": "EmitStatement",
                  "src": "7395:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4632,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4600,
                        "src": "7454:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$1351",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 4631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7446:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 4630,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7446:7:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7446:14:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4597,
                  "id": 4634,
                  "nodeType": "Return",
                  "src": "7439:21:23"
                }
              ]
            },
            "documentation": {
              "id": 4591,
              "nodeType": "StructuredDocumentation",
              "src": "6990:79:23",
              "text": " @dev Deploys new Farm contract and calls initialize on it."
            },
            "id": 4636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFarm",
            "nameLocation": "7084:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4593,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "7103:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4636,
                  "src": "7095:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7095:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7094:16:23"
            },
            "returnParameters": {
              "id": 4597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4636,
                  "src": "7129:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7129:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7128:9:23"
            },
            "scope": 4732,
            "src": "7075:393:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4714,
              "nodeType": "Block",
              "src": "7914:464:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                      "typeString": "contract SushiswapFarmUpgradeable"
                    },
                    "id": 4657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4648,
                        "name": "Farms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4154,
                        "src": "7929:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4650,
                      "indexExpression": {
                        "id": 4649,
                        "name": "lpPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4639,
                        "src": "7935:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7929:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7959:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7951:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4652,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7951:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7951:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4651,
                        "name": "Farm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8021,
                        "src": "7946:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                          "typeString": "type(contract SushiswapFarmUpgradeable)"
                        }
                      },
                      "id": 4656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7946:16:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                        "typeString": "contract SushiswapFarmUpgradeable"
                      }
                    },
                    "src": "7929:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4713,
                  "nodeType": "IfStatement",
                  "src": "7925:446:23",
                  "trueBody": {
                    "id": 4712,
                    "nodeType": "Block",
                    "src": "7964:407:23",
                    "statements": [
                      {
                        "assignments": [
                          4659
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4659,
                            "mutability": "mutable",
                            "name": "totalSupply",
                            "nameLocation": "7987:11:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4712,
                            "src": "7979:19:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4658,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7979:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4665,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4661,
                                  "name": "lpPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4639,
                                  "src": "8008:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4660,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "8001:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1670_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8001:14:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1601,
                            "src": "8001:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 4664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8001:28:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7979:50:23"
                      },
                      {
                        "assignments": [
                          4667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4667,
                            "mutability": "mutable",
                            "name": "totalTokenAAmount",
                            "nameLocation": "8052:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4712,
                            "src": "8044:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4666,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8044:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4678,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4676,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4639,
                              "src": "8113:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 4669,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4154,
                                        "src": "8079:5:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 4671,
                                      "indexExpression": {
                                        "id": 4670,
                                        "name": "lpPair",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4639,
                                        "src": "8085:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8079:13:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                        "typeString": "contract SushiswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 4672,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenA",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7137,
                                    "src": "8079:20:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 4673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8079:22:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4668,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "8072:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1670_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8072:30:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1609,
                            "src": "8072:40:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8072:48:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8044:76:23"
                      },
                      {
                        "expression": {
                          "id": 4687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4679,
                            "name": "amountA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4644,
                            "src": "8135:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4685,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4659,
                                "src": "8181:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4682,
                                    "name": "totalTokenAAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4667,
                                    "src": "8158:17:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4680,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4641,
                                    "src": "8145:8:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2253,
                                  "src": "8145:12:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8145:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2268,
                              "src": "8145:35:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8145:48:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8135:58:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4688,
                        "nodeType": "ExpressionStatement",
                        "src": "8135:58:23"
                      },
                      {
                        "assignments": [
                          4690
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4690,
                            "mutability": "mutable",
                            "name": "totalTokenBAmount",
                            "nameLocation": "8218:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4712,
                            "src": "8210:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4689,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8210:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4701,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4699,
                              "name": "lpPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4639,
                              "src": "8279:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 4692,
                                        "name": "Farms",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4154,
                                        "src": "8245:5:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_SushiswapFarmUpgradeable_$8021_$",
                                          "typeString": "mapping(address => contract SushiswapFarmUpgradeable)"
                                        }
                                      },
                                      "id": 4694,
                                      "indexExpression": {
                                        "id": 4693,
                                        "name": "lpPair",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4639,
                                        "src": "8251:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8245:13:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SushiswapFarmUpgradeable_$8021",
                                        "typeString": "contract SushiswapFarmUpgradeable"
                                      }
                                    },
                                    "id": 4695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenB",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7139,
                                    "src": "8245:20:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 4696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8245:22:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4691,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "8238:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1670_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 4697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8238:30:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1670",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1609,
                            "src": "8238:40:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8238:48:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8210:76:23"
                      },
                      {
                        "expression": {
                          "id": 4710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4702,
                            "name": "amountB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4646,
                            "src": "8301:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4708,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4659,
                                "src": "8347:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4705,
                                    "name": "totalTokenBAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4690,
                                    "src": "8324:17:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4703,
                                    "name": "amountLP",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4641,
                                    "src": "8311:8:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2253,
                                  "src": "8311:12:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8311:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2268,
                              "src": "8311:35:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8311:48:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8301:58:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4711,
                        "nodeType": "ExpressionStatement",
                        "src": "8301:58:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4637,
              "nodeType": "StructuredDocumentation",
              "src": "7478:315:23",
              "text": " @dev Converts LP tokens to normal tokens, value(amountA) == value(amountB) == 0.5*amountLP\n @param lpPair - LP pool to check total deposits in.\n @param amountLP - Amount of LP tokens to convert.\n @return amountA - Token A amount.\n @return amountB - Token B amount."
            },
            "id": 4715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenStake",
            "nameLocation": "7809:13:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4639,
                  "mutability": "mutable",
                  "name": "lpPair",
                  "nameLocation": "7831:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4715,
                  "src": "7823:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7823:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4641,
                  "mutability": "mutable",
                  "name": "amountLP",
                  "nameLocation": "7847:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4715,
                  "src": "7839:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7839:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7822:34:23"
            },
            "returnParameters": {
              "id": 4647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4644,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "7888:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4715,
                  "src": "7880:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7880:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4646,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "7905:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4715,
                  "src": "7897:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7897:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7879:34:23"
            },
            "scope": 4732,
            "src": "7800:578:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4730,
              "nodeType": "Block",
              "src": "8464:97:23",
              "statements": [
                {
                  "expression": {
                    "id": 4724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4722,
                      "name": "distributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4159,
                      "src": "8475:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4723,
                      "name": "newDistributor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4717,
                      "src": "8489:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8475:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4725,
                  "nodeType": "ExpressionStatement",
                  "src": "8475:28:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4727,
                        "name": "newDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "8538:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4726,
                      "name": "DistributorChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4187,
                      "src": "8519:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8519:34:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4729,
                  "nodeType": "EmitStatement",
                  "src": "8514:39:23"
                }
              ]
            },
            "functionSelector": "e2332908",
            "id": 4731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4719,
                  "name": "distributorOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4206,
                  "src": "8448:15:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "8448:15:23"
              }
            ],
            "name": "transferDistributor",
            "nameLocation": "8395:19:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4717,
                  "mutability": "mutable",
                  "name": "newDistributor",
                  "nameLocation": "8423:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4731,
                  "src": "8415:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8415:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8414:24:23"
            },
            "returnParameters": {
              "id": 4721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8464:0:23"
            },
            "scope": 4732,
            "src": "8386:175:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4733,
        "src": "413:8151:23",
        "usedErrors": []
      }
    ],
    "src": "33:8531:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {
        "0x7fee2c251a158c3c3bcc28f8db26af3c4a0483735c8f254b9aa8a0b5e0b56d08": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "farmAddress",
              "type": "address"
            }
          ],
          "name": "FarmDeployed",
          "type": "event"
        },
        "0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x2ab0d312ec5eef312bf327c57a266c37191bf9c85aeea6c7d67c3a2db9f05bb7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            }
          ],
          "name": "Distribute",
          "type": "event"
        },
        "0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "lpPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3FA2cfdb68a8cC42dc255128370E4A83a1158CB6",
      "transactionHash": "0x570ac959fa4193f2ee1c811a083c74a4f49b40923035e2cf5cd8366ddd495b0b"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-04-25T08:46:03.176Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint256,uint256,address,address)": {
        "details": "Deposits tokens in the given pool. Creates new Farm contract if there isn't one deployed for the lpPair and deposits tokens.",
        "params": {
          "amountA": "- Token A amount to deposit.",
          "amountB": "-  Token B amount to deposit.",
          "amountLP": "- LP Token amount to deposit.",
          "lpPair": "- Address of the pool to deposit tokens in.",
          "recipient": "- Address which will recieve the deposit and leftover tokens."
        },
        "returns": {
          "liquidity": "- Total liquidity sent to the farm (in lpTokens).",
          "sentA": "- Token A amount sent to the farm.",
          "sentB": "- Token B amount sent to the farm."
        }
      },
      "distribute(address,address[],address[],address[],address[])": {
        "details": "Distributes tokens between users.",
        "params": {
          "lpPair": "- LP pool to distribute tokens in.",
          "rewardTokenToTokenARoute": "An array of token addresses.",
          "rewardTokenToTokenBRoute": "An array of token addresses. Note: This function can only be called by the distributor.",
          "rewarderTokenToTokenARoute": "An array of token addresses.",
          "rewarderTokenToTokenBRoute": "An array of token addresses."
        }
      },
      "totalDeposits(address)": {
        "details": "Returns total amount locked in the pool. Doesn't take pending rewards into account.",
        "params": {
          "lpPair": "- LP pool to check total deposits in."
        },
        "returns": {
          "totalDepositsA": "- Token A deposits.",
          "totalDepositsB": "- Token B deposits.",
          "totalDepositsLP": "- Total deposits (in LP tokens)."
        }
      },
      "userStake(address,address)": {
        "details": "Returns tokens staked by the {_address} for the given {lpPair}.",
        "params": {
          "_address": "- The address to check stakes for.",
          "lpPair": "- LP pool to check stakes in."
        },
        "returns": {
          "stakeA": "- Token A stake.",
          "stakeB": "- Token B stake.",
          "stakeLP": "- Total user stake(in LP tokens)."
        }
      },
      "withdraw(address,uint256,bool,address)": {
        "details": "Withdraws tokens from the given pool. ",
        "params": {
          "amount": "- LP amount to withdraw. ",
          "lpPair": "- LP pool to withdraw from.",
          "recipient": "- The address which will recieve tokens.",
          "withdrawLP": "- True: Withdraw in LP tokens, False: Withdraw in normal tokens."
        },
        "returns": {
          "amountA": "- Token A amount sent to the {recipient}, 0 if withdrawLP == false.",
          "amountB": "- Token B amount sent to the {recipient}, 0 if withdrawLP == false."
        }
      }
    },
    "stateVariables": {
      "farmBeacon": {
        "details": "Contract Variables: farmBeacon - Farm contract implementation. Farms - Links {lpPools} to the deployed Farm contract. lpPools - List of pools that have corresponding deployed Farm contract. distributor - Address authorized to make distributions."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}