{
  "contractName": "MerkleOrchard",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "distributionId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "distributor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct MerkleOrchard.Claim[]",
          "name": "claims",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "claimDistributions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"distributionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct MerkleOrchard.Claim[]\",\"name\":\"claims\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"claimDistributions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/MerkleOrchard.sol\":\"MerkleOrchard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"project:/contracts/interfaces/MerkleOrchard.sol\":{\"keccak256\":\"0x86e0867513f10673904c4392d19bd421f7d3114d10ebd371a2edbbd6fb9438bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d3b91a284e4293342f2073dc77ce42b01864b0a60458dc3e3cd2d11d3b939164\",\"dweb:/ipfs/QmNdC1Yq25ZxVmhzjxCBTJh9ncLuyxKemYBUuTreKD4a7e\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma experimental ABIEncoderV2;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\npragma solidity 0.8.10;\r\ninterface MerkleOrchard {\r\n     struct Claim {\r\n        uint256 distributionId;\r\n        uint256 balance;\r\n        address distributor;\r\n        uint256 tokenIndex;\r\n        bytes32[] merkleProof;\r\n    }\r\n    \r\n    function claimDistributions(\r\n        address claimer,\r\n        Claim[] memory claims,\r\n        IERC20[] memory tokens\r\n    ) external;\r\n}",
  "sourcePath": "C:\\Users\\jugli\\Desktop\\uno\\uno-contracts-branch\\contracts\\interfaces\\MerkleOrchard.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/MerkleOrchard.sol",
    "exportedSymbols": {
      "IERC20": [
        1772
      ],
      "MerkleOrchard": [
        9788
      ]
    },
    "id": 9789,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9760,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "702:33:38"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9761,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9789,
        "sourceUnit": 1773,
        "src": "737:56:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9762,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "797:23:38"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleOrchard",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 9788,
        "linearizedBaseContracts": [
          9788
        ],
        "name": "MerkleOrchard",
        "nameLocation": "832:13:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MerkleOrchard.Claim",
            "id": 9774,
            "members": [
              {
                "constant": false,
                "id": 9764,
                "mutability": "mutable",
                "name": "distributionId",
                "nameLocation": "886:14:38",
                "nodeType": "VariableDeclaration",
                "scope": 9774,
                "src": "878:22:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9763,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "878:7:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9766,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "919:7:38",
                "nodeType": "VariableDeclaration",
                "scope": 9774,
                "src": "911:15:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9765,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "911:7:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9768,
                "mutability": "mutable",
                "name": "distributor",
                "nameLocation": "945:11:38",
                "nodeType": "VariableDeclaration",
                "scope": 9774,
                "src": "937:19:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9767,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "937:7:38",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9770,
                "mutability": "mutable",
                "name": "tokenIndex",
                "nameLocation": "975:10:38",
                "nodeType": "VariableDeclaration",
                "scope": 9774,
                "src": "967:18:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9769,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:7:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9773,
                "mutability": "mutable",
                "name": "merkleProof",
                "nameLocation": "1006:11:38",
                "nodeType": "VariableDeclaration",
                "scope": 9774,
                "src": "996:21:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 9771,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 9772,
                  "nodeType": "ArrayTypeName",
                  "src": "996:9:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "861:5:38",
            "nodeType": "StructDefinition",
            "scope": 9788,
            "src": "854:171:38",
            "visibility": "public"
          },
          {
            "functionSelector": "2b630140",
            "id": 9787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimDistributions",
            "nameLocation": "1046:18:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9776,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "1083:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 9787,
                  "src": "1075:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9780,
                  "mutability": "mutable",
                  "name": "claims",
                  "nameLocation": "1116:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 9787,
                  "src": "1101:21:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Claim_$9774_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct MerkleOrchard.Claim[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9778,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9777,
                        "name": "Claim",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9774,
                        "src": "1101:5:38"
                      },
                      "referencedDeclaration": 9774,
                      "src": "1101:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$9774_storage_ptr",
                        "typeString": "struct MerkleOrchard.Claim"
                      }
                    },
                    "id": 9779,
                    "nodeType": "ArrayTypeName",
                    "src": "1101:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Claim_$9774_storage_$dyn_storage_ptr",
                      "typeString": "struct MerkleOrchard.Claim[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9784,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1149:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 9787,
                  "src": "1133:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$1772_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9782,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9781,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1772,
                        "src": "1133:6:38"
                      },
                      "referencedDeclaration": 1772,
                      "src": "1133:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1772",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 9783,
                    "nodeType": "ArrayTypeName",
                    "src": "1133:8:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$1772_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1064:98:38"
            },
            "returnParameters": {
              "id": 9786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:0:38"
            },
            "scope": 9788,
            "src": "1037:135:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9789,
        "src": "822:353:38",
        "usedErrors": []
      }
    ],
    "src": "702:473:38"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-06T12:56:45.907Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}