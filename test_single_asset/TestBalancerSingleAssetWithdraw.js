const {
    expectEvent, BN, constants
} = require('@openzeppelin/test-helpers')
const { deployProxy } = require('@openzeppelin/truffle-upgrades')

const IUniswapV2Pair = artifacts.require('IUniswapV2Pair')
const IERC20 = artifacts.require('IERC20')

const AccessManager = artifacts.require('UnoAccessManager')
const FarmFactory = artifacts.require('UnoFarmFactory')

const Farm = artifacts.require('UnoFarmBalancer')
const AssetRouter = artifacts.require('UnoAssetRouterBalancer')

const pool = '0xaF5E0B5425dE1F5a630A8cB5AA9D97B8141C908D' // WMATIC-stMATIC
const DAIHolder = '0x06959153B974D0D5fDfd87D561db6d8d4FA0bb0B'// has to be unlocked and hold 0xf28164A485B0B2C90639E47b0f377b4a438a16B1

// 0xc45092e7e73951c6668f6C46AcFCa9F2B1c69aEf
// 0xc45092e7e73951c6668f6C46AcFCa9F2B1c69aEf
contract('UnoAssetRouterBalancerWithSwapWithdraw', (accounts) => {
    const admin = accounts[0]

    let accessManager; let assetRouter
    let DAIToken

    before(async () => {
        const implementation = await Farm.new({ from: admin })
        accessManager = await AccessManager.new({ from: admin })// accounts[0] is admin

        assetRouter = await deployProxy(AssetRouter, { kind: 'uups', initializer: false })
        await FarmFactory.new(implementation.address, accessManager.address, assetRouter.address, { from: admin })

        DAIToken = await IUniswapV2Pair.at('0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063')
    })

    describe('Single Asset Withdraw', () => {
        describe('withdraw token', () => {
            let stakeLPBefore
            let tokenBalanceBefore

            before(async () => {
                const DAIAmount = new BN('1000000000000000000000') // 1000$
                await DAIToken.approve(assetRouter.address, DAIAmount, { from: DAIHolder })
                const tokenAData = `0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a0630000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded1000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000017749e235429b60633000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e80000000000000000000000000000000000000000000002ca00006800004e80206c4eca278f3cf7ad23cd3cadbd9735aff958023239c6a06346a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf788f3cf7ad23cd3cadbd9735aff958023239c6a06300a0c9e75c480000000000000000080200000000000000000000000000000000000000000000000000023400011a00a007e5c0d20000000000000000000000000000000000000000000000000000f600008f0c208f3cf7ad23cd3cadbd9735aff958023239c6a06359153f27eefe07e5ece4f9304ebba1da6f53ca886ae40711b8002dc6c059153f27eefe07e5ece4f9304ebba1da6f53ca88604229c960e5cacf2aaeac8be68ac07ba9df81c30000000000000000000000000000000000000000000000000000000002f03a7b8f3cf7ad23cd3cadbd9735aff958023239c6a06300206ae4071138002dc6c0604229c960e5cacf2aaeac8be68ac07ba9df81c31111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000004b0e2c39e09c4c8c2c2132d05d31c914a87c6611c10748aeb04b58e8f00a007e5c0d20000000000000000000000000000000000000000000000000000f600008f0c208f3cf7ad23cd3cadbd9735aff958023239c6a063f04adbf75cdfc5ed26eea4bbbb991db002036bdd6ae4071138002dc6c0f04adbf75cdfc5ed26eea4bbbb991db002036bdd6e7a5fafcec6bb1e78bae2a1f0b612012bf14827000000000000000000000000000000000000000000000000000000000bc36d5e8f3cf7ad23cd3cadbd9735aff958023239c6a06300206ae4071138002dc6c06e7a5fafcec6bb1e78bae2a1f0b612012bf148271111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000012c3bb5fb61ff13d712791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000000000000000000000000000b4eb6cb3`
                const tokenBData = `0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a0630000000000000000000000003a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded1000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000015afd9c090316d9d3b000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002070000000000000000000000000000000000000000000001e900006800004e80206c4eca278f3cf7ad23cd3cadbd9735aff958023239c6a06346a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf788f3cf7ad23cd3cadbd9735aff958023239c6a06300a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c208f3cf7ad23cd3cadbd9735aff958023239c6a063f04adbf75cdfc5ed26eea4bbbb991db002036bdd6ae4071138002dc6c0f04adbf75cdfc5ed26eea4bbbb991db002036bdd6e7a5fafcec6bb1e78bae2a1f0b612012bf14827000000000000000000000000000000000000000000000000000000000eb3d9d18f3cf7ad23cd3cadbd9735aff958023239c6a06300206ae4071138002dc6c06e7a5fafcec6bb1e78bae2a1f0b612012bf1482765752c54d9102bdfd69d351e1838a1be83c924c6000000000000000000000000000000000000000000000017735b5af76f90565e2791bca1f2de4661ed88a30c99a7a9449aa8417400206ae40711b8002dc6c065752c54d9102bdfd69d351e1838a1be83c924c61111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000015afd9c090316d9d3b0d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000000000000000000000000b4eb6cb3`
                await assetRouter.depositWithSwap(pool, [tokenAData, tokenBData], 0, DAIHolder, { from: DAIHolder })

                tokenBalanceBefore = await DAIToken.balanceOf(DAIHolder)
                stakeLPBefore = await assetRouter.userStake(DAIHolder, pool)
            })
            it('fires events', async () => {
                const tokenAData = '0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a063000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded100000000000000000000000006959153b974d0d5fdfd87d561db6d8d4fa0bb0b00000000000000000000000000000000000000000000000ad78ebc5ac6200000000000000000000000000000000000000000000000000002fb5f169484a7eee60000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025d00000000000000000000000000000000000000000000023f00006800004e80206c4eca270d500b1d8e8ef31e21c99d1db9a6444d3adf127046a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000001bc16d674ec800000020d6bdbf780d500b1d8e8ef31e21c99d1db9a6444d3adf127000a0c9e75c48000000000000000007030000000000000000000000000000000000000000000000000001a900008f0c200d500b1d8e8ef31e21c99d1db9a6444d3adf1270eef611894ceae652979c9d0dae1deb597790c6ee6ae40711b8002dc6c0eef611894ceae652979c9d0dae1deb597790c6ee1111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000000e51777b1916e11860d500b1d8e8ef31e21c99d1db9a6444d3adf127000a007e5c0d20000000000000000000000000000000000000000000000000000f600008f0c200d500b1d8e8ef31e21c99d1db9a6444d3adf1270adbf1854e5883eb8aa7baf50705338739e558e5b6ae40711b8002dc6c0adbf1854e5883eb8aa7baf50705338739e558e5b4a35582a710e1f4b2030a3f826da20bfb6703c09000000000000000000000000000000000000000000000000004ef2cee41167010d500b1d8e8ef31e21c99d1db9a6444d3adf127000206ae40711b8002dc6c04a35582a710e1f4b2030a3f826da20bfb6703c091111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000216479ee2f339dd5f7ceb23fd6bc0add59e62ac25578270cff1b9f619000000b4eb6cb3'
                const tokenBData = '0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000003a58a54c066fdc0f2d55fc9c89f0415c92ebf3c40000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a063000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded100000000000000000000000006959153b974d0d5fdfd87d561db6d8d4fa0bb0b000000000000000000000000000000000000000000000015af1d78b58c40000000000000000000000000000000000000000000000000000655b389d19ccaaedb000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002070000000000000000000000000000000000000000000001e900006800004e80206c4eca273a58a54c066fdc0f2d55fc9c89f0415c92ebf3c446a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000003782dace9d9000000020d6bdbf783a58a54c066fdc0f2d55fc9c89f0415c92ebf3c400a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c203a58a54c066fdc0f2d55fc9c89f0415c92ebf3c465752c54d9102bdfd69d351e1838a1be83c924c66ae4071138002dc6c065752c54d9102bdfd69d351e1838a1be83c924c66e7a5fafcec6bb1e78bae2a1f0b612012bf1482700000000000000000000000000000000000000000000000b71c16950e6e099de3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c400206ae40711b8002dc6c06e7a5fafcec6bb1e78bae2a1f0b612012bf14827f04adbf75cdfc5ed26eea4bbbb991db002036bdd00000000000000000000000000000000000000000000000000000000070153480d500b1d8e8ef31e21c99d1db9a6444d3adf127000206ae40711b8002dc6c0f04adbf75cdfc5ed26eea4bbbb991db002036bdd1111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000655b389d19ccaaedb2791bca1f2de4661ed88a30c99a7a9449aa8417400000000000000000000000000000000000000000000000000b4eb6cb3'

                // Proportional Exit
                const userData = web3.eth.abi.encodeParameters(['uint256', 'uint256'], ['1', stakeLPBefore.toString()])
                const receipt = await assetRouter.withdrawWithSwap(pool, userData, [tokenAData, tokenBData], DAIHolder, { from: DAIHolder })
                expectEvent(receipt, 'Withdraw', {
                    lpPool: pool, sender: DAIHolder, recipient: DAIHolder, amount: stakeLPBefore
                })
            })
            it('deposits tokens to balance', async () => {
                const tokenBalanceAfter = await DAIToken.balanceOf(DAIHolder)

                const tokenDiff = tokenBalanceAfter.sub(tokenBalanceBefore)
                assert.ok(tokenDiff.gt(new BN(0)), 'Dai Balance not increased')
            })
            it('updates stakes', async () => {
                const stakeLP = await assetRouter.userStake(DAIHolder, pool)
                assert.equal(stakeLP.toString(), '0', 'Stake not withdrawn')
            })
        })
        describe('withdraw ETH', () => {
            let stakeLPBefore
            let ethBalanceBefore
            let ethSpentOnGas

            before(async () => {
                const DAIAmount = new BN('1000000000000000000000') // 1000$
                await DAIToken.approve(assetRouter.address, DAIAmount, { from: DAIHolder })
                const tokenAData = `0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a0630000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded1000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000017749e235429b60633000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e80000000000000000000000000000000000000000000002ca00006800004e80206c4eca278f3cf7ad23cd3cadbd9735aff958023239c6a06346a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf788f3cf7ad23cd3cadbd9735aff958023239c6a06300a0c9e75c480000000000000000080200000000000000000000000000000000000000000000000000023400011a00a007e5c0d20000000000000000000000000000000000000000000000000000f600008f0c208f3cf7ad23cd3cadbd9735aff958023239c6a06359153f27eefe07e5ece4f9304ebba1da6f53ca886ae40711b8002dc6c059153f27eefe07e5ece4f9304ebba1da6f53ca88604229c960e5cacf2aaeac8be68ac07ba9df81c30000000000000000000000000000000000000000000000000000000002f03a7b8f3cf7ad23cd3cadbd9735aff958023239c6a06300206ae4071138002dc6c0604229c960e5cacf2aaeac8be68ac07ba9df81c31111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000004b0e2c39e09c4c8c2c2132d05d31c914a87c6611c10748aeb04b58e8f00a007e5c0d20000000000000000000000000000000000000000000000000000f600008f0c208f3cf7ad23cd3cadbd9735aff958023239c6a063f04adbf75cdfc5ed26eea4bbbb991db002036bdd6ae4071138002dc6c0f04adbf75cdfc5ed26eea4bbbb991db002036bdd6e7a5fafcec6bb1e78bae2a1f0b612012bf14827000000000000000000000000000000000000000000000000000000000bc36d5e8f3cf7ad23cd3cadbd9735aff958023239c6a06300206ae4071138002dc6c06e7a5fafcec6bb1e78bae2a1f0b612012bf148271111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000012c3bb5fb61ff13d712791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000000000000000000000000000b4eb6cb3`
                const tokenBData = `0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a0630000000000000000000000003a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded1000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000015afd9c090316d9d3b000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002070000000000000000000000000000000000000000000001e900006800004e80206c4eca278f3cf7ad23cd3cadbd9735aff958023239c6a06346a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf788f3cf7ad23cd3cadbd9735aff958023239c6a06300a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c208f3cf7ad23cd3cadbd9735aff958023239c6a063f04adbf75cdfc5ed26eea4bbbb991db002036bdd6ae4071138002dc6c0f04adbf75cdfc5ed26eea4bbbb991db002036bdd6e7a5fafcec6bb1e78bae2a1f0b612012bf14827000000000000000000000000000000000000000000000000000000000eb3d9d18f3cf7ad23cd3cadbd9735aff958023239c6a06300206ae4071138002dc6c06e7a5fafcec6bb1e78bae2a1f0b612012bf1482765752c54d9102bdfd69d351e1838a1be83c924c6000000000000000000000000000000000000000000000017735b5af76f90565e2791bca1f2de4661ed88a30c99a7a9449aa8417400206ae40711b8002dc6c065752c54d9102bdfd69d351e1838a1be83c924c61111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000015afd9c090316d9d3b0d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000000000000000000000000b4eb6cb3`
                await assetRouter.depositWithSwap(pool, [tokenAData, tokenBData], 0, DAIHolder, { from: DAIHolder })

                ethBalanceBefore = new BN(await web3.eth.getBalance(DAIHolder))
                stakeLPBefore = await assetRouter.userStake(DAIHolder, pool)
            })
            it('fires events', async () => {
                const tokenAData = '0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded100000000000000000000000006959153b974d0d5fdfd87d561db6d8d4fa0bb0b00000000000000000000000000000000000000000000000ad78ebc5ac62000000000000000000000000000000000000000000000000000055de6a779bbac0000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e80000000000000000000000000000000000000000ca0000a400006800004e80206c4eca270d500b1d8e8ef31e21c99d1db9a6444d3adf127046a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000001bc16d674ec800000020d6bdbf780d500b1d8e8ef31e21c99d1db9a6444d3adf127041210d500b1d8e8ef31e21c99d1db9a6444d3adf127000042e1a7d4d0000000000000000000000000000000000000000000000000000000000000000e0211111111254eeb25477b68fb85ed929f73a960582000000000000000abbcd4ef377580000000000000000000000000000000000000000000000000000b4eb6cb3'
                const tokenBData = '0x12aa3caf000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded10000000000000000000000003a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000cfd674f8731e801a4a15c1ae31770960e1afded100000000000000000000000006959153b974d0d5fdfd87d561db6d8d4fa0bb0b000000000000000000000000000000000000000000000015af1d78b58c40000000000000000000000000000000000000000000000000000b71c16950e6e099de0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015300000000000000000000000000000000013500011f0000e300006800004e80206c4eca273a58a54c066fdc0f2d55fc9c89f0415c92ebf3c446a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000003782dace9d9000000020d6bdbf783a58a54c066fdc0f2d55fc9c89f0415c92ebf3c40c203a58a54c066fdc0f2d55fc9c89f0415c92ebf3c465752c54d9102bdfd69d351e1838a1be83c924c66ae4071118002dc6c065752c54d9102bdfd69d351e1838a1be83c924c600000000000000000000000000000000000000000000000b71c16950e6e099de3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c441010d500b1d8e8ef31e21c99d1db9a6444d3adf127000042e1a7d4d0000000000000000000000000000000000000000000000000000000000000000c0611111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000b4eb6cb3'
                // Proportional Exit
                const userData = web3.eth.abi.encodeParameters(['uint256', 'uint256'], ['1', stakeLPBefore.toString()])
                const receipt = await assetRouter.withdrawWithSwap(pool, userData, [tokenAData, tokenBData], DAIHolder, { from: DAIHolder })

                const gasUsed = new BN(receipt.receipt.gasUsed)
                const effectiveGasPrice = new BN(receipt.receipt.effectiveGasPrice)

                ethSpentOnGas = gasUsed.mul(effectiveGasPrice)

                expectEvent(receipt, 'Withdraw', {
                    lpPool: pool, sender: DAIHolder, recipient: DAIHolder, amount: stakeLPBefore
                })
            })
            it('withdraws ETH from balance', async () => {
                const ethBalanceAfter = new BN(await web3.eth.getBalance(DAIHolder))

                const ethDiff = ethBalanceAfter.sub(ethBalanceBefore.add(ethSpentOnGas))
                assert.ok(ethDiff.gt(new BN(0)), 'Eth Balance not increased')
            })
            it('updates stakes', async () => {
                const stakeLP = await assetRouter.userStake(DAIHolder, pool)
                assert.equal(stakeLP.toString(), '0', 'Stake not withdrawn')
            })
        })
    })
})
