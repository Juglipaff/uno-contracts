const {
    expectRevert, expectEvent, BN, constants
} = require('@openzeppelin/test-helpers')
const { deployProxy } = require('@openzeppelin/truffle-upgrades')

const AccessManager = artifacts.require('UnoAccessManager')
const FarmFactory = artifacts.require('UnoFarmFactory')

const Farm = artifacts.require('UnoFarmTrisolarisStable')
const IUniswapV2Pair = artifacts.require('IUniswapV2Pair')
const AssetRouter = artifacts.require('UnoAssetRouterTrisolarisStable')

const pool = '0x458459E48dbAC0C8Ca83F8D0b7b29FEfE60c3970' // USDC-USDT-USN

const DAIHolder = '0x456325F2AC7067234dD71E01bebe032B0255e039'// has to be unlocked and hold 0xe3520349F477A5F6EB06107066048508498A291b

approxeq = (bn1, bn2, epsilon, message) => {
    const amountDelta = bn1.sub(bn2).add(epsilon)
    assert.ok(!amountDelta.isNeg(), message)
}

contract('UnoAssetRouterTrisolarisStableSingleAssetWithdraw', (accounts) => {
    const admin = accounts[0]

    let accessManager; let assetRouter
    let DAIToken

    before(async () => {
        const implementation = await Farm.new({ from: admin })
        accessManager = await AccessManager.new({ from: admin })
        assetRouter = await deployProxy(AssetRouter, { kind: 'uups', initializer: false })
        await FarmFactory.new(implementation.address, accessManager.address, assetRouter.address, { from: admin })
        DAIToken = await IUniswapV2Pair.at('0xe3520349F477A5F6EB06107066048508498A291b')
    })

    describe('Single Asset Withdraw', () => {
        describe('withdraw token', () => {
            let stakeLPBefore
            let tokenBalanceBefore

            before(async () => {
                const DAIAmount = new BN('1500000000000000000000') // 1000$
                await DAIToken.approve(assetRouter.address, DAIAmount, { from: DAIHolder }) // change

                const tokensData = []
                tokensData[0] = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b000000000000000000000000b12bfca5a55806aaf64e99521918a4bf0fc408020000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000000000000000eb74b330000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017e00000000000000000000000000000000016000013200011800006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b5120c90db0d8713414d78523436dc347419164544a3fe3520349f477a5f6eb06107066048508498a291b00443df02124000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb74b330020d6bdbf78b12bfca5a55806aaf64e99521918a4bf0fc4080280a06c4eca27b12bfca5a55806aaf64e99521918a4bf0fc408021111111254eeb25477b68fb85ed929f73a9605820000b4eb6cb3`// await fetchData(tokenASwapParams)
                tokensData[1] = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000004988a896b1227218e4a686fde5eabdcabd91571f0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000000000000000eb4fbfc0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017e00000000000000000000000000000000016000013200011800006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b5120c90db0d8713414d78523436dc347419164544a3fe3520349f477a5f6eb06107066048508498a291b00443df02124000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb4fbfc0020d6bdbf784988a896b1227218e4a686fde5eabdcabd91571f80a06c4eca274988a896b1227218e4a686fde5eabdcabd91571f1111111254eeb25477b68fb85ed929f73a9605820000b4eb6cb3`
                tokensData[2] = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000005183e1b1091804bc2602586919e6880ac1cf28960000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef50000000000000000000000000000000000000000000000000000d5d91e1303df110b30000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027200000000000000000000000000000000000000025400022600006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b00a007e5c0d200000000000000000000000000000000000000000000019a0000ca0000b05120c90db0d8713414d78523436dc347419164544a3fe3520349f477a5f6eb06107066048508498a291b00443df02124000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb4fbfc0020d6bdbf784988a896b1227218e4a686fde5eabdcabd91571f5120458459e48dbac0c8ca83f8d0b7b29fefe60c39704988a896b1227218e4a686fde5eabdcabd91571f00449169558600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d5d91e1303df110b300000000000000000000000000000000000000000000000000000000648cabfe80a06c4eca275183e1b1091804bc2602586919e6880ac1cf28961111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000b4eb6cb3`
                await assetRouter.depositWithSwap(pool, tokensData, 0, DAIHolder, { from: DAIHolder })

                tokenBalanceBefore = await DAIToken.balanceOf(DAIHolder)
                stakeLPBefore = await assetRouter.userStake(DAIHolder, pool)
            })
            it('fires events', async () => {
                const tokensData = []
                tokensData[0] = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000b12bfca5a55806aaf64e99521918a4bf0fc40802000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e0390000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000002908f42e033d5d7d10000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062f00000000000000000000000000000000000000000000061100006800004e80206c4eca27b12bfca5a55806aaf64e99521918a4bf0fc4080246a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000000000000000f42400020d6bdbf78b12bfca5a55806aaf64e99521918a4bf0fc4080200a0c9e75c480000000000000403020100000000000000000000000000000000000000057b0003fa00036b00018100a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20b12bfca5a55806aaf64e99521918a4bf0fc408022f41af687164062f118297ca10751f4b55478ae16ae40711b8002dc6c02f41af687164062f118297ca10751f4b55478ae12639f48ace89298fa2e874ef2e26d4576058ae6d000000000000000000000000000000000000000000000000000a015ae1a337ecb12bfca5a55806aaf64e99521918a4bf0fc4080200206ae4071138002dc6c02639f48ace89298fa2e874ef2e26d4576058ae6d2c4d78a40bab1a6cbb4b59297cd7b2eba21128ef0000000000000000000000000000000000000000000000000000000000494202c9bdeed33cd01541e1eed10f90519d2c06fe3feb00206ae40711b8002dc6c02c4d78a40bab1a6cbb4b59297cd7b2eba21128ef1111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000000418a64fd819979604988a896b1227218e4a686fde5eabdcabd91571f00a007e5c0d20000000000000000000000000000000000000000000001c600015f0000d0512051d96ef6960cc7b4c884e1215564f926011a4064b12bfca5a55806aaf64e99521918a4bf0fc40802004491695586000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096f04d00000000000000000000000000000000000000000000000000000000648c99e30c204988a896b1227218e4a686fde5eabdcabd91571f03b666f3488a7992b2385b12df7f35156d7b29cd6ae40711b8002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd28058325c9d1779b74f5b6ae9ecd83e30bc961b100000000000000000000000000000000000000000006c6e9b6c60b5ba8c4127c4988a896b1227218e4a686fde5eabdcabd91571f00206ae40711b8002dc6c028058325c9d1779b74f5b6ae9ecd83e30bc961b11111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000000834d47dd9d09106fc42c30ac6cc15fac9bd938618bcaa1a1fae8501d0c20b12bfca5a55806aaf64e99521918a4bf0fc40802bb310ef4fac855f2f49d8fb35a2da8f639b3464e6ae40711b8002dc6c0bb310ef4fac855f2f49d8fb35a2da8f639b3464e1111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000000c5586bd5f51aa4c3b12bfca5a55806aaf64e99521918a4bf0fc4080200a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20b12bfca5a55806aaf64e99521918a4bf0fc4080220f8aefb5697b77e0bb835a8518be70775cda1b06ae40711b8002dc6c020f8aefb5697b77e0bb835a8518be70775cda1b063da4db6ef4e7c62168ab03982399f9588fcd1980000000000000000000000000000000000000000000d8cfc46ce3b36636e30b1b12bfca5a55806aaf64e99521918a4bf0fc4080200206ae40711b8002dc6c063da4db6ef4e7c62168ab03982399f9588fcd1983f239d83af94f836b93910d29704def88542e2a70000000000000000000000000000000000000000000000000027cb65085b3c91c42c30ac6cc15fac9bd938618bcaa1a1fae8501d00206ae40711b8002dc6c03f239d83af94f836b93910d29704def88542e2a71111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000001065f2a2f2018a93ec9bdeed33cd01541e1eed10f90519d2c06fe3feb0000000000000000000000000000000000b4eb6cb3'
                tokensData[1] = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f6970000000000000000000000004988a896b1227218e4a686fde5eabdcabd91571f000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e0390000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000293e19721b0ba64c10000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063100000000000000000000000000000000000000000000061300006800004e80206c4eca274988a896b1227218e4a686fde5eabdcabd91571f46a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000000000000000f42400020d6bdbf784988a896b1227218e4a686fde5eabdcabd91571f00a0c9e75c480000000000000402020200000000000000000000000000000000000000057d0003fc00036d00018300a007e5c0d200000000000000000000000000000000000000000000000000015f0000d0512051d96ef6960cc7b4c884e1215564f926011a40644988a896b1227218e4a686fde5eabdcabd91571f004491695586000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000097107f00000000000000000000000000000000000000000000000000000000648c99e30c20b12bfca5a55806aaf64e99521918a4bf0fc40802bb310ef4fac855f2f49d8fb35a2da8f639b3464e6ae40711b8002dc6c0bb310ef4fac855f2f49d8fb35a2da8f639b3464e1111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000008575b56a3d7a89f1b12bfca5a55806aaf64e99521918a4bf0fc4080200a007e5c0d20000000000000000000000000000000000000000000001c600015f0000d05120458459e48dbac0c8ca83f8d0b7b29fefe60c39704988a896b1227218e4a686fde5eabdcabd91571f00449169558600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009702d700000000000000000000000000000000000000000000000000000000648c99e30c20b12bfca5a55806aaf64e99521918a4bf0fc4080220f8aefb5697b77e0bb835a8518be70775cda1b06ae40711b8002dc6c020f8aefb5697b77e0bb835a8518be70775cda1b028058325c9d1779b74f5b6ae9ecd83e30bc961b100000000000000000000000000000000000000000006c679a72f2674445e0d81b12bfca5a55806aaf64e99521918a4bf0fc4080200206ae40711b8002dc6c028058325c9d1779b74f5b6ae9ecd83e30bc961b11111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000083451431c4a7122dc42c30ac6cc15fac9bd938618bcaa1a1fae8501d0c204988a896b1227218e4a686fde5eabdcabd91571f2c4d78a40bab1a6cbb4b59297cd7b2eba21128ef6ae40711b8002dc6c02c4d78a40bab1a6cbb4b59297cd7b2eba21128ef1111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000008493942c318549c94988a896b1227218e4a686fde5eabdcabd91571f00a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c204988a896b1227218e4a686fde5eabdcabd91571f03b666f3488a7992b2385b12df7f35156d7b29cd6ae40711b8002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd63da4db6ef4e7c62168ab03982399f9588fcd1980000000000000000000000000000000000000000000d8fc267f91fb8662227e74988a896b1227218e4a686fde5eabdcabd91571f00206ae40711b8002dc6c063da4db6ef4e7c62168ab03982399f9588fcd1983f239d83af94f836b93910d29704def88542e2a70000000000000000000000000000000000000000000000000027d389fd3901b0c42c30ac6cc15fac9bd938618bcaa1a1fae8501d00206ae40711b8002dc6c03f239d83af94f836b93910d29704def88542e2a71111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000001069339597d137ed9c9bdeed33cd01541e1eed10f90519d2c06fe3feb000000000000000000000000000000b4eb6cb3'
                tokensData[2] = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f6970000000000000000000000005183e1b1091804bc2602586919e6880ac1cf2896000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e039000000000000000000000000000000000000000000000002b5e3af16b188000000000000000000000000000000000000000000000000000144fd9539579ed8490000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027000000000000000000000000000000000000000000000025200006800004e80206c4eca275183e1b1091804bc2602586919e6880ac1cf289646a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000006f05b59d3b200000020d6bdbf785183e1b1091804bc2602586919e6880ac1cf289600a007e5c0d20000000000000000000000000000000000000000000001c600015f0000d05120458459e48dbac0c8ca83f8d0b7b29fefe60c39705183e1b1091804bc2602586919e6880ac1cf289600449169558600000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017966dc00000000000000000000000000000000000000000000000000000000648c99e40c20b12bfca5a55806aaf64e99521918a4bf0fc408022f41af687164062f118297ca10751f4b55478ae16ae40711b8002dc6c02f41af687164062f118297ca10751f4b55478ae13f239d83af94f836b93910d29704def88542e2a70000000000000000000000000000000000000000000000000031aa27dfcfbce2b12bfca5a55806aaf64e99521918a4bf0fc4080200206ae40711b8002dc6c03f239d83af94f836b93910d29704def88542e2a71111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000144fd9539579ed849c9bdeed33cd01541e1eed10f90519d2c06fe3feb00000000000000000000000000000000b4eb6cb3'

                const receipt = await assetRouter.withdrawWithSwap(pool, stakeLPBefore, tokensData, DAIHolder, { from: DAIHolder })
                expectEvent(receipt, 'Withdraw', {
                    lpPool: pool, sender: DAIHolder, recipient: DAIHolder, amount: stakeLPBefore
                })
            })
            it('deposits tokens to balance', async () => {
                const tokenBalanceAfter = await DAIToken.balanceOf(DAIHolder)

                const tokenDiff = tokenBalanceAfter.sub(tokenBalanceBefore)
                assert.ok(tokenDiff.gt(new BN(0)), 'Dai Balance not increased')
            })
            it('updates stakes', async () => {
                const stakeLP = await assetRouter.userStake(DAIHolder, pool)
                assert.equal(stakeLP.toString(), '0', 'Stake not withdrawn')
            })
            it('updates totalDeposits', async () => {
                const totalDepositsLP = await assetRouter.totalDeposits(pool)
                assert.equal(totalDepositsLP.toString(), '0', 'Stake not withdrawn')
            })
        })
    })
})
