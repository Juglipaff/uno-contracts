const {
    expectRevert, expectEvent, BN, constants
} = require('@openzeppelin/test-helpers')
const { deployProxy } = require('@openzeppelin/truffle-upgrades')

const IUniswapV2Pair = artifacts.require('IUniswapV2Pair')

const AccessManager = artifacts.require('UnoAccessManager')
const FarmFactory = artifacts.require('UnoFarmFactory')

const Farm = artifacts.require('UnoFarmTrisolarisStandard')
const AssetRouter = artifacts.require('UnoAssetRouterTrisolarisStandard')

const pool = '0x2fe064B6c7D274082aa5d2624709bC9AE7D16C77' // usdt usdc

const DAIHolder = '0x456325F2AC7067234dD71E01bebe032B0255e039'// has to be unlocked and hold 0xf28164A485B0B2C90639E47b0f377b4a438a16B1

approxeq = (bn1, bn2, epsilon, message) => {
    const amountDelta = bn1.sub(bn2).add(epsilon)
    assert.ok(!amountDelta.isNeg(), message)
}

contract('UnoAssetRouterTrisolarisStandardSingleAssetWithdraw', (accounts) => {
    const admin = accounts[0]

    let accessManager
    let assetRouter
    let DAIToken

    before(async () => {
        const implementation = await Farm.new({ from: admin })
        accessManager = await AccessManager.new({ from: admin })// accounts[0] is admin
        assetRouter = await deployProxy(AssetRouter, { kind: 'uups', initializer: false })
        await FarmFactory.new(implementation.address, accessManager.address, assetRouter.address, { from: admin })
        DAIToken = await IUniswapV2Pair.at('0xe3520349F477A5F6EB06107066048508498A291b')
    })

    describe('Single Asset Withdraw', () => {
        describe('withdraw token', () => {
            let stakeLPBefore
            let tokenBalanceBefore

            before(async () => {
                const DAIAmount = new BN('1000000000000000000000') // 1000$
                await DAIToken.approve(assetRouter.address, DAIAmount, { from: DAIHolder })
                const tokenAData = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000004988a896b1227218e4a686fde5eabdcabd91571f0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000000000000000c289bfc000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003de0000000000000000000000000000000000000000000003c000006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b00a0c9e75c480000000000000005030200000000000000000000000000000000000000000000032a0001a900008f0c20e3520349f477a5f6eb06107066048508498a291b2c4d78a40bab1a6cbb4b59297cd7b2eba21128ef6ae4071138002dc6c02c4d78a40bab1a6cbb4b59297cd7b2eba21128ef1111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000000000000002753017e3520349f477a5f6eb06107066048508498a291b00a007e5c0d20000000000000000000000000000000000000000000000000000f600008f0c20e3520349f477a5f6eb06107066048508498a291bbb310ef4fac855f2f49d8fb35a2da8f639b3464e6ae4071138002dc6c0bb310ef4fac855f2f49d8fb35a2da8f639b3464e2fe064b6c7d274082aa5d2624709bc9ae7d16c77000000000000000000000000000000000000000000000000000000000399afa6e3520349f477a5f6eb06107066048508498a291b00206ae4071138002dc6c02fe064b6c7d274082aa5d2624709bc9ae7d16c771111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000000000000003979d0cb12bfca5a55806aaf64e99521918a4bf0fc4080200a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20e3520349f477a5f6eb06107066048508498a291b3f239d83af94f836b93910d29704def88542e2a76ae4071138002dc6c03f239d83af94f836b93910d29704def88542e2a763da4db6ef4e7c62168ab03982399f9588fcd19800000000000000000000000000000000000000000000000000d0a4b2ad83b19be3520349f477a5f6eb06107066048508498a291b00206ae4071138002dc6c063da4db6ef4e7c62168ab03982399f9588fcd19803b666f3488a7992b2385b12df7f35156d7b29cd000000000000000000000000000000000000000000466103126cf7df3941af69c9bdeed33cd01541e1eed10f90519d2c06fe3feb00206ae4071138002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd1111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000061bced8c42c30ac6cc15fac9bd938618bcaa1a1fae8501d0000b4eb6cb3`
                const tokenBData = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b000000000000000000000000b12bfca5a55806aaf64e99521918a4bf0fc408020000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000000000000000c605299000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005c60000000000000000000000000000000000000000000005a800006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b00a0c9e75c480000000000000502020100000000000000000000000000000000000000051200039100021000018100a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20e3520349f477a5f6eb06107066048508498a291b2c4d78a40bab1a6cbb4b59297cd7b2eba21128ef6ae4071138002dc6c02c4d78a40bab1a6cbb4b59297cd7b2eba21128ef2639f48ace89298fa2e874ef2e26d4576058ae6d0000000000000000000000000000000000000000000000000000000001560121e3520349f477a5f6eb06107066048508498a291b00206ae40711b8002dc6c02639f48ace89298fa2e874ef2e26d4576058ae6d2f41af687164062f118297ca10751f4b55478ae1000000000000000000000000000000000000000000000000002987807ee362144988a896b1227218e4a686fde5eabdcabd91571f00206ae4071138002dc6c02f41af687164062f118297ca10751f4b55478ae11111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000000000000001390496c9bdeed33cd01541e1eed10f90519d2c06fe3feb0c20e3520349f477a5f6eb06107066048508498a291bbb310ef4fac855f2f49d8fb35a2da8f639b3464e6ae4071138002dc6c0bb310ef4fac855f2f49d8fb35a2da8f639b3464e1111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000028e02cee3520349f477a5f6eb06107066048508498a291b00a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20e3520349f477a5f6eb06107066048508498a291b28058325c9d1779b74f5b6ae9ecd83e30bc961b16ae4071138002dc6c028058325c9d1779b74f5b6ae9ecd83e30bc961b103b666f3488a7992b2385b12df7f35156d7b29cd0000000000000000000000000000000000000000001cae7affc9baab350a3c6ce3520349f477a5f6eb06107066048508498a291b00206ae4071138002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd2fe064b6c7d274082aa5d2624709bc9ae7d16c7700000000000000000000000000000000000000000000000000000000027e50afc42c30ac6cc15fac9bd938618bcaa1a1fae8501d00206ae40711b8002dc6c02fe064b6c7d274082aa5d2624709bc9ae7d16c771111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000027b50b74988a896b1227218e4a686fde5eabdcabd91571f00a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20e3520349f477a5f6eb06107066048508498a291b3f239d83af94f836b93910d29704def88542e2a76ae4071138002dc6c03f239d83af94f836b93910d29704def88542e2a763da4db6ef4e7c62168ab03982399f9588fcd19800000000000000000000000000000000000000000000000000d0a4b2ad83b19be3520349f477a5f6eb06107066048508498a291b00206ae4071138002dc6c063da4db6ef4e7c62168ab03982399f9588fcd19820f8aefb5697b77e0bb835a8518be70775cda1b0000000000000000000000000000000000000000000466103126cf7df3941af69c9bdeed33cd01541e1eed10f90519d2c06fe3feb00206ae4071138002dc6c020f8aefb5697b77e0bb835a8518be70775cda1b01111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000061dfa7dc42c30ac6cc15fac9bd938618bcaa1a1fae8501d0000000000000000000000000000000000000000000000000000b4eb6cb3`
                await assetRouter.depositWithSwap(pool, [tokenAData, tokenBData], DAIHolder, { from: DAIHolder })

                tokenBalanceBefore = await DAIToken.balanceOf(DAIHolder);
                ({
                    stakeLP: stakeLPBefore,
                    stakeA,
                    stakeB
                } = await assetRouter.userStake(DAIHolder, pool))
            })
            it('fires events', async () => {
                const tokenAData = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f6970000000000000000000000004988a896b1227218e4a686fde5eabdcabd91571f000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e039000000000000000000000000000000000000000000000000000000000ee6b2800000000000000000000000000000000000000000000000062585e13fbfafe14c0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063100000000000000000000000000000000000000000000061300006800004e80206c4eca274988a896b1227218e4a686fde5eabdcabd91571f46a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000000000000002625a00020d6bdbf784988a896b1227218e4a686fde5eabdcabd91571f00a0c9e75c480000000000000402020200000000000000000000000000000000000000057d0003fc00036d00018300a007e5c0d200000000000000000000000000000000000000000000000000015f0000d0512051d96ef6960cc7b4c884e1215564f926011a40644988a896b1227218e4a686fde5eabdcabd91571f004491695586000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000179a93600000000000000000000000000000000000000000000000000000000648c99de0c20b12bfca5a55806aaf64e99521918a4bf0fc40802bb310ef4fac855f2f49d8fb35a2da8f639b3464e6ae40711b8002dc6c0bb310ef4fac855f2f49d8fb35a2da8f639b3464e1111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000013fd5d0f757aaf6bbb12bfca5a55806aaf64e99521918a4bf0fc4080200a007e5c0d20000000000000000000000000000000000000000000001c600015f0000d05120458459e48dbac0c8ca83f8d0b7b29fefe60c39704988a896b1227218e4a686fde5eabdcabd91571f004491695586000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000179868700000000000000000000000000000000000000000000000000000000648c99de0c20b12bfca5a55806aaf64e99521918a4bf0fc4080220f8aefb5697b77e0bb835a8518be70775cda1b06ae40711b8002dc6c020f8aefb5697b77e0bb835a8518be70775cda1b028058325c9d1779b74f5b6ae9ecd83e30bc961b100000000000000000000000000000000000000000010ee099aee3b82d02d17a5b12bfca5a55806aaf64e99521918a4bf0fc4080200206ae40711b8002dc6c028058325c9d1779b74f5b6ae9ecd83e30bc961b11111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000138972e180d0d8f07c42c30ac6cc15fac9bd938618bcaa1a1fae8501d0c204988a896b1227218e4a686fde5eabdcabd91571f2c4d78a40bab1a6cbb4b59297cd7b2eba21128ef6ae40711b8002dc6c02c4d78a40bab1a6cbb4b59297cd7b2eba21128ef1111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000013a08f9415d0eef9a4988a896b1227218e4a686fde5eabdcabd91571f00a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c204988a896b1227218e4a686fde5eabdcabd91571f03b666f3488a7992b2385b12df7f35156d7b29cd6ae40711b8002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd63da4db6ef4e7c62168ab03982399f9588fcd19800000000000000000000000000000000000000000021e0a61bfb875a72fbdb974988a896b1227218e4a686fde5eabdcabd91571f00206ae40711b8002dc6c063da4db6ef4e7c62168ab03982399f9588fcd1983f239d83af94f836b93910d29704def88542e2a700000000000000000000000000000000000000000000000000637422aef802dbc42c30ac6cc15fac9bd938618bcaa1a1fae8501d00206ae40711b8002dc6c03f239d83af94f836b93910d29704def88542e2a71111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000002730fe8eefde86bf0c9bdeed33cd01541e1eed10f90519d2c06fe3feb000000000000000000000000000000b4eb6cb3'
                const tokenBData = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000b12bfca5a55806aaf64e99521918a4bf0fc40802000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e039000000000000000000000000000000000000000000000000000000000ee6b28000000000000000000000000000000000000000000000000615e115e3aecf06f40000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062f00000000000000000000000000000000000000000000061100006800004e80206c4eca27b12bfca5a55806aaf64e99521918a4bf0fc4080246a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000000000000002625a00020d6bdbf78b12bfca5a55806aaf64e99521918a4bf0fc4080200a0c9e75c480000000000000403020100000000000000000000000000000000000000057b0003fa00036b00018100a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20b12bfca5a55806aaf64e99521918a4bf0fc408022f41af687164062f118297ca10751f4b55478ae16ae40711b8002dc6c02f41af687164062f118297ca10751f4b55478ae12639f48ace89298fa2e874ef2e26d4576058ae6d0000000000000000000000000000000000000000000000000018f38af012fe08b12bfca5a55806aaf64e99521918a4bf0fc4080200206ae4071138002dc6c02639f48ace89298fa2e874ef2e26d4576058ae6d2c4d78a40bab1a6cbb4b59297cd7b2eba21128ef0000000000000000000000000000000000000000000000000000000000b1b77ec9bdeed33cd01541e1eed10f90519d2c06fe3feb00206ae40711b8002dc6c02c4d78a40bab1a6cbb4b59297cd7b2eba21128ef1111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000009af589c8d488da1d4988a896b1227218e4a686fde5eabdcabd91571f00a007e5c0d20000000000000000000000000000000000000000000001c600015f0000d0512051d96ef6960cc7b4c884e1215564f926011a4064b12bfca5a55806aaf64e99521918a4bf0fc4080200449169558600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017958b900000000000000000000000000000000000000000000000000000000648c99df0c204988a896b1227218e4a686fde5eabdcabd91571f03b666f3488a7992b2385b12df7f35156d7b29cd6ae40711b8002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd28058325c9d1779b74f5b6ae9ecd83e30bc961b100000000000000000000000000000000000000000010ef98405e275bd8fe45a04988a896b1227218e4a686fde5eabdcabd91571f00206ae40711b8002dc6c028058325c9d1779b74f5b6ae9ecd83e30bc961b11111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000138b1ad8452477504c42c30ac6cc15fac9bd938618bcaa1a1fae8501d0c20b12bfca5a55806aaf64e99521918a4bf0fc40802bb310ef4fac855f2f49d8fb35a2da8f639b3464e6ae40711b8002dc6c0bb310ef4fac855f2f49d8fb35a2da8f639b3464e1111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000001cfbedca5908a1b4ab12bfca5a55806aaf64e99521918a4bf0fc4080200a007e5c0d200000000000000000000000000000000000000000000015d0000f600008f0c20b12bfca5a55806aaf64e99521918a4bf0fc4080220f8aefb5697b77e0bb835a8518be70775cda1b06ae40711b8002dc6c020f8aefb5697b77e0bb835a8518be70775cda1b063da4db6ef4e7c62168ab03982399f9588fcd19800000000000000000000000000000000000000000021d7f7c568acf003ac5498b12bfca5a55806aaf64e99521918a4bf0fc4080200206ae40711b8002dc6c063da4db6ef4e7c62168ab03982399f9588fcd1983f239d83af94f836b93910d29704def88542e2a700000000000000000000000000000000000000000000000000635aaa66638c4dc42c30ac6cc15fac9bd938618bcaa1a1fae8501d00206ae40711b8002dc6c03f239d83af94f836b93910d29704def88542e2a71111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000000000000002727b01f0f7749c88c9bdeed33cd01541e1eed10f90519d2c06fe3feb0000000000000000000000000000000000b4eb6cb3'

                const receipt = await assetRouter.withdrawWithSwap(pool, stakeLPBefore, [tokenAData, tokenBData], DAIHolder, { from: DAIHolder })
                expectEvent(receipt, 'Withdraw', {
                    lpPool: pool, sender: DAIHolder, recipient: DAIHolder, amount: stakeLPBefore
                })
            })
            it('deposits tokens to balance', async () => {
                const tokenBalanceAfter = await DAIToken.balanceOf(DAIHolder)

                const tokenDiff = tokenBalanceAfter.sub(tokenBalanceBefore)
                assert.ok(tokenDiff.gt(new BN(0)), 'Dai Balance not increased')
            })
            it('updates stakes', async () => {
                const { stakeLP } = await assetRouter.userStake(DAIHolder, pool)
                assert.equal(stakeLP.toString(), '0', 'Stake not withdrawn')
            })
            it('updates totalDeposits', async () => {
                const { totalDepositsLP } = await assetRouter.totalDeposits(pool)
                assert.equal(totalDepositsLP.toString(), '0', 'Stake not withdrawn')
            })
        })
    })
})
