const {
    expectRevert, expectEvent, BN, constants
} = require('@openzeppelin/test-helpers')
const { deployProxy } = require('@openzeppelin/truffle-upgrades')

const AccessManager = artifacts.require('UnoAccessManager')
const FarmFactory = artifacts.require('UnoFarmFactory')

const Farm = artifacts.require('UnoFarmTrisolarisStable')
const IUniswapV2Pair = artifacts.require('IUniswapV2Pair')
const AssetRouter = artifacts.require('UnoAssetRouterTrisolarisStable')

const pool = '0x458459E48dbAC0C8Ca83F8D0b7b29FEfE60c3970' // USDC-USDT-USN

const DAIHolder = '0x456325F2AC7067234dD71E01bebe032B0255e039'// has to be unlocked and hold 0xe3520349F477A5F6EB06107066048508498A291b

approxeq = (bn1, bn2, epsilon, message) => {
    const amountDelta = bn1.sub(bn2).add(epsilon)
    assert.ok(!amountDelta.isNeg(), message)
}

contract('UnoAssetRouterTrisolarisStableSingleAssetWithdraw', (accounts) => {
    const admin = accounts[0]

    let accessManager; let assetRouter
    let DAIToken

    before(async () => {
        const implementation = await Farm.new({ from: admin })
        accessManager = await AccessManager.new({ from: admin })
        assetRouter = await deployProxy(AssetRouter, { kind: 'uups', initializer: false })
        await FarmFactory.new(implementation.address, accessManager.address, assetRouter.address, { from: admin })
        DAIToken = await IUniswapV2Pair.at('0xe3520349F477A5F6EB06107066048508498A291b')
    })

    describe('Single Asset Withdraw ETH', () => {
        describe('withdraw ETH', () => {
            let stakeLPBefore
            let ethBalanceBefore
            let ethSpentOnGas

            before(async () => {
                const DAIAmount = new BN('1500000000000000000000') // 1000$
                await DAIToken.approve(assetRouter.address, DAIAmount, { from: DAIHolder }) // change

                const tokensData = []
                tokensData[0] = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b000000000000000000000000b12bfca5a55806aaf64e99521918a4bf0fc408020000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000000000000000eb74b330000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017e00000000000000000000000000000000016000013200011800006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b5120c90db0d8713414d78523436dc347419164544a3fe3520349f477a5f6eb06107066048508498a291b00443df02124000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb74b330020d6bdbf78b12bfca5a55806aaf64e99521918a4bf0fc4080280a06c4eca27b12bfca5a55806aaf64e99521918a4bf0fc408021111111254eeb25477b68fb85ed929f73a9605820000b4eb6cb3`// await fetchData(tokenASwapParams)
                tokensData[1] = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000004988a896b1227218e4a686fde5eabdcabd91571f0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef500000000000000000000000000000000000000000000000000000000000000eb4fbfc0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017e00000000000000000000000000000000016000013200011800006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b5120c90db0d8713414d78523436dc347419164544a3fe3520349f477a5f6eb06107066048508498a291b00443df02124000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb4fbfc0020d6bdbf784988a896b1227218e4a686fde5eabdcabd91571f80a06c4eca274988a896b1227218e4a686fde5eabdcabd91571f1111111254eeb25477b68fb85ed929f73a9605820000b4eb6cb3`
                tokensData[2] = `0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000e3520349f477a5f6eb06107066048508498a291b0000000000000000000000005183e1b1091804bc2602586919e6880ac1cf28960000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000${assetRouter.address.substring(2).toLowerCase()}00000000000000000000000000000000000000000000001b1ae4d6e2ef50000000000000000000000000000000000000000000000000000d5d91e1303df110b30000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027200000000000000000000000000000000000000025400022600006800004e80206c4eca27e3520349f477a5f6eb06107066048508498a291b46a3a41bd932244dd08186e4c19f1a7e48cbcdf40000000000000000000000000000000000000000000000004563918244f400000020d6bdbf78e3520349f477a5f6eb06107066048508498a291b00a007e5c0d200000000000000000000000000000000000000000000019a0000ca0000b05120c90db0d8713414d78523436dc347419164544a3fe3520349f477a5f6eb06107066048508498a291b00443df02124000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb4fbfc0020d6bdbf784988a896b1227218e4a686fde5eabdcabd91571f5120458459e48dbac0c8ca83f8d0b7b29fefe60c39704988a896b1227218e4a686fde5eabdcabd91571f00449169558600000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d5d91e1303df110b300000000000000000000000000000000000000000000000000000000648cabfe80a06c4eca275183e1b1091804bc2602586919e6880ac1cf28961111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000b4eb6cb3`
                await assetRouter.depositWithSwap(pool, tokensData, 0, DAIHolder, { from: DAIHolder })

                ethBalanceBefore = new BN(await web3.eth.getBalance(DAIHolder))
                stakeLPBefore = await assetRouter.userStake(DAIHolder, pool)
            })
            it('fires events', async () => {
                const tokensData = []
                tokensData[0] = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000b12bfca5a55806aaf64e99521918a4bf0fc40802000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e0390000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000006382d465d7f5ef000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e70000000000000000000000000000000000000002c90002b300006800004e80206c4eca27b12bfca5a55806aaf64e99521918a4bf0fc4080246a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000000000000000f42400020d6bdbf78b12bfca5a55806aaf64e99521918a4bf0fc4080200a0c9e75c480000000000000000070300000000000000000000000000000000000000000000000000021d0000db00a007e5c0d20000000000000000000000000000000000000000000000000000b700007b0c20b12bfca5a55806aaf64e99521918a4bf0fc408022f41af687164062f118297ca10751f4b55478ae16ae4071198002dc6c02f41af687164062f118297ca10751f4b55478ae1000000000000000000000000000000000000000000000000001deabbf7bbe976b12bfca5a55806aaf64e99521918a4bf0fc408024101c9bdeed33cd01541e1eed10f90519d2c06fe3feb00042e1a7d4d000000000000000000000000000000000000000000000000000000000000000000a007e5c0d200000000000000000000000000000000000000000000011e0000e200008f0c20b12bfca5a55806aaf64e99521918a4bf0fc4080220f8aefb5697b77e0bb835a8518be70775cda1b06ae40711b8002dc6c020f8aefb5697b77e0bb835a8518be70775cda1b063da4db6ef4e7c62168ab03982399f9588fcd19800000000000000000000000000000000000000000017b3bfe38cc1f5b86b3c5cb12bfca5a55806aaf64e99521918a4bf0fc4080200206ae4071198002dc6c063da4db6ef4e7c62168ab03982399f9588fcd198000000000000000000000000000000000000000000000000004598186e1c0c78c42c30ac6cc15fac9bd938618bcaa1a1fae8501d4101c9bdeed33cd01541e1eed10f90519d2c06fe3feb00042e1a7d4d0000000000000000000000000000000000000000000000000000000000000000c0611111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000b4eb6cb3'
                tokensData[1] = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f6970000000000000000000000004988a896b1227218e4a686fde5eabdcabd91571f000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e0390000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000006392fe997d89fd000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b700000000000000000000000000000000000000039900038300006800004e80206c4eca274988a896b1227218e4a686fde5eabdcabd91571f46a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000000000000000f42400020d6bdbf784988a896b1227218e4a686fde5eabdcabd91571f00a0c9e75c48000000000000000007030000000000000000000000000000000000000000000000000002ed0001ab00a007e5c0d200000000000000000000000000000000000000000000018700014b0000d0512051d96ef6960cc7b4c884e1215564f926011a40644988a896b1227218e4a686fde5eabdcabd91571f0044916955860000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e298bd00000000000000000000000000000000000000000000000000000000648c99e50c20b12bfca5a55806aaf64e99521918a4bf0fc408022f41af687164062f118297ca10751f4b55478ae16ae4071198002dc6c02f41af687164062f118297ca10751f4b55478ae1000000000000000000000000000000000000000000000000001deadb2b6cb0c7b12bfca5a55806aaf64e99521918a4bf0fc408024101c9bdeed33cd01541e1eed10f90519d2c06fe3feb00042e1a7d4d000000000000000000000000000000000000000000000000000000000000000000a007e5c0d200000000000000000000000000000000000000000000011e0000e200008f0c204988a896b1227218e4a686fde5eabdcabd91571f03b666f3488a7992b2385b12df7f35156d7b29cd6ae40711b8002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd63da4db6ef4e7c62168ab03982399f9588fcd19800000000000000000000000000000000000000000017b937355919efc4dfeaa84988a896b1227218e4a686fde5eabdcabd91571f00206ae4071198002dc6c063da4db6ef4e7c62168ab03982399f9588fcd1980000000000000000000000000000000000000000000000000045a8236e10d935c42c30ac6cc15fac9bd938618bcaa1a1fae8501d4101c9bdeed33cd01541e1eed10f90519d2c06fe3feb00042e1a7d4d0000000000000000000000000000000000000000000000000000000000000000c0611111111254eeb25477b68fb85ed929f73a960582000000000000000000b4eb6cb3'
                tokensData[2] = '0x12aa3caf0000000000000000000000007731f8df999a9441ae10519617c24568dc82f6970000000000000000000000005183e1b1091804bc2602586919e6880ac1cf2896000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000007731f8df999a9441ae10519617c24568dc82f697000000000000000000000000456325F2AC7067234dD71E01bebe032B0255e039000000000000000000000000000000000000000000000002b5e3af16b18800000000000000000000000000000000000000000000000000000031b4f994f9b306000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002ae00000000000000000000000000000000000000029000027a00006800004e80206c4eca275183e1b1091804bc2602586919e6880ac1cf289646a3a41bd932244dd08186e4c19f1a7e48cbcdf400000000000000000000000000000000000000000000000006f05b59d3b200000020d6bdbf785183e1b1091804bc2602586919e6880ac1cf289600a007e5c0d20000000000000000000000000000000000000001ee0001b200015f0000d05120458459e48dbac0c8ca83f8d0b7b29fefe60c39705183e1b1091804bc2602586919e6880ac1cf2896004491695586000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000179262b00000000000000000000000000000000000000000000000000000000648c99e50c204988a896b1227218e4a686fde5eabdcabd91571f03b666f3488a7992b2385b12df7f35156d7b29cd6ae40711b8002dc6c003b666f3488a7992b2385b12df7f35156d7b29cd63da4db6ef4e7c62168ab03982399f9588fcd19800000000000000000000000000000000000000000010ed53c51d82f20d0dc1c14988a896b1227218e4a686fde5eabdcabd91571f00206ae4071198002dc6c063da4db6ef4e7c62168ab03982399f9588fcd1980000000000000000000000000000000000000000000000000031b4f994f9b306c42c30ac6cc15fac9bd938618bcaa1a1fae8501d4101c9bdeed33cd01541e1eed10f90519d2c06fe3feb00042e1a7d4d0000000000000000000000000000000000000000000000000000000000000000c0611111111254eeb25477b68fb85ed929f73a960582000000000000000000000000000000000000b4eb6cb3'

                const receipt = await assetRouter.withdrawWithSwap(pool, stakeLPBefore, tokensData, DAIHolder, { from: DAIHolder })
                expectEvent(receipt, 'Withdraw', {
                    lpPool: pool, sender: DAIHolder, recipient: DAIHolder, amount: stakeLPBefore
                })

                const gasUsed = new BN(receipt.receipt.gasUsed)
                const effectiveGasPrice = new BN(receipt.receipt.effectiveGasPrice)

                ethSpentOnGas = gasUsed.mul(effectiveGasPrice)

                expectEvent(receipt, 'Withdraw', {
                    lpPool: pool, sender: DAIHolder, recipient: DAIHolder, amount: stakeLPBefore
                })
            })
            it('withdraws ETH from balance', async () => {
                const ethBalanceAfter = new BN(await web3.eth.getBalance(DAIHolder))

                const ethDiff = ethBalanceAfter.sub(ethBalanceBefore.add(ethSpentOnGas))
                assert.ok(ethDiff.gt(new BN(0)), 'Eth Balance not increased')
            })
            it('updates stakes', async () => {
                const stakeLP = await assetRouter.userStake(DAIHolder, pool)
                assert.equal(stakeLP.toString(), '0', 'Stake not withdrawn')
            })
            it('updates totalDeposits', async () => {
                const totalDepositsLP = await assetRouter.totalDeposits(pool)
                assert.equal(totalDepositsLP.toString(), '0', 'Stake not withdrawn')
            })
        })
    })
})
